# testing subsumption optimalisation
function foo();
r:= bat.new(:int);
bat.append(r,1);
bat.append(r,2);
bat.append(r,3);
bat.append(r,4);
s:= algebra.select(r,nil:bat[:oid],0,5,true,true,false);	# equal to a copy
r1:=algebra.projection(s,r);
io.print(r1);
t:= algebra.select(r,nil:bat[:oid],0,3,true,true,false);
#print(t);
u:= algebra.select(r,nil:bat[:oid],0,3,true,true,false);	# reuse t
r1:=algebra.projection(u,r);
io.print(r1);
io.print("done");
end;
optimizer.commonTerms("user","foo");
optimizer.aliases("user","foo");
optimizer.garbageCollector("user","foo");
mdb.list("user","foo");
user.foo();
