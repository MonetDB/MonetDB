inline function my_case(Av:int):int;
    X3 := calc.==(Av,1);
barrier X4 := X3;
    X6 := calc.int(100);
exit X4;
barrier X7 := calc.not(X3);
    X9 := calc.==(Av,2);
exit X7;
    return my_case:int := 0;
end my_case;

function tst();
	z:= my_case(1);
end tst;

optimizer.inline("user","tst");
io.printf("#result of inline\n");
mdb.list("user","tst");
optimizer.remap("user","tst");
optimizer.costModel("user","tst");
optimizer.coercions("user","tst");
optimizer.aliases("user","tst");
optimizer.evaluate("user","tst");
optimizer.garbageCollector("user","tst");
mdb.list("user","tst");
