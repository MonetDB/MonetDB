stdout of test 'JPexample` in directory 'monetdb5/optimizer` itself:


# 20:30:05 >  
# 20:30:05 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib64/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib64/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/dblogs" --set mapi_port=34010 --set monet_prompt= --trace --dbname=mTests_src_optimizer  JPexample.mal < /dev/null
# 20:30:05 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_optimizer', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:33343/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8837/.s.monetdb.33343
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 06:41:06 >  
# 06:41:06 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8837" "--port=33343"
# 06:41:06 >  

function user.foo():void;               	#[0] (0)  0 
    a:bat[:oid] := bat.new(:oid);       	#[1] (0) CMDBATnew 1 <- 2 
    b:bat[:oid] := bat.new(:oid);       	#[2] (0) CMDBATnew 3 <- 2 
    c:bat[:oid] := bat.new(:oid);       	#[3] (0) CMDBATnew 4 <- 2 
    d:bat[:oid] := bat.new(:oid);       	#[4] (0) CMDBATnew 5 <- 2 
    j1:bat[:oid] := algebra.projection(a:bat[:oid], b:bat[:oid]);	#[5] (0) ALGprojection 6 <- 1 3 
    j2:bat[:oid] := algebra.projectionpath(a:bat[:oid], b:bat[:oid], c:bat[:oid]);	#[6] (0) ALGprojectionpath 7 <- 1 3 4 
    j3:bat[:any] := algebra.projectionpath(a:bat[:oid], b:bat[:oid], c:bat[:oid], d:bat[:oid]);	#[7] (0) ALGprojectionpath 8 <- 1 3 4 5 
    j4:bat[:any] := algebra.projectionpath(a:bat[:oid], b:bat[:oid], c:bat[:oid]);	#[8] (0) ALGprojectionpath 9 <- 1 3 4 
    j5:bat[:oid] := algebra.projectionpath(a:bat[:oid], b:bat[:oid], c:bat[:oid], b:bat[:oid]);	#[9] (0) ALGprojectionpath 10 <- 1 3 4 3 
end user.foo;                           	#[10] (0)  

# 06:41:06 >  
# 06:41:06 >  "Done."
# 06:41:06 >  

