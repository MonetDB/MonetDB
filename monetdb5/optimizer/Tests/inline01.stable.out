stdout of test 'inline01` in directory 'monetdb5/optimizer` itself:


# 00:18:07 >  
# 00:18:07 >  Mtimeout -timeout 60 mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs" --set "xquery_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/xquery_logs" --set mapi_port=31500 --set xrpc_port=46952 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline01.mal
# 00:18:07 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_optimizer', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:33568/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-10161/.s.monetdb.33568
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 16:09:46 >  
# 16:09:46 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-32223" "--port=39816"
# 16:09:46 >  

function user.qry():void;               	#[0] (0)  0 
    X_4:bat[:int] := bat.new(:int);     	#[1] (0) CMDBATnew 5 <- 6 
    X_6:bat[:int] := bat.new(:int);     	#[2] (0) CMDBATnew 7 <- 6 
    X_7:int := 1:int;                   	#[3] (0)  8 <- 9 
    bat.append(X_4:bat[:int], 1:int);   	#[4] (0) BKCappend_val_wrap 10 <- 5 9 
barrier (X_10:oid, X_7:int) := iterator.new(X_4:bat[:int]);	#[5] (0) ITRbunIterator 11 8 <- 5 
    io.print(X_10:oid);                 	#[6] (0) IOprint_val 12 <- 11 
catch MALException:str;                 	#[7] (0)  13 
exit MALException:str;                  	#[8] (0)  13 
exit (X_10:oid, X_7:int);               	#[9] (0)  11 8 
barrier (X_10:oid, X_7:int) := iterator.new(X_6:bat[:int]);	#[10] (0) ITRbunIterator 11 8 <- 7 
    io.print(X_10:oid);                 	#[11] (0) IOprint_val 14 <- 11 
    redo (X_10:oid, X_7:int) := iterator.next(X_6:bat[:int]);	#[12] (0) ITRbunNext 11 8 <- 7 
catch MALException:str;                 	#[13] (0)  13 
exit MALException:str;                  	#[14] (0)  13 
exit (X_10:oid, X_13:any, X_7:int);     	#[15] (0)  11 15 8 
end user.qry;                           	#[16] (0)  

# 00:18:07 >  
# 00:18:07 >  Done.
# 00:18:07 >  

