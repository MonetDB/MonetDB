stdout of test 'inline04` in directory 'monetdb5/optimizer` itself:


# 18:00:43 >  
# 18:00:43 >   mserver5 "--config=/ufs/mk/monet5/Linux/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=34223 --set xrpc_port=43286 --set monet_prompt= --trace --dbname=mTests_src_optimizer  inline04.mal
# 18:00:43 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_optimizer', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:39909/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-2983/.s.monetdb.39909
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 15:49:03 >  
# 15:49:03 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-29846" "--port=34870"
# 15:49:03 >  

function user.qry():void;               	#[0] (0)  0 
    b:bat[:int] := bat.new(:int);       	#[1] (0) CMDBATnew 1 <- 2 
    bat.append(b:bat[:int], 1:int);     	#[2] (0) BKCappend_val_wrap 3 <- 1 4 
    X_11:bat[:int] := batcalc.+(b:bat[:int], b:bat[:int], nil:BAT, nil:BAT);	#[1] (0) CMDbatADDsignal 14 <- 1 1 21 22 
    X_12:int := 1:int;	#[2] (0)  15 <- 4 
barrier X_13:bit := true:bit;	#[3] (0)  16 <- 17 
    X_11:bat[:int] := batcalc.*(X_11:bat[:int], X_11:bat[:int], nil:BAT, nil:BAT);	#[4] (0) CMDbatMULsignal 14 <- 14 14 21 21 
    X_12:int := calc.+(X_12:int, 1:int);	#[5] (0) CMDvarADDsignal 15 <- 15 4 
    redo X_13:bit := calc.<(X_12:int, 3:int);	#[6] (0) CMDvarLT 16 <- 15 18 
exit X_13:bit;	#[7] (0)  16 
    z:bat[:int] := X_11:bat[:int];	#[8] (0)  5 <- 14 
    X_23:bat[:int] := batcalc.+(b:bat[:int], 2:int, nil:BAT);	#[1] (0) CMDbatADDsignal 26 <- 1 9 21 
    X_24:int := 1:int;	#[2] (0)  27 <- 4 
barrier X_25:bit := true:bit;	#[3] (0)  28 <- 17 
    X_23:bat[:int] := batcalc.*(X_23:bat[:int], X_23:bat[:int], nil:BAT, nil:BAT);	#[4] (0) CMDbatMULsignal 26 <- 26 26 21 21 
    X_24:int := calc.+(X_24:int, 1:int);	#[5] (0) CMDvarADDsignal 27 <- 27 4 
    redo X_25:bit := calc.<(X_24:int, 3:int);	#[6] (0) CMDvarLT 28 <- 27 18 
exit X_25:bit;	#[7] (0)  28 
    z:bat[:int] := X_23:bat[:int];	#[8] (0)  5 <- 26 
end user.qry;                           	#[19] (0)  

# 18:00:43 >  
# 18:00:43 >  Done.
# 18:00:43 >  

