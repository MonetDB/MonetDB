stdout of test 'Mexample` in directory 'monetdb5/optimizer` itself:


# 23:53:03 >  
# 23:53:03 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=39352 --set sql_port=45171 --set xquery_port=52900 --set monet_prompt= --trace --dbname=mTests_src_optimizer  Mexample.mal </dev/null
# 23:53:03 >  

# MonetDB server v5.7.0, based on kernel v1.25.0
# Serving database 'mTests_src_optimizer', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:37175/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-27236/.s.monetdb.37175
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 15:36:19 >  
# 15:36:19 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-27236" "--port=37175"
# 15:36:19 >  

function user.foo():void;               	#[0] (0)  0 
    b:bat[:int] := bat.new(:int);       	#[1] (0) CMDBATnew 1 <- 2 
    bat.append(b:bat[:int], 1:int);     	#[2] (0) BKCappend_val_wrap 3 <- 1 4 
    X_5:bat[:int] := bat.new(nil:int);  	#[3] (0) CMDBATnew 8 <- 9 
barrier (X_8:oid, X_9:int) := iterator.new(b:bat[:int]);	#[4] (0) ITRbunIterator 11 12 <- 1 
    X_11:int := calc.+(X_9:int, 1:int); 	#[5] (0) CMDvarADDsignal 14 <- 12 4 
    X_5:bat[:int] := bat.append(X_5:bat[:int], X_11:int);	#[6] (0) BKCappend_val_wrap 8 <- 8 14 
    redo (X_8:oid, X_9:int) := iterator.next(b:bat[:int]);	#[7] (0) ITRbunNext 11 12 <- 1 
exit (X_8:oid, X_9:int);                	#[8] (0)  11 12 
    c:bat[:int] := X_5:bat[:int];       	#[9] (0)  5 <- 8 
end user.foo;                           	#[10] (0)  

# 23:53:03 >  
# 23:53:03 >  Done.
# 23:53:03 >  

