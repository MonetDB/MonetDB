function qry();
empty:= bat.new(:oid);
a:= bat.new(:oid);
b:= bat.new(:oid);
c:= bat.new(:oid);
d:= bat.new(:str);
k:= bat.new(:int);

bat.append(a,0@0);
bat.append(a,3@0);

bat.append(b,0@0);
bat.append(b,1@0);
bat.append(b,2@0);
bat.append(b,3@0);
bat.append(b,4@0);

bat.append(c,0@0);
bat.append(c,1@0);
bat.append(c,2@0);
bat.append(c,4@0);
bat.append(c,5@0);

bat.append(d,"The");
bat.append(d,"quick");
bat.append(d,"brown");
bat.append(d,"fox");
bat.append(d,"jumps");
bat.append(d,"over");
bat.append(d,"the");
bat.append(d,"lazy");
bat.append(d,"dog");

bat.append(k,1);
bat.append(k,2);
bat.append(k,3);
bat.append(k,4);
bat.append(k,5);
bat.append(k,6);
bat.append(k,7);
bat.append(k,8);
bat.append(k,9);

e := algebra.projection(a,b);
f := algebra.projection(e,c);
g := algebra.projection(f,d);
l := algebra.projection(f,k);
io.print(g);
io.print(l);

# recognize common heads
e1 := algebra.projection(a,b);
e2 := algebra.projection(e1,b);
f1 := algebra.projection(a,b);
f2 := algebra.projection(f1,b);
g1 := algebra.projection(e2,d);
l1 := algebra.projection(f2,k);
#io.print(g1);
#io.print(l1);

h := algebra.projectionpath(c,d);
io.print(h);

i := algebra.projectionpath(b,c,d);
io.print(i);

j := algebra.projectionpath(a,b,c,d);
io.print(j);

io.print("empty sequences");
w :=algebra.projectionpath(empty,c,d);
io.print(w);

end qry;

mdb.list("user","qry");
optimizer.projectionpath("user","qry");
optimizer.garbageCollector("user","qry");
mdb.list("user","qry");
qry();
