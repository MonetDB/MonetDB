stdout of test 'tst057` in directory 'monetdb5/mal` itself:


# 12:43:27 >  
# 12:43:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35231" "--set" "mapi_usock=/var/tmp/mtest-19653/.s.monetdb.35231" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_mal" "--set" "mal_listing=2" "--set" "embedded_r=yes"
# 12:43:27 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:35231/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-19653/.s.monetdb.35231
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 12:43:28 >  
# 12:43:28 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-19653" "--port=35231"
# 12:43:28 >  

# MonetDB Server v4.99.19
# Copyright (c) 1993-2006 CWI, all rights reserved
# Compiled for x86_64-redhat-linux-gnu/64bit with 64bit OIDs dynamically linked
# config:/ufs/mk/monet5/Linux/etc/MonetDB5.conf
# dbfarm:/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm
# dbname:mTests_src_mal
# Visit http://monetdb.cwi.nl/ for further information
##leave tests
#
#i:= 1;
#barrier always:=true;
#	io.print("enter always");
#	leave always:= i == 1;
#	io.print("didn't leave properly");
#exit always;
#	io.print("left always 1");
#barrier always:=true;
#	io.print("enter always 2");
#	leave always:= i != 2;
#	io.print("didn't leave properly");
#exit always;
[ "enter always" ]
[ "left always 1" ]
[ "enter always 2" ]
[ "left always 2" ]

# 11:22:11 >  
# 11:22:11 >  Done.
# 11:22:11 >  

