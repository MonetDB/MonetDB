stdout of test 'tst005` in directory 'monetdb5/mal` itself:


# 08:15:16 >  
# 08:15:16 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32746" "--set" "mapi_usock=/var/tmp/mtest-26338/.s.monetdb.32746" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_mal" "--set" "mal_listing=2" "--set" "embedded_r=yes"
# 08:15:16 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:32746/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-26338/.s.monetdb.32746
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 10:52:47 >  
# 10:52:47 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "--host=/var/tmp/mtest-5303" "--port=30531"
# 10:52:47 >  

function user.foo():void;               	#[0] (0)  0 
    i:int := 1:int;                     	#[1] (0)  1 <- 2 
    j:int := 2:int;                     	#[2] (0)  3 <- 4 
barrier v:int := i:int;                 	#[3] (0)  5 <- 1 
    io.print("entered":str);            	#[4] (0) IOprint_val 6 <- 7 
    io.print(v:int);                    	#[5] (0) IOprint_val 8 <- 5 
    redo v:int := iterator.next(-1:int, 0:int);	#[6] (0) ITRnext_int 5 <- 9 10 
exit v:int;                             	#[7] (0)  5 
    io.print("doubles":str);            	#[8] (0) IOprint_val 11 <- 12 
    i:int := 1:int;                     	#[9] (0)  1 <- 2 
barrier (v:int, w:int) := (i:int, j:int);	#[10] (0)  5 13 <- 1 3 
    io.print("entered2":str);           	#[11] (0) IOprint_val 14 <- 15 
    io.print(v:int);                    	#[12] (0) IOprint_val 16 <- 5 
    v:int := calc.-(v:int, 1:int);      	#[13] (0) CMDvarSUBsignal 5 <- 5 2 
barrier b:bit := calc.==(v:int, 0:int); 	#[14] (0) CMDvarEQ 17 <- 5 10 
    leave (v:int, w:int);               	#[15] (0)  5 13 
exit b:bit;                             	#[16] (0)  17 
    redo (v:int, w:int) := (v:int, w:int);	#[17] (0)  5 13 <- 5 13 
exit (v:int, w:int);                    	#[18] (0)  5 13 
    io.print("finished":str);           	#[19] (0) IOprint_val 18 <- 19 
end user.foo;                           	#[20] (0)  
[ "entered" ]
[ 1 ]
[ "doubles" ]
[ "entered2"	]
[ 1 ]
[ "finished" ]
