statement ok
b:= bat.new(:int)

statement ok
bat.append(b,0)

statement ok
bat.append(b,1)

statement ok
bat.append(b,2)

statement ok
bat.append(b,3)

statement ok
i:= bbp.getLRefCount(b)

query T rowsort
io.printf("start of selections %d [1]\n",i)
----
start of selections 5 [1]

statement ok
s:= algebra.select(b,nil:bat[:oid],0,2,true,true,false)

statement ok
z:=algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
0
1
1
2
2

statement ok
i:= bbp.getLRefCount(z)

query T rowsort
io.printf("z select %d [1]\n",i)
----
z select 1 [1]

statement ok
i:= bbp.getLRefCount(b)

query T rowsort
io.printf("select %d [1]\n",i)
----
select 5 [1]

statement ok
s:= algebra.select(b,nil:bat[:oid],0,2,true,false,false)

statement ok
z:=algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
0
1
1

statement ok
i:= bbp.getLRefCount(b)

query T rowsort
io.printf("select %d [1]\n",i)
----
select 5 [1]

statement ok
s:= algebra.select(b,nil:bat[:oid],0,2,false,true,false)

statement ok
z:=algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
1
1
2

statement ok
s:= algebra.select(b,nil:bat[:oid],0,2,false,false,false)

statement ok
z:=algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
1

