statement ok
S:= bat.new(:str);

statement ok
bat.append(S,"hello");

statement ok
bat.append(S,"brave");

statement ok
bat.append(S,"new");

statement ok
bat.append(S,"world");

query IT rowsort
io.print(S);
----
0
hello
1
brave
2
new
3
world

statement ok
L:= batstr.length(S);

query II rowsort
io.print(L);
----
0
5
1
5
2
3
3
5

statement ok
L:= batstr.nbytes(S);

query II rowsort
io.print(L);
----
0
5
1
5
2
3
3
5

statement ok
B:= batcalc.==(S,"hello");

query II rowsort
io.print(B);
----
0
1
1
0
2
0
3
0

statement ok
C:= batalgebra.like(S,"hello","",false);

query II rowsort
io.print(C);
----
0
1
1
0
2
0
3
0

statement ok
U:= batstr.toUpper(S);

query IT rowsort
io.print(U);
----
0
HELLO
1
BRAVE
2
NEW
3
WORLD

statement ok
l:= batstr.toLower(U);

query IT rowsort
io.print(l);
----
0
hello
1
brave
2
new
3
world

statement ok
trim:= batstr.trim(S);

query IT rowsort
io.print(trim);
----
0
hello
1
brave
2
new
3
world

statement ok
ltrim:= batstr.ltrim(S);

query IT rowsort
io.print(ltrim);
----
0
hello
1
brave
2
new
3
world

statement ok
rtrim:= batstr.rtrim(S);

query IT rowsort
io.print(rtrim);
----
0
hello
1
brave
2
new
3
world

query T rowsort
io.print("Start searches");
----
"Start searches"

statement ok
srch:= batstr.search(S,"hello");

query II rowsort
io.print(srch);
----
0
0
1
-1
2
-1
3
-1

statement ok
srch:= batstr.search(S,S);

query II rowsort
io.print(srch);
----
0
0
1
0
2
0
3
0

statement ok
plus:= batcalc.+(S,S,nil:bat,nil:bat);

query IT rowsort
io.print(plus);
----
0
hellohello
1
bravebrave
2
newnew
3
worldworld

