stderr of test 'tst036` in directory 'monetdb5/mal` itself:


# 17:28:20 >  
# 17:28:20 >   mserver5 "--config=/ufs/mk/Jun2010//Linux/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/mk/Jun2010//Linux/lib/MonetDB5:/ufs/mk/Jun2010//Linux/lib/MonetDB5/lib:/ufs/mk/Jun2010//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/Jun2010//Linux/var/MonetDB5/dbfarm"  --set mapi_open=true --set xrpc_open=true --set mapi_port=38406 --set xrpc_port=45263 --set monet_prompt= --set mal_listing=2 --trace  --dbname=mTests_src_mal  tst036.mal
# 17:28:20 >  

# builtin opt 	gdk_arch = 64bitx86_64-unknown-linux-gnu
# builtin opt 	gdk_version = 1.39.0
# builtin opt 	prefix = /ufs/mk/Jun2010//Linux
# builtin opt 	exec_prefix = ${prefix}
# builtin opt 	gdk_dbname = demo
# builtin opt 	gdk_dbfarm = ${prefix}/var/MonetDB/dbfarm
# builtin opt 	gdk_debug = 0
# builtin opt 	gdk_alloc_map = no
# builtin opt 	gdk_vmtrim = yes
# builtin opt 	monet_admin = adm
# builtin opt 	monet_prompt = >
# builtin opt 	monet_welcome = yes
# builtin opt 	monet_mod_path = ${exec_prefix}/lib/MonetDB
# builtin opt 	monet_daemon = no
# builtin opt 	host = localhost
# builtin opt 	mapi_port = 50000
# builtin opt 	mapi_clients = 2
# builtin opt 	mapi_open = false
# builtin opt 	mapi_autosense = false
# builtin opt 	sql_debug = 0
# builtin opt 	standoff_ns = 
# builtin opt 	standoff_start = start
# builtin opt 	standoff_end = end
# config opt 	prefix = /ufs/mk/Jun2010//Linux
# config opt 	config = ${prefix}/etc/monetdb5.conf
# config opt 	prefix = /ufs/mk/Jun2010//Linux
# config opt 	exec_prefix = ${prefix}
# config opt 	gdk_dbfarm = ${prefix}/var/MonetDB5/dbfarm
# config opt 	monet_mod_path = ${exec_prefix}/lib/MonetDB5:${exec_prefix}/lib/MonetDB5/lib:${exec_prefix}/lib/MonetDB5/bin
# config opt 	mero_pidfile = ${prefix}/var/run/MonetDB/merovingian.pid
# config opt 	mero_controlport = 50001
# config opt 	sql_optimizer = default_pipe
# config opt 	minimal_pipe = inline,remap,deadcode,multiplex,garbageCollector
# config opt 	default_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mitosis,mergetable,deadcode,commonTerms,joinPath,reorder,deadcode,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	no_mitosis_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mergetable,deadcode,commonTerms,joinPath,reorder,deadcode,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	sequential_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mergetable,deadcode,commonTerms,joinPath,reorder,deadcode,reduce,history,multiplex,garbageCollector
# config opt 	nov2009_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mergetable,deadcode,constants,commonTerms,joinPath,deadcode,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	replication_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mergetable,deadcode,constants,commonTerms,joinPath,deadcode,reduce,dataflow,history,replication,multiplex,garbageCollector
# config opt 	accumulator_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mergetable,deadcode,constants,commonTerms,joinPath,deadcode,reduce,accumulators,dataflow,history,multiplex,garbageCollector
# config opt 	recycler_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,deadcode,constants,commonTerms,joinPath,deadcode,recycle,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	cracker_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,selcrack,deadcode,constants,commonTerms,joinPath,deadcode,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	sidcrack_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,sidcrack,deadcode,constants,commonTerms,joinPath,deadcode,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	octopus_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mitosis,mergetable,deadcode,constants,commonTerms,joinPath,octopus,deadcode,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	mapreduce_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mapreduce,mergetable,deadcode,commonTerms,joinPath,reorder,deadcode,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	datacyclotron_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,datacyclotron,mergetable,deadcode,commonTerms,joinPath,reorder,deadcode,reduce,dataflow,history,replication,multiplex,garbageCollector
# config opt 	derive_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mitosis,mergetable,deadcode,commonTerms,derivePath,joinPath,reorder,deadcode,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	dictionary_pipe = inline,remap,dictionary,evaluate,costModel,coercions,emptySet,aliases,mergetable,deadcode,constants,commonTerms,joinPath,deadcode,reduce,dataflow,history,multiplex,garbageCollector
# config opt 	compression_pipe = inline,remap,evaluate,costModel,coercions,emptySet,aliases,mergetable,deadcode,constants,commonTerms,joinPath,deadcode,reduce,dataflow,compression,dataflow,history,multiplex,garbageCollector
# config opt 	opt_debug = 
# cmdline opt 	config = /ufs/mk/Jun2010//Linux/etc/monetdb5.conf
# cmdline opt 	gdk_nr_threads = 0
# cmdline opt 	monet_mod_path = /ufs/mk/Jun2010//Linux/lib/MonetDB5:/ufs/mk/Jun2010//Linux/lib/MonetDB5/lib:/ufs/mk/Jun2010//Linux/lib/MonetDB5/bin
# cmdline opt 	gdk_dbfarm = /ufs/mk/Jun2010//Linux/var/MonetDB5/dbfarm
# cmdline opt 	mapi_open = true
# cmdline opt 	xrpc_open = true
# cmdline opt 	mapi_port = 38406
# cmdline opt 	xrpc_port = 45263
# cmdline opt 	monet_prompt = 
# cmdline opt 	mal_listing = 2
# cmdline opt 	gdk_dbpath = /export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_mal
# cmdline opt 	mal_listing = 2
# cmdline opt 	embedded_r = yes
# cmdline opt 	gdk_debug = 536870922

# 11:38:05 >  
# 11:38:05 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-13830" "--port=32718"
# 11:38:05 >  

MAPI  = (monetdb) /var/tmp/mtest-7831/.s.monetdb.38226
QUERY = # test for proper use of list assignments
        (z0,z1):= (1,"help");
        io.print(z0);
        io.print(z1);
        # all three are wrong
         l1:= (1,2);
        (l2,l3):= 3;
        (l4,l5) := (4,5,6);
ERROR = !TypeException:user.main[6]:Multiple assignment mismatch

# 17:28:20 >  
# 17:28:20 >  Done.
# 17:28:20 >  

