stdout of test 'tst907` in directory 'monetdb5/mal` itself:


# 08:01:38 >  
# 08:01:38 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst907.mal </dev/null
# 08:01:38 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:30001/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-11334/.s.monetdb.30001
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 22:45:40 >  
# 22:45:40 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-7101" "--port=34631"
# 22:45:40 >  

function user.foo():void;               	#[0] (0)  0 
    k:int := user.one(1:int);           	#[1] (0)  1 <- 2 
    l:int := user.three(1:int, 2:int, 3:int);	#[2] (0)  3 <- 2 4 5 
    p:int := user.pow(1:int, 2:int);    	#[3] (0)  6 <- 2 4 
    b:bat[:int] := bat.new(:int);       	#[4] (0) CMDBATnew 7 <- 8 
    bat.append(b:bat[:int], 1:int);     	#[5] (0) BKCappend_val_wrap 9 <- 7 2 
    io.print("do multiplex three test":str);	#[6] (0) IOprint_val 10 <- 11 
    X_16:bat[:int] := bat.new(nil:int); 	#[7] (0) CMDBATnew 22 <- 23 
barrier (X_19:oid, X_20:int) := iterator.new(b:bat[:int]);	#[8] (0) ITRbunIterator 25 26 <- 7 
    X_22:int := user.three(X_20:int, 2:int, 3:int);	#[9] (0)  28 <- 26 4 5 
    X_16:bat[:int] := bat.append(X_16:bat[:int], X_22:int);	#[10] (0) BKCappend_val_wrap 22 <- 22 28 
    redo (X_19:oid, X_20:int) := iterator.next(b:bat[:int]);	#[11] (0) ITRbunNext 25 26 <- 7 
exit (X_19:oid, X_20:int);              	#[12] (0)  25 26 
    z:bat[:int] := X_16:bat[:int];      	#[13] (0)  12 <- 22 
    io.print("do multiplex one test":str);	#[14] (0) IOprint_val 15 <- 16 
    X_27:bat[:int] := bat.new(nil:int); 	#[15] (0) CMDBATnew 33 <- 23 
barrier (X_29:oid, X_30:int) := iterator.new(b:bat[:int]);	#[16] (0) ITRbunIterator 35 36 <- 7 
    X_32:int := user.one(X_30:int);     	#[17] (0)  38 <- 36 
    X_27:bat[:int] := bat.append(X_27:bat[:int], X_32:int);	#[18] (0) BKCappend_val_wrap 33 <- 33 38 
    redo (X_29:oid, X_30:int) := iterator.next(b:bat[:int]);	#[19] (0) ITRbunNext 35 36 <- 7 
exit (X_29:oid, X_30:int);              	#[20] (0)  35 36 
    z:bat[:int] := X_27:bat[:int];      	#[21] (0)  12 <- 33 
    io.print("do multiplex pow test":str);	#[22] (0) IOprint_val 18 <- 19 
    X_37:bat[:int] := bat.new(nil:int); 	#[23] (0) CMDBATnew 43 <- 23 
barrier (X_39:oid, X_40:int) := iterator.new(b:bat[:int]);	#[24] (0) ITRbunIterator 45 46 <- 7 
    X_42:int := user.pow(X_40:int, 2:int);	#[25] (0)  48 <- 46 4 
    X_37:bat[:int] := bat.append(X_37:bat[:int], X_42:int);	#[26] (0) BKCappend_val_wrap 43 <- 43 48 
    redo (X_39:oid, X_40:int) := iterator.next(b:bat[:int]);	#[27] (0) ITRbunNext 45 46 <- 7 
exit (X_39:oid, X_40:int);              	#[28] (0)  45 46 
    z:bat[:int] := X_37:bat[:int];      	#[29] (0)  12 <- 43 
    io.print(z:bat[:int]);              	#[30] (0) IOprint_val 21 <- 12 
end user.foo;                           	#[31] (0)  
[ 1 ]
[ 1 ]
[ "do multiplex three test" ]
[ 1 ]
[ "do multiplex one test" ]
[ 1 ]
[ "do multiplex pow test" ]
#-----------------#
# h	tmp_5	  # name
# int	int	  # type
#-----------------#
[ 0@0,	  2	  ]

# 08:01:38 >  
# 08:01:38 >  Done.
# 08:01:38 >  

