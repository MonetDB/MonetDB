	y := bat.new(:dbl);
	le_a := calc.dbl(1.0);
	y:= bat.append(y,le_a);
	ne_a := calc.dbl(2.0);
	y:= bat.append(y,ne_a);
	pe_a := calc.dbl(2.0);
	y:= bat.append(y,pe_a);
	re_a := calc.dbl(2.0);
	y:= bat.append(y,re_a);
	te_a := calc.dbl(2.0);
	y:= bat.append(y,te_a);
	ve_a := calc.dbl(3.0);
	y:= bat.append(y,ve_a);
	xe_a := calc.dbl(1.0);
	y:= bat.append(y,xe_a);
	af_a := calc.dbl(1.0);
	y:= bat.append(y,af_a);
io.print(y);

z:= batcalc.<(y,2.0:dbl);
io.print(z);
c:= aggr.count(z);
io.print("count");
io.print(c);

	x:= bat.new(:bit);
	x:= bat.append(x,true);
	x:= bat.append(x,false);
	x:= bat.append(x,true);
	x:= bat.append(x,false);
	io.print(x);
	A:= bat.new(:bit);
	A:= bat.append(A,true);
	A:= bat.append(A,true);
	A:= bat.append(A,false);
	A:= bat.append(A,false);
	io.print(A);
	xn:= batcalc.not(x); io.print(x,xn);
	xandx:= batcalc.and(x,A); io.print(x,xandx);
	xorx:= batcalc.or(x,A); io.print(x,xorx);
io.print("ifthen group");
#	xif0:= batcalc.ifthen(x,x);io.print(x,xif0);
#	xif1:= batcalc.ifthen(x,false);io.print(x,xif1);
	xif2:= batcalc.ifthenelse(x,x,xn);io.print(x,x,xn,xif2);
	xif3:= batcalc.ifthenelse(x,x,true);io.print(x,x,xif3);
	xif4:= batcalc.ifthenelse(x,1,2);io.print(x,xif4);
