stderr of test 'tst007` in directory 'monetdb5/mal` itself:


# 13:48:21 >  
# 13:48:21 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30912" "--set" "mapi_usock=/var/tmp/mtest-24529/.s.monetdb.30912" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_mal" "--set" "mal_listing=2" "--set" "embedded_r=yes"
# 13:48:21 >  

# builtin opt 	gdk_dbpath = /export/scratch1/mk/default//Linux/var/monetdb5/dbfarm/demo
# builtin opt 	gdk_debug = 0
# builtin opt 	gdk_vmtrim = no
# builtin opt 	monet_prompt = >
# builtin opt 	monet_daemon = no
# builtin opt 	mapi_port = 50000
# builtin opt 	mapi_open = false
# builtin opt 	mapi_autosense = false
# builtin opt 	sql_optimizer = default_pipe
# builtin opt 	sql_debug = 0
# cmdline opt 	gdk_nr_threads = 0
# cmdline opt 	mapi_open = true
# cmdline opt 	mapi_port = 30912
# cmdline opt 	mapi_usock = /var/tmp/mtest-24529/.s.monetdb.30912
# cmdline opt 	monet_prompt = 
# cmdline opt 	mal_listing = 2
# cmdline opt 	gdk_dbpath = /export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_mal
# cmdline opt 	mal_listing = 2
# cmdline opt 	embedded_r = yes
# cmdline opt 	gdk_debug = 536870922

# 13:48:22 >  
# 13:48:22 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "--host=/var/tmp/mtest-24529" "--port=30912"
# 13:48:22 >  

MAPI  = (monetdb) /var/tmp/mtest-7831/.s.monetdb.38226
QUERY = # A collection of forloops, which should not execute
        function foo();
        	b:= bat.new(:int);
        barrier	H := true;
        	T:= 1;
        	#body
        redo 	H;
        exit	H;
        
        
        # de andere loops zijn eenvoudig. 'goto' is altijd beperkt tot
        # 'randen' van het blok. (redo L, leave L)
        # een while loop
        barrier (h,t) := iterator.new(b);
        	(h,t):= iterator.next(b);
        redo	(h,t);
        exit	(h,t);
        	
        #een do-while loop
        	entry:= true;
        barrier M:= entry_or_exit;
        	entry:= false;
        	# rest
        redo	M;
        exit	M;
        
        #een for-loop 
        	i:= 1;
        barrier N:= i<10;
        	#body
        	i:=i+1;
        redo	N;
        exit	N;
        
        
        # de if-then en if-then-else constructies
        
        barrier	FT:= false;
        	# thenpart
        exit	FT;
        
        barrier	FTE:= false;
        	# thenpart
        exit	FTE;
        barrier FS:= calc.not(FTE);
        	#elsepart
        exit	FS;
        
        end foo;
ERROR = !MALException:user.foo:'entry_or_exit' may not be used before being initialized


# 13:48:22 >  
# 13:48:22 >  "Done."
# 13:48:22 >  

