function one(base:int):int;
	io.print(base);
	return base;
end one;

function three(base:int,x:int,y:int):int;
	io.print(base);
	return base;
end three;
function pow(base:int,raise:int):int;
        mg_a := calc.dbl(base);
        ng_a := calc.dbl(raise);
        og_a := calc.*(mg_a,ng_a);
        pg_a := calc.int(og_a);
        return pg_a;
end pow;

function foo();
k:= user.one(1);
l:= user.three(1,2,3);
p:= user.pow(1,2);

b:= bat.new(:int);
bat.append(b,1);

io.print("do multiplex three test");
z:bat[:int]:=mal.multiplex("user","three",b,2,3);
io.print("do multiplex one test");
z:bat[:int]:=mal.multiplex("user","one",b);
io.print("do multiplex pow test");
z:bat[:int]:=mal.multiplex("user","pow",b,2);
io.print(z);
end;
optimizer.multiplex("user","foo");
mdb.List("user","foo");
user.foo();
