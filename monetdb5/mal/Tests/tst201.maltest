statement ok
	v2:= bat.new(:str)

statement ok
	b := v2

statement ok
	v3:= bat.append(b,"the")

statement ok
	v4:= bat.append(b,"quick")

statement ok
	v5:= bat.append(b,"brown")

statement ok
	v6:= bat.append(b,"fox")

statement ok
	v7:= bat.append(b,"jumps")

statement ok
	v8:= bat.append(b,"over")

statement ok
	v9:= bat.append(b,"lazy")

statement ok
	v10:= bat.append(b,"dog")

statement ok
	v11:= calc.str(nil)

statement ok
	v12:= bat.append(b,v11)

statement ok
	v13:= bat.append(b,".")

statement ok
	v15:= bat.append(b,"")

statement ok
	v16:= calc.str(nil)

statement ok
	v18:= bat.append(b,v16)

query IT rowsort
	v19:= io.print(b)
----
0
the
1
quick
10
(empty)
11
NULL
2
brown
3
fox
4
jumps
5
over
6
lazy
7
dog
8
NULL
9
.

statement ok
	v20:= algebra.find(b,"the")

query T rowsort
	v21:= io.print(v20)
----
0@0

statement ok
	v22:= algebra.find(b,"fox")

query T rowsort
	v23:= io.print(v22)
----
3@0

statement ok
	v24:= calc.str(nil)

statement ok
	v25:= algebra.find(b,v24)

query T rowsort
	v26:= io.print(v25)
----
11@0

statement ok
	v27:= algebra.find(b,"cat")

query T rowsort
	v28:= io.print(v27)
----
NULL

statement ok
catch MALException:str

statement ok
	io.print(MALException)

statement ok
exit  MALException

statement ok
	v33:= bat.append(b,"fox")

statement ok
	v34:= bat.append(b,"the")

statement ok
	v35:= bat.append(b,".")

statement ok
	v36:= aggr.count(b)

query T rowsort
	v37:= io.print(v36)
----
15

statement ok
	v38:= algebra.slice(b,2@0,4@0)

query IT rowsort
	v39:= io.print(v38)
----
2
brown
3
fox
4
jumps

statement ok
	v40:= calc.oid(nil)

statement ok
	v41:= algebra.slice(b,7@0,v40)

query IT rowsort
	v42:= io.print(v41)
----
10
(empty)
11
NULL
12
fox
13
the
14
.
7
dog
8
NULL
9
.

statement ok
	v43:= calc.oid(nil)

statement ok
	v44:= calc.oid(nil)

statement ok
	v45:= algebra.slice(b,v43,v44)

query IT rowsort
	v46:= io.print(v45)
----
0
the
1
quick
10
(empty)
11
NULL
12
fox
13
the
14
.
2
brown
3
fox
4
jumps
5
over
6
lazy
7
dog
8
NULL
9
.

statement ok
	v75:= algebra.likeselect(b, nil:bat[:oid], "ox", "", false, false)

query II rowsort
	v76:= io.print(v75)
----

statement ok
	v78:= algebra.likeselect(b, nil:bat[:oid], "fo", "", false, false)

query II rowsort
	v79:= io.print(v78)
----

statement ok
	v81:= algebra.likeselect(b, nil:bat[:oid], "fox", "", false, false)

query II rowsort
	v82:= io.print(v81)
----
0
3
1
12

statement ok
	v84:= algebra.likeselect(b, nil:bat[:oid], " fox", "", false, false)

query II rowsort
	v85:= io.print(v84)
----

