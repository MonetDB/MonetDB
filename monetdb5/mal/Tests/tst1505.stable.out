stdout of test 'tst1505` in directory 'monetdb5/mal` itself:


# 07:59:08 >  
# 07:59:08 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/Linux/etc/MonetDB5.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/monet5/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5/Linux/var/MonetDB5/log" --set mapi_port=42158 --set sql_port=55708 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst1505.mal </dev/null
# 07:59:08 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:33827/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-16148/.s.monetdb.33827
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 15:36:16 >  
# 15:36:16 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-16148" "--port=33827"
# 15:36:16 >  

#io.print(y);
#--------------------------#
# h	t	  # name
# oid	dbl	  # type
#-----------------#
[ 0@0,	  1	  ]
[ 1@0,	  2	  ]
[ 2@0,	  2	  ]
[ 3@0,	  2	  ]
[ 4@0,	  2	  ]
[ 5@0,	  3	  ]
[ 6@0,	  1	  ]
[ 7@0,	  1	  ]
#-----------------#
# h	tmp_5	  # name
# oid	bit	  # type
#-----------------#
[ 0@0,	  true	  ]
[ 1@0,	  false	  ]
[ 2@0,	  false	  ]
[ 3@0,	  false	  ]
[ 4@0,	  false	  ]
[ 5@0,	  false	  ]
[ 6@0,	  true	  ]
[ 7@0,	  true	  ]
[ "count" ]
[ 8 ]
#-----------------#
# h	tmp_6	  # name
# oid	bit	  # type
#-----------------#
[ 0@0,	  true	  ]
[ 1@0,	  false	  ]
[ 2@0,	  true	  ]
[ 3@0,	  false	  ]
#-----------------#
# h	tmp_7	  # name
# oid	bit	  # type
#-----------------#
[ 0@0,	  true	  ]
[ 1@0,	  true	  ]
[ 2@0,	  false	  ]
[ 3@0,	  false	  ]
#-------------------------#
# h	tmp_6	tmp_8	  # name
# oid	bit	bit	  # type
#-------------------------#
[ 0@0,	  true,	  false	  ]
[ 1@0,	  false,  true	  ]
[ 2@0,	  true,	  false	  ]
[ 3@0,	  false,  true	  ]
#-------------------------#
# h	tmp_6	tmp_9	  # name
# oid	bit	bit	  # type
#-------------------------#
[ 0@0,	  true,	  true	  ]
[ 1@0,	  false,  false	  ]
[ 2@0,	  true,	  false	  ]
[ 3@0,	  false,  false	  ]
#-------------------------#
# h	tmp_6	tmp_10	  # name
# oid	bit	bit	  # type
#-------------------------#
[ 0@0,	  true,	  true	  ]
[ 1@0,	  false,  true	  ]
[ 2@0,	  true,	  true	  ]
[ 3@0,	  false,  false	  ]
[ "ifthen group" ]
#--------------------------#
# h	t	t	t	t  # name
# void	bit	bit	bit	bit  # type
#--------------------------#
[ 0@0,	  true,	  true,	  false,  true	  ]
[ 1@0,	  false,  false,  true,	  true	  ]
[ 2@0,	  true,	  true,	  false,  true	  ]
[ 3@0,	  false,  false,  true,	  true	  ]
#---------------------------------#
# h	tmp_6	tmp_6	tmp_14	  # name
# oid	bit	bit	bit	  # type
#---------------------------------#
[ 0@0,	  true,	  true,	  true	  ]
[ 1@0,	  false,  false,  true	  ]
[ 2@0,	  true,	  true,	  true	  ]
[ 3@0,	  false,  false,  true	  ]
#-------------------------#
# h	t	t	  # name
# void	bit	int	  # type
#-------------------------#
[ 0@0,	  true,	  1	  ]
[ 1@0,	  false,  2	  ]
[ 2@0,	  true,	  1	  ]
[ 3@0,	  false,  2	  ]

# 07:59:08 >  
# 07:59:08 >  Done.
# 07:59:08 >  

