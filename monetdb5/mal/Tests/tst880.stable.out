stdout of test 'tst880` in directory 'monetdb5/mal` itself:


# 14:40:05 >  
# 14:40:05 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=39006" "--set" "mapi_usock=/var/tmp/mtest-7711/.s.monetdb.39006" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_mal" "tst880.mal"
# 14:40:05 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:39006/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-7711/.s.monetdb.39006
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 12:36:19 >  
# 12:36:19 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-11334" "--port=30001"
# 12:36:19 >  

function user.foo():void;               	#[0] (0)  0 
    b:bat[:int] := bat.new(:int);       	#[1] (0) CMDBATnew 1 <- 2 
    bat.append(b:bat[:int], -5:int);    	#[2] (0) BKCappend_val_wrap 3 <- 1 4 
    bat.append(b:bat[:int], 0:int);     	#[3] (0) BKCappend_val_wrap 5 <- 1 6 
    bat.append(b:bat[:int], 5:int);     	#[4] (0) BKCappend_val_wrap 7 <- 1 8 
    bat.append(b:bat[:int], nil:int);   	#[5] (0) BKCappend_val_wrap 9 <- 1 10 
    bat.append(b:bat[:int], nil:int);   	#[6] (0) BKCappend_val_wrap 11 <- 1 10 
    bat.append(b:bat[:int], 7:int);     	#[7] (0) BKCappend_val_wrap 12 <- 1 13 
    bat.append(b:bat[:int], 8:int);     	#[8] (0) BKCappend_val_wrap 14 <- 1 15 
    c:bat[:int] := bat.new(:int);       	#[9] (0) CMDBATnew 16 <- 2 
    bat.append(c:bat[:int], -5:int);    	#[10] (0) BKCappend_val_wrap 17 <- 16 4 
    bat.append(c:bat[:int], 1:int);     	#[11] (0) BKCappend_val_wrap 18 <- 16 19 
    bat.append(c:bat[:int], 5:int);     	#[12] (0) BKCappend_val_wrap 20 <- 16 8 
    bat.append(c:bat[:int], nil:int);   	#[13] (0) BKCappend_val_wrap 21 <- 16 10 
    bat.append(c:bat[:int], 4:int);     	#[14] (0) BKCappend_val_wrap 22 <- 16 23 
    bat.append(c:bat[:int], 9:int);     	#[15] (0) BKCappend_val_wrap 24 <- 16 25 
    bat.append(c:bat[:int], nil:int);   	#[16] (0) BKCappend_val_wrap 26 <- 16 10 
    z:bat[:int] := batcalc.max(b:bat[:int], c:bat[:int]);	#[17] (0) CMDbatMAX 27 <- 1 16 
    io.print(b:bat[:int], c:bat[:int], z:bat[:int]);	#[18] (0) IOtable 28 <- 1 16 27 
    z:bat[:int] := batcalc.min(b:bat[:int], c:bat[:int]);	#[19] (0) CMDbatMIN 27 <- 1 16 
    io.print(b:bat[:int], c:bat[:int], z:bat[:int]);	#[20] (0) IOtable 29 <- 1 16 27 
end user.foo;                           	#[21] (0)  
#--------------------------#
# h	t	t	t  # name
# void	int	int	int  # type
#--------------------------#
[ 0@0,	-5,	-5,	-5  ]
[ 1@0,	0,	1,	1  ]
[ 2@0,	5,	5,	5  ]
[ 3@0,	nil,	nil,	nil  ]
[ 4@0,	nil,	4,	nil  ]
[ 5@0,	7,	9,	9  ]
[ 6@0,	8,	nil,	nil  ]
#--------------------------#
# h	t	t	t  # name
# void	int	int	int  # type
#--------------------------#
[ 0@0,	-5,	-5,	-5  ]
[ 1@0,	0,	1,	0  ]
[ 2@0,	5,	5,	5  ]
[ 3@0,	nil,	nil,	nil  ]
[ 4@0,	nil,	4,	nil  ]
[ 5@0,	7,	9,	7  ]
[ 6@0,	8,	nil,	nil  ]

# 14:40:05 >  
# 14:40:05 >  "Done."
# 14:40:05 >  

