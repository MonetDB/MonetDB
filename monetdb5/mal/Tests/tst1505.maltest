statement ok
	y := bat.new(:dbl)

statement ok
	le_a := calc.dbl(1.0)

statement ok
	y:= bat.append(y,le_a)

statement ok
	ne_a := calc.dbl(2.0)

statement ok
	y:= bat.append(y,ne_a)

statement ok
	pe_a := calc.dbl(2.0)

statement ok
	y:= bat.append(y,pe_a)

statement ok
	re_a := calc.dbl(2.0)

statement ok
	y:= bat.append(y,re_a)

statement ok
	te_a := calc.dbl(2.0)

statement ok
	y:= bat.append(y,te_a)

statement ok
	ve_a := calc.dbl(3.0)

statement ok
	y:= bat.append(y,ve_a)

statement ok
	xe_a := calc.dbl(1.0)

statement ok
	y:= bat.append(y,xe_a)

statement ok
	af_a := calc.dbl(1.0)

statement ok
	y:= bat.append(y,af_a)

query IR rowsort
io.print(y)
----
0
1.000
1
2.000
2
2.000
3
2.000
4
2.000
5
3.000
6
1.000
7
1.000

statement ok
z:= batcalc.<(y,2.0:dbl)

query II rowsort
io.print(z)
----
0
1
1
0
2
0
3
0
4
0
5
0
6
1
7
1

statement ok
c:= aggr.count(z)

query T rowsort
io.print("count")
----
"count"

query T rowsort
io.print(c)
----
8

statement ok
	x:= bat.new(:bit)

statement ok
	x:= bat.append(x,true)

statement ok
	x:= bat.append(x,false)

statement ok
	x:= bat.append(x,true)

statement ok
	x:= bat.append(x,false)

query II rowsort
	io.print(x)
----
0
1
1
0
2
1
3
0

statement ok
	A:= bat.new(:bit)

statement ok
	A:= bat.append(A,true)

statement ok
	A:= bat.append(A,true)

statement ok
	A:= bat.append(A,false)

statement ok
	A:= bat.append(A,false)

query II rowsort
	io.print(A)
----
0
1
1
1
2
0
3
0

statement ok
	xn:= batcalc.not(x)

query III rowsort
io.print(x,xn)
----
0
1
0
1
0
1
2
1
0
3
0
1

statement ok
	xandx:= batcalc.and(x,A)

query III rowsort
io.print(x,xandx)
----
0
1
1
1
0
0
2
1
0
3
0
0

statement ok
	xorx:= batcalc.or(x,A)

query III rowsort
io.print(x,xorx)
----
0
1
1
1
0
1
2
1
1
3
0
0

query T rowsort
io.print("ifthen group")
----
"ifthen group"

statement ok
	xif2:= batcalc.ifthenelse(x,x,xn)

query IIIII rowsort
io.print(x,x,xn,xif2)
----
0
1
1
0
1
1
0
0
1
1
2
1
1
0
1
3
0
0
1
1

statement ok
	xif3:= batcalc.ifthenelse(x,x,true)

query IIII rowsort
io.print(x,x,xif3)
----
0
1
1
1
1
0
0
1
2
1
1
1
3
0
0
1

statement ok
	xif4:= batcalc.ifthenelse(x,1,2)

query III rowsort
io.print(x,xif4)
----
0
1
1
1
0
2
2
1
1
3
0
2

