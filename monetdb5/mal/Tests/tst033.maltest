statement ok
b:= bat.new(:int)

statement ok
bat.append(b,0)

statement ok
bat.append(b,1)

statement ok
bat.append(b,2)

statement ok
bat.append(b,3)

statement ok
s := algebra.select(b,nil:bat[:oid],0,2,true,true,false)

statement ok
z := algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
0
1
1
2
2

statement ok
s := algebra.select(b,nil:bat[:oid],0,2,true,false,false)

statement ok
z := algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
0
1
1

statement ok
s := algebra.select(b,nil:bat[:oid],0,2,false,true,false)

statement ok
z := algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
1
1
2

statement ok
s := algebra.select(b,nil:bat[:oid],0,2,false,false,false)

statement ok
z := algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
1

statement ok
s := algebra.select(b,nil:bat[:oid],0,2,true,true,true)

statement ok
z := algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
3

statement ok
s := algebra.select(b,nil:bat[:oid],0,2,true,false,true)

statement ok
z := algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
2
1
3

statement ok
s := algebra.select(b,nil:bat[:oid],0,2,false,true,true)

statement ok
z := algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
0
1
3

statement ok
s := algebra.select(b,nil:bat[:oid],0,2,false,false,true)

statement ok
z := algebra.projection(s,b)

query II rowsort
io.print(z)
----
0
0
1
2
2
3

