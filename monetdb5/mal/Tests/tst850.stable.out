stdout of test 'tst850` in directory 'monetdb5/mal` itself:


# 14:43:54 >  
# 14:43:54 >  Mtimeout -timeout 60 Mserver "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --debug=10 --set "monet_mod_path=/ufs/mk/monet5/Linux/lib/MonetDB5:/ufs/mk/opensource/MonetDB/Linux/lib/MonetDB" --set "gdk_dbfarm=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/opensource/MonetDB/Linux/var/MonetDB5/log" --set mapi_port=44824 --set sql_port=57958 --set monet_prompt= --trace "--config=/ufs/mk/monet5/src/mal/Tests/All.conf" --dbname=mTests_src_mal  tst850.mal </dev/null
# 14:43:54 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:30001/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-11334/.s.monetdb.30001
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 12:36:17 >  
# 12:36:17 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-11334" "--port=30001"
# 12:36:17 >  

function user.foo():void;               	#[0] (0)  0 
    t:bat[:str] := bat.new(:str);       	#[1] (0) CMDBATnew 1 <- 2 
    bat.append(t:bat[:str], "#hello world":str);	#[2] (0) BKCappend_val_wrap 3 <- 1 4 
    bat.append(t:bat[:str], "#sleep well":str);	#[3] (0) BKCappend_val_wrap 5 <- 1 6 
    io.print(t:bat[:str]);              	#[4] (0) IOprint_val 7 <- 1 
    b:bat[:bit] := mal.manifold("str":str, "startsWith":str, t:bat[:str], "#":str);	#[5] (0) MANIFOLDevaluate 8 <- 9 10 1 11 
    io.print(b:bat[:bit]);              	#[6] (0) IOprint_val 12 <- 8 
end user.foo;                           	#[7] (0)  
#--------------------------#
# h	t  # name
# void	str		  # type
#--------------------------#
[ 0@0,	"#hello world"	]
[ 1@0,	"#sleep well"	]
#--------------------------#
# h	t  # name
# void	bit  # type
#--------------------------#
[ 0@0,	  true	  ]
[ 1@0,	  true	  ]

# 14:43:54 >  
# 14:43:54 >  Done.
# 14:43:54 >  

