#testing the group_by minimalistics
# this is the backward compatibility sequence

b1:= bat.new(:int);
b2:= bat.new(:int);
b3:= bat.new(:int);

bat.append(b1,1);
bat.append(b1,1);
bat.append(b1,1);
bat.append(b1,1);
bat.append(b1,2);
bat.append(b1,2);
bat.append(b1,2);
bat.append(b1,2);

bat.append(b2,3);
bat.append(b2,3);
bat.append(b2,4);
bat.append(b2,4);
bat.append(b2,3);
bat.append(b2,3);
bat.append(b2,4);
bat.append(b2,4);

bat.append(b3,5);
bat.append(b3,6);
bat.append(b3,5);
bat.append(b3,6);
bat.append(b3,5);
bat.append(b3,6);
bat.append(b3,5);
bat.append(b3,6);

io.print(b1,b2,b3);

#single column groups
(g1,grp,ext):= group.multicolumn(b1);
io.print(g1);
(g2,grp,ext):= group.multicolumn(b2);
io.print(g2);
(g3,grp,ext):= group.multicolumn(b3);
io.print(g3);

(g1_1,grp,ext):= group.multicolumn(b1,b1);
io.print(g1_1);
(g1_2,grp,ext):= group.multicolumn(b1,b2);
io.print(g1_2);
(g1_3,grp,ext):= group.multicolumn(b1,b3);
io.print(g1_3);

(g1_1_1,grp,ext):= group.multicolumn(b1,b1,b1);
io.print(g1_1_1);
(g1_2_2,grp,ext):= group.multicolumn(b1,b2,b2);
io.print(g1_2_2);
(g1_3_3,grp,ext):= group.multicolumn(b1,b3,b3);
io.print(g1_3_3);
(g1_2_3,grp,ext):= group.multicolumn(b1,b2,b3);
io.print(g1_2_3);
