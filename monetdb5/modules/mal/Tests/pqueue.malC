# enqueue something 
b:= bat.new(:int);

bat.append(b,1);
bat.append(b,0);
bat.append(b,2);
bat.append(b,2);
bat.append(b,5);
bat.append(b,5);
bat.append(b,3);

io.print(b);

bp:= algebra.firstn(b,0:lng,false,true,false);
io.print(bp);
bp:= algebra.firstn(b,1:lng,false,true,false);
io.print(bp);
bp:= algebra.firstn(b,2:lng,false,true,false);
io.print(bp);
bp:= algebra.firstn(b,3:lng,false,true,false);
io.print(bp);
bp:= algebra.firstn(b,4:lng,false,true,false);
io.print(bp);
bp:= algebra.firstn(b,5:lng,false,true,false);
io.print(bp);
bp:= algebra.firstn(b,6:lng,false,true,false);
io.print(bp);
bp:= algebra.firstn(b,7:lng,false,true,false);
io.print(bp);
bp:= algebra.firstn(b,8:lng,false,true,false);
io.print(bp);

bp:= algebra.firstn(b,0:lng,true,false,false);
io.print(bp);
bp:= algebra.firstn(b,1:lng,true,false,false);
io.print(bp);
bp:= algebra.firstn(b,2:lng,true,false,false);
io.print(bp);
bp:= algebra.firstn(b,3:lng,true,false,false);
io.print(bp);
bp:= algebra.firstn(b,4:lng,true,false,false);
io.print(bp);
bp:= algebra.firstn(b,5:lng,true,false,false);
io.print(bp);
bp:= algebra.firstn(b,6:lng,true,false,false);
io.print(bp);
bp:= algebra.firstn(b,7:lng,true,false,false);
io.print(bp);
bp:= algebra.firstn(b,8:lng,true,false,false);
io.print(bp);

