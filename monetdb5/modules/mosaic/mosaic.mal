module mosaic;

pattern compress(b:bat[:any_1], prop:str):bat[:any_1]
address MOScompress
comment "Apply dynamic compression over chunks";

pattern compress(b:bat[:any_1]) :bat[:any_1]
address MOScompress
comment "Apply dynamic compression producing a temporary";

command decompress(b:bat[:any_1]) :bat[:any_1]
address MOSdecompress
comment "Apply dynamic decompression over chunks producing a temporary version";

command select(b:bat[:bte], low:bte, high:bte, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1;

command select(b:bat[:bit], low:bit, high:bit, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1;

command select(b:bat[:sht], low:sht, high:sht, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1;

command select(b:bat[:int], low:int, high:int, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1;

command select(b:bat[:lng], low:lng, high:lng, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1;

command select(b:bat[:oid], low:oid, high:oid, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1;

command select(b:bat[:flt], low:flt, high:flt, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1;

command select(b:bat[:dbl], low:dbl, high:dbl, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1;

command select(b:bat[:timestamp], low:timestamp, high:timestamp, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1
comment "Overloaded selection routine";

command select(b:bat[:date], low:date, high:date, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1
comment "Overloaded selection routine";

command select(b:bat[:daytime], low:daytime, high:daytime, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect1
comment "Overloaded selection routine";

command select(b:bat[:bte], low:bte, high:bte, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil;

command select(b:bat[:bit], low:bit, high:bit, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil;

command select(b:bat[:sht], low:sht, high:sht, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil;

command select(b:bat[:int], low:int, high:int, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil;

command select(b:bat[:lng], low:lng, high:lng, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil;

command select(b:bat[:oid], low:oid, high:oid, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil;

command select(b:bat[:flt], low:flt, high:flt, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil;

command select(b:bat[:dbl], low:dbl, high:dbl, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil;

command select(b:bat[:timestamp], low:timestamp, high:timestamp, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil
comment "Overloaded selection routine";

command select(b:bat[:date], low:date, high:date, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil
comment "Overloaded selection routine";

command select(b:bat[:daytime], low:daytime, high:daytime, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect1nil
comment "Overloaded selection routine";

command select(b:bat[:bte], cand:bat[:oid], low:bte, high:bte, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2;

command select(b:bat[:bit], cand:bat[:oid], low:bit, high:bit, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2;

command select(b:bat[:sht], cand:bat[:oid], low:sht, high:sht, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2;

command select(b:bat[:int], cand:bat[:oid], low:int, high:int, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2;

command select(b:bat[:lng], cand:bat[:oid], low:lng, high:lng, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2;

command select(b:bat[:oid], cand:bat[:oid], low:oid, high:oid, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2;

command select(b:bat[:flt], cand:bat[:oid], low:flt, high:flt, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2;

command select(b:bat[:dbl], cand:bat[:oid], low:dbl, high:dbl, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2;

command select(b:bat[:timestamp], cand:bat[:oid], low:timestamp, high:timestamp, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2
comment "Overloaded selection routine";

command select(b:bat[:date], cand:bat[:oid], low:date, high:date, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2
comment "Overloaded selection routine";

command select(b:bat[:daytime], cand:bat[:oid], low:daytime, high:daytime, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect2
comment "Overloaded selection routine";

command select(b:bat[:bte], cand:bat[:oid], low:bte, high:bte, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil;

command select(b:bat[:bit], cand:bat[:oid], low:bit, high:bit, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil;

command select(b:bat[:sht], cand:bat[:oid], low:sht, high:sht, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil;

command select(b:bat[:int], cand:bat[:oid], low:int, high:int, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil;

command select(b:bat[:lng], cand:bat[:oid], low:lng, high:lng, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil;

command select(b:bat[:oid], cand:bat[:oid], low:oid, high:oid, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil;

command select(b:bat[:flt], cand:bat[:oid], low:flt, high:flt, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil;

command select(b:bat[:dbl], cand:bat[:oid], low:dbl, high:dbl, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil;

command select(b:bat[:timestamp], cand:bat[:oid], low:timestamp, high:timestamp, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil
comment "Overloaded selection routine";

command select(b:bat[:date], cand:bat[:oid], low:date, high:date, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil
comment "Overloaded selection routine";

command select(b:bat[:daytime], cand:bat[:oid], low:daytime, high:daytime, li:bit, hi:bit, anti:bit, unknown:bit) :bat[:oid]
address MOSselect2nil
comment "Overloaded selection routine";

pattern thetaselect(b:bat[:bte], low:bte, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:bit], low:bit, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:sht], low:sht, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:int], low:int, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:lng], low:lng, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:oid], low:oid, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:flt], low:flt, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:dbl], low:dbl, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:timestamp], low:timestamp, oper:str) :bat[:oid]
address MOSthetaselect
comment "Overloaded selection routine";

pattern thetaselect(b:bat[:date], low:date, oper:str) :bat[:oid]
address MOSthetaselect
comment "Overloaded selection routine";

pattern thetaselect(b:bat[:daytime], low:daytime, oper:str) :bat[:oid]
address MOSthetaselect
comment "Overloaded selection routine";

pattern thetaselect(b:bat[:bte], c:bat[:oid], low:bte, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:bit], c:bat[:oid], low:bit, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:sht], c:bat[:oid], low:sht, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:int], c:bat[:oid], low:int, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:lng], c:bat[:oid], low:lng, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:oid], c:bat[:oid], low:oid, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:flt], c:bat[:oid], low:flt, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:dbl], c:bat[:oid], low:dbl, oper:str) :bat[:oid]
address MOSthetaselect;

pattern thetaselect(b:bat[:timestamp], c:bat[:oid], low:timestamp, oper:str) :bat[:oid]
address MOSthetaselect
comment "Overloaded selection routine";

pattern thetaselect(b:bat[:date], c:bat[:oid], low:date, oper:str) :bat[:oid]
address MOSthetaselect
comment "Overloaded selection routine";

pattern thetaselect(b:bat[:daytime], c:bat[:oid], low:daytime, oper:str) :bat[:oid]
address MOSthetaselect
comment "Overloaded selection routine";

pattern projection(b:bat[:oid], cand:bat[:bte]) :bat[:bte]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:bit]) :bat[:bit]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:sht]) :bat[:sht]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:int]) :bat[:int]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:lng]) :bat[:lng]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:oid]) :bat[:oid]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:flt]) :bat[:flt]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:dbl]) :bat[:dbl]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:timestamp]) :bat[:timestamp]
address MOSprojection
comment "Overloaded projection operation";

pattern projection(b:bat[:oid], cand:bat[:date]) :bat[:date]
address MOSprojection
comment "Overloaded projection operation";

pattern projection(b:bat[:oid], cand:bat[:daytime]) :bat[:daytime]
address MOSprojection
comment "Overloaded projection operation";

pattern join(l:bat[:any_1],r:bat[:any_1],sl:bat[:oid],sr:bat[:oid],nil_matches:bit,estimate:lng) (:bat[:oid],:bat[:oid])
address MOSjoin
comment "join operation mimicking algebra.join based on nested loop join with compressed side in the inner loop.";

pattern join(l:bat[:any_1],r:bat[:any_1],sl:bat[:oid],sr:bat[:oid],nil_matches:bit,estimate:lng, COUI:bit) (:bat[:oid],:bat[:oid])
address MOSjoin
comment "Same as above but when the COUI flag is set to true, it puts the compressed side in the outer loop.";
