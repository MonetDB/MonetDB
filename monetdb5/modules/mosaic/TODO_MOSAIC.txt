####technical depth####

Figure out why mix compression don't seem to work that well.
Add the compression on OID heap for string valued columns too.
benchmark using TPC-H
altering the storage doesn't seem to work.
Add negative values to tests
Add test for huge
create mix compression test cases particularly for dict/dict256 combo.
Introduce mosaic into gdk: create hooks in scanselect functions/macro's, joins and projections.
make mitosis work with mosaic and see how this relates to the previous landmark stuff.
Transform control dependency into data dependency select loops.
Apply compressed operations more directly: on constant value in runlength compression
Apply compressed operations more directly: on keys in dictionary compression
Apply compressed operations more directly: on prefix|suffix in prefix compression
Apply compressed operations more directly: on delta's and frame in frame compression
MERGE consecutive estimates where possible for instance for dictionary.
consider packing mosaic_block_header's more efficiently.
Add asserts on type degeneration for bit => bte daytime => lng timestmap => lng date => int.
DO nil checking more efficient similar to gdk_select
Timing in the context of MOSanalysis

Find a more 'generic' model to estimate and explore compression space perhaps Monte Carlo based.
Create a plug-in estimation model framework.

####code issues####
Straighten out semantics MOSselect. Make them exact to BATselect.
Refactor macro-ised functions to real functions in header files and apply the include trick
Refactor the structs MosaicEstimation, GlobalDictionaryInfo/EstimationParameters, MOStask.
See if the iteration algorithms can be improved.
Use GDK naming conventions, e.g. o for stuff coming out if canditer_next.
Update copyright in 2020.
