# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2020 MonetDB B.V.

atom xml :str;

command fromstr()
address XMLfromString
comment "Convert a string to an xml.";

command tostr()
address XMLtoString
comment "Convert xml to string equivalent";

command xml(src:str):xml
address XMLstr2xml
comment "Cast the string to an xml compliant string";

command str(src:xml):str
address XMLxml2str
comment "Cast the string to an xml compliant string";

command text(src:xml):str
address XMLxmltext
comment "Extract text from an xml atom";

command comment(val:str):xml
address XMLcomment
comment "Construct an comment struction ";

command parse(doccont:str,val:str,option:str):xml
address XMLparse
comment "Parse the XML document or element string values ";

command pi(target:str,val:str):xml
address XMLpi
comment "Construct a processing instruction";

command document(val:str):xml
address XMLdocument
comment "Check the value for compliance as XML document";

command content(val:str):xml
address XMLcontent
comment "Check the value for compliance as content, i.e.  it may contain multiple roots and character data.";

command root(val:xml, version:str, standalone:str):xml
address XMLroot
comment "Construct the root nodes";

command attribute(name:str, val:str):xml
address XMLattribute
comment "Construct an attribute value pair";

command element(name:str, ns:xml, attr:xml, s:xml) :xml
address XMLelement
comment "The basic building block for XML elements are namespaces, attributes and a sequence of xml elements. The name space and the attributes may be left unspecified(=nil:bat).";

command element(name:str, s:xml) :xml
address XMLelementSmall
comment "The basic building block for XML elements are namespaces, attributes and a sequence of xml elements. The name space and the attributes may be left unspecified(=nil:bat).";

command concat(val1:xml, val2:xml):xml
address XMLconcat
comment "Concatenate the xml values";

pattern forest(val:xml...):xml
address XMLforest
comment "Construct an element list";

command isdocument(val:str):bit
address XMLisdocument
comment "Validate the string as a document";

command prelude() :void
address XMLprelude;

command epilogue() :void
address XMLepilogue;

xml.prelude();

module calc;
command xml(src:str):xml address XMLstr2xml;
command xml(src:xml):xml address XMLxml2xml;


