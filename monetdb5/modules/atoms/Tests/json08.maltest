statement ok
j:= bat.new(:json)

statement ok
b:= json.new("{}")

statement ok
bat.append(j,b)

statement ok
b:= json.new("{\"f1\":1}")

statement ok
bat.append(j,b)

statement ok
b:= json.new("{\"f1\":1,\"f2\":2}")

statement ok
bat.append(j,b)

statement ok
b:= json.new("{\"f1\":1,\"f2\":2,\"f1\":3}")

statement ok
bat.append(j,b)

statement ok
b:= json.new("{\"f1\":{\"f12\":3},\"f2\":[2,3,4]}")

statement ok
bat.append(j,b)

statement ok
f:bat[:json]:= mal.manifold("json","filter",j,"f1")

query IT rowsort
io.print(f)
----
0
[]
1
[1]
2
[1]
3
[1,3]
4
[{"f12":3}]

statement ok
f:bat[:json]:= mal.manifold("json","filter",j,"f2")

query IT rowsort
io.print(f)
----
0
[]
1
[]
2
[2]
3
[2]
4
[[2,3,4]]

statement ok
f:bat[:json]:= mal.manifold("json","filter",j,"f1[0]")

query IT rowsort
io.print(f)
----
0
[]
1
[1]
2
[1]
3
[1]
4
[{"f12":3}]

statement ok
f:bat[:json]:= mal.manifold("json","filter",j,"..f12")

query IT rowsort
io.print(f)
----
0
[]
1
[]
2
[]
3
[]
4
[3]

query T rowsort
io.printf("#next batch\n")
----
#next batch

statement ok
i:= bat.new(:json)

statement ok
b:= json.new("[1,\"f2\", 2]")

statement ok
bat.append(i,b)

statement ok
f:bat[:json]:= mal.manifold("json","filter",i,0)

query IT rowsort
io.print(f)
----
0
[1]

statement ok
f:bat[:json]:= mal.manifold("json","filter",i,1)

query IT rowsort
io.print(f)
----
0
["f2"]

statement ok
f:bat[:json]:= mal.manifold("json","filter",i,2)

query IT rowsort
io.print(f)
----
0
[2]

statement ok
f:bat[:json]:= mal.manifold("json","filter",i,3)

query IT rowsort
io.print(f)
----
0
[]

