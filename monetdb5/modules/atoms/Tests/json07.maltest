statement ok
js:= json.new("{\"myList\":23,\"yours\":[\"a\",\"b\"]}")

statement ok
j1:=json.keyarray(js)

query T rowsort
io.print(j1)
----
"[\"myList\",\"yours\"]"

statement ok
a1:=json.valuearray(js)

query T rowsort
io.print(a1)
----
"[23,[\"a\",\"b\"]]"

statement ok
n1:=json.keys(js)

query IT rowsort
io.print(n1)
----
0
myList
1
yours

statement ok
v1:=json.values(js)

query IT rowsort
io.print(v1)
----
0
23
1
["a","b"]

statement ok
js:= json.new("{\"myBoolean\":true,\"myList\":[\"a\",\"b\"],\"myMap\":{\"c\":\"d\",\"a\":\"b\"},\"myObject\":\"myClass\",\"myJsonObject\":{\"myString\":\"myStringValue\"}}")

statement ok
j1:=json.keyarray(js)

query T rowsort
io.print(j1)
----
"[\"myBoolean\",\"myList\",\"myMap\",\"myObject\",\"myJsonObject\"]"

statement ok
a1:=json.valuearray(js)

query T rowsort
io.print(a1)
----
"[true,[\"a\",\"b\"],{\"c\":\"d\",\"a\":\"b\"},\"myClass\",{\"myString\":\"myStringValue\"}]"

statement ok
n1:=json.keys(js)

query IT rowsort
io.print(n1)
----
0
myBoolean
1
myList
2
myMap
3
myObject
4
myJsonObject

statement ok
v1:=json.values(js)

query IT rowsort
io.print(v1)
----
0
true
1
["a","b"]
2
{"c":"d","a":"b"}
3
"myClass"
4
{"myString":"myStringValue"}

