gv:= bat.new(:int);
gv:= bat.append(gv,1);
gv:= bat.append(gv,1);
gv:= bat.append(gv,2);
gv:= bat.append(gv,2);

dv:= bat.new(:int);
dv:= bat.append(dv,42);
dv:= bat.append(dv,84);
dv:= bat.append(dv,42);
dv:= bat.append(dv,20);

# tuple identifiers
ti:= bat.new(:oid);
ti:= bat.append(ti,0:oid);
ti:= bat.append(ti,1:oid);
ti:= bat.append(ti,2:oid);
ti:= bat.append(ti,3:oid);

ti_gv:bat[:int] := algebra.projection(ti,gv);
(grp:bat[:oid],r1_9:bat[:oid],r2_9:bat[:lng]) := group.groupdone(ti_gv);
ti_dv:bat[:int] := algebra.projection(ti,dv); 

io.print(grp);
res:bat[:dbl] := rapi.subeval_aggr(nil:ptr,"res <- aggregate(arg2, by=list(aggr_group), FUN=median); return(res$x)",ti_gv,ti_dv);
io.print(res);
