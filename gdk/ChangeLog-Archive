# DO NOT EDIT THIS FILE -- MAINTAINED AUTOMATICALLY
# This file contains past ChangeLog entries

* Wed Nov  9 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.25-20221121
- Memory leaks have been fixed.

* Mon Oct 10 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.25-20221121
- Offset heaps (.tailN files) were growing too fast and unnecessarily
  under certain conditions.  This has been fixed.  Also, when such too
  large files are now loaded into the system, it is recognized they are
  too large and they are truncated to a more reasonable size.

* Mon Sep 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.23-20221003
- Fixed a bug in ORDER BY with both NULLS LAST and LIMIT when the ordering
  was on an interger or integer-like column and NULL values are present.

* Wed Aug 24 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.23-20221003
- The median_avg and quantile_avg returned bogus results in the
  non-grouped case (i.e. something like SELECT sys.median_avg(i) FROM t).

* Wed Aug 10 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- A bug was fixed when upgrading a database from the Oct2020 releases
  (11.39.X) or older when the write-ahead log (WAL) was not empty and
  contained instructions to create new tables.

* Tue Aug  2 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- When destroying a bat, make sure there are no files left over in
  the BACKUP directory since they can cause problems when the bat id
  gets reused.

* Thu Jul 28 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- Fixed an off-by-one error in the logger which caused older log files
  to stick around longer in the write-ahead log than necessary.
- When an empty BAT is committed, skip writing (and synchronizing to
  disk) the heap (tail and theap) files and write 0 for their sizes to
  the BBP.dir file.  When reading the BBP.dir file, if an empty BAT is
  encountered, set the sizes of those files to 0.  This fixes potential
  issues during startup of the server (BBPcheckbats reporting errors).

* Wed Jun 22 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- Make sure heap files of transient bats get deleted when the bat is
  destroyed.  If the bat was a partial view (sharing the vheap but not
  the tail), the tail file wasn't deleted.
- Various changes were made to satisfy newer compilers.
- The batDirtydesc and batDirtyflushed Boolean values have been deprecated
  and are no longer used.  They were both holdovers from long ago.
- Various race conditions (data races) have been fixed.

* Thu May 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- All accesses to the BACKUP directory need to be protected by the
  same lock.  The lock already existed (GDKtmLock), but wasn't used
  consistently.  This is now fixed.  Hopefully this makes the hot snapshot
  code more reliable.

* Thu May 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.15-20220520
- All accesses to the BACKUP directory need to be protected by the
  same lock.  The lock already existed (GDKtmLock), but wasn't used
  consistently.  This is now fixed.  Hopefully this makes the hot snapshot
  code more reliable.

* Tue May 10 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.15-20220520
- When exiting, long running instructions are aborted using the same
  mechanism that is used for query timeouts.

* Fri Apr  1 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.13-20220401
- Improved speed of BATappend to empty varsized bat: we now just copy
  the heaps instead of inserting individual values.

* Tue Mar 29 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.13-20220401
- Improved speed of projection (BATproject) on varsized bats by sharing
  the data heap (vheap).

* Fri Mar 18 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.11-20220325
- Fixed a race condition which could cause a too large size being written
  for a .theap file to the BBP.dir file after the correct size file had
  been saved to disk.
- We now ignore the size and capacity columns in the BBP.dir file.
  These values are essential during run time, but not useful in the
  on-disk image of the database.

* Wed Mar  9 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.11-20220325
- Fixed a bug in the append code for msk (bit mask) bats.
- Conversions from floating point types to integral types that involve
  multiplication now use the "long double" as intermediate type, thereby
  loosing as few significant bits as is feasible.
- Found and fixed another source for the now infamous BBPcheckbats error
  that sometimes occurs at startup of the server.

* Wed Jan 12 2022 Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com> - 11.43.5-20220118
- Implement string imprints (strimps for short) a pre-filter structure
  for strings in order to accelerate LIKE queries. If a strimp exists
  for a specific string column the strings are pre-filtered, rejecting
  strings that cannot possibly match, before the more expensive and
  accurate matching algorithms run.

* Tue Jan 11 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.3-20220111
- On Windows, files and directories we create now get the attribute
  FILE_ATTIBUTE_NOT_CONTENT_INDEXED, meaning that they should not be
  indexed by indexing or search services.

* Wed Aug 11 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- Many (most) low level functions that could take a long time (such as
  BATjoin) can now be aborted with a timeout.  When the function takes too
  long, the function will fail, and hence the whole SQL query will fail.
- At some point in the past, string heaps were created where the
  hash value of the string was stored in the heap before the string.
  This hasn't been used in a long time.  Now the code that could still
  read those old heaps has been removed.  Bats that used the old format
  are converted automatically.

* Mon Aug  2 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- Some small interface changes to the atom functions: the atomPut function
  now returns (var_t) -1 on error instead of 0; the atomHeap function
  now returns success or failure as a gdk_return value.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.13-20211213
- Sometimes when the server was restarted, it wouldn't start anymore due
  to an error from BBPcheckbats.  We finally found and fixed a (hopefully
  "the") cause of this problem.

* Wed Sep 22 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.7-20210927
- Some deadlock and race condition issues were fixed.
- Handling of the list of free bats has been improved, leading to less
  thread contention.
- A problem was fixed where the server wouldn't start with a message from
  BBPcheckbats about files being too small.  The issue was not that the
  file was too small, but that BBPcheckbats was looking at the wrong file.
- An issue was fixed where a "short read" error was produced when memory
  was getting tight.

* Wed Aug 11 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.7-20210927
- When appending to a string bat, we made an optimization where the string
  heap was sometimes copied completely to avoid having to insert strings
  individually.  This copying was still done too eagerly, so now the
  string heap is copied less frequently.  In particular, when appending
  to an empty bat, the string heap is now not always copied whole.

* Tue Aug  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.5-20210803
- A bug in the grouping code has been fixed.

* Fri Jul 30 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.3-20210730
- Hash indexes are no longer maintained at all cost: if the number of
  distinct values is too small compared to the total number of values,
  the index is dropped instead of being maintained during updates.

* Tue Jul 20 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- A new type, called msk, was introduced.  This is a bit mask type.
  In a bat with type msk, each row occupies a single bit, so 8 rows are
  stored in a single byte.  There is no NULL value for this type.
- The function of the BAT iterator (type BATiter, function bat_iterator)
  has been expanded.  The iterator now contains more information about
  the BAT, and it contains a pointer to the heaps (theap and tvheap)
  that are stable, at least in the sense that they will remain available
  even when parallel threads update the BAT and cause those heaps to grow
  (and therefore possibly move in memory).  A call to bat_iterator must
  now be accompanied by a call to bat_iterator_end.

* Mon Mar 29 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- Implemented function BUNreplacemultiincr to replace multiple values
  in a BAT in one go, starting at a given position.
- Implemented new function BUNreplacemulti to replace multiple values
  in a BAT in one go, at the given positions.
- Removed function BUNinplace, just use BUNreplace, and check whether
  the BAT argument is of type TYPE_void before calling if you don't
  want to materialize.

* Mon Mar 15 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- Implemented a function BUNappendmulti which appends an array of values
  to a BAT.  It is a generalization of the function BUNappend.

* Thu Feb 25 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- Changed the interface of the atom read function.  It now requires an
  extra pointer to a size_t value that gives the current size of the
  destination buffer, and when that buffer is too small, it receives the
  size of the reallocated buffer that is large enough.  In any case,
  and as before, the return value is a pointer to the destination buffer.

* Fri Jan 29 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- Environment variables (sys.env()) must be UTF-8, but since they can
  contain file names which may not be UTF-8, there is now a mechanism
  to store the original values outside of sys.env() and store
  %-escaped (similar to URL escaping) values in the environment.  The
  key must still be UTF-8.

* Tue Dec  1 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- We now save the location of the min and max values when known.

* Mon May  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.39.17-20210503
- A bug that would very occasionally produce an error "strPut: incorrectly
  encoded UTF-8", even when no incorrectly coded characters are used
  at all, has been fixed.  It was the result of a rare combination of
  strings having been added to the column that caused essentially an
  off-by-one type of error to occur.

* Tue Jun  9 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.37.9-20200720
- Hash buckets come in variable widths.  But if a BAT grows long enough so
  that the BAT indexes that are stored in the buckets don't fit anymore,
  the buckets need to be widened.  This is now fixed.

* Tue Apr 28 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- The functions BATintersect, BATsemijoin, and BATsubcross have an
  extra argument, bool max_one, which indicates that there must be no
  more than one match in the join.

* Mon Apr 20 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- The "unique" property on BATs was removed.  The property indicated
  that all values in a BAT *had* to be distinct, but this was not
  actually used.
- A new type of candidate list has been introduced.  Candidate lists
  are used internally to specify which rows of a column participate
  in an operation.  Before, candidate lists always contained a list of
  candidate row IDs.  The new candidate list type specifies a list of
  row IDs that should NOT be considered (negative candidates).
- The maximum number of BATs in the system has been increased for 64
  bit architectures.
- The hash tables used internally by the system now uses a technique
  based on Linear Hashing which allows them to grow gracefully.  This
  means that hash tables aren't removed and recreated nearly as often
  anymore.  This also meant that the hash table had to be split into
  two files, which means that after an upgrade the hash tables have to
  be recreated.

* Mon Mar 30 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- Implemented a version of BATproject, called BATproject2, with two
  "right" arguments which conceptually follow each other.

* Wed Mar 25 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- Removed MT_mmap and MT_munmap from the list of exported functions.
  Use GDKmmap and GDKmunmap with the same parameters instead.

* Fri Mar 20 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- Changed the interface of the atom "fix" and "unfix" functions.
  They now return a value of type gdk_return to indicate success/failure.

* Tue Dec  3 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- Removed the tunique property.  The tunique property indicated that
  all values in the column had to be distinct.  It was removed because
  it wasn't used.

* Fri Nov 22 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- BATrangeselect now has two extra arguments: anti and symmetric
  (both bool).

* Sun Sep  8 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.35.1-20191118
- BATcalcbetween and all its variants now have an extra bool parameter
  "anti" to invert the test.

* Thu Apr 18 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.35.1-20191118
- All forms of BATcalcbetween and VARcalcbetween have extra bool arguments
  for low inclusive, high inclusive and nils false.  The latter causes
  the result to be false instead of nil if the value being checked is nil.

* Mon Jul 15 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.33.5-20190801
- We now look at the limits imposed by cgroups and the setrlimit system
  call to initialize some internal values related to how much (virtual)
  memory we think is available.

* Tue Mar 19 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- During processing, we now try to maintain the smallest and largest
  values that occur in a BAT.  This information is not saved across
  server restarts.

* Mon Nov 12 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Added an extra argument of type `bool' to the atom to string and
  string to atom methods to indicate whether the string is for
  internal use (casting the value to or from a string) of external use
  (to be printed).

* Wed Nov  7 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Implemented a nilslast option for BATfirstn.  If set, NILs come
  last in the ordering that BATfirstn simulates, so non-NIL values are
  preferentially returned.  The old behavior can be obtained by setting
  nilslast to !asc(ending).

* Tue Nov  6 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Implemented a nilslast option for BATsort.  This option should be
  equal to the reverse option for stable sort (it is not implemented for
  stable sort), but can be different from reverse for non-stable sort.
  The functions BATsort and GDKqsort have extra parameters, the function
  GDKqsort_rev has been removed (superseded by GDKqsort with the new
  `reverse' parameter).

* Tue Oct 30 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- The BUNtail, BUNtvar, BUNtloc, and BUNtpos macros (and Tloc and Tpos)
  now return a `void *' instead of a `char *'.

* Tue Aug 21 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Function PROPdestroy now takes a BAT* parameter.

* Wed Aug 15 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- A whole bunch of functions now take a bool argument instead of an
  int argument.  Some functions now return a bool instead of an int.
  In all these cases, the int was used as a Boolean value.

* Mon Jul 30 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.31.1-20180815
- Hash indexes are now persistent across server restarts.
- The macros bunfastapp and tfastins and variants no longer set the dirty
  flag of the heap they write to.  This now needs to be done separately
  (and preferably outside of the inner loop).

* Fri Jul 27 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.31.1-20180815
- Removed batDirty flag from BAT record.  Its function is completely
  superseded by batDirtydesc and the dirty flags on the various heaps.

* Tue Jul 24 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.31.1-20180815
- Removed "masksize" argument of function BAThash.

* Tue May 29 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.31.1-20180815
- A whole bunch of functions that took an int argument that was used as a
  Boolean (true/false) value now take a value of type bool.  The functions
  BATkeyed, BATordered and BATordered_rev now return a bool instead of
  an int.

* Tue Mar 20 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.31.1-20180815
- Removed the tdense property: it's function is completely replaced by
  whether or not tseqbase is equal to oid_nil.

* Fri Feb 16 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.29.1-20180315
- Changed return type of function void_replace_bat from BUN to gdk_return:
  it now only returns whether the operation succeeded or not.
- Changed the return type of BATroles from void to gdk_return: it can
  fail due to malloc failure.

* Fri Feb  9 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.29.1-20180315
- Removed functions ALIGNsetH, ALIGNsetT, and CREATEview_ (mind the
  underscore).  The first can easily be replace by using BAThseqbase
  (that's all it did), the second was only used once, and the third can
  be replace by VIEWcreate.

* Thu Jan 18 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.29.1-20180315
- Removed unused functions BATmemsize and BATvmsize.
- Removed the tnodense property: it was maintained but never actually
  used, not even stored.

* Tue Nov  7 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.29.1-20180315
- The NIL representation of the internal flt and dbl types was changed
  from the smallest representable finite value to NaN (not-a-number).

* Mon Sep 18 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.29.1-20180315
- Changed the interface of ATOMformat and VALformat: they now return a
  pointer to the allocated string.

* Thu Sep 14 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.29.1-20180315
- The length "method" for atoms now returns a size_t, the "len" field of
  a ValRecord is now a size_t, the "size" field of the atomDesc structure
  is now unsigned short.
- Removed the "align" field from the ATOM descriptor (atomDesc) structure.
- The atomtostr and atomfromstr "methods" for atoms now return ssize_t
  and require a pointer to size_t for the size of the buffer.
- The atom tostr and fromstr "methods" now always return -1 on error.
  A return value greater than 0 is normal, a return value of 0 is not
  normal, but technically not an error.

* Mon Oct 30 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.27.11-20171204
- Reimplemented summing of a column of floating point (flt and dbl)
  values.  The old code could give wildly inaccurate results when adding
  up lots and lots of values due to lack of precision.  Try SELECT sum(c)
  FROM t; where t is 100,000,000 rows, c is of type REAL and all values
  are equal to 1.1.  (The old code returned 33554432 instead of 1.1e8.)

* Mon Oct 23 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.27.9-20171023
- A serious bug, possibly resulting in database corruption, having to
  do with appending data to a string BAT was fixed.

* Fri Jul  7 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.27.3-20170725
- Many functions in GDK are now annotated with the GCC attribute
  __warn_unused_result__ meaning that the compiler will issue a warning
  if the result of the function (usually an indication of an error)
  is not used.

* Wed Mar 15 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- Improved error checking in the logger code (dealing with the write-ahead
  log); changed return types a several functions from int to gdk_return
  (i.e., they now return GDK_SUCCEED or GDK_FAIL).  The logger no longer
  calls GDKfatal on error.  Instead the caller is responsible for dealing
  with errors.

* Fri Feb 17 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- BATsort may now create an order index as a by product.
- Quantile calculations now use the order index if available (and use
  BATsort otherwise, producing an order index).
- Quantiles calculate a position in the sorted column.  If this position
  is not an integer, we now choose the nearest position, favoring the
  lower if the distance to the two adjacent positions is equal (round
  down to nearest integer).

* Mon Jan 30 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- Removed function BATprintf.  Use BATprint or BATprintcolumns instead.
- Removed BATsave from the list of exported functions.

* Tue Jan  3 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- Replaced BBPincref/BBPdecref with BBPfix/BBPunfix for physical reference
  count and BBPretain/BBPrelease for logical reference count maintenance.

* Fri Dec 16 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- Removed automatic conversion of 32-bit OIDs to 64 bits on 64-bit
  architectures.

* Tue Dec 13 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- Removed functions OIDbase() and OIDnew().
- Removed talign field from BAT descriptor.

* Mon Dec  5 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- BATappend now takes an optional (NULL if not used) candidate list for
  the to-be-appended BAT.

* Thu Dec  1 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- New function BATkeyed(BAT *b) that determines (possibly using a hash
  table) whether all values in b are distinct.

* Tue Apr 18 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.25.19-20170418
- A potential deadlock was fixed in order index creation.
- A bug that could happen during recovery of the write-ahead log (WAL)
  was fixed.  See changeset 98ad79c555cc for details.

* Tue Feb 28 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.25.11-20170313
- Fixed a bug when appending string bats that are fully duplicate
  eliminated.  It could happend that the to-be-appended bat had an empty
  string at an offset and at that same offset in the to-be-appended-to bat
  there happened to be a (sequence of) NULL(s).  Then this offset would be
  used, even though it might nog be the right offset for the empty string
  in the to-be-appended-to bat.  This would result in multiple offsets for
  the empty string, breaking the promise of being duplicate eliminated.

* Thu Dec  1 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- The tnokey values must now be 0 if it is not known whether all values
  in a column are distinct.
- The 2-bit tkey field in the bat descriptor has been split into two
  single bit fields: tkey and tunique.  The old tkey&BOUND2BTRUE value
  is now stored in tunique.

* Wed Oct 26 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- Implemented conversion to str from any type (not just the internal
  types).

* Wed Sep 14 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- VALcopy and VALinit both return their first argument on success or
  (and that's new) NULL on (allocation) failure.

* Tue Jul 26 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- BATattach now can also create a str BAT from a file consisting of
  null-terminated strings.  The input file must be encoded using UTF-8.
- BATattach now copies the input file instead of "stealing" it.
- Removed the lastused "timestamp" from the BBP.
- Removed batStamp field from BAT descriptor, and removed the BBPcurstamp
  function.

* Fri Jul 22 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- Removed unused functions BBPhot and BBPcold.

* Wed Jul  6 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- Removed BATderiveTailProps and BATderiveProps.  Just set the properties
  you know about, or use BATsettrivprop.

* Fri Jul  1 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- Removed the macro BUNfirst.  It can be replaced by 0.

* Wed Jun 29 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- Changed BATroles by removing the argument to set the name of the
  head column.
- The head column is now completely gone.  MonetDB is completely
  "headless".
- The format of the BBP.dir file was simplified.  Since the head column
  is VOID, the only value that needs to be stored is the head seqbase.

* Tue Jun 28 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- BATs now only have a single (logical) name.
- The function BATmirror is gone.  The HEAD column is always VOID (with
  a non-nil seqbase) and the TAIL column carries the data.  All functions
  that deal with data work on the TAIL column.

* Mon Jun 27 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- BATkey now works on the TAIL column instead of the HEAD column.
- Replaced BATseqbase with BAThseqbase and BATtseqbase, the former for
  setting the seqbase on the HEAD, the latter for setting the seqbase
  on the TAIL.

* Fri Jun 24 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- Replaced function BATnew with COLnew with slightly different arguments:
  the first argument of COLnew is the SEQBASE of the head column (which
  is always VOID).

* Thu May 26 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- The "wrd" type has been removed from GDK and MAL.  The type was defined
  to be a 32 bit integer on 32 bit architectures and a 64 bit integer
  on 64 bit architectures.  We now generally use "lng" (always 64 bits)
  where "wrd" was used.

* Thu Mar 24 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed BATconst.  Use BATconstant instead.
- Changed BATconstant.  It now has a new first argument with the seqbase
  for the head column.

* Thu Jan 14 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed BATmmap.  It was no longer used.

* Fri Dec 18 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- BUNdelete and BATdel don't accept a foce argument and only allow
  deleting values that have not yet been committed.  BUNdelete exchanges
  the deleted value with the last value (if the deleted value isn't the
  last value).  BATdel compacts the BAT by shifting values after the
  deleted values up.  The list of to-be-deleted values in BATdel must
  be sorted and unique.
- Removed BUNreplace from list of exported functions.  It wasn't used,
  and there is still BUNinplace and void_inplace that do more-or-less
  the same thing.

* Thu Dec 17 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Changed BATderiveHeadProps to BATderiveTailProps (and it now works on
  the tail column).
- Removed unused functions BATalpha, BATdelta, and BATprev.

* Fri Dec 11 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed function VIEWcombine.  Use BATdense instead.
- Removed "left" parameter from BUNinplace.  It wasn't used since the
  BAT it works on is dense headed.
- Created function BATdense to easily create a [void,void] BAT with
  specified seqbases for head and tail and a count.
- Removed function BATmark.  When all head columns are dense, BATmark
  basically only created a new [void,void] BAT.
- Renamed BATsubsort to BATsort.

* Thu Dec  3 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed "sub" from the names of the function BATsubselect,
  BATthetasubselect, BATsubcross, BATsubleftjoin, BATsubouterjoin,
  BATsubthetajoin, BATsubsemijoin, BATsubdiff, BATsubjoin, BATsubbandjoin,
  BATsubrangejoin, and BATsubunique.
- Removed BATsubleftfetchjoin: it was not used.
- Removed BATcross1.  Use BATsubcross instead.

* Thu Oct  8 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed all versions of the SORTloop macro.

* Thu Oct  1 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed Batkdiff.  Use BATsubdiff instead.

* Wed Sep 16 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed BATselect.  Use BATsubselect instead.
- Removed BATsemijoin.  Use BATsubsemijoin instead.
- Removed BATjoin.  Use BATsubjoin instead.
- Removed BATleftjoin.  Use BATsubleftjoin or BATproject instead.
- Removed BATleftfetchjoin.  Use BATproject instead.
- Removed BUNins from the list of exported functions.

* Thu Sep 10 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed legacy functions BATuselect and BATuselect_.
- Removed legacy functions BATantijoin, BATbandjoin, BATouterjoin,
  BATrangejoin, and BATthetajoin.

* Wed Sep  9 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed function BATrevert.
- BATordered now works on the TAIL column.

* Tue Sep  8 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed obsolete functions BATorder() and BATorder_rev().

* Sat Sep  5 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Implemented BATsubdiff which returns a list of OIDs (sorted, i.e. usable
  as candidate list) of tuples in the left input whose value does not
  occur in the right input.

* Fri Sep  4 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed function BATkintersect.  It wasn't used anymore.  It's
  functionality can be obtained by using BATsubsemijoin.

* Fri Aug 14 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.23.1-20160601
- Removed the function BATkunion.

* Mon Apr  4 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.21.19-20160405
- Fixed a bug that caused various instances where old data returned or
  where crashes occurred.  The problem was that internally data wasn't
  always marked dirty when it was being changed, causing later processing
  to not deal with the changed data correctly.

* Wed Feb  4 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.21.1-20150807
- BUNtvar and BUNhvar macros no longer work for TYPE_void columns.

* Mon Feb  2 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.21.1-20150807
- Changed interfaces of a lot of GDK-level functions.  When they modify a
  BAT, don't return the same BAT or NULL, but instead return GDK_SUCCEED
  or GDK_FAIL.

* Tue Oct 28 2014 Sjoerd Mullender <sjoerd@acm.org> - 11.21.1-20150807
- Changed a bunch of hash-related functions to work on the tail column.
  The functions that have been changed to work on the tail column are:
  BAThash, BATprepareHash, HASHgonebad, HASHins, and HASHremove.

* Tue Jan 27 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.19.11-20150423
- Replaced the rangejoin implementation with one that uses imprints if
  it can.

* Thu Nov 20 2014 Sjoerd Mullender <sjoerd@acm.org> - 11.19.5-20141120
- Implemented a change to the way in which string bats are appended.
  We now try harder to limit the growth of the string heap.

* Wed Nov  5 2014 Sjoerd Mullender <sjoerd@acm.org> - 11.19.5-20141120
- Fixed some problems with BATsample.  It was possible for BATsample to
  return a value that was just beyond the end of the sampled BAT.  Also,
  on some systems the range of the rand() function is rather limited
  (0..32767) and trying to get a sample larger than this range would
  result in an infinite loop.

* Mon Jul 14 2014 Sjoerd Mullender <sjoerd@acm.org> - 11.19.1-20141024
- Added "multifarm" capability.  It is now possible to separate persistent
  and transient BATs into different directories (presumably on different
  disks).  This can be done by using the --dbextra option of mserver5
  (see the man page).

* Wed Oct  2 2013 Sjoerd Mullender <sjoerd@acm.org> - 11.17.1-20140114
- Removed some unused fields in the atomDesc structure.  This change
  requires a complete recompilation of the whole suite.

* Tue Jan 22 2013 Sjoerd Mullender <sjoerd@acm.org> - 11.17.1-20140114
- Replaced the mutex implementation for both GNU C and Visual Studio with
  a home-grown implementation that uses atomic instructions (__sync_*()
  in gcc, _Interlocked*() in VS).

* Tue Nov 19 2013 Sjoerd Mullender <sjoerd@acm.org> - 11.15.19-20131120
- Stopped using the deprecated sbrk() system call.
- Fixed a problem when reverse sorting a sorted column.
- Fixed bugs that deal with problems that could possibly occur when
  transactions are aborted and the server is restarted.  See bug #3243.
- A bug was fixed in the handling of grouped aggregates when all values
  in a group are null.  See bug #3388.

* Mon Sep 30 2013 Sjoerd Mullender <sjoerd@acm.org> - 11.15.17-20131008
- Removed the heap cache.  Since the fix for bug 3323 which made that
  the cache was actually getting used, bug 3376 made clear that it didn't
  work very well.  In addition, on Linux at least, the heap cache slows
  things down.

* Tue May  7 2013 Sjoerd Mullender <sjoerd@acm.org> - 11.15.9-20130619
- System calls to flush files to disks were added.  This may cause
  some slowdown, but it should provide better durability, especially
  in the face of power failures.

* Mon Apr  8 2013 Sjoerd Mullender <sjoerd@acm.org> - 11.15.5-20130412
- Fixed a bug in case the candidate list is dense and completely
  outside the range of the bat being worked upon.

* Wed Aug  8 2012 Sjoerd Mullender <sjoerd@acm.org> - 11.13.1-20121010
- Removed the gdk_embedded (and embedded) option.  The code wasn't tested
  and most likely non-functional.

* Tue Jul 17 2012 Sjoerd Mullender <sjoerd@acm.org> - 11.13.1-20121010
- BAT-of-BATs is no longer allowed.  It was already not allowed to
  make these types of BATs persistent, but now they can't be created at
  all anymore.

* Fri Aug 31 2012 Sjoerd Mullender <sjoerd@acm.org> - 11.11.9-20120911
- Fixed a bug in BATantijoin when either side is a singleton BAT.
  This fixes bug 3139.

* Mon Jul  9 2012 Niels Nes <niels@cwi.nl> - 11.11.5-20120710
- Fixed intermittent problem that joins and selects return incorrect
  results and possibly inconsistent databases. The problems only occurred
  after a series of queries and updates, therefore it was hard to reproduce.

* Wed Apr  4 2012 Sjoerd Mullender <sjoerd@acm.org> - 11.11.1-20120706
- The sorted property, which was used to maintain whether a column in
  a BAT was sorted or reverse sorted, has been replaced by a pair of
  properties, sorted and revsorted.  These new properties can be set
  independently (unlike the old sorted property), and so if both are set,
  the column must be constant.  In addition, internal property checking
  has been overhauled.  Now, when a property is set incorrectly, and
  when assertions are enabled, an assertion will go off.  There is also
  a function which can derive properties.

* Thu Mar 15 2012 Sjoerd Mullender <sjoerd@acm.org> - 11.11.1-20120706
- Implemented proper overflow checking on all arithmetic operations.

* Thu May 17 2012 Fabian Groffen <fabian@cwi.nl> - 11.9.7-20120607
- Limit number of detected CPU cores to 16 on 32-bits systems to avoid
  running quickly out of addressable resources followed by a kill from
  the OS.

* Fri Apr 27 2012 Fabian Groffen <fabian@cwi.nl> - 11.9.3-20120514
- Implemented MT_getrss for Mac OS X systems, this allows the server to
  know about how much memory is currently in use.

* Tue Feb  7 2012 Sjoerd Mullender <sjoerd@acm.org> - 11.9.1-20120418
- The type "chr" has been removed.
  chr has long been superseded by bte for 1 byte arithmetic plus it is
  pretty useless to hold single characters since we use Unicode and
  thus only a tiny subset of the supported character set would fit.

* Tue Dec  6 2011 Fabian Groffen <fabian@cwi.nl> - 11.7.1-20120111
- Fixed memory detection on 32-bits Solaris systems with more memory
  than can be addressed in 32-bits mode, bug #2935

* Thu Aug 25 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.5.1-20110907
- Removed conversion code for databases that still used the (more than
  two year) old format of "string heaps".

* Wed Aug 10 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.5.1-20110907
- On Windows and Linux/Unix we can now read databases built on the other
  O/S, as long as the hardware-related architecture (bit size, floating
  point format, etc.) is identical.

* Wed May 11 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.5.1-20110907
- Implemented automatic conversion of a 64-bit database with 32-bit OIDs
  to one with 64-bit OIDs.

* Sat Jul  9 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.3.5-20110720
- Fixed a problem where appending string BATs could cause enormous growth
  of the string heap.  This fixes bug 2820.

* Wed Jun 29 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.3.5-20110720
- Fixes to memory detection on FreeBSD.

* Fri May 13 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.3.3-20110517
- Fixed a bug where large files (> 2GB) didn't always get deleted on
  Windows.

* Thu Apr 14 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.3.1-20110414
- Fixed bugs in antiselect which gave the incorrect result when upper
  and lower bound were equal.  This bug could be triggered by the SQL
  query SELECT * FROM t WHERE x NOT BETWEEN y AND y.

* Tue Mar 22 2011 Fabian Groffen <fabian@cwi.nl> - 11.1.1-20110324
- Fixed memory detection on Darwin (Mac OS X) systems not to return
  bogus values

* Fri Jan 14 2011 Fabian Groffen <fabian@cwi.nl> - 11.1.1-20110317
- MonetDB/src/gdk was moved to gdk

* Fri Aug 20 2010 Sjoerd Mullender <sjoerd@acm.org> - 1.38.5-20100823
- Fixed a bug where some internal reference counting was done incorrectly,
  causing an infinite loop when exiting the server due to it being killed.
  This bug probably only manifested itself in MonetDB/XQuery.  Bug 2658.

* Mon May 31 2010 Sjoerd Mullender <sjoerd@acm.org> - 1.38.1-20100618
- Updated Vendor information.

* Fri May  7 2010 Fabian Groffen <fabian@cwi.nl>
- Updated HowToStart.rst for our move from SourceForge for sources,
  trackers and downloads.

* Tue Apr 20 2010 Stefan Manegold <manegold@cwi.nl> - 1.38.1-20100618
- Made compilation of "testing" (and "java") independent of MonetDB.
  This is mainly for Windows, but also on other systems, "testing" can
  now be built independently of (and hence before) "MonetDB".  Files
  that mimic configure functionality on Windows were moved from
  "MonetDB" to "buildtools"; hence, this affects all packages on
  Windows, requiring a complete rebuild from scratch on Windows.
  getopt() support in testing has changed; hence, (most probably)
  requiring a rebuild from scratch of testing on other systems.

* Tue Apr 20 2010 Stefan Manegold <manegold@cwi.nl> - 1.38.1-20100618
- Implemented build directory support for Windows, i.e., like on
  Unix/Linux also on Windows we can now build in a separate build
  directory as alternative to ...\<package>\NT, and thus keep the latter
  clean from files generated during the build.  On Windows, the build
  directory must be a sibling of ...\<package>\NT .

* Thu Apr 15 2010 Sjoerd Mullender <sjoerd@acm.org> - 1.36.5-20100420
- Fixed a bug that could cause a crash when string BATs are combined.
  (SF bug 2947763.)

* Sun Apr 11 2010 Niels Nes <niels@cwi.nl> - 1.36.5-20100420
- Fixed a potential file leak: under certain conditions, files in the
  database might not get deleted when they should (they would be
  deleted when the server restarts).

* Mon Mar 29 2010 Fabian Groffen <fabian@cwi.nl> - 1.36.5-20100420
- Fix regression introduced in Feb2010-SP1 causing UDP connections to
  malfunction, in particular affecting the stethoscope tool.

* Mon Mar 01 2010 Fabian Groffen <fabian@cwi.nl> - 1.36.3-20100322
- Fixed bug in UDP stream creation causing UDP connections to already
  bound ports to be reported as successful.

* Mon Feb 22 2010 Sjoerd Mullender <sjoerd@acm.org> - 1.36.1-20100223
- Various concurrency bugs were fixed.
- Various changes were made to run better on systems that don't have
  enough memory to keep everything in core that was touched during
  query processing.  This is done by having the higher layers giving
  hints to the database kernel about future use, and the database
  kernel giving hints to the operating system kernel about how
  (virtual) memory is going to be used.

* Thu Feb 18 2010 Stefan Manegold <Stefan.Manegold@cwi.nl> - 1.36.1-20100223
- Fixed bug in mergejoin implementation.  This fixes bug #2952191.

* Tue Feb  2 2010 Sjoerd Mullender <sjoerd@acm.org> - 1.36.1-20100223
- Added support for compiling on Windows using the Cygwin-provided
  version of flex.

* Thu Jan 21 2010 Sjoerd Mullender <sjoerd@acm.org> - 1.36.1-20100223
- Fix compilation issue when configured with --with-curl.  This fixes
  bug #2924999.

* Thu Jan 21 2010 Fabian Groffen <fabian@cwi.nl> - 1.36.1-20100223
- Added implementation of MT_getrss() for Solaris.  This yields in the
  kernel knowing about its (approximate) memory usage to try and help
  the operating system to free that memory that is best to free,
  instead of a random page, e.g. the work of the vmtrim thread.

* Wed Jan 20 2010 Sjoerd Mullender <sjoerd@cwi.nl> - 1.36.1-20100223
- Implemented a "fast" string BAT append: Under certain conditions,
  instead of inserting values one-by-one, we now concatenate the
  string heap wholesale and just manipulate the offsets.  This works
  both for BATins and BATappend.

* Wed Jan  6 2010 Sjoerd Mullender <sjoerd@cwi.nl> - 1.36.1-20100223
- Changed the string heap implementation to also contain the hashes of
  strings.
- Changed the implementation of the string offset columns to be
  dynamically sized.

