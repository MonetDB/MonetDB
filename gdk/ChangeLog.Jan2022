# ChangeLog file for GDK
# This file is updated with Maddlog

* Fri Mar 24 2023 Sjoerd Mullender <sjoerd@acm.org>
- When processing the WAL, if a to-be-destroyed object cannot be found,
  don't stop, but keep processing the rest of the WAL.

* Mon Feb 20 2023 Sjoerd Mullender <sjoerd@acm.org>
- A race condition was fixed where certain write-ahead log messages
  could get intermingled, resulting in a corrupted WAL file.
- If opening of a file failed when it was supposed to get memory mapped,
  an incorrect value was returned to indicate the failure, causing
  crashes later on.  This has been fixed.

* Mon Feb 13 2023 Sjoerd Mullender <sjoerd@acm.org>
- When saving a bat failed for some reason during a low-level commit,
  this was logged in the log file, but the error was then subsequently
  ignored, possibly leading to files that are too short or even missing.
- The write-ahead log (WAL) is now rotated a bit more efficiently by
  doing multiple log files in one go (i.e. in one low-level transaction).

* Mon Jan 16 2023 Sjoerd Mullender <sjoerd@acm.org>
- Fixed a race condition that could lead to a bat being added to the SQL
  catalog but nog being made persistent, causing a subsequent restart
  of the system to fail (and crash).

* Wed Dec 14 2022 Sjoerd Mullender <sjoerd@acm.org>
- Fixed a race condition where a hash could have been created on a
  bat using the old bat count while in another thread the bat count
  got updated.  This would make the hash be based on too small a size,
  causing failures later on.

* Thu Dec  8 2022 Sjoerd Mullender <sjoerd@acm.org>
- When extending a bat failed, the capacity had been updated already and
  was therefore too large.  This could then later cause a crash.  This has
  been fixed by only updating the capacity if the extend succeeded.

* Wed Dec  7 2022 Sjoerd Mullender <sjoerd@acm.org>
- A bug was fixed when dealing with copy-on-write memory maps.  These can
  occur for some bats used by the write-ahead log code when they grow
  large enough.

