/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0.  If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * Copyright 1997 - July 2008 CWI, August 2008 - 2022 MonetDB B.V.
 */
/* monetdb_config.h.in.  Generated from CMakeLists.txt  */

#ifndef MT_SEEN_MONETDB_CONFIG_H
#define MT_SEEN_MONETDB_CONFIG_H 1

#ifdef _MSC_VER

#if _MSC_VER < 1900
#error Versions below Visual Studio 2015 are no longer supported
#endif

/* Prevent pollution through excessive inclusion of include files by Windows.h. */
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN 1
#endif

/* Visual Studio 8 has deprecated lots of stuff: suppress warnings */
#ifndef _CRT_SECURE_NO_DEPRECATE
#define _CRT_SECURE_NO_DEPRECATE 1
#endif

#define _CRT_RAND_S				/* for Windows rand_s, before stdlib.h */
#define HAVE_RAND_S 1

#endif

#if !defined(_XOPEN_SOURCE) && defined(__CYGWIN__)
#define _XOPEN_SOURCE 700
#endif

#include <stdlib.h>
#if defined(_MSC_VER) && defined(_DEBUG) && defined(_CRTDBG_MAP_ALLOC)
/* In this case, malloc and friends are redefined in crtdbg.h to debug
 * versions.  We need to include stdlib.h first or else we get
 * conflicting declarations. */
#include <crtdbg.h>
#endif

#cmakedefine HAVE_SYS_TYPES_H 1
#ifdef HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif

/* standard C-99 include files */
#include <assert.h>
#include <errno.h>
#include <inttypes.h>
#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdio.h>
#include <string.h>

#ifdef _MSC_VER

/* Windows include files */
#include <process.h>
#include <windows.h>
#include <ws2tcpip.h>

/* indicate to sqltypes.h that windows.h has already been included and
   that it doesn't have to define Windows constants */
#define ALREADY_HAVE_WINDOWS_TYPE 1

#define NATIVE_WIN32 1

#endif /* _MSC_VER */

#if !defined(WIN32) && defined(__CYGWIN__)
#define WIN32 1
#endif

// Section: monetdb configure defines
#cmakedefine HAVE_DISPATCH_DISPATCH_H 1
#cmakedefine HAVE_DLFCN_H 1
#cmakedefine HAVE_FCNTL_H 1
#cmakedefine HAVE_IO_H 1
#cmakedefine HAVE_KVM_H 1
#cmakedefine HAVE_LIBGEN_H 1
#cmakedefine HAVE_LIBINTL_H 1
#cmakedefine HAVE_MACH_MACH_INIT_H 1
#cmakedefine HAVE_MACH_TASK_H 1
#cmakedefine HAVE_MACH_O_DYLD_H 1
#cmakedefine HAVE_NETDB_H 1
#cmakedefine HAVE_NETINET_IN_H 1
#cmakedefine HAVE_POLL_H 1
#cmakedefine HAVE_PROCFS_H 1
#cmakedefine HAVE_PWD_H 1
#cmakedefine HAVE_STRINGS_H 1
#cmakedefine HAVE_STROPTS_H 1
#cmakedefine HAVE_SYS_FILE_H 1
#cmakedefine HAVE_SYS_IOCTL_H 1
#cmakedefine HAVE_SYS_SYSCTL_H 1
#cmakedefine HAVE_SYS_MMAN_H 1
#cmakedefine HAVE_SYS_PARAM_H 1
#cmakedefine HAVE_SYS_RANDOM_H 1
#cmakedefine HAVE_SYS_RESOURCE_H 1
#cmakedefine HAVE_SYS_TIME_H 1
#cmakedefine HAVE_SYS_TIMES_H 1
#cmakedefine HAVE_SYS_UIO_H 1
#cmakedefine HAVE_SYS_UN_H 1
#cmakedefine HAVE_SYS_WAIT_H 1
#cmakedefine HAVE_TERMIOS_H 1
#cmakedefine HAVE_UNISTD_H 1
#cmakedefine HAVE_UUID_UUID_H 1
#cmakedefine HAVE_WINSOCK_H 1
#cmakedefine HAVE_SEMAPHORE_H 1
#cmakedefine HAVE_GETOPT_H 1

#cmakedefine HAVE_STDATOMIC_H 1

#cmakedefine HAVE_DIRENT_H 1
#cmakedefine HAVE_SYS_SOCKET_H 1
#cmakedefine HAVE_GETTIMEOFDAY 1
#cmakedefine HAVE_SYS_STAT_H 1
#cmakedefine HAVE_FDATASYNC 1
#cmakedefine HAVE_ACCEPT4 1
#cmakedefine HAVE_ASCTIME_R 1
#cmakedefine HAVE_CLOCK_GETTIME 1
#cmakedefine HAVE_CTIME_R 1
#cmakedefine HAVE_DISPATCH_SEMAPHORE_CREATE 1
#cmakedefine HAVE_FALLOCATE 1
#cmakedefine HAVE_FCNTL 1
#cmakedefine HAVE_FORK 1
#cmakedefine HAVE_FSYNC 1
#cmakedefine HAVE_FTIME 1
#cmakedefine HAVE_GETENTROPY 1
#cmakedefine HAVE_GETEXECNAME 1
#cmakedefine HAVE_GETLOGIN 1
#cmakedefine HAVE_GETOPT_LONG 1
#cmakedefine HAVE_GETRLIMIT 1
#cmakedefine HAVE_GETTIMEOFDAY 1
#cmakedefine HAVE_GETUID 1
#cmakedefine HAVE_GMTIME_R 1
#cmakedefine HAVE_LOCALTIME_R 1
#cmakedefine HAVE_STRERROR_R 1
#cmakedefine HAVE_LOCKF 1
#cmakedefine HAVE_MADVISE  1
#cmakedefine HAVE_MREMAP  1
#cmakedefine HAVE_NANOSLEEP  1
#cmakedefine HAVE_NL_LANGINFO  1
#cmakedefine HAVE__NSGETEXECUTABLEPATH 1
#cmakedefine HAVE_PIPE2  1
#cmakedefine HAVE_POLL  1
#cmakedefine HAVE_POPEN 1
#cmakedefine HAVE_POSIX_FADVISE 1
#cmakedefine HAVE_POSIX_FALLOCATE 1
#cmakedefine HAVE_POSIX_MADVISE 1
#cmakedefine HAVE_PUTENV 1
#cmakedefine HAVE_SETSID 1
#cmakedefine HAVE_SHUTDOWN 1
#cmakedefine HAVE_SIGACTION 1
#cmakedefine HAVE_STPCPY 1
#cmakedefine HAVE_STRCASESTR 1
#cmakedefine HAVE_STRNCASECMP 1
#cmakedefine HAVE_STRPTIME 1
#cmakedefine HAVE_STRSIGNAL 1
#cmakedefine HAVE_SYSCONF 1
#cmakedefine HAVE_TASK_INFO 1
#cmakedefine HAVE_TIMES 1
#cmakedefine HAVE_UNAME 1
// #cmakedefine HAVE_SEMTIMEDOP
#cmakedefine HAVE_PTHREAD_KILL 1
#cmakedefine HAVE_PTHREAD_SIGMASK 1
#cmakedefine HAVE_GETOPT 1

#define ICONV_CONST
#define FLEXIBLE_ARRAY_MEMBER
#define ENABLE_MAPI 1
#define HAVE_MAPI 1
// End Section: monetdb configure defines

// Section: monetdb macro variables
#cmakedefine HAVE_ICONV 1
#cmakedefine HAVE_PTHREAD_H 1
#cmakedefine HAVE_LIBPCRE 1
#cmakedefine HAVE_LIBBZ2 1
#cmakedefine HAVE_CURL 1
#cmakedefine HAVE_LIBLZMA 1
#cmakedefine HAVE_LIBXML 1
#cmakedefine HAVE_LIBZ 1
#cmakedefine HAVE_LIBLZ4 1
#cmakedefine HAVE_PROJ 1
#cmakedefine HAVE_SNAPPY 1
#cmakedefine HAVE_FITS 1
#cmakedefine HAVE_UUID 1
#cmakedefine HAVE_VALGRIND 1
#cmakedefine HAVE_NETCDF 1
#cmakedefine HAVE_READLINE 1
#cmakedefine HAVE_LIBR 1
#cmakedefine RHOME "@RHOME@"
#cmakedefine HAVE_GEOM 1
#cmakedefine HAVE_SHP 1
#cmakedefine HAVE_LIBPY3 1

// #cmakedefine SOCKET_LIBRARIES
#cmakedefine HAVE_GETADDRINFO 1
#cmakedefine HAVE_CUDF 1

#cmakedefine MAPI_PORT @MAPI_PORT@
#cmakedefine MAPI_PORT_STR "@MAPI_PORT_STR@"

#ifdef _MSC_VER
#define DIR_SEP '\\'
#define PATH_SEP ';'
#define DIR_SEP_STR "\\"
#define SO_PREFIX ""
#else
#cmakedefine DIR_SEP '@DIR_SEP@'
#cmakedefine PATH_SEP '@PATH_SEP@'
#cmakedefine DIR_SEP_STR "@DIR_SEP_STR@"
#cmakedefine SO_PREFIX "@SO_PREFIX@"
#endif
#cmakedefine SO_EXT "@SO_EXT@"

#cmakedefine BINDIR "@BINDIR@"
#cmakedefine LIBDIR "@LIBDIR@"
#cmakedefine LOCALSTATEDIR "@LOCALSTATEDIR@"

// End Section: monetdb macro variables

// Section: monetdb configure misc
#cmakedefine MONETDB_RELEASE "@MONETDB_RELEASE@"

#define MONETDB_VERSION "@MONETDB_VERSION@"
#define MONETDB_VERSION_MAJOR @MONETDB_VERSION_MAJOR@
#define MONETDB_VERSION_MINOR @MONETDB_VERSION_MINOR@
#define MONETDB_VERSION_PATCH @MONETDB_VERSION_PATCH@

#define GDK_VERSION "@GDK_VERSION@"
#define GDK_VERSION_MAJOR @GDK_VERSION_MAJOR@
#define GDK_VERSION_MINOR @GDK_VERSION_MINOR@
#define GDK_VERSION_PATCH @GDK_VERSION_PATCH@
#define MAPI_VERSION "@MAPI_VERSION@"
#define MAPI_VERSION_MAJOR @MAPI_VERSION_MAJOR@
#define MAPI_VERSION_MINOR @MAPI_VERSION_MINOR@
#define MAPI_VERSION_PATCH @MAPI_VERSION_PATCH@
#define MONETDB5_VERSION "@MONETDB5_VERSION@"
#define MONETDB5_VERSION_MAJOR @MONETDB5_VERSION_MAJOR@
#define MONETDB5_VERSION_MINOR @MONETDB5_VERSION_MINOR@
#define MONETDB5_VERSION_PATCH @MONETDB5_VERSION_PATCH@
#define MONETDBE_VERSION "@MONETDBE_VERSION@"
#define MONETDBE_VERSION_MAJOR @MONETDBE_VERSION_MAJOR@
#define MONETDBE_VERSION_MINOR @MONETDBE_VERSION_MINOR@
#define MONETDBE_VERSION_PATCH @MONETDBE_VERSION_PATCH@
#define STREAM_VERSION "@STREAM_VERSION@"
#define STREAM_VERSION_MAJOR @STREAM_VERSION_MAJOR@
#define STREAM_VERSION_MINOR @STREAM_VERSION_MINOR@
#define STREAM_VERSION_PATCH @STREAM_VERSION_PATCH@
#define SQL_VERSION "@SQL_VERSION@"
#define SQL_VERSION_MAJOR @SQL_VERSION_MAJOR@
#define SQL_VERSION_MINOR @SQL_VERSION_MINOR@
#define SQL_VERSION_PATCH @SQL_VERSION_PATCH@

/* Host identifier */
#cmakedefine HOST "@HOST@"

/* The used password hash algorithm */
#define MONETDB5_PASSWDHASH "@PASSWORD_BACKEND@"

/* The used password hash algorithm */
#define MONETDB5_PASSWDHASH_TOKEN @PASSWORD_BACKEND@

#ifndef _Noreturn
#cmakedefine _Noreturn @_Noreturn@
#endif
#ifndef __cplusplus
/* Does your compiler support `inline' keyword? (C99 feature) */
#ifndef inline
#cmakedefine inline @inline@
#endif
/* Does your compiler support `restrict' keyword? (C99 feature) */
#ifndef restrict
#cmakedefine restrict @restrict@
#endif
#endif

// End Section: monetdb configure misc

// Section: monetdb configure sizes
#cmakedefine SIZEOF_SIZE_T @SIZEOF_SIZE_T@

/* The size of `void *', as computed by sizeof. */
#cmakedefine SIZEOF_VOID_P @SIZEOF_VOID_P@

#cmakedefine SIZEOF_CHAR @SIZEOF_CHAR@
#cmakedefine SIZEOF_SHORT @SIZEOF_SHORT@
#cmakedefine SIZEOF_INT @SIZEOF_INT@
#cmakedefine SIZEOF_LONG @SIZEOF_LONG@
#cmakedefine SIZEOF_LONG_LONG @SIZEOF_LONG_LONG@
#cmakedefine SIZEOF_DOUBLE @SIZEOF_DOUBLE@
#cmakedefine SIZEOF_WCHAR_T @SIZEOF_WCHAR_T@
#define HAVE_LONG_LONG 1	/* for ODBC include files */

#ifdef _MSC_VER
#ifdef _WIN64
#define LENP_OR_POINTER_T SQLLEN *
#else
#define LENP_OR_POINTER_T SQLPOINTER
#endif
#else
#cmakedefine LENP_OR_POINTER_T @LENP_OR_POINTER_T@
#endif
#cmakedefine SIZEOF_SQLWCHAR @SIZEOF_SQLWCHAR@

#cmakedefine WORDS_BIGENDIAN @HAVE_WORDS_BIGENDIAN@

/* Does your compiler support `ssize_t' type? (Posix type) */
#ifndef ssize_t
#cmakedefine ssize_t @ssize_t@
#endif

/* The size of `__int128', as computed by sizeof. */
#cmakedefine SIZEOF___INT128 @SIZEOF___INT128@

/* The size of `__int128_t', as computed by sizeof. */
#cmakedefine SIZEOF___INT128_T @SIZEOF___INT128_T@

/* The size of `__uint128_t', as computed by sizeof. */
#cmakedefine SIZEOF___UINT128_T @SIZEOF___UINT128_T@

#ifdef SIZEOF___INT128
typedef __int128 hge;
typedef unsigned __int128 uhge;
#define HAVE_HGE 1
#define SIZEOF_HGE SIZEOF___INT128
#elif defined(SIZEOF___INT128_T) && defined(SIZEOF___UINT128_T)
typedef __int128_t hge;
typedef __uint128_t uhge;
#define HAVE_HGE 1
#define SIZEOF_HGE SIZEOF___INT128_T
#endif

// End Section: monetdb configure sizes

/* Does your compiler support `__attribute__' extension? */
#if !defined(__GNUC__) && !defined(__clang__) && !defined(__attribute__)
#define __attribute__(a)
#endif

#if !defined(__cplusplus) || __cplusplus < 201103L
#ifndef static_assert
/* static_assert is a C11/C++11 feature, defined in assert.h which also exists
 * in many other compilers we ignore it if the compiler doesn't support it
 * However in C11 static_assert is a macro, while on C++11 is a keyword */
#define static_assert(expr, mesg)	((void) 0)
#endif
#endif

#ifdef HAVE_STRINGS_H
#include <strings.h>		/* strcasecmp */
#endif

#ifdef _MSC_VER

#define strdup(s)	_strdup(s)

#ifndef strcasecmp
#define strcasecmp(x,y) _stricmp(x,y)
#endif

/* Define to 1 if you have the `strncasecmp' function. */
#define HAVE_STRNCASECMP 1
#ifndef strncasecmp
#define strncasecmp(x,y,z) _strnicmp(x,y,z)
#endif

#include <sys/stat.h>
#ifdef lstat
#undef lstat
#endif
#define lstat _stat64
#ifdef stat
#undef stat
#endif
#define stat _stat64
#ifdef fstat
#undef fstat
#endif
#define fstat _fstat64

static inline char *
stpcpy(char *restrict dst, const char *restrict src)
{
	size_t i;
	for (i = 0; src[i]; i++)
		dst[i] = src[i];
	dst[i] = 0;
	return dst + i;
}

/* Define to 1 if the system has the type `socklen_t'. */
#define HAVE_SOCKLEN_T 1
/* type used by connect */
#define socklen_t int
#define strtok_r(t,d,c) strtok_s(t,d,c)

#define HAVE_GETOPT_LONG 1

/* there is something very similar to localtime_r on Windows: */
#include <time.h>
#define HAVE_LOCALTIME_R 1
static inline struct tm *
localtime_r(const time_t *restrict timep, struct tm *restrict result)
{
	return localtime_s(result, timep) == 0 ? result : NULL;
}
#define HAVE_GMTIME_R 1
static inline struct tm *
gmtime_r(const time_t *restrict timep, struct tm *restrict result)
{
	return gmtime_s(result, timep) == 0 ? result : NULL;
}

/* Define if you have ctime_r(time_t*,char *buf,size_t s) */
#define HAVE_CTIME_R 1
#define HAVE_CTIME_R3 1
/* there is something very similar to ctime_r on Windows: */
#define ctime_r(t,b,s)  (ctime_s(b,s,t) ? NULL : (b))

#endif	/* _MSC_VER */

#cmakedefine HAVE_SOCKLEN_T 1
#ifndef _MSC_VER
#define SOCKET int
#define closesocket close
#endif

#ifndef _In_z_
#define _In_z_
#endif
#ifndef _Printf_format_string_
#define _Printf_format_string_
#endif

#ifdef _MSC_VER
#define _LIB_STARTUP_FUNC_(f,q) \
        static void f(void); \
        __declspec(allocate(".CRT$XCU")) void (*f##_)(void) = f; \
        __pragma(comment(linker,"/include:" q #f "_")) \
        static void f(void)
#ifdef _WIN64
        #define LIB_STARTUP_FUNC(f) _LIB_STARTUP_FUNC_(f,"")
#else
        #define LIB_STARTUP_FUNC(f) _LIB_STARTUP_FUNC_(f,"_")
#endif
#else
#define LIB_STARTUP_FUNC(f) \
        static void f(void) __attribute__((__constructor__)); \
        static void f(void)
#endif

#endif /* MT_SEEN_MONETDB_CONFIG_H */
