* Thu Aug 11 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- Rebuilt.
- GH#2507: SQL: Implement complementary EXTRACT functionality
- GH#2508: SQL:rel_optimizer apply min/max only on source table in join
- GH#2511: SQL: describe object
- GH#2512: SQL: Improve (i)like preformance on diverse stringdata
- GH#2516: SQL: increase cost of a like operation
- GH#2521: Optimise out group by operator in SQL level by constraint
- GH#2525: SQL: CSV Vaults
- GH#2526: SQL: level 3 naming
- GH#2605: functions to retrieve warnings from the server in Mapi
- GH#2608: Missing various functions used by Hibernate
- GH#2630: Poor performance using length(...) = length(...) in conjuction
  with a equjoin
- GH#2749: Rewrite like without modifiers as = query early in the process
- GH#2804: binary "export": COPY <subquery> INTO
  <list_of_binary_files_one_per_column>
- GH#2853: Give proper error message when starting database that needs
  upgrade with --readonly
- GH#2858: use of configure conditionals on Windows not complete and
  consistent
- GH#2941: please add transaction functions to php driver
- GH#2948: Document MonetDB's usage of indices
- GH#3001: Rewrite BETWEEN in column first notation, with constant
  arguments last
- GH#3005: When IN is presented with a single element, optimise to =
- GH#3006: Keep result of UNION sorted when inputs are sorted
- GH#3015: SQL-92 defines BIT and BIT VARYING
- GH#3044: Exception handling in procedures and functions
- GH#3162: If we insert and delete a set of records monet db is not
  freeing up memory
- GH#3187: Documentation suggests changing escape character is possible -
  how to disable it entirely?
- GH#3203: allow to set user/password for funnel connections
- GH#3242: Steps for repair database
- GH#3244: Rename default database "demo"
- GH#3301: CHAR comparisons do not pad strings of different lengths
- GH#3322: Run a statement each time a connection is created via ODBC
- GH#3324: "copy subquery into file " doesnt support writing binary data
  into file
- GH#3327: Transactional behaviour of BinaryBulkLoad
- GH#3355: Control the amount of (temp) space
- GH#3378: possible to support double x boolean type casting in the next
  update?
- GH#3400: Support Backticks in SQL queries and redundant size
  restrictions in DDL statements
- GH#3405: Add bulk versions of json functions
- GH#3410: Bogus (?) "Maximum concurrent client limit reached (65)"
- GH#3413: Database corrupted after few days on database restart
- GH#3426: Extend SQL triggers to fire on system events such as AFTER LOGON
- GH#3441: Explicit WITHOUT TIME ZONE
- GH#3499: Unresponsive mserver ("unknown state: 4" in logs on restart)
- GH#3501: Starting database fails because of locale settings
- GH#3509: add support for formatted conversion to string using function:
  to_char(num_ts_val, 'format_mask')
- GH#3517: scalar function round(num) is not supported
- GH#3539: Configurable parsing for ETL and bulk loading
- GH#3548: mitosis splits an unhelpful table when applied to unions
- GH#3550: Distribution-adaptive grouping is gone
- GH#3559: Harddrive fills and crashes database during live data insertion
  via mapi library client.
- GH#3569: Add support for: ALTER TABLE [schema1.]tablename ADD CONSTRAINT
  [tbl_constr_name] CHECK (logical_expression)
- GH#3570: Server dies on status or start my-first-db
- GH#3590: string concat on a column is expensive
- GH#3610: exittimeout property not being honoured
- GH#3618: Illegal instruction thrown when releasing db
- GH#3668: UNIQUE INDEX constraint is not enforced during inserts and
  updates
- GH#3670: COPY BINARY INTO support for inet type
- GH#3681: mserver5 crashes with a segfault when dumping very large
  databases
- GH#3683: Mtest hangs if server console was disabled
- GH#3695: crashes after "GDKmmap(...) fails"
- GH#3722: monetdbd for Windows
- GH#3734: NodeJS client: Inserting backslashes into the database does not
  work properly
- GH#3737: Simplify building on Windows
- GH#3745: COPY BINARY doesn't support copy without auto-increment column
- GH#3750: Hanging mserver during startup
- GH#3751: MonetDBD can not recover
- GH#3762: Different FavIcon, logo for the Bugzilla section of the website
- GH#3780: HAVING clause does not read AS columns?
- GH#3792: monetdbd sets wrong property for optimizer pipeline
- GH#3808: Fractional seconds precision is broken for any precision larger
  than 3
- GH#3812: Using copy into to import data fails if data contains \560,
  \561 and several other combinations of characters
- GH#3826: Monetdb Server crashes on concurrent schema operations
- GH#3846: feature request: please allow multiple NULL AS null_string
  values for a COPY INTO line
- GH#3875: Adding support for DISTINCT in custom single-argument aggregates
- GH#3880: mserver5 crashed and fails to restart
- GH#3894: PIP repository points to the older version of python-monetdb
- GH#3907: Issue with Perl monetdb DBD plugin for DBI on a VM only
- GH#3914: Schema specific variables
- GH#3924: mserver5: sql_result.c:1650: mvc_export_operation: Assertion
  `m->type == Q_SCHEMA || m->type == Q_TRANS' failed.
- GH#3934: Tables system table contain tables of the same name associated
  with the same schema_id
- GH#3958: TRACE timings are misleading with CREATE TABLE statements
- GH#3964: colon (e.g. :x) parameters does not work in prepared statements
- GH#3970: Better instructions for how to generate the binary files for
  binary copy statement
- GH#3982: SQL string parsing is incorrect
- GH#3992: unions not reusable -> plans explode
- GH#4002: DECIMAL HUGEINT columns in ODBC return wrong values
- GH#4006: monetdbd does not always properly setup a socket between an
  mserver5 process and a MAPI client
- GH#4012: Extend storage() function with garbage size
- GH#4022: Preventing CAST( AS VARCHAR) from TEXT within WHERE part
- GH#4023: TOP N queries in merge tables
- GH#4042: Cannot connect to local or networked server with this version -
  Tableau/Alteryx - but can via earlier version
- GH#4055: Cannot set a connection timeout
- GH#4073: Tutorial doesn't work at all. R connection fails in execution.
  Unusable for non database people right now.
- GH#6067: Error messages referring to logs should say which logs
- GH#6122: feature request: allow some SELECT a.col IN ( b.col FROM b )
  FROM a behavior?
- GH#6129: BBPinit supports no BBPfarms initially, but GDKinit doesn't
  (and crashes)
- GH#6131: FK constraint violated in self table references
- GH#6136: some of MAPI arguments are not portable
- GH#6137: ALTER TABLE qname ADD COLUMN ncoÅ‚umn COPY [BINARY] FROM
  'external_file'
- GH#6188: Multiple calls not distinguishable in sys.queue
- GH#6199: Query echoing should occur before each query is executed
- GH#6208: Add support to specify execution of some SQL commands at login
  time for a specific user
- GH#6212: querying client connections information
- GH#6221: error message "mvc_init: unable to create system tables..."
  trying to start server (mserver5.bat)
- GH#6226: monetdbd and mserver5 options aligned
- GH#6241: Error while using start command
- GH#6333: Feature Request: Support aggregation functions FIRST() and
  LAST()
- GH#6334: Need better error message when rejecting a COPY INTO from a
  relative path
- GH#6376: How to install (non-C) MonetDB client packages
- GH#6394: Remote MAL does not accept nil:bat[:oid]
- GH#6396: Noticed "Memory Leak" with high concurrency and same SQL run in
  loop
- GH#6464: Python loader / COPY LOADER INTO overrules defaults with NUL
- GH#6466: Mode measure
- GH#6505: Big table load with copy into crashes the db.
- GH#6533: SIMILAR TO regular expression matching [patch]
- GH#6538: transient BAT/COL/Heap-allocation fall-back to DBfarm in case
  DBextra fails
- GH#6563: monetdbd should provide more fine grained control over hosts
  allowed to connect
- GH#6582: CSV load only support UTF-8 encoding
- GH#6590: How to place database in readonly mode  without shutdown the
  database .
- GH#6619: INSERT INTO table with auto_increment column needs bulk
  execution
- GH#6623: sys.rejects table need improvements
- GH#6631: GDKfatal should exit harder
- GH#6655: Disallow creating duplicate unique constraints and associated
  storage on columns which already have a unique or pkey constraint defined
- GH#6661: Unusual behaviour when no_mitosis_pipe flag is set
- GH#6667: Uninstalling MonetDB RPMs and Reinstalling after corruption
  occurs leaves the system unusable
- GH#6675: Executing SQL query repeatedly, degrades performance
- GH#6677: MonetDB should optimize queries of the form select * from foo
  where FALSE, select * from foo where 0 = 1, etc.
- GH#6692: import with COPY INTO and missing column list for csv file has
  an unclear error message.
- GH#6702: Recursive CTE support (WITH Clause)
- GH#6707: Transaction mode forces roll back if error
- GH#6717: Significant changes  to GDK structures and conventions not
  reflected in comments
- GH#6733: Add support for replacing db-objects when there are references
  to them, without removing the references first
- GH#6742: High count of memory mapped BAT files and high disk space usage
  on inserting data via SQL INSERT.
- GH#6746: Extend sys.sequences with columns showing the currentvalue and
  datatype
- GH#6747: Add "LITERAL" option to COPY INTO FROM that prevents MonetDB's
  bulk loader from (trying to) be(ing) "smart"
- GH#6752: Keep the original textual description in the _tables
- GH#6753: SQL COPY INTO FROM compressed (bz2,xz,gz) file fails
- GH#6760: Pulling huge data via ODBC is very slow (with standard
  rendering of output)
- GH#6768: Admin handling out of date
- GH#6787: COPY INTO ... ON CLIENT not working on Windows
- GH#6801: mserver5 crashes with a segmentation fault dumping a large
  database (> 500G)
- GH#6811: systemd starts database in /var/monetdb5/dbfarm while init.d
  start db in /var/lib/monetdb
- GH#6823: Outdated(?) note about BAMloader branch
- GH#6824: libtool:   error: error: cannot install 'libMonetODBC.la' to a
  directory not ending in /usr/local/lib
- GH#6825: bugzilla: Invalid local time for date in time zone:
  Europe/Amsterdam
- GH#6830: While upgrading the database from MonetDB-11.27.13_PY8 to
  MonetDB-11.35.19 we are not able to bring up the database
- GH#6831: Lazy Replication: Slave DB does not replicate the creation of
  new columns
- GH#6832: Prepared statements admin
- GH#6832: Prepared statements admin
- GH#6834: Fails to Create A "FILE DSN" (Monetdb ODBC) under Windows 10
  Enterprise
- GH#6849: Need environment variables
- GH#6852: Lazy Replication: Replica DB does not replicate updates any more
- GH#6852: Lazy Replication: Replica DB does not replicate updates any more
- GH#6921: DockerHub monetdb/monetdb is outdatet
- GH#6933: Add support for scalar function IFNULL(expr1, expr2)
- GH#6946: Subuniform missed in mergetable optimizer
- GH#6947: Create index warnings
- GH#6952: Add support for altering the authorization and/or owner of a
  schema
- GH#6956: Mserver5 crashes on firing a query involving inner joins of
  merge tables
- GH#6961: Could Mapilib have non-blocking functions to ask if the query
  is over for mapi_send?
- GH#6966: dbextra=:memory: fails
- GH#6968: Support SET ANSI_NULLS ON | OFF
- GH#6975: Algorithm information should be saved in instruction
- GH#6984: TABLE CHECKSUM
- GH#7000: Scheduled query as a new feature
- GH#7008: monetdbd 11.35 allows to start a dbfarm created with 11.39
- GH#7009: MERGE does not currently support WHEN NOT MATCHED BY SOURCE
- GH#7014: More flexible syntax for time intervals
- GH#7015: Optimizers-pipeline as a global setting for a certain database
- GH#7040: Memory leak detected for MAPI interface
- GH#7244: Using MonetDb\e in C#
- GH#7298: Irresponsive database server after reading incomplete SQL
  script.
- GH#7308: Race condition in MVCC transaction management

* Wed Aug 10 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- gdk: A bug was fixed when upgrading a database from the Oct2020 releases
  (11.39.X) or older when the write-ahead log (WAL) was not empty and
  contained instructions to create new tables.

* Tue Aug  2 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- gdk: When destroying a bat, make sure there are no files left over in
  the BACKUP directory since they can cause problems when the bat id
  gets reused.

* Thu Jul 28 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- gdk: Fixed an off-by-one error in the logger which caused older log files
  to stick around longer in the write-ahead log than necessary.
- gdk: When an empty BAT is committed, skip writing (and synchronizing to
  disk) the heap (tail and theap) files and write 0 for their sizes to
  the BBP.dir file.  When reading the BBP.dir file, if an empty BAT is
  encountered, set the sizes of those files to 0.  This fixes potential
  issues during startup of the server (BBPcheckbats reporting errors).

* Thu Jun 23 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- merovingian: When multiple identical messages are written to the log, write the
  first one, and combine subsequent ones in a single message.

* Wed Jun 22 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- gdk: Make sure heap files of transient bats get deleted when the bat is
  destroyed.  If the bat was a partial view (sharing the vheap but not
  the tail), the tail file wasn't deleted.
- gdk: Various changes were made to satisfy newer compilers.
- gdk: The batDirtydesc and batDirtyflushed Boolean values have been deprecated
  and are no longer used.  They were both holdovers from long ago.
- gdk: Various race conditions (data races) have been fixed.

* Wed Jun 22 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- merovingian: Fixed a leak where the log file wasn't closed when it was reopened
  after a log rotation (SIGHUP signal).
- merovingian: Try to deal more gracefully with "inherited" mserver5 processes.
  This includes not complaining about an "impossible state", and allowing
  such processes to be stopped by the monetdbd process.
- merovingian: When a transient failure occurs during processing of a new connection to
  the monetdbd server, sleep for half a second so that if the transient
  failure occurs again, the log file doesn't get swamped with error
  messages.

* Wed Jun 22 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- monetdb5: Various race conditions (data races) have been fixed.

* Fri Jun 10 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- clients: Implemented dump of global grants, that is to say, grants for COPY INTO
  and COPY FROM which grant permission to users to write to or read from
  files on the server (COPY INTO queries without the ON CLIENT option).

* Tue May 31 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- clients: Fixed a bug where when the semicolon at the end of a COPY INTO query
  that reads from STDIN is at exactly a 10240 byte boundary in a file,
  the data isn't read as input for the COPY INTO but instead as a new
  SQL query.

* Fri May 20 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.17-20220811
- gdk: All accesses to the BACKUP directory need to be protected by the
  same lock.  The lock already existed (GDKtmLock), but wasn't used
  consistently.  This is now fixed.  Hopefully this makes the hot snapshot
  code more reliable.

* Fri May 20 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.15-20220520
- Rebuilt.
- GH#7036: Generate column names instead of labels

* Thu May 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.15-20220520
- gdk: All accesses to the BACKUP directory need to be protected by the
  same lock.  The lock already existed (GDKtmLock), but wasn't used
  consistently.  This is now fixed.  Hopefully this makes the hot snapshot
  code more reliable.

* Tue May 10 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.15-20220520
- gdk: When exiting, long running instructions are aborted using the same
  mechanism that is used for query timeouts.

* Mon Apr 25 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.15-20220520
- sql: GLOBAL TEMPORARY tables are now treated like LOCAL TEMPORARY tables
  as far as the table content is concerned.  The schema information
  stays global.  This fixes an issue with concurrent access and cleanup
  of stale data.

* Thu Apr 14 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.15-20220520
- sql: The NO CONSTRAINT option of the COPY INTO query has been removed.
  It didn't work and it was never a good idea anyway.

* Fri Apr 01 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.13-20220401
- Rebuilt.
- GH#7278: BUG when there is more than one field/filter in the having
  clause

* Fri Apr  1 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.13-20220401
- gdk: Improved speed of BATappend to empty varsized bat: we now just copy
  the heaps instead of inserting individual values.

* Fri Apr  1 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.13-20220401
- monetdb5: Improved parsing speed of blob values, especially on Windows.
  On Windows, using the locale-aware functions isdigit and isxdigit is
  comparatively very slow, so we avoid them.

* Tue Mar 29 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.13-20220401
- gdk: Improved speed of projection (BATproject) on varsized bats by sharing
  the data heap (vheap).

* Fri Mar 25 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.11-20220325
- Rebuilt.
- GH#7252: Segmentation fault on second run
- GH#7253: Extremely slow INSERT INTO <table> SELECT
- GH#7254: Commit with deletions is very slow
- GH#7263: PRIMARY KEY constraint is not persistent through server restarts
- GH#7267: Update after delete does not update some rows

* Fri Mar 18 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.11-20220325
- gdk: Fixed a race condition which could cause a too large size being written
  for a .theap file to the BBP.dir file after the correct size file had
  been saved to disk.
- gdk: We now ignore the size and capacity columns in the BBP.dir file.
  These values are essential during run time, but not useful in the
  on-disk image of the database.

* Wed Mar  9 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.11-20220325
- gdk: Fixed a bug in the append code for msk (bit mask) bats.
- gdk: Conversions from floating point types to integral types that involve
  multiplication now use the "long double" as intermediate type, thereby
  loosing as few significant bits as is feasible.
- gdk: Found and fixed another source for the now infamous BBPcheckbats error
  that sometimes occurs at startup of the server.

* Wed Feb 16 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.11-20220325
- clients: Improved the handling of the \r (internal pager) command in mclient.
  It now properly counts the header of table, and when a (very) long
  table is being printed and aborted part way in the built-in pager, not
  all data is transferred to the client (and then discarded).  Instead
  at most 1000 rows are transferred.

* Mon Feb 07 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.9-20220207
- Rebuilt.
- GH#7237: SELECT with concurrent writes rarely returns corrupt data
- GH#7238: query with system function: "index"(varchar, boolean) fails
  with GDK error or assertion failure.
- GH#7241: Replacing a view by a query on the view itself crashes the
  server.

* Thu Feb 03 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.7-20220203
- Rebuilt.
- GH#7228: COMMIT: transaction is aborted because of concurrency
  conflicts, will ROLLBACK instead
- GH#7230: Prepared statement of INSERT with SELECT fails when types difer
- GH#7232: False conflicts when inserting in a not null field

* Mon Jan 24 2022 svetlin <svetlin.stalinov@monetdbsolutions.com> - 11.43.7-20220203
- sql: [This feature was already released in Jan2022 (11.43), but the ChangeLog was missing]
  Added SQL procedures sys.vacuum(sname string, tname string, cname string),
  sys.vacuum(sname string, tname string, cname string, interval int),
  sys.stop_vacuum(sname string, tname string, cname string).
  These can be used to vacuum string columns.

* Tue Jan 18 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.5-20220118
- Rebuilt.

* Thu Jan 13 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.5-20220118
- NT: We now build Windows binaries using Visual Studio 2022.

* Wed Jan 12 2022 Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com> - 11.43.5-20220118
- gdk: Implement string imprints (strimps for short) a pre-filter structure
  for strings in order to accelerate LIKE queries. If a strimp exists
  for a specific string column the strings are pre-filtered, rejecting
  strings that cannot possibly match, before the more expensive and
  accurate matching algorithms run.

* Wed Jan 12 2022 Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com> - 11.43.5-20220118
- sql: Add string imprints to the existing imprints index creation syntax. On
  string column "col" of a table "tbl" marked read only ("ALTER TABLE tbl
  SET READ ONLY") the user can create a string imprint using the syntax:
  "CREATE IMPRINTS INDEX index_name ON tbl(col);".

* Wed Jan 12 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.5-20220118
- MonetDB: A couple of concurrency issues have been fixed.

* Tue Jan 11 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.3-20220111
- Rebuilt.
- GH#7215: ODBC Driver SQLStatistics returns duplicate rows/rows for other
  tables

* Tue Jan 11 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.3-20220111
- gdk: On Windows, files and directories we create now get the attribute
  FILE_ATTIBUTE_NOT_CONTENT_INDEXED, meaning that they should not be
  indexed by indexing or search services.

* Thu Jan  6 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.43.3-20220111
- merovingian: Disabled logging into merovingian.log of next info message types:
  "proxying client <host>:<port> for database '<dbname>' to <url>" and
  "target connection is on local UNIX domain socket, passing on filedescriptor instead of proxying".
  These messages were written to the log file at each connection. In most
  cases this information is not used. The disabling reduces the log file size.

* Mon Jan 03 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- Rebuilt.
- GH#7168: Loosing the documentation
- GH#7180: GROUP BY-subquery crashes MonetDb
- GH#7182: Queries against sys.querylog_catalog, sys.querylog_calls or
  sys.querylog_history fail after restore of a db created using call
  sys.hot_snapshot(R'\path\file.tar');
- GH#7201: Selection of a subquery with a LEFT JOIN returns the wrong
  result set
- GH#7202: DISTINCT does not work when sorting by additional columns

* Wed Dec 15 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.43.1-20220103
- monetdb5: The storage cleanup in the 11.41.5 (Jul2021) release made the OLTP
  optimizer pipeline obsolete, thus it was removed.

* Wed Dec 15 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.43.1-20220103
- sql: With the storage cleanup in the 11.41.5 (Jul2021) release, the ANALYZE
  statement was updated to accomodate those changes. The SAMPLE parameter
  is now ignored because ANALYZE generated statistics used by
  relational operators, are required to be precise.
- sql: In order to mitigate the I/O required to update the 'statistics' table,
  this table is no longer persisted. Alternately, it was changed into a
  computed view every time when queried. The 'stamp' and 'sample' fields
  were removed for the aforementioned reasons. The 'schema', 'table' and
  'column' fields were added for convenience.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- sql: In previous versions there was no check that the INCREMENT BY value of
  a SEQUENCE was not zero.  During the automatic upgrade of a database,
  INCREMENT BY values that are zero are set to one.

* Mon Dec 13 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.43.1-20220103
- sql: The method to compute the 'side_effect' effect property was changed
  for SQL functions defined in the backend engine (eg. ``CREATE FUNCTION
  ... EXTERNAL NAME "module"."function"''). It was changed from being
  computed by the SQL layer to the backend engine itself. As a consequence,
  the computed 'side_effect' value may be different, thus bringing
  incompatibilities. After an upgrade, if a 'side_effect' incompatibility
  arises, either the 'side_effect' value in the backend should be changed or
  the function should be re-created in SQL.

* Mon Dec 13 2021 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.43.1-20220103
- sql: Removed deprecated system view sys.systemfunctions. It was marked
  as deprecated from release Apr2019 (11.33.3).  Use query:
    select id as function_id from sys.functions where system;
  to get the same data as the old view.

* Mon Dec 13 2021 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.43.1-20220103
- sql: Extended SQL system catalog with lookup table sys.fkey_actions and
  view sys.fkeys to provide user friendly querying of existing foreign
  keys and their ON UPDATE and ON DELETE referential action specifications.

* Mon Dec 13 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.43.1-20220103
- sql: Many improvements were done for REMOTE table plans. As a consequence,
  master or slave servers from this feature release are not compatible
  with older releases.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- sql: The view sys.ids has been changed to give more information about the
  objects in the system.  In particular, there is an extra column
  added at the end that indicates whether the object is a system
  object.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- sql: The example modules opt_sql_append and udf are no longer loaded by
  default and no longer part of the binary release.  If installed,
  they can be loaded using the --loadmodule option.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- clients: A new output formatting mode was added to mclient.  Use -fcsv-noquote
  to produce a CSV (comma-separated values) output where the quote
  characters have not been escapes.  This can be useful when producing
  a single column string output that should be saved as is, e.g. when
  using the sys.dump_database() function.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- gdk: Many (most) low level functions that could take a long time (such as
  BATjoin) can now be aborted with a timeout.  When the function takes too
  long, the function will fail, and hence the whole SQL query will fail.
- gdk: At some point in the past, string heaps were created where the
  hash value of the string was stored in the heap before the string.
  This hasn't been used in a long time.  Now the code that could still
  read those old heaps has been removed.  Bats that used the old format
  are converted automatically.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- misc: Reliance on the OpenSSL library has been removed.  OpenSSL was used
  for the hash algorithms it contained (e.g. SHA512 and RIPEMD160) and
  for producing random numbers.  The hash functions have been replaced
  by the original published functions, and random numbers are generated
  using system-specific random sources (i.e. not simply pseudo-random
  number generators).

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- sql: The built-in SQL functions to produce a dump that were added as a
  proof-of-concept in the previous release have been improved and are
  now usable.  Use the query ``SELECT stmt FROM sys.dump_database(FALSE)
  ORDER BY o'' to produce a dump.  The dump code built into mclient and
  msqldump is probably still more efficient, though.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- gdk: Some small interface changes to the atom functions: the atomPut function
  now returns (var_t) -1 on error instead of 0; the atomHeap function
  now returns success or failure as a gdk_return value.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.43.1-20220103
- sql: The sys.epoch function has always been confusing.  There are two
  versions, one with an INTEGER argument, and one with a BIGINT
  argument.  The former accepted values as seconds, whereas the
  latter expected milliseconds.  Also, the construct EXTRACT(EPOCH
  FROM value) returns a BIGINT with millisecond precision.  This has
  now been overhauled.  There is no longer a function sys.epoch with
  BIGINT argument, but instead there is a new function sys.epoch with
  DECIMAL(18,3) argument.  The argument is seconds, but with 3 decimals,
  it provides millisecond accuracy. Also the EXTRACT(EPOCH FROM value)
  now returns a DECIMAL(18,3), again seconds with 3 decimals giving
  millisecond accuracy.  Note that the internal, binary representation
  of DECIMAL(18,3) interpreted as seconds with 3 decimals and BIGINT
  with millisecond precision is exactly the same.

* Mon Dec 13 2021 Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com> - 11.43.1-20220103
- merovingian: Removed the deprecated monetdb commands `profilerstart` and
  `profilerstop`.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.13-20211213
- Rebuilt.
- GH#7163: Multiple sql.mvc() invocations in the same query
- GH#7167: sys.shutdown() problems
- GH#7184: Insert into query blocks all other queries
- GH#7185: GROUPING SETS on groups with aliases provided in the SELECT
  returns empty result
- GH#7186: data files created with COPY SELECT .. INTO 'file.csv' fail to
  be loaded using COPY INTO .. FROM 'file.csv' when double quoted string
  data contains the field values delimiter character
- GH#7191: [MonetDBe] monetdbe_cleanup_statement() with bound NULLs on
  variable-sized types bug
- GH#7196: BATproject2: does not match always
- GH#7198: Suboptimal query plan for query containing JSON access filter
  and two negative string comparisons
- GH#7200: PRIMARY KEY unique constraint is violated with concurrent
  inserts
- GH#7206: Python UDF fails when returning an empty table as a dictionary

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.13-20211213
- clients: Dumping the database now also dumps the read-only and insert-only
  states of tables.

* Mon Dec 13 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.13-20211213
- gdk: Sometimes when the server was restarted, it wouldn't start anymore due
  to an error from BBPcheckbats.  We finally found and fixed a (hopefully
  "the") cause of this problem.

* Thu Oct 28 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.13-20211213
- sql: Number parsing for SQL was fixed.  If a number was immediately followed
  by letters (i.e. without a space), the number was accepted and the
  alphanumeric string starting with the letter was interpreted as an alias
  (if aliases were allowed in that position).

* Thu Sep 30 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.11-20210930
- Rebuilt.

* Tue Sep 28 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.9-20210928
- Rebuilt.

* Mon Sep 27 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.7-20210927
- Rebuilt.
- GH#7140: SQL Query Plan Non Optimal with View
- GH#7162: Extend sys.var_values table
- GH#7165: `JOINIDX: missing '.'` when running distributed join query on
  merged remote tables
- GH#7172: Unexpected query result with merge tables
- GH#7173: If truncate is in transaction then after restart of MonetDB the
  table is empty
- GH#7178: Remote Table Throws Error - createExceptionInternal: !ERROR:
  SQLException:RAstatement2:42000!The number of projections don't match
  between the generated plan and the expected one: 1 != 1200

* Wed Sep 22 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.7-20210927
- gdk: Some deadlock and race condition issues were fixed.
- gdk: Handling of the list of free bats has been improved, leading to less
  thread contention.
- gdk: A problem was fixed where the server wouldn't start with a message from
  BBPcheckbats about files being too small.  The issue was not that the
  file was too small, but that BBPcheckbats was looking at the wrong file.
- gdk: An issue was fixed where a "short read" error was produced when memory
  was getting tight.

* Wed Sep 22 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.7-20210927
- sql: If the server has been idle for a while with no active clients, the
  write-ahead log is now rotated.
- sql: A problem was fixed where files belonging to bats that had been deleted
  internally were not cleaned up, leading to a growing database (dbfarm)
  directory.
- sql: A leak was fixed where extra bats were created but never cleaned up,
  each taking up several kilobytes of memory.

* Tue Aug 17 2021 Ying Zhang <y.zhang@cwi.nl> - 11.41.7-20210927
- sql: [This feature was already released in Jul2021 (11.41.5), but the ChangeLog was missing]
  Grant indirect privileges.  With "GRANT SELECT ON <my_view> TO
  <another_user>"  and "GRANT EXECUTE ON FUNCTION <my_func> TO
  <another_user>", one can grant access to "my_view" and "my_func"
  to another user who does not have access to the underlying database
  objects (e.g. tables, views) used in "my_view" and "my_func".  The
  grantee will only be able to access data revealed by "my_view" or
  conduct operations provided by "my_func".

* Mon Aug 16 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.7-20210927
- sql: Improved error reporting in COPY INTO by giving the line number
  (starting with one) for the row in which an error was found.  In
  particular, the sys.rejects() table now lists the line number of the
  CSV file on which the record started in which an error was found.

* Wed Aug 11 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.7-20210927
- gdk: When appending to a string bat, we made an optimization where the string
  heap was sometimes copied completely to avoid having to insert strings
  individually.  This copying was still done too eagerly, so now the
  string heap is copied less frequently.  In particular, when appending
  to an empty bat, the string heap is now not always copied whole.

* Tue Aug 03 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.5-20210803
- Rebuilt.
- GH#7161: fix priority

* Tue Aug  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.5-20210803
- gdk: A bug in the grouping code has been fixed.

* Tue Aug  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.5-20210803
- sql: The system view sys.ids has been updated to include some more system
  IDs.

* Fri Jul 30 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.3-20210730
- Rebuilt.

* Fri Jul 30 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.3-20210730
- gdk: Hash indexes are no longer maintained at all cost: if the number of
  distinct values is too small compared to the total number of values,
  the index is dropped instead of being maintained during updates.

* Fri Jul 30 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.3-20210730
- sql: The sys.storage() function now only returns meta data, i.e. data that
  can be calculated without access to the column contents.

* Wed Jul 28 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.3-20210730
- sql: Since STREAM tables support is removed, left over STREAM tables are
  dropped from the catalog.

* Fri Jul 23 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- Rebuilt.
- GH#2030: Temporary table is semi-persistent when transaction fails
- GH#7031: I cannot start MoentDb, because the installation path has
  Chinese.
- GH#7055: Table count returning function used inside other function gives
  wrong results.
- GH#7075: Inconsistent Results using CTEs in Large Queries
- GH#7079: WITH table AS... UPDATE ignores the WHERE conditions on table
- GH#7081: Attempt to allocate too much space in UPDATE query
- GH#7093: `current_schema` not in sys.keywords
- GH#7096: DEBUG SQL statement broken
- GH#7115: Jul2021: ParseException while upgrading Oct2020 database
- GH#7116: Jul2021: Cannot create filter functions
- GH#7125: MonetDB Round Function issues in the latest release
- GH#7126: The "lower" and "upper" functions doesn't work for Cyrillic
  alphabet
- GH#7127: Bug report: "write error on stream" that results in mclient
  crash
- GH#7128: Bug report: strange error message "Subquery result missing"
- GH#7129: Bug report: TypeException:user.main[19]:'batcalc.between'
  undefined
- GH#7130: Bug report: TypeException:user.main[396]:'algebra.join'
  undefined
- GH#7131: Bug report: TypeException:user.main[273]:'bat.append' undefined
- GH#7133: WITH <alias> ( SELECT x ) DELETE FROM ... deletes wrong tuples
- GH#7136: MERGE statement is deleting rows if the column is set as NOT
  NULL even though it should not
- GH#7137: Segmentation fault while loading data
- GH#7138: Monetdb Python UDF crashes because of null aggr_group_arr
- GH#7141: COUNT(DISTINCT col) does not calculate correctly distinct values
- GH#7142: Aggregates returning tables should not be allowed
- GH#7144: Type up-casting (INT to BIGINT) doesn't always happen
  automatically
- GH#7146: Query produces this error: !ERROR: Could not find %102.%102
- GH#7147: Internal error occurs and is not shown on the screen
- GH#7148: Select distinct is not working correctly
- GH#7151: Insertion is too slow
- GH#7153: System UDFs lose their indentation - Python functions broken
- GH#7158: Python aggregate UDF returns garbage when run on empty table

* Wed Jul 21 2021 Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com> - 11.41.1-20210723
- mapilib: Add optional MAPI header field which can be used to immediately
  set reply size, autocommit, time zone and some other options, see
  mapi.h.  This makes client connection setup faster.  Support has been
  added to mapilib, pymonetdb and the jdbc driver.

* Wed Jul 21 2021 Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com> - 11.41.1-20210723
- sql: Fix a warning emitted by some implementations of the tar(1) command
  when unpacking hot snapshot files.
- sql: support reading the concatenation of compressed files as a single
  compressed file.
- sql: COPY BINARY overhaul.  Allow control over binary endianness using
  COPY [ (BIG | LITTLE | NATIVE) ENDIAN] BINARY syntax.  Defaults to
  NATIVE.  Strings are now \0 terminated rather than \n.  Support for
  BOOL, TINYINT, SMALLINT, INT, LARGEINT, HUGEINT, with their
  respective "INTMIN" values as the NULL representation; 32 and 64 bit
  FLOAT/REAL, with NaN as the NULL representation; VARCHAR/TEXT, JSON
  and URL with \x80 as the NULL representation; UUID as fixed width 16
  byte binary values, with (by default) all zeroes as the NULL
  representation; temporal type structs as defined in copybinary.h
  with any invalid value as the NULL representation.

* Tue Jul 20 2021 Niels Nes <niels@cwi.nl> - 11.41.1-20210723
- sql: In the Jul2021 release the storage and transaction layers have
  undergone major changes.  The goal of these changes is robust
  performance under inserts/updates and deletes and lowering the
  transaction startup costs, allowing faster (small) queries.  Where
  the old transaction layer duplicated a lot of data structures during
  startup, the new layer shares the same tree.  Using object
  timestamps the isolation of object is guaranteed.  On the storage
  side the timestamps indicate whether a row is visible (deleted or
  valid), to a transaction as well.  The changes also give some slight
  changes on the perceived transactional behavior.  The new
  implementation uses shared structures among all transactions, which
  do not allow multiple changes of the same object.  And we then
  follow the principle of the first writer wins, i.e., if a
  transaction creates a table with name 'table_name', and concurrently
  one other transaction does the same the later of the two will fail
  with a concurrency conflict error message (even if the first writer
  never commits).  We expect most users not to notice this change, as
  such schema changes aren't usually done concurrently.

* Tue Jul 20 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- clients: The MonetDB stethoscope has been removed.  There is now a separate
  package available with PIP (monetdb_stethoscope) or as an RPM or DEB
  package (stethoscope) from the monetdb.org repository.

* Tue Jul 20 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- gdk: A new type, called msk, was introduced.  This is a bit mask type.
  In a bat with type msk, each row occupies a single bit, so 8 rows are
  stored in a single byte.  There is no NULL value for this type.
- gdk: The function of the BAT iterator (type BATiter, function bat_iterator)
  has been expanded.  The iterator now contains more information about
  the BAT, and it contains a pointer to the heaps (theap and tvheap)
  that are stable, at least in the sense that they will remain available
  even when parallel threads update the BAT and cause those heaps to grow
  (and therefore possibly move in memory).  A call to bat_iterator must
  now be accompanied by a call to bat_iterator_end.

* Mon Jun  7 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- monetdb5: When using the --in-memory option, mserver5 will run completely in
  memory, i.e. not create a database on disk.  The server can still be
  connected to using the name of the in-memory database.  This name is
  "in-memory".

* Tue May 11 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- sql: There is now a function sys.current_sessionid() to return the session
  ID of the current session.  This ID corresponds with the sessionid in
  the sys.queue() result.

* Mon May 10 2021 Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com> - 11.41.1-20210723
- merovingian: Deprecate `profilerstart` and `profilerstop` commands. Since
  stethoscope is a separate project (https://github.com/MonetDBSolutions/monetdb-pystethoscope)
  the installation directory is not standard anymore. `profilerstart` and
  `profilerstop` commands assume that the stethoscope executable is in the
  same directory as `mserver5`. This is no longer necessarily true since
  stethoscope can now be installed in a python virtual environment. The
  commands still work if stethoscope is installed using the official
  MonetDB installers, or if a symbolic link is created in the directory
  where `mserver5` is located.

* Fri May  7 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- odbc: A typo that made the SQLSpecialColumns function unusable was fixed.

* Mon May  3 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.41.1-20210723
- sql: Merge statements could not produce correct results on complex join
  conditions, so a renovation was made. As a consequence, subqueries
  now have to be disabled on merge join conditions.

* Mon May  3 2021 svetlin <svetlin.stalinov@monetdbsolutions.com> - 11.41.1-20210723
- sql: preserve in-query comments

* Mon May  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- merovingian: The exittimeout value can now be set to a negative value (e.g. -1) to
  indicate that when stopping the dbfarm (using monetdbd stop dbfarm),
  any mserver5 processes are to be sent a termination signal and then
  waited for until they terminate.  In addition, if exittimeout is greater
  than zero, the mserver5 processes are sent a SIGKILL signal after the
  specified timeout and the managing monetdbd is sent a SIGKILL signal
  after another five seconds (if it didn't terminate already).  The old
  situation was that the managing monetdbd process was sent a SIGKILL
  after 30 seconds, and the mserver5 processes that hadn't terminated
  yet would be allowed to continue their termination sequence.

* Mon May  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- gdk: Implemented function BUNreplacemultiincr to replace multiple values
  in a BAT in one go, starting at a given position.
- gdk: Implemented new function BUNreplacemulti to replace multiple values
  in a BAT in one go, at the given positions.
- gdk: Removed function BUNinplace, just use BUNreplace, and check whether
  the BAT argument is of type TYPE_void before calling if you don't
  want to materialize.

* Mon May  3 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.41.1-20210723
- sql: Use of CTEs inside UPDATE and DELETE statements are now more
  restrict. Previously they could be used without any extra specification
  in the query (eg. with "v1"("c1") as (...) delete from "t"
  where "t"."c1" = "v1"."c1"), however this was not conformant with the
  SQL standard. In order to use them, they must be specified in the FROM
  clause in UPDATE statements or inside a subquery.

* Mon May  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- gdk: Implemented a function BUNappendmulti which appends an array of values
  to a BAT.  It is a generalization of the function BUNappend.

* Mon May  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- gdk: Changed the interface of the atom read function.  It now requires an
  extra pointer to a size_t value that gives the current size of the
  destination buffer, and when that buffer is too small, it receives the
  size of the reallocated buffer that is large enough.  In any case,
  and as before, the return value is a pointer to the destination buffer.

* Mon May  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- gdk: Environment variables (sys.env()) must be UTF-8, but since they can
  contain file names which may not be UTF-8, there is now a mechanism
  to store the original values outside of sys.env() and store
  %-escaped (similar to URL escaping) values in the environment.  The
  key must still be UTF-8.

* Mon May  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- gdk: We now save the location of the min and max values when known.

* Mon May  3 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.41.1-20210723
- sql: Added 'schema path' property to user, specifying a list of schemas
  to be searched on to find SQL objects such as tables and
  functions. The scoping rules have been updated to support this feature
  and it now finds SQL objects in the following order:
   1. On occasions with multiple tables (e.g. add foreign key constraint,
      add table to a merge table), the child will be searched on the
      parent's schema.
   2. For tables only, declared tables on the stack.
   3. 'tmp' schema if not listed on the 'schema path'.
   4. Session's current schema.
   5. Each schema from the 'schema path' in order.
   6. 'sys' schema if not listed on the 'schema path'.
  Whenever the full path is specified, ie "schema"."object", no search will
  be made besides on the explicit schema.
- sql: To update the schema path ALTER USER x SCHEMA PATH y; statement was added.
  [SCHEMA PATH string] syntax was added to the CREATE USER statement.
  The schema path must be a single string where each schema must be between
  double quotes and separated with a single comma, e.g. '"sch1","sch2"'
  For every created user, if the schema path is not given, '"sys"' will be
  the default schema path.
- sql: Changes in the schema path won't be reflected on currently connected users,
  therefore they have to re-connect to see the change. Non existent schemas
  on the path will be ignored.

* Mon May  3 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.41.1-20210723
- sql: Leftover STREAM table definition from Datacell extension was removed
  from the parser. They had no effect anymore.

* Mon May  3 2021 Sjoerd Mullender <sjoerd@acm.org> - 11.41.1-20210723
- monetdb5: By using the option "--dbextra=in-memory", mserver5 can be instructed
  to keep transient BATs completely in memory.

