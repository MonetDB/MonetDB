* Fri Jun 16 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.47.1-20230616
- Rebuilt.
- GH#7311: Missing `REGEXP_REPLACE` function.
- GH#7348: Subquery inside case always evaluated

* Tue Jun  6 2023 Lucas Pereira <lucas.pereira@monetdbsolutions.com> - 11.47.1-20230616
- sql: Function 'similarity(x string, y string)' marked as deprecated and will
  be removed in the next release.

* Tue Jun  6 2023 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.47.1-20230616
- odbc: Extended Windows MonetDB ODBC Data Source setup program with option
  to specify a logfile to enable tracing of ODBC Driver API calls.
  On other platforms users can edit the  odbc.ini  file and add a line:
  logfile=/home/username/odbctrace.log
  When a logfile is specified it will start logging the ODBC Driver API calls
  to the logfile after a new connection is made via SQLConnect() or
  SQLDriverConnect() or SQLBrowseConnect().
  Note that enabling ODBC logging will slow down the performance of ODBC
  applications, so enable it only for analysing ODBC Driver problems.

* Tue Jun  6 2023 Lucas Pereira <lucas.pereira@monetdbsolutions.com> - 11.47.1-20230616
- sql: New functionality for string matching and similarity: startswith,
  endswith, contains, Levenshtein distance and Jaro-Winkler similarity.
  The functions startswith, endswith and contains have a version where
  a case insentive flag can be used.
  Also, there are new custom join functionality for startswith, endswith,
  contains, Levenshtein distance and Jaro-Winkler similarity.
- sql: Renamed previous Levenshtein distance to Damerau-Levenshtein distance.
- sql: New string function that transform from UTF-8 encoding to Ascii called
  asciify.

* Tue Jun  6 2023 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.47.1-20230616
- odbc: Enhanced SQLTables() by adding support for table type names: 'BASE TABLE',
  'GLOBAL TEMPORARY' and 'LOCAL TEMPORARY' in parameter TableType. These are
  synonyms of: 'TABLE', 'GLOBAL TEMPORARY TABLE' and 'LOCAL TEMPORARY TABLE'.

* Tue Jun  6 2023 Lucas Pereira <lucas.pereira@monetdbsolutions.com> - 11.47.1-20230616
- sql: Session timeout feature improvement to start evaluating from the moment
  the procedure is called, instead of beginning of the session.

* Tue Jun  6 2023 Lucas Pereira <lucas.pereira@monetdbsolutions.com> - 11.47.1-20230616
- sql: Queries stopped with the stop procedure are now marked as 'aborted'
  'finished'.

* Tue Jun  6 2023 Niels Nes <niels@monetdbsolutions.com> - 11.47.1-20230616
- monetdb5: The MAL debugger code has been removed.

* Tue Jun  6 2023 Niels Nes <niels@monetdbsolutions.com> - 11.47.1-20230616
- sql: The DEBUG statement has been removed.

* Tue Jun  6 2023 Lucas Pereira <lucas.pereira@monetdbsolutions.com> - 11.47.1-20230616
- sql: SQL function sys.queue() overloaded with sys.queue(username string),
  SYSADMIN only, allowing to filter the global queue by username or
  use 'ALL' to retrieve the global queue. Calling the function without
  arguments returns the queue for the current user.
- sql: SQL procedures sys.pause(tag bigint), sys.resume(tag bigint),
  sys.stop(tag bigint) overloaded with sys.pause(tag bigint, username string),
  sys.resume(tag bigint, username string) and sys.stop(tag bigint, username
  string), SYSADMIN only, allowing to pause, resume and stop query
  executions by TAG, USERNAME. The call without arguments is a public
  procedure giving access to users to pause, resume and stop their
  own query executions.

* Tue Jun  6 2023 svetlin <svetlin.stalinov@monetdbsolutions.com> - 11.47.1-20230616
- sql: Added support of ODBC escape sequences syntax to SQL layer. Now all clients
  (including ODBC/JDBC/pymonetdb) can use them without further processing.
  For details on ODBC escape sequences syntax see:
  https://learn.microsoft.com/en-us/sql/odbc/reference/appendixes/odbc-escape-sequences

* Tue Jun  6 2023 Aris Koning <aris.koning@monetdbsolutions.com> - 11.47.1-20230616
- merovingian: The monetdb get, inherit, lock and release commands are extended with
  ‘apply-to-all’ syntax similar to related functionality:
  Usage: monetdb set property=value [database ...]
  sets property to value for the given database(s), or all
  Usage: monetdb inherit property [database ...]
  unsets property, reverting to its inherited value from the
  default configuration for the given database(s), or all
  Usage: monetdb lock [-a] database [database...]
  Puts the given database in maintenance mode.
  Options:
    -a  locks all known databases
  Usage: monetdb release [-a] database [database ...]
  Brings back a database from maintenance mode.
  Options:
    -a  releases all known databases

* Tue Jun  6 2023 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.47.1-20230616
- sql: It is no longer allowed to create a merge table or remote table or
  replica table or unlogged table in schema "tmp". The tmp schema is
  reserved for temporary objects only, such as local/global temp tables.

* Tue Jun  6 2023 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.47.1-20230616
- sql: System views sys.dependency_tables_on_functions and
  dependency_views_on_functions have been extended with column: function_id.

* Tue Jun  6 2023 Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com> - 11.47.1-20230616
- mapilib: Deprecate mapi_setfilecallback() in favor of mapi_setfilecallback2() which
  can handle binary downloads. For the time being, the old callback still works.

* Tue Jun  6 2023 Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com> - 11.47.1-20230616
- sql: When loading data using COPY BINARY INTO, apply default values instead of just
  inserting NULLs.
- sql: When loading data using COPY BINARY INTO, validate DECIMAL(prec,scale) and
  VARCHAR(n) column width.
- sql: When loading data using COPY BINARY INTO, string used to have their line
  endings converted from CR LF to LF. Do not do this, it is the responsibility
  of the client.
- sql: Implemented dumping binary data using COPY SELECT ... INTO BINARY <file(s)>.

* Tue Jun  6 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.47.1-20230616
- sql: Removed code for Workload Capture and Replace, including system schemas
  "wlc" and "wlr" and the objects in those schemas. The code was
  experimental, and it didn't work out. A different approach will be taken.

* Tue Jun 06 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.17-20230606
- Rebuilt.

* Tue Jun  6 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.17-20230606
- sql: Fixed a regression introduced in the previous build: when a table is
  dropped in the same transaction where it was created, the data wasn't
  removed from disk.

* Tue May 30 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- Rebuilt.
- GH#7360: Aggregates returning string crash
- GH#7361: Table data is lost on DB restart, but only when a table has
  2147483647 or more rows.

* Tue May 16 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- gdk: Warnings and informational messages are now sent to stdout instead of
  stderr, which means that monetdbd will now log them with the tag MSG
  instead of ERR.

* Tue Apr 25 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- gdk: Fixed parsing of the BBP.dir file when BAT ids grow larger than 2**24
  (i.e. 100000000 in octal).

* Thu Apr 20 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- gdk: Fixed yet another occurrence of a missing .tailN file.  This one could
  happen if a string bat was appended to in stages so that between appends
  the column was committed.  If an append caused both a realloc of the
  tail heap because it was getting longer and a realloc because it got
  wider, the file might get removed before the GDK level commit happened.

* Mon Apr 17 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- clients: If the number of rows in mclient is set to 0 (using either --rows=0
  option or \r0 on the mclient command line), the internal pager is used
  and it then uses the height of the terminal window.

* Wed Apr  5 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- sql: When creating a hot snapshot, allow other clients to proceed, even
  with updating queries.

* Fri Mar 24 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- gdk: When processing the WAL, if a to-be-destroyed object cannot be found,
  don't stop, but keep processing the rest of the WAL.

* Fri Mar 24 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- monetdb5: Client connections are cleaned up better so that we get fewer instances
  of clients that cannot connect.

* Fri Mar 24 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- sql: Increased the size of a variable counting the number of changes made
  to the database (e.g. in case more than 2 billion rows are added to
  a table).
- sql: Improved cleanup after failures such as failed memory allocations.

* Mon Feb 20 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- gdk: A race condition was fixed where certain write-ahead log messages
  could get intermingled, resulting in a corrupted WAL file.
- gdk: If opening of a file failed when it was supposed to get memory mapped,
  an incorrect value was returned to indicate the failure, causing
  crashes later on.  This has been fixed.

* Thu Feb 16 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- gdk: A race condition was fixed that could result in a missing tail file
  for a string bat (i.e. a file with .tail1, .tail2, or .tail4 extension).

* Mon Feb 13 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- gdk: When saving a bat failed for some reason during a low-level commit,
  this was logged in the log file, but the error was then subsequently
  ignored, possibly leading to files that are too short or even missing.
- gdk: The write-ahead log (WAL) is now rotated a bit more efficiently by
  doing multiple log files in one go (i.e. in one low-level transaction).

* Mon Feb 13 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.15-20230530
- sql: An insert into a table from which a column was dropped in a parallel
  transaction was incorrectly not flagged as a transaction conflict.

* Thu Jan 26 2023 Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com> - 11.45.15-20230530
- sql: Fix bug where boolean NULLs were not recognized by COPY BINARY INTO

* Tue Jan 24 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- Rebuilt.
- GH#7343: GDKmmap requesting 0 virtual memory
- GH#7347: A bug where an exception occurs even though it is a query with
  normal syntax (Merge Table)

* Mon Jan 23 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- sql: Fixed a regression where when there are multiple concurrent
  transactions, the dependencies weren't checked properly.

* Mon Jan 16 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- gdk: Fixed a race condition that could lead to a bat being added to the SQL
  catalog but nog being made persistent, causing a subsequent restart
  of the system to fail (and crash).

* Wed Jan  4 2023 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- odbc: A crash in the ODBC driver was fixed when certain unsupported functions
  where used in a {fn ...} escape.

* Wed Dec 21 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- odbc: Prepare of a query where the sum of the number of parameters (question
  marks in the query) and the number of output columns is larger than
  100 could fail with an unexpected error.  This has been fixed.

* Fri Dec 16 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- sql: Added some error checking to prevent crashes.  Errors would mainly
  occur under memory pressure.

* Wed Dec 14 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- gdk: Fixed a race condition where a hash could have been created on a
  bat using the old bat count while in another thread the bat count
  got updated.  This would make the hash be based on too small a size,
  causing failures later on.

* Wed Dec 14 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- sql: Fixed cleanup after a failed allocation where the data being cleaned
  up was unitialized but still used as pointers to memory that also had
  to be freed.

* Thu Dec  8 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- gdk: When extending a bat failed, the capacity had been updated already and
  was therefore too large.  This could then later cause a crash.  This has
  been fixed by only updating the capacity if the extend succeeded.

* Wed Dec  7 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.13-20230124
- sql: Fixed a double cleanup after a failed allocation in COPY INTO.  The
  double cleanup could cause a crash due to a race condition it enabled.

* Mon Dec 05 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.11-20221205
- Rebuilt.
- GH#7342: column which datatype is double couldn't group or aggregation
  in version 11.45.7

* Mon Nov 28 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.9-20221128
- Rebuilt.
- GH#7330: Creating temporary table fails after reconnect
- GH#7333: DLLs fail to load on Windows with accented characters in path
- GH#7336: Selecting from a literal-value table returns wrong values
- GH#7339: MonetDB corrupted state after SIGKILL

* Wed Nov  9 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.9-20221128
- clients: Also dump the new options of CREATE USER.

* Wed Nov  9 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.9-20221128
- gdk: On Windows, use the wide-character interface of system calls when
  dealing with the environment (i.e. file names and getenv()).
- gdk: Memory leaks have been fixed.
- gdk: Improved maintenance of the estimated number of distinct values in BATs.
  The estimate helps in deciding which low-level algorithm to use.

* Wed Nov  9 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.9-20221128
- monetdb5: Fixed a crash when the server runs out of client contexts (i.e. more
  concurrent clients than the server is configured to handle).
- monetdb5: A race condition in the SHA hash code was fixed which resulted in
  occasional failed connection attempts when they occurred concurrently.

* Wed Nov  9 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.9-20221128
- sql: Improved the handling of the "idle" value in the sys.sessions function
  and view.

* Wed Oct 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.9-20221128
- monetdb5: Fix a bug where the MAL optimizer would use the starttime of the
  previous query to determine whether a query timeout occurred.

* Thu Oct 13 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.9-20221128
- odbc: Fixed issue with generated raw strings prefix when ODBC driver is used
  against a server older than Jun2020 (11.37).

* Wed Oct 12 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.9-20221128
- merovingian: Stop logging references to monetdbd's logfile in said logfile.

* Mon Oct 10 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.9-20221128
- gdk: Offset heaps (.tailN files) were growing too fast and unnecessarily
  under certain conditions.  This has been fixed.  Also, when such too
  large files are now loaded into the system, it is recognized they are
  too large and they are truncated to a more reasonable size.

* Fri Sep 23 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.7-20220923
- Rebuilt.

* Thu Sep 22 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.5-20220922
- Rebuilt.

* Wed Sep 21 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.3-20220921
- Rebuilt.

* Wed Sep 21 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.3-20220921
- clients: Dumping of function GRANTs was improved by adding the types of the
  function (and procedure) arguments.

* Wed Sep 21 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.3-20220921
- sql: The function sys.tracelog is now executable by anyone.  The function
  (and view of the same name) returns the tracing information of a query
  that was prepended with the TRACE keyword.

* Mon Sep 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.3-20220921
- gdk: Fixed a bug in ORDER BY with both NULLS LAST and LIMIT when the ordering
  was on an interger or integer-like column and NULL values are present.

* Mon Sep 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.3-20220921
- sql: Fixed a bug in COPY BINARY INTO where the input wasn't checked
  thoroughly enough.

* Tue Sep 13 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.3-20220921
- gdk: The median_avg and quantile_avg returned bogus results in the
  non-grouped case (i.e. something like SELECT sys.median_avg(i) FROM t).

* Tue Sep 13 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- Rebuilt.
- GH#6982: Wrong constraint name in error message of constraint violation
- GH#7209: Configuration option for merovingian.log
- GH#7225: Invalid memory access when extending a BAT during appends
- GH#7227: Date calculations, bug or feature
- GH#7273: Concurrent reads and writes causes "BATproject2: does not match
  always" error
- GH#7282: call sys.dump_table_data(); fails
- GH#7285: C-UDFs: aggr_group.count has wrong value (number of input rows
  instead of number of groups).
- GH#7296: Implictly cast a timestamp string to DATE when appropriate
- GH#7297: Parsing partial dates behaves unpredictable
- GH#7306: ODBC Driver Assertion `stmt->Dbc->FirstStmt' Failed
- GH#7314: ODBC Driver : please mask/hide password
- GH#7318: distinct in a subquery not working properly

* Thu Sep  1 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Improved SQLSetPos(). It now allows RowNumber to be 0 when Operation
  is SQL_POSITION.

* Fri Aug 26 2022 Lucas Pereira <lucas.pereira@monetdbsolutions.com> - 11.45.1-20220913
- sql: Extended the built-in profiler to emit non-MAL events related to query
  compilation, optimization, transactions and client connections. To
  minimize, simplify and optimize the process of generating and processing
  profiler output, only the events marking the end of an operation are
  emitted in most cases and the emitted json messages themselves are
  trimmed down to their essential fields. Furthermore, the MAL instruction
  profiler.openstream now requires an integer as a single argument, "0" for
  default behaviour or "4" to turn on the profiler in minimal mode,
  which causes it to only emit general events and excludes individual MAL
  instruction execution events from the profiler streams.
  The MAL instruction profiler.openstream with zero arguments is deprecated.

* Thu Aug 25 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- sql: Extended system view sys.users with columns: schema_path, max_memory,
  max_workers, optimizer and default_role.
  Extended system table sys.db_user_info with columns: schema_path,
  max_memory, max_workers, optimizer, default_role and password.
  The password is encrypted. This table can only be queried when the
  user has been granted the select privilege from monetdb.

* Wed Aug 24 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- gdk: The median_avg and quantile_avg returned bogus results in the
  non-grouped case (i.e. something like SELECT sys.median_avg(i) FROM t).

* Wed Aug 24 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- merovingian: In certain cases (when an mserver5 process exits right after producing
  a message) the log message was logged over and over again, causing
  monetdbd to use 100% CPU.  This has been fixed.

* Fri Aug 19 2022 svetlin <svetlin.stalinov@monetdbsolutions.com> - 11.45.1-20220913
- sql: CREATE USER statement has been extended to take more optional arguments
  like MAX_MEMORY, MAX_WORKERS, OPTIMIZER, DEFAULT ROLE. ALTER USER statement
  has also been extended with DEFAULT ROLE.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- sql: A new function sys.url_extract_host(string, bool) which returns the
  host name from the given URL has been implemented.  The bool argument,
  if true, causes the www. prefix to be removed.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- gdk: The abort_on_error parameter of all GDK-level functions has been removed.
  Errors (e.g. overflow) now also results in an error.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- sql: The user authentication tables are now administered by the SQL layer
  instead of the MAL layer.  This means that changing (adding, dropping,
  altering) user and role information is now transaction-safe.

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Improved ODBC Error/Warning messages. They now include the name of the
  Data Source as required by the ODBC specification:
  [MonetDB][ODBC driver VERSION][data-source-name] data-source-supplied-text

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Improved MonetDB ODBC Data Source Configuration dialog on MS Windows by
  hiding the typed in password text. It now shows dots for the characters.
  This fixes request  https://github.com/MonetDB/MonetDB/issues/7314

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Changed output of TABLE_CAT or PROCEDURE_CAT result columns as returned
  by ODBC functions: SQLTables(), SQLColumns(), SQLPrimaryKeys(),
  SQLForeignKeys(), SQLStatistics(), SQLTablePrivileges(),
  SQLColumnPrivileges(), SQLProcedures() and SQLProcedureColumns().
  They used to return the static database name but now they will return
  NULL as MonetDB does not support CATALOG objects or qualifiers.

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Removed the possibility to retrieve or set the CURRENT_CATALOG
  via SQLGetConnectAttr(hdbc, SQL_ATTR_CURRENT_CATALOG, ...) and
  SQLSetConnectAttr(hdbc, SQL_ATTR_CURRENT_CATALOG, ...) as MonetDB does
  not support CATALOG objects (no SQL support for: CREATE CATALOG abc
  or SET CATALOG abc) and therefore there is no CURRENT_CATALOG.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- gdk: Implemented BC/AD (and BCE/CE) suffixes when parsing dates.

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Corrected ODBC functions SQLTablePrivileges() and SQLColumnPrivileges()
  for local temporary tables located in schema tmp. They did not return
  any rows when the temporary table had privileges set. Now they do return
  rows as expected.

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Improved SQLProcedures() and SQLProcedureColumns(). They now list
  information also for all built-in system procedures and functions, not
  only those created via SQL. Also corrected the value of ORDINAL_POSITION
  for scalar function arguments. It would start at 2 instead of 1.
- odbc: Extended output of SQLProcedures() and SQLProcedureColumns() resultsets
  with an extra column SPECIFIC_NAME. This column contains the name which
  uniquely identifies this procedure or function within its schema. As
  MonetDB supports overloaded procedures and functions, the combination of
  PROCEDURE_SCHEM and PROCEDURE_NAME is not enough to uniquely identify
  a procedure or function. This extra column allows you to correctly
  match the corresponding rows returned by SQLProcedureColumns() with the
  specific rows of SQLProcedures(). This extra column SPECIFIC_NAME is
  implemented similar to the JDBC DatabaseMetaData methods getProcedures()
  and getProcedureColumns().

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: For SQLForeignKeys() corrected the output of columns UPDATE_RULE and
  DELETE_RULE. These columns used to always return 3 (= SQL_NO_ACTION)
  but now they will report the action codes as specified in the FOREIGN KEY
  CONSTRAINT construction.

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Fixed issue in function SQLProcedureColumns(). When the argument ColumnName
  was not empty it generated an invalid SQL query which failed with error:
   SELECT: no such column 'c.name'. This has been resolved.
- odbc: Corrected implementation of SQLGetInfo(hdbc, SQL_MAX_DRIVER_CONNECTIONS, ...).
  It used to always return 64. Now it returns the value from the MonetDB server.
- odbc: Changed the column names case of the result sets as returned by
  SQLTables(), SQLColumns(), SQLSpecialColumns(), SQLPrimaryKeys(),
  SQLForeignKeys(), SQLStatistics(), SQLTablePrivileges(),
  SQLColumnPrivileges(), SQLProcedures() and SQLProcedureColumns(). The
  column names where all in lowercase but the ODBC specification defines
  them in uppercase, so changed them to uppercase.

* Fri Aug 19 2022 Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com> - 11.45.1-20220913
- gdk: The interface for using strimps has not changed (create an imprint index
  on a column of a read only table), but now construction happens at the
  beginning of the first query that uses the strimp and is performed in
  a multithreaded manner.

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Corrected SQLSpecialColumns(..., SQL_BEST_ROWID, ...). Previously it only
  returned rows when the table had a primary key. Now it also returns
  rows when a table has a unique constraint.
- odbc: Corrected SQLStatistics(..., SQL_INDEX_ALL, ...). Previously it only
  returned rows when the table had a primary or unique key. Now it also
  returns rows for indices which are not based on a key.
- odbc: Corrected SQLStatistics(..., SQL_ENSURE). It now returns CARDINALITY
  information for columns based on a primary/unique key. Previously it
  always returned NULL for the CARDINALITY result column.

* Fri Aug 19 2022 Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com> - 11.45.1-20220913
- gdk: Implemented the use of strimps for NOT LIKE queries. The idea is to
  run the corresponding LIKE query using strimps and take the complement
  of the result. We keep around NULL values both during strimp filtering
  and during the pcre part of the LIKE query so that they get discarded
  automatically when we take the complement.

* Fri Aug 19 2022 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.45.1-20220913
- monetdb5: Disabled volcano pipeline due to known issues.

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- odbc: Corrected ODBC functions SQLPrimaryKeys(), SQLSpecialColumns() and
  SQLStatistics() for local temporary tables located in schema tmp. They did
  not return any rows when the temp table had a primary or unique key or
  index. Now they do return rows as expected.

* Fri Aug 19 2022 Nuno Faria <nunofpfaria@gmail.com> - 11.45.1-20220913
- sql: Added the UNLOGGED TABLE feature.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- gdk: The function BBPkeepref now gets a BAT pointer as argument instead of
  a bat id.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- gdk: Get rid of macro Tsize, use ->twidth instead.
- gdk: Get rid of macro BUNlast, just use BATcount instead.

* Fri Aug 19 2022 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.45.1-20220913
- merovingian: Added "loglevel" property for monetdbd logging (to merovingian.log).
  The loglevel can be set to: error or warning or information or debug.
  The loglevel property can be changed dynamically via command:
   monetdbd set loglevel=warning /path/to/dbfarm
  Default the loglevel is set to: information
  When loglevel is error, only errors are logged.
  When loglevel is warning, errors and warnings are logged.
  When loglevel is information, errors and warnings and information messages
  are logged.  When loglevel is debug, all messages are logged.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- merovingian: There is now a loadmodules property that can be used to add --loadmodule
  arguments to the mserver5 command line.  See the monetdb and mserver5
  manual pages.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- sql: Removed functions sys.index and sys.strings.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- gdk: The BLOB type has been moved into the GDK layer.

* Fri Aug 19 2022 Sjoerd Mullender <sjoerd@acm.org> - 11.45.1-20220913
- gdk: When adding or subtracting months from a date or timestamp value,
  clamp the result to the calculated month instead of wrapping to the
  beginning of the next month.  See bug 7227.

