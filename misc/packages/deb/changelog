monetdb (11.43.25) unstable; urgency=low

  * Rebuilt.
  * GH#7336: Selecting from a literal-value table returns wrong values

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 21 Nov 2022 17:58:42 +0100

monetdb (11.43.25) unstable; urgency=low

  * gdk: Memory leaks have been fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 9 Nov 2022 17:58:42 +0100

monetdb (11.43.25) unstable; urgency=low

  * monetdb5: A race condition in the SHA hash code was fixed which resulted in
    occasional failed connection attempts when they occurred concurrently.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 9 Nov 2022 17:58:42 +0100

monetdb (11.43.25) unstable; urgency=low

  * monetdb5: Fix a bug where the MAL optimizer would use the starttime of the
    previous query to determine whether a query timeout occurred.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 19 Oct 2022 17:58:42 +0100

monetdb (11.43.25) unstable; urgency=low

  * merovingian: Stop logging references to monetdbd's logfile in said logfile.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 12 Oct 2022 17:58:42 +0100

monetdb (11.43.25) unstable; urgency=low

  * gdk: Offset heaps (.tailN files) were growing too fast and unnecessarily
    under certain conditions.  This has been fixed.  Also, when such too
    large files are now loaded into the system, it is recognized they are
    too large and they are truncated to a more reasonable size.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 10 Oct 2022 17:58:42 +0100

monetdb (11.43.23) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 03 Oct 2022 13:43:58 +0200

monetdb (11.43.23) unstable; urgency=low

  * gdk: Fixed a bug in ORDER BY with both NULLS LAST and LIMIT when the ordering
    was on an interger or integer-like column and NULL values are present.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 19 Sep 2022 13:43:58 +0200

monetdb (11.43.23) unstable; urgency=low

  * sql: Fixed a bug in COPY BINARY INTO where the input wasn't checked
    thoroughly enough.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 19 Sep 2022 13:43:58 +0200

monetdb (11.43.23) unstable; urgency=low

  * gdk: The median_avg and quantile_avg returned bogus results in the
    non-grouped case (i.e. something like SELECT sys.median_avg(i) FROM t).

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 24 Aug 2022 13:43:58 +0200

monetdb (11.43.23) unstable; urgency=low

  * merovingian: In certain cases (when an mserver5 process exits right after producing
    a message) the log message was logged over and over again, causing
    monetdbd to use 100% CPU.  This has been fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 24 Aug 2022 13:43:58 +0200

monetdb (11.43.21) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 19 Aug 2022 11:09:51 +0200

monetdb (11.43.19) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 15 Aug 2022 12:53:37 +0200

monetdb (11.43.17) unstable; urgency=low

  * Rebuilt.
  * GH#7040: Memory leak detected for MAPI interface
  * GH#7298: Irresponsive database server after reading incomplete SQL
    script.
  * GH#7308: Race condition in MVCC transaction management

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 11 Aug 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * gdk: A bug was fixed when upgrading a database from the Oct2020 releases
    (11.39.X) or older when the write-ahead log (WAL) was not empty and
    contained instructions to create new tables.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 10 Aug 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * gdk: When destroying a bat, make sure there are no files left over in
    the BACKUP directory since they can cause problems when the bat id
    gets reused.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 2 Aug 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * gdk: Fixed an off-by-one error in the logger which caused older log files
    to stick around longer in the write-ahead log than necessary.
  * gdk: When an empty BAT is committed, skip writing (and synchronizing to
    disk) the heap (tail and theap) files and write 0 for their sizes to
    the BBP.dir file.  When reading the BBP.dir file, if an empty BAT is
    encountered, set the sizes of those files to 0.  This fixes potential
    issues during startup of the server (BBPcheckbats reporting errors).

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 28 Jul 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * merovingian: When multiple identical messages are written to the log, write the
    first one, and combine subsequent ones in a single message.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 23 Jun 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * gdk: Make sure heap files of transient bats get deleted when the bat is
    destroyed.  If the bat was a partial view (sharing the vheap but not
    the tail), the tail file wasn't deleted.
  * gdk: Various changes were made to satisfy newer compilers.
  * gdk: The batDirtydesc and batDirtyflushed Boolean values have been deprecated
    and are no longer used.  They were both holdovers from long ago.
  * gdk: Various race conditions (data races) have been fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 22 Jun 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * merovingian: Fixed a leak where the log file wasn't closed when it was reopened
    after a log rotation (SIGHUP signal).
  * merovingian: Try to deal more gracefully with "inherited" mserver5 processes.
    This includes not complaining about an "impossible state", and allowing
    such processes to be stopped by the monetdbd process.
  * merovingian: When a transient failure occurs during processing of a new connection to
    the monetdbd server, sleep for half a second so that if the transient
    failure occurs again, the log file doesn't get swamped with error
    messages.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 22 Jun 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * monetdb5: Various race conditions (data races) have been fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 22 Jun 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * clients: Implemented dump of global grants, that is to say, grants for COPY INTO
    and COPY FROM which grant permission to users to write to or read from
    files on the server (COPY INTO queries without the ON CLIENT option).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 10 Jun 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * clients: Fixed a bug where when the semicolon at the end of a COPY INTO query
    that reads from STDIN is at exactly a 10240 byte boundary in a file,
    the data isn't read as input for the COPY INTO but instead as a new
    SQL query.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 31 May 2022 11:51:02 +0200

monetdb (11.43.17) unstable; urgency=low

  * gdk: All accesses to the BACKUP directory need to be protected by the
    same lock.  The lock already existed (GDKtmLock), but wasn't used
    consistently.  This is now fixed.  Hopefully this makes the hot snapshot
    code more reliable.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 20 May 2022 11:51:02 +0200

monetdb (11.43.15) unstable; urgency=low

  * Rebuilt.
  * GH#7036: Generate column names instead of labels

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 20 May 2022 10:10:59 +0200

monetdb (11.43.15) unstable; urgency=low

  * gdk: All accesses to the BACKUP directory need to be protected by the
    same lock.  The lock already existed (GDKtmLock), but wasn't used
    consistently.  This is now fixed.  Hopefully this makes the hot snapshot
    code more reliable.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 19 May 2022 10:10:59 +0200

monetdb (11.43.15) unstable; urgency=low

  * gdk: When exiting, long running instructions are aborted using the same
    mechanism that is used for query timeouts.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 10 May 2022 10:10:59 +0200

monetdb (11.43.15) unstable; urgency=low

  * sql: GLOBAL TEMPORARY tables are now treated like LOCAL TEMPORARY tables
    as far as the table content is concerned.  The schema information
    stays global.  This fixes an issue with concurrent access and cleanup
    of stale data.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 25 Apr 2022 10:10:59 +0200

monetdb (11.43.15) unstable; urgency=low

  * sql: The NO CONSTRAINT option of the COPY INTO query has been removed.
    It didn't work and it was never a good idea anyway.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 14 Apr 2022 10:10:59 +0200

monetdb (11.43.13) unstable; urgency=low

  * Rebuilt.
  * GH#7278: BUG when there is more than one field/filter in the having
    clause

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 01 Apr 2022 11:31:11 +0200

monetdb (11.43.13) unstable; urgency=low

  * gdk: Improved speed of BATappend to empty varsized bat: we now just copy
    the heaps instead of inserting individual values.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 1 Apr 2022 11:31:11 +0200

monetdb (11.43.13) unstable; urgency=low

  * monetdb5: Improved parsing speed of blob values, especially on Windows.
    On Windows, using the locale-aware functions isdigit and isxdigit is
    comparatively very slow, so we avoid them.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 1 Apr 2022 11:31:11 +0200

monetdb (11.43.13) unstable; urgency=low

  * gdk: Improved speed of projection (BATproject) on varsized bats by sharing
    the data heap (vheap).

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 29 Mar 2022 11:31:11 +0200

monetdb (11.43.11) unstable; urgency=low

  * Rebuilt.
  * GH#7252: Segmentation fault on second run
  * GH#7253: Extremely slow INSERT INTO <table> SELECT
  * GH#7254: Commit with deletions is very slow
  * GH#7263: PRIMARY KEY constraint is not persistent through server restarts
  * GH#7267: Update after delete does not update some rows

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 25 Mar 2022 09:53:47 +0100

monetdb (11.43.11) unstable; urgency=low

  * gdk: Fixed a race condition which could cause a too large size being written
    for a .theap file to the BBP.dir file after the correct size file had
    been saved to disk.
  * gdk: We now ignore the size and capacity columns in the BBP.dir file.
    These values are essential during run time, but not useful in the
    on-disk image of the database.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 18 Mar 2022 09:53:47 +0100

monetdb (11.43.11) unstable; urgency=low

  * gdk: Fixed a bug in the append code for msk (bit mask) bats.
  * gdk: Conversions from floating point types to integral types that involve
    multiplication now use the "long double" as intermediate type, thereby
    loosing as few significant bits as is feasible.
  * gdk: Found and fixed another source for the now infamous BBPcheckbats error
    that sometimes occurs at startup of the server.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 9 Mar 2022 09:53:47 +0100

monetdb (11.43.11) unstable; urgency=low

  * clients: Improved the handling of the \r (internal pager) command in mclient.
    It now properly counts the header of table, and when a (very) long
    table is being printed and aborted part way in the built-in pager, not
    all data is transferred to the client (and then discarded).  Instead
    at most 1000 rows are transferred.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 16 Feb 2022 09:53:47 +0100

monetdb (11.43.9) unstable; urgency=low

  * Rebuilt.
  * GH#7237: SELECT with concurrent writes rarely returns corrupt data
  * GH#7238: query with system function: "index"(varchar, boolean) fails
    with GDK error or assertion failure.
  * GH#7241: Replacing a view by a query on the view itself crashes the
    server.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 07 Feb 2022 14:42:18 +0100

monetdb (11.43.7) unstable; urgency=low

  * Rebuilt.
  * GH#7228: COMMIT: transaction is aborted because of concurrency
    conflicts, will ROLLBACK instead
  * GH#7230: Prepared statement of INSERT with SELECT fails when types difer
  * GH#7232: False conflicts when inserting in a not null field

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 03 Feb 2022 09:58:19 +0100

monetdb (11.43.7) unstable; urgency=low

  * sql: [This feature was already released in Jan2022 (11.43), but the ChangeLog was missing]
    Added SQL procedures sys.vacuum(sname string, tname string, cname string),
    sys.vacuum(sname string, tname string, cname string, interval int),
    sys.stop_vacuum(sname string, tname string, cname string).
    These can be used to vacuum string columns.

 -- svetlin <svetlin.stalinov@monetdbsolutions.com>  Mon, 24 Jan 2022 09:58:19 +0100

monetdb (11.43.5) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 18 Jan 2022 10:05:33 +0100

monetdb (11.43.5) unstable; urgency=low

  * NT: We now build Windows binaries using Visual Studio 2022.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 13 Jan 2022 10:05:33 +0100

monetdb (11.43.5) unstable; urgency=low

  * gdk: Implement string imprints (strimps for short) a pre-filter structure
    for strings in order to accelerate LIKE queries. If a strimp exists
    for a specific string column the strings are pre-filtered, rejecting
    strings that cannot possibly match, before the more expensive and
    accurate matching algorithms run.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Wed, 12 Jan 2022 10:05:33 +0100

monetdb (11.43.5) unstable; urgency=low

  * sql: Add string imprints to the existing imprints index creation syntax. On
    string column "col" of a table "tbl" marked read only ("ALTER TABLE tbl
    SET READ ONLY") the user can create a string imprint using the syntax:
    "CREATE IMPRINTS INDEX index_name ON tbl(col);".

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Wed, 12 Jan 2022 10:05:33 +0100

monetdb (11.43.5) unstable; urgency=low

  * MonetDB: A couple of concurrency issues have been fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 12 Jan 2022 10:05:33 +0100

monetdb (11.43.3) unstable; urgency=low

  * Rebuilt.
  * GH#7215: ODBC Driver SQLStatistics returns duplicate rows/rows for other
    tables

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 11 Jan 2022 10:46:27 +0100

monetdb (11.43.3) unstable; urgency=low

  * gdk: On Windows, files and directories we create now get the attribute
    FILE_ATTIBUTE_NOT_CONTENT_INDEXED, meaning that they should not be
    indexed by indexing or search services.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 11 Jan 2022 10:46:27 +0100

monetdb (11.43.3) unstable; urgency=low

  * merovingian: Disabled logging into merovingian.log of next info message types:
    "proxying client <host>:<port> for database '<dbname>' to <url>" and
    "target connection is on local UNIX domain socket, passing on filedescriptor instead of proxying".
    These messages were written to the log file at each connection. In most
    cases this information is not used. The disabling reduces the log file size.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 6 Jan 2022 10:46:27 +0100

monetdb (11.43.1) unstable; urgency=low

  * Rebuilt.
  * GH#7168: Loosing the documentation
  * GH#7180: GROUP BY-subquery crashes MonetDb
  * GH#7182: Queries against sys.querylog_catalog, sys.querylog_calls or
    sys.querylog_history fail after restore of a db created using call
    sys.hot_snapshot(R'\path\file.tar');
  * GH#7201: Selection of a subquery with a LEFT JOIN returns the wrong
    result set
  * GH#7202: DISTINCT does not work when sorting by additional columns

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 03 Jan 2022 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * monetdb5: The storage cleanup in the 11.41.5 (Jul2021) release made the OLTP
    optimizer pipeline obsolete, thus it was removed.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Wed, 15 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: With the storage cleanup in the 11.41.5 (Jul2021) release, the ANALYZE
    statement was updated to accomodate those changes. The SAMPLE parameter
    is now ignored because ANALYZE generated statistics used by
    relational operators, are required to be precise.
  * sql: In order to mitigate the I/O required to update the 'statistics' table,
    this table is no longer persisted. Alternately, it was changed into a
    computed view every time when queried. The 'stamp' and 'sample' fields
    were removed for the aforementioned reasons. The 'schema', 'table' and
    'column' fields were added for convenience.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Wed, 15 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: In previous versions there was no check that the INCREMENT BY value of
    a SEQUENCE was not zero.  During the automatic upgrade of a database,
    INCREMENT BY values that are zero are set to one.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: The method to compute the 'side_effect' effect property was changed
    for SQL functions defined in the backend engine (eg. ``CREATE FUNCTION
    ... EXTERNAL NAME "module"."function"''). It was changed from being
    computed by the SQL layer to the backend engine itself. As a consequence,
    the computed 'side_effect' value may be different, thus bringing
    incompatibilities. After an upgrade, if a 'side_effect' incompatibility
    arises, either the 'side_effect' value in the backend should be changed or
    the function should be re-created in SQL.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: Removed deprecated system view sys.systemfunctions. It was marked
    as deprecated from release Apr2019 (11.33.3).  Use query:
      select id as function_id from sys.functions where system;
    to get the same data as the old view.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: Extended SQL system catalog with lookup table sys.fkey_actions and
    view sys.fkeys to provide user friendly querying of existing foreign
    keys and their ON UPDATE and ON DELETE referential action specifications.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: Many improvements were done for REMOTE table plans. As a consequence,
    master or slave servers from this feature release are not compatible
    with older releases.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: The view sys.ids has been changed to give more information about the
    objects in the system.  In particular, there is an extra column
    added at the end that indicates whether the object is a system
    object.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: The example modules opt_sql_append and udf are no longer loaded by
    default and no longer part of the binary release.  If installed,
    they can be loaded using the --loadmodule option.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * clients: A new output formatting mode was added to mclient.  Use -fcsv-noquote
    to produce a CSV (comma-separated values) output where the quote
    characters have not been escapes.  This can be useful when producing
    a single column string output that should be saved as is, e.g. when
    using the sys.dump_database() function.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * gdk: Many (most) low level functions that could take a long time (such as
    BATjoin) can now be aborted with a timeout.  When the function takes too
    long, the function will fail, and hence the whole SQL query will fail.
  * gdk: At some point in the past, string heaps were created where the
    hash value of the string was stored in the heap before the string.
    This hasn't been used in a long time.  Now the code that could still
    read those old heaps has been removed.  Bats that used the old format
    are converted automatically.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * misc: Reliance on the OpenSSL library has been removed.  OpenSSL was used
    for the hash algorithms it contained (e.g. SHA512 and RIPEMD160) and
    for producing random numbers.  The hash functions have been replaced
    by the original published functions, and random numbers are generated
    using system-specific random sources (i.e. not simply pseudo-random
    number generators).

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: The built-in SQL functions to produce a dump that were added as a
    proof-of-concept in the previous release have been improved and are
    now usable.  Use the query ``SELECT stmt FROM sys.dump_database(FALSE)
    ORDER BY o'' to produce a dump.  The dump code built into mclient and
    msqldump is probably still more efficient, though.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * gdk: Some small interface changes to the atom functions: the atomPut function
    now returns (var_t) -1 on error instead of 0; the atomHeap function
    now returns success or failure as a gdk_return value.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * sql: The sys.epoch function has always been confusing.  There are two
    versions, one with an INTEGER argument, and one with a BIGINT
    argument.  The former accepted values as seconds, whereas the
    latter expected milliseconds.  Also, the construct EXTRACT(EPOCH
    FROM value) returns a BIGINT with millisecond precision.  This has
    now been overhauled.  There is no longer a function sys.epoch with
    BIGINT argument, but instead there is a new function sys.epoch with
    DECIMAL(18,3) argument.  The argument is seconds, but with 3 decimals,
    it provides millisecond accuracy. Also the EXTRACT(EPOCH FROM value)
    now returns a DECIMAL(18,3), again seconds with 3 decimals giving
    millisecond accuracy.  Note that the internal, binary representation
    of DECIMAL(18,3) interpreted as seconds with 3 decimals and BIGINT
    with millisecond precision is exactly the same.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.43.1) unstable; urgency=low

  * merovingian: Removed the deprecated monetdb commands `profilerstart` and
    `profilerstop`.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Mon, 13 Dec 2021 14:02:13 +0100

monetdb (11.41.13) unstable; urgency=low

  * Rebuilt.
  * GH#7163: Multiple sql.mvc() invocations in the same query
  * GH#7167: sys.shutdown() problems
  * GH#7184: Insert into query blocks all other queries
  * GH#7185: GROUPING SETS on groups with aliases provided in the SELECT
    returns empty result
  * GH#7186: data files created with COPY SELECT .. INTO 'file.csv' fail to
    be loaded using COPY INTO .. FROM 'file.csv' when double quoted string
    data contains the field values delimiter character
  * GH#7191: [MonetDBe] monetdbe_cleanup_statement() with bound NULLs on
    variable-sized types bug
  * GH#7196: BATproject2: does not match always
  * GH#7198: Suboptimal query plan for query containing JSON access filter
    and two negative string comparisons
  * GH#7200: PRIMARY KEY unique constraint is violated with concurrent
    inserts
  * GH#7206: Python UDF fails when returning an empty table as a dictionary

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 10:01:08 +0100

monetdb (11.41.13) unstable; urgency=low

  * clients: Dumping the database now also dumps the read-only and insert-only
    states of tables.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 10:01:08 +0100

monetdb (11.41.13) unstable; urgency=low

  * gdk: Sometimes when the server was restarted, it wouldn't start anymore due
    to an error from BBPcheckbats.  We finally found and fixed a (hopefully
    "the") cause of this problem.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Dec 2021 10:01:08 +0100

monetdb (11.41.13) unstable; urgency=low

  * sql: Number parsing for SQL was fixed.  If a number was immediately followed
    by letters (i.e. without a space), the number was accepted and the
    alphanumeric string starting with the letter was interpreted as an alias
    (if aliases were allowed in that position).

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 28 Oct 2021 10:01:08 +0100

monetdb (11.41.11) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 30 Sep 2021 13:52:23 +0200

monetdb (11.41.9) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 28 Sep 2021 09:29:10 +0200

monetdb (11.41.7) unstable; urgency=low

  * Rebuilt.
  * GH#7140: SQL Query Plan Non Optimal with View
  * GH#7162: Extend sys.var_values table
  * GH#7165: `JOINIDX: missing '.'` when running distributed join query on
    merged remote tables
  * GH#7172: Unexpected query result with merge tables
  * GH#7173: If truncate is in transaction then after restart of MonetDB the
    table is empty
  * GH#7178: Remote Table Throws Error - createExceptionInternal: !ERROR:
    SQLException:RAstatement2:42000!The number of projections don't match
    between the generated plan and the expected one: 1 != 1200

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 27 Sep 2021 11:24:40 +0200

monetdb (11.41.7) unstable; urgency=low

  * gdk: Some deadlock and race condition issues were fixed.
  * gdk: Handling of the list of free bats has been improved, leading to less
    thread contention.
  * gdk: A problem was fixed where the server wouldn't start with a message from
    BBPcheckbats about files being too small.  The issue was not that the
    file was too small, but that BBPcheckbats was looking at the wrong file.
  * gdk: An issue was fixed where a "short read" error was produced when memory
    was getting tight.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 22 Sep 2021 11:24:40 +0200

monetdb (11.41.7) unstable; urgency=low

  * sql: If the server has been idle for a while with no active clients, the
    write-ahead log is now rotated.
  * sql: A problem was fixed where files belonging to bats that had been deleted
    internally were not cleaned up, leading to a growing database (dbfarm)
    directory.
  * sql: A leak was fixed where extra bats were created but never cleaned up,
    each taking up several kilobytes of memory.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 22 Sep 2021 11:24:40 +0200

monetdb (11.41.7) unstable; urgency=low

  * sql: [This feature was already released in Jul2021 (11.41.5), but the ChangeLog was missing]
    Grant indirect privileges.  With "GRANT SELECT ON <my_view> TO
    <another_user>"  and "GRANT EXECUTE ON FUNCTION <my_func> TO
    <another_user>", one can grant access to "my_view" and "my_func"
    to another user who does not have access to the underlying database
    objects (e.g. tables, views) used in "my_view" and "my_func".  The
    grantee will only be able to access data revealed by "my_view" or
    conduct operations provided by "my_func".

 -- Ying Zhang <y.zhang@cwi.nl>  Tue, 17 Aug 2021 11:24:40 +0200

monetdb (11.41.7) unstable; urgency=low

  * sql: Improved error reporting in COPY INTO by giving the line number
    (starting with one) for the row in which an error was found.  In
    particular, the sys.rejects() table now lists the line number of the
    CSV file on which the record started in which an error was found.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 16 Aug 2021 11:24:40 +0200

monetdb (11.41.7) unstable; urgency=low

  * gdk: When appending to a string bat, we made an optimization where the string
    heap was sometimes copied completely to avoid having to insert strings
    individually.  This copying was still done too eagerly, so now the
    string heap is copied less frequently.  In particular, when appending
    to an empty bat, the string heap is now not always copied whole.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 11 Aug 2021 11:24:40 +0200

monetdb (11.41.5) unstable; urgency=low

  * Rebuilt.
  * GH#7161: fix priority

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 03 Aug 2021 11:13:26 +0200

monetdb (11.41.5) unstable; urgency=low

  * gdk: A bug in the grouping code has been fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 3 Aug 2021 11:13:26 +0200

monetdb (11.41.5) unstable; urgency=low

  * sql: The system view sys.ids has been updated to include some more system
    IDs.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 3 Aug 2021 11:13:26 +0200

monetdb (11.41.3) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 30 Jul 2021 10:02:48 +0200

monetdb (11.41.3) unstable; urgency=low

  * gdk: Hash indexes are no longer maintained at all cost: if the number of
    distinct values is too small compared to the total number of values,
    the index is dropped instead of being maintained during updates.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 30 Jul 2021 10:02:48 +0200

monetdb (11.41.3) unstable; urgency=low

  * sql: The sys.storage() function now only returns meta data, i.e. data that
    can be calculated without access to the column contents.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 30 Jul 2021 10:02:48 +0200

monetdb (11.41.3) unstable; urgency=low

  * sql: Since STREAM tables support is removed, left over STREAM tables are
    dropped from the catalog.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 28 Jul 2021 10:02:48 +0200

monetdb (11.41.1) unstable; urgency=low

  * Rebuilt.
  * GH#2030: Temporary table is semi-persistent when transaction fails
  * GH#7031: I cannot start MoentDb, because the installation path has
    Chinese.
  * GH#7055: Table count returning function used inside other function gives
    wrong results.
  * GH#7075: Inconsistent Results using CTEs in Large Queries
  * GH#7079: WITH table AS... UPDATE ignores the WHERE conditions on table
  * GH#7081: Attempt to allocate too much space in UPDATE query
  * GH#7093: `current_schema` not in sys.keywords
  * GH#7096: DEBUG SQL statement broken
  * GH#7115: Jul2021: ParseException while upgrading Oct2020 database
  * GH#7116: Jul2021: Cannot create filter functions
  * GH#7125: MonetDB Round Function issues in the latest release
  * GH#7126: The "lower" and "upper" functions doesn't work for Cyrillic
    alphabet
  * GH#7127: Bug report: "write error on stream" that results in mclient
    crash
  * GH#7128: Bug report: strange error message "Subquery result missing"
  * GH#7129: Bug report: TypeException:user.main[19]:'batcalc.between'
    undefined
  * GH#7130: Bug report: TypeException:user.main[396]:'algebra.join'
    undefined
  * GH#7131: Bug report: TypeException:user.main[273]:'bat.append' undefined
  * GH#7133: WITH <alias> ( SELECT x ) DELETE FROM ... deletes wrong tuples
  * GH#7136: MERGE statement is deleting rows if the column is set as NOT
    NULL even though it should not
  * GH#7137: Segmentation fault while loading data
  * GH#7138: Monetdb Python UDF crashes because of null aggr_group_arr
  * GH#7141: COUNT(DISTINCT col) does not calculate correctly distinct values
  * GH#7142: Aggregates returning tables should not be allowed
  * GH#7144: Type up-casting (INT to BIGINT) doesn't always happen
    automatically
  * GH#7146: Query produces this error: !ERROR: Could not find %102.%102
  * GH#7147: Internal error occurs and is not shown on the screen
  * GH#7148: Select distinct is not working correctly
  * GH#7151: Insertion is too slow
  * GH#7153: System UDFs lose their indentation - Python functions broken
  * GH#7158: Python aggregate UDF returns garbage when run on empty table

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 23 Jul 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * mapilib: Add optional MAPI header field which can be used to immediately
    set reply size, autocommit, time zone and some other options, see
    mapi.h.  This makes client connection setup faster.  Support has been
    added to mapilib, pymonetdb and the jdbc driver.

 -- Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com>  Wed, 21 Jul 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * sql: Fix a warning emitted by some implementations of the tar(1) command
    when unpacking hot snapshot files.
  * sql: support reading the concatenation of compressed files as a single
    compressed file.
  * sql: COPY BINARY overhaul.  Allow control over binary endianness using
    COPY [ (BIG | LITTLE | NATIVE) ENDIAN] BINARY syntax.  Defaults to
    NATIVE.  Strings are now \0 terminated rather than \n.  Support for
    BOOL, TINYINT, SMALLINT, INT, LARGEINT, HUGEINT, with their
    respective "INTMIN" values as the NULL representation; 32 and 64 bit
    FLOAT/REAL, with NaN as the NULL representation; VARCHAR/TEXT, JSON
    and URL with \x80 as the NULL representation; UUID as fixed width 16
    byte binary values, with (by default) all zeroes as the NULL
    representation; temporal type structs as defined in copybinary.h
    with any invalid value as the NULL representation.

 -- Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com>  Wed, 21 Jul 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * sql: In the Jul2021 release the storage and transaction layers have
    undergone major changes.  The goal of these changes is robust
    performance under inserts/updates and deletes and lowering the
    transaction startup costs, allowing faster (small) queries.  Where
    the old transaction layer duplicated a lot of data structures during
    startup, the new layer shares the same tree.  Using object
    timestamps the isolation of object is guaranteed.  On the storage
    side the timestamps indicate whether a row is visible (deleted or
    valid), to a transaction as well.  The changes also give some slight
    changes on the perceived transactional behavior.  The new
    implementation uses shared structures among all transactions, which
    do not allow multiple changes of the same object.  And we then
    follow the principle of the first writer wins, i.e., if a
    transaction creates a table with name 'table_name', and concurrently
    one other transaction does the same the later of the two will fail
    with a concurrency conflict error message (even if the first writer
    never commits).  We expect most users not to notice this change, as
    such schema changes aren't usually done concurrently.

 -- Niels Nes <niels@cwi.nl>  Tue, 20 Jul 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * clients: The MonetDB stethoscope has been removed.  There is now a separate
    package available with PIP (monetdb_stethoscope) or as an RPM or DEB
    package (stethoscope) from the monetdb.org repository.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 20 Jul 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * gdk: A new type, called msk, was introduced.  This is a bit mask type.
    In a bat with type msk, each row occupies a single bit, so 8 rows are
    stored in a single byte.  There is no NULL value for this type.
  * gdk: The function of the BAT iterator (type BATiter, function bat_iterator)
    has been expanded.  The iterator now contains more information about
    the BAT, and it contains a pointer to the heaps (theap and tvheap)
    that are stable, at least in the sense that they will remain available
    even when parallel threads update the BAT and cause those heaps to grow
    (and therefore possibly move in memory).  A call to bat_iterator must
    now be accompanied by a call to bat_iterator_end.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 20 Jul 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * monetdb5: When using the --in-memory option, mserver5 will run completely in
    memory, i.e. not create a database on disk.  The server can still be
    connected to using the name of the in-memory database.  This name is
    "in-memory".

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 7 Jun 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * sql: There is now a function sys.current_sessionid() to return the session
    ID of the current session.  This ID corresponds with the sessionid in
    the sys.queue() result.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 11 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * merovingian: Deprecate `profilerstart` and `profilerstop` commands. Since
    stethoscope is a separate project (https://github.com/MonetDBSolutions/monetdb-pystethoscope)
    the installation directory is not standard anymore. `profilerstart` and
    `profilerstop` commands assume that the stethoscope executable is in the
    same directory as `mserver5`. This is no longer necessarily true since
    stethoscope can now be installed in a python virtual environment. The
    commands still work if stethoscope is installed using the official
    MonetDB installers, or if a symbolic link is created in the directory
    where `mserver5` is located.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Mon, 10 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * odbc: A typo that made the SQLSpecialColumns function unusable was fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * sql: Merge statements could not produce correct results on complex join
    conditions, so a renovation was made. As a consequence, subqueries
    now have to be disabled on merge join conditions.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * sql: preserve in-query comments

 -- svetlin <svetlin.stalinov@monetdbsolutions.com>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * merovingian: The exittimeout value can now be set to a negative value (e.g. -1) to
    indicate that when stopping the dbfarm (using monetdbd stop dbfarm),
    any mserver5 processes are to be sent a termination signal and then
    waited for until they terminate.  In addition, if exittimeout is greater
    than zero, the mserver5 processes are sent a SIGKILL signal after the
    specified timeout and the managing monetdbd is sent a SIGKILL signal
    after another five seconds (if it didn't terminate already).  The old
    situation was that the managing monetdbd process was sent a SIGKILL
    after 30 seconds, and the mserver5 processes that hadn't terminated
    yet would be allowed to continue their termination sequence.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * gdk: Implemented function BUNreplacemultiincr to replace multiple values
    in a BAT in one go, starting at a given position.
  * gdk: Implemented new function BUNreplacemulti to replace multiple values
    in a BAT in one go, at the given positions.
  * gdk: Removed function BUNinplace, just use BUNreplace, and check whether
    the BAT argument is of type TYPE_void before calling if you don't
    want to materialize.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * sql: Use of CTEs inside UPDATE and DELETE statements are now more
    restrict. Previously they could be used without any extra specification
    in the query (eg. with "v1"("c1") as (...) delete from "t"
    where "t"."c1" = "v1"."c1"), however this was not conformant with the
    SQL standard. In order to use them, they must be specified in the FROM
    clause in UPDATE statements or inside a subquery.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * gdk: Implemented a function BUNappendmulti which appends an array of values
    to a BAT.  It is a generalization of the function BUNappend.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * gdk: Changed the interface of the atom read function.  It now requires an
    extra pointer to a size_t value that gives the current size of the
    destination buffer, and when that buffer is too small, it receives the
    size of the reallocated buffer that is large enough.  In any case,
    and as before, the return value is a pointer to the destination buffer.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * gdk: Environment variables (sys.env()) must be UTF-8, but since they can
    contain file names which may not be UTF-8, there is now a mechanism
    to store the original values outside of sys.env() and store
    %-escaped (similar to URL escaping) values in the environment.  The
    key must still be UTF-8.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * gdk: We now save the location of the min and max values when known.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * sql: Added 'schema path' property to user, specifying a list of schemas
    to be searched on to find SQL objects such as tables and
    functions. The scoping rules have been updated to support this feature
    and it now finds SQL objects in the following order:
     1. On occasions with multiple tables (e.g. add foreign key constraint,
        add table to a merge table), the child will be searched on the
        parent's schema.
     2. For tables only, declared tables on the stack.
     3. 'tmp' schema if not listed on the 'schema path'.
     4. Session's current schema.
     5. Each schema from the 'schema path' in order.
     6. 'sys' schema if not listed on the 'schema path'.
    Whenever the full path is specified, ie "schema"."object", no search will
    be made besides on the explicit schema.
  * sql: To update the schema path ALTER USER x SCHEMA PATH y; statement was added.
    [SCHEMA PATH string] syntax was added to the CREATE USER statement.
    The schema path must be a single string where each schema must be between
    double quotes and separated with a single comma, e.g. '"sch1","sch2"'
    For every created user, if the schema path is not given, '"sys"' will be
    the default schema path.
  * sql: Changes in the schema path won't be reflected on currently connected users,
    therefore they have to re-connect to see the change. Non existent schemas
    on the path will be ignored.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * sql: Leftover STREAM table definition from Datacell extension was removed
    from the parser. They had no effect anymore.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.41.1) unstable; urgency=low

  * monetdb5: By using the option "--dbextra=in-memory", mserver5 can be instructed
    to keep transient BATs completely in memory.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 13:57:15 +0200

monetdb (11.39.17) unstable; urgency=low

  * Rebuilt.
  * GH#3336: DB files not removed if all rows are deleted, even after restart
  * GH#7104: Monetdbe NTILE function does not produce correct ordering
  * GH#7108: Monetdb crashes on query execution
  * GH#7109: MERGE Statement incorrectly reports that input relation matches
    multiple rows
  * GH#7110: Monetdb Query parsing consistency issues in the latest release
    (Remote Table)

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 03 May 2021 18:04:16 +0200

monetdb (11.39.17) unstable; urgency=low

  * gdk: A bug that would very occasionally produce an error "strPut: incorrectly
    encoded UTF-8", even when no incorrectly coded characters are used
    at all, has been fixed.  It was the result of a rare combination of
    strings having been added to the column that caused essentially an
    off-by-one type of error to occur.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 18:04:16 +0200

monetdb (11.39.17) unstable; urgency=low

  * merovingian: When stopping monetdbd using the `monetdbd stop' command, this command
    now waits for 5 seconds longer than the exittimeout value before it
    kills the monetdbd daemon instead of only 30 seconds total (or until
    that daemon stops earlier).  This gives the daemon enough time to
    terminate the mserver5 processes that it is managing.  If exittimeout
    is negative, the daemon and the monetdbd process initiating the stop
    wait indefinitely until the mserver5 processes have stopped.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 18:04:16 +0200

monetdb (11.39.17) unstable; urgency=low

  * sql: A bug where a sequence of TRUNCATE TABLE and COPY INTO the just
    truncated table would result in success being reported to both queries,
    but the table still being empty afterwards, has been fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 3 May 2021 18:04:16 +0200

monetdb (11.39.17) unstable; urgency=low

  * NT: Added the monetdbe library to the Windows installer.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 23 Apr 2021 18:04:16 +0200

monetdb (11.39.15) unstable; urgency=low

  * Rebuilt.
  * GH#6786: function json.isvalid(js json) is not useful, could be removed
  * GH#7016: Database crashes when use similarity function on a table with
    more than 200k records
  * GH#7037: Clearer err msg for ALTER USER with insufficient privileges
  * GH#7042: AddressSanitizer:DEADLYSIGNAL in Oct2020/gdk/gdk_tracer.c:494
  * GH#7050: file descriptor leak when forward=redirect
  * GH#7057: ODBC driver installer on Windows is missing some DLLs
  * GH#7058: MonetDBe: COPY INTO csv file does not produce any output
  * GH#7059: MonetDBe: 'reverse' C UDF crashes
  * GH#7061: Have bulk load support combined gzip files
  * GH#7064: Temporary hashes created in hash and unique logic should try to
    use transient data farm first
  * GH#7066: percent_rank function with wrong results
  * GH#7070: double free error when running MonetDBe Example
  * GH#7076: mserver5 ignores memory.low from cgroups v2
  * GH#7077: Oct2020: new default privileges not effectively communicated
  * GH#7083: MonetDBe C++ Compiling Error
  * GH#7085: Mitosis and filter functions
  * GH#7087: SIGSEGV caused by error in subquery's function being ignored by
    top-level query
  * GH#7089: Data consistency problem of query results in the latest release
    of Monetdb (Remote Table)

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 02 Apr 2021 12:56:16 +0200

monetdb (11.39.15) unstable; urgency=low

  * odbc: When connecting using a DSN (Data Source Name), information about the
    data source is retrieved from the ODBC.INI file.  Now we also get the
    location of the LOGFILE from this file.  The logfile can be used to
    log all calls to the MonetDB ODBC driver to a file which can be used
    for debugging.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 31 Mar 2021 12:56:16 +0200

monetdb (11.39.15) unstable; urgency=low

  * odbc: The ODBC driver now only passes on information about HUGEINT columns
    as HUGEINT when the application has indicated interest by querying
    about the SQL_HUGEINT extension type using the SQLGetTypeInfo
    function or by specifying the type in a call to SQLSetDescField.
    Otherwise the driver silently translates the HUGEINT type to BIGINT.
    This means that most application will see BIGINT columns when the
    server produced a HUGEINT column and only give an error if the value
    in the HUGEINT column didn't fit into a BIGINT.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 25 Mar 2021 12:56:16 +0200

monetdb (11.39.13) unstable; urgency=low

  * Rebuilt.
  * GH#7049: Implement DISTINCT for GROUP_CONCAT

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 11 Feb 2021 10:59:33 +0100

monetdb (11.39.11) unstable; urgency=low

  * Rebuilt.
  * GH#3772: Any user can grant a role.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 18 Jan 2021 14:48:19 +0100

monetdb (11.39.9) unstable; urgency=low

  * Rebuilt.
  * GH#6862: mserver5: crashes under update_table() when calling lib_sql.so
    ( max_clients = 2048)
  * GH#7002: monetdb stop fails
  * GH#7012: mclient enters an infinite loop when a file on the command line
    does not exist
  * GH#7013: Select * on grouped view: wrong error "cannot use non GROUP BY
    column 'a1' in query results without an aggregate function"
  * GH#7017: mal seems to leak in functions
  * GH#7020: release an older savepoint causes "BATproject2: does not match
    always"
  * GH#7021: savepoints crash mserver5
  * GH#7022: transaction with an unreleased savepoint not properly persisted
  * GH#7023: CREATE VIEW: SELECT: cannot use non GROUP BY column '%1' in
    query results without an aggregate function
  * GH#7024: DELETE FROM or TRUNCATE on freshly created table leads to
    loosing all further inserts in same transaction
  * GH#7030: DROP TABLE with AUTO_INCREMENT doesn't drop sequence causing
    left-over dependency
  * GH#7034: User with sysadmin role cannot create another user
  * GH#7035: UPDATE and SELECT column privileges

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 11 Jan 2021 11:01:32 +0100

monetdb (11.39.9) unstable; urgency=low

  * sql: CREATE [OR REPLACE] TRIGGER schema_name.trigger_name is now disallowed,
    because the trigger will be stored on the same schema as the table it
    refers to. Use a schema-qualified on the table reference (ie ON clause)
    when necessary.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 10 Dec 2020 11:01:32 +0100

monetdb (11.39.7) unstable; urgency=low

  * Rebuilt.
  * BZ#6890: Add support of xz/lzma (de)compression on MS Windows
  * BZ#6891: Add support of lz4 (de)compression on MS Windows
  * BZ#6971: Parsing table returning function on remote server fails
  * BZ#6981: Oct2020: PREPARE DDL statement silently fails
  * BZ#6983: monetdb allows to use non-existing optimizer pipe
  * BZ#6998: MAL profiler buffer limitations
  * BZ#7001: crossproduct generated for a simple (semi-)join
  * BZ#7003: Segfault on large chain of constant decimal multiplication
  * BZ#7005: Dropping a STREAM TABLE does not remove the associated column
    info from sys._columns
  * BZ#7010: deallocate <id> results in all prepared statements being
    deallocated (not error-related)
  * BZ#7011: uuid() called only once when used in projection list

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 18 Nov 2020 15:53:30 +0100

monetdb (11.39.5) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 13 Oct 2020 12:43:20 +0200

monetdb (11.39.5) unstable; urgency=low

  * clients: mclient and msqldump now also look in $XDG_CONFIG_HOME for the monetdb
    configuration file.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 12 Oct 2020 12:43:20 +0200

monetdb (11.39.3) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 09 Oct 2020 09:48:30 +0200

monetdb (11.39.1) unstable; urgency=low

  * Rebuilt.
  * BZ#3553: All schema access to ubiquitous functions
  * BZ#3815: Incorrect results when expression contains implicit
    float/integer conversions
  * BZ#6415: Date arithmetic types are inconsistent
  * BZ#6814: provide native implementations for scalar functions
    sys.degrees(rad) and sys.radians(deg)
  * BZ#6843: function sys.getcontent(url) always returns "Feature not
    supported"
  * BZ#6857: remove not implemented aggregate function json.output(js json)
  * BZ#6870: Missing bulk operators
  * BZ#6910: SQLancer query: 'bat.append' undefined
  * BZ#6930: SQLancer crash on join with coalesce
  * BZ#6931: Allow EDITOR to be used for the current command in mclient
  * BZ#6935: Wrong result when dividing interval by literal float
  * BZ#6937: Lost the microsecond precisions
  * BZ#6938: Segmentation fault in MalOptimizer
  * BZ#6939: Error in optimizer multiplex when selecting
    profiler.getlimit() or wlc.clock() or wlc.tick() or wlr.clock()
    or wlr.tick()
  * BZ#6941: SELECT queries on remote table fail when using LIKE in WHERE
    conditions
  * BZ#6943: JSON parser is too permissive
  * BZ#6948: msqldump with Empty BLOBs cannot be imported
  * BZ#6949: Loosing timing precision
  * BZ#6950: redundant/replicated code line in gdk/gdk_hash.c
  * BZ#6951: Use a different naming scheme for MAL blocks
  * BZ#6954: FILTER functions no longer find their implementation
  * BZ#6955: ROUND(DECIMAL, PRECISION) gives incorrect result with
    non-scalar precision parameter
  * BZ#6960: implementation of log(arg1,arg2) function is not compliant
    with the SQL standard, arguments are switched
  * BZ#6962: "SELECT * FROM ids LIMIT 1" produces: exp_bin: !ERROR: Could
    not find %173.id
  * BZ#6964: Table returning function: Cannot access column descriptor
  * BZ#6965: Crash when using distinct on the result of a table returning
    function
  * BZ#6974: Oct2020-branch cannot attach and load FITS files
  * BZ#6976: Oct2020: default dbfarm cannot be started
  * BZ#6978: Oct2020: d shows empty result in schema created by include
    sql script
  * BZ#6979: timestamp add integer
  * BZ#6980: Oct2020: wrong mel definition for str.epilogue

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 06 Oct 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * sql: Made general logarithm function log(x,base) compliant with the SQL
    standard, by swapping the input parameters.
    Instead of log(x,base), now is log(base,x).

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Mon, 31 Aug 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * monetdb5: The settings for specifying how mserver5 should listen to "The
    Internet" have been overhauled.  See the manual for details.  In
    brief, mapi_autosense, mapi_ipv6 and mapi_open are gone.  If
    mapi_listenaddr equals "localhost" or "all", we listen to both IPv4
    and IPv6 (if available), if "127.0.0.1" or "0.0.0.0", we listen to
    IPv4 only, if "::1" or "::" we listen to IPv6 only.  The first of
    each pair is loopback interface only, the second is all interfaces.
    If mapi_listenaddr is "none", then no IP port is opened, you need to
    use a UNIX domain socket.  If mapi_port is 0, we let the operating
    system choose a free port (like mapi_autosense).  Default behavior
    has not changed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 20 Aug 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * MonetDB: Finished a first version of the new monitoring function
    user_statistics(), which is only intended for the DBAs.
    For each database user who has logged in during the current mserver5
    session, it returns
    "username": login name of the database user,
    "querycount": the number of queries this user has executed since his/her
        first login,
    "totalticks": the total execution time (in microsecond) of the queries ran
        by this user,
    "maxquery": the query with the longest execution time (if two queries have
        the same execution time, the newer overwrites the older),
    "maxticks": the execution time of the 'maxquery' (in microsecond),
    "started": the start timestamp of the 'maxquery',
    "finished": the finish timestamp of the 'maxquery'.

 -- Ying Zhang <y.zhang@cwi.nl>  Mon, 10 Aug 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * sql: Removed compatibility between interval types and other numeric types in
    favor for a more strict SQL standard compliance. This means operations
    between temporal types and other numeric types such as INT and
    DECIMAL are no longer possible, instead use interval types.
    e.g. SELECT date '2020-01-01' + 1; now gives the error. Instead do:
    SELECT date '2020-01-01' + interval '1' day; if 1 was meant to be a
    day interval.
    Setting an interval variable such as the session's current timezone
    with a number e.g. SET current_timezone = 1; is no longer possible.
    Instead do SET current_timezone = interval '1' hour;
    Casting between interval and other numeric types is no longer possible
    as well, because they are not compatible.
  * sql: Because of incompatibilities this change may create, if a user intends
    to convert a numeric value to an interval, the multiplication function
    can be used in the form: <numeric value> * interval '1' <interval length>
    e.g. 10 * interval '1' second = interval '10' second.
    As for the other way around, the 'EPOCH' option was added to the extract
    syntax. This option returns the number of milliseconds since the UNIX
    epoch 1970-01-01 00:00:00 UTC for date, timestamp and time values (it
    can be negative). Meanwhile, for day and second intervals, it returns the
    total number of milliseconds in the interval. As a side note, the 'EPOCH'
    option is not available for month intervals, because this conversion is
    not transparent for this type.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 23 Jul 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * sql: Removed obsolete json.output(json) function.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 23 Jul 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * sql: Removed obsolete sys.getContent(url) function.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 23 Jul 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * MonetDB: Removed support for LiDAR data, that is the SQL procedures
    sys.lidarattach, sys.lidarload, and sys.lidarexport.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 23 Jul 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * sql: Removed '@' syntax used to refer into a variable in a query. It
    was a non-standard method, which was replaced by a schema addition to
    variables. Variables in the global scope now have schema. All default
    global variables are set under schema "sys". However variables
    inside PSM don't have a schema, because there are no transaction
    semantics inside PSM at the moment.
  * sql: Removed declared variables and tables from the global scope. They were
    transaction agnostic and incompatible with the SQL standard, i.e. they
    are valid exclusively under PSM (e.g. functions, procedures and
    triggers).
  * sql: Scoping semantics were added for both variables and tables. Variables
    with the same name at a query are now resolved under the following
    precedence rules:
      1. Tables, Views and CTEs at the FROM clause.
      2. Variable declared in the body of function/procedure, i.e. local
         variable.
      3. Function/procedure parameter.
      4. Variable from the global scope.
    Tables with the same name now have the following precedence rules at a
    SQL query:
      1. Table declared in the body of function/procedure, ie local table.
      2. Temporary table.
      3. Table from the current session schema.
    This means the query: SELECT * FROM "keys"; will list keys from
    temporary tables instead of persisted ones, because "keys" table
    is available for both "sys" and "tmp" schemas.
  * sql: The table returning function "var" was extended with more details
    about globally declared variables, namely their schema, type and
    current value.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 23 Jul 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * MonetDB: The sys.queue() has been turned into a circular buffer to allow for
    inspection of both active, paused and recently executed queries.

 -- Martin Kersten <mk@cwi.nl>  Thu, 23 Jul 2020 11:09:35 +0200

monetdb (11.39.1) unstable; urgency=low

  * sql: Extended the system monitor with a table-returning function
    user_statistics() which keeps some statistics for each SQL user, e.g. the
    user's query count, total time spent, and maximal query seen.

 -- Martin Kersten <mk@cwi.nl>  Thu, 23 Jul 2020 11:09:35 +0200

monetdb (11.37.11) unstable; urgency=low

  * Rebuilt.
  * BZ#6917: Decimal parsing fails
  * BZ#6932: Syntax error while parsing JSON numbers with exponent
  * BZ#6934: sys.isauuid() returns wrong answer for some invalid uuid
    strings

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 23 Jul 2020 09:10:48 +0200

monetdb (11.37.9) unstable; urgency=low

  * Rebuilt.
  * BZ#6844: sys.getUser('https://me:pw@www.monetdb.org/Doc') does not
    return the user: me
  * BZ#6845: the url sys.get...(url) functions do not allow null as
    a parameter
  * BZ#6858: json.keyarray(json '{ "":0 }') fails with error: Could not
    allocate space
  * BZ#6859: only first character of the separator string in json.text(js
    json, sep string) is used
  * BZ#6873: sys.hot_snapshot() creates incomplete snapshots if the
    write-ahead log is very large
  * BZ#6876: tar files created by sys.hot_snapshot() produce warnings on
    some implementations of tar
  * BZ#6877: MonetDB produces malformed LZ4 files
  * BZ#6878: SQL Connection Error when running SELECT queries containing
    AND command
  * BZ#6880: Left fuzzy queries are much slower than other fuzzy queries.
  * BZ#6882: cgroups limits no longer respected?
  * BZ#6883: SQLancer crash on delete query
  * BZ#6884: SQLancer generates query with unclear error message
  * BZ#6885: SQLancer causes assertion error on UTF8_strlen
  * BZ#6886: SQLancer alter table add unique gives strange error message
  * BZ#6887: SQLancer crash on complex query
  * BZ#6888: SQLancer crash on cross join on view
  * BZ#6889: SQLancer crash on long query
  * BZ#6892: SQLancer crash on query with HAVING
  * BZ#6893: SQLancer inner join reporting GDK error
  * BZ#6894: SQLancer crash on rtrim function
  * BZ#6895: SQLancer causing 'algebra.select' undefined error
  * BZ#6896: SQLancer algebra.select' undefined 2
  * BZ#6897: SQLancer distinct aggregate with error on group by constant
  * BZ#6898: SQLancer crash on join query
  * BZ#6899: SQLancer TLP query with wrong results
  * BZ#6900: SQLancer generated SIGFPE
  * BZ#6901: SQLancer TLP query with wrong results 2
  * BZ#6902: SQLancer query: batcalc.between undefined
  * BZ#6903: SQLancer calc.abs undefined
  * BZ#6904: SQLancer aggr.subavg undefined
  * BZ#6905: SQLancer TLP query with wrong results 3
  * BZ#6906: SQLancer crash on complex join
  * BZ#6907: SQLancer algebra.select undefined
  * BZ#6908: SQLancer inputs not the same size
  * BZ#6909: SQLancer query with wrong results
  * BZ#6911: SQLancer query: 'calc.bit' undefined
  * BZ#6918: SQLancer query compilation error
  * BZ#6919: SQLancer insert function doesn't handle utf-8 strings
  * BZ#6920: SQLancer project_bte: does not match always
  * BZ#6922: Timestamp columns not migrated to new format
  * BZ#6923: Imprints data files for timestamp BAT not migrated to the
    new format
  * BZ#6924: SQLancer query copy on unique pair of columns fails and
    complex query with GDK error
  * BZ#6925: Count string rows in union of string tables leaks (RSS) memory
  * BZ#6926: SQLancer query with wrong results
  * BZ#6927: SQLancer inputs not the same size
  * BZ#6928: SQLancer crash on coalesce
  * BZ#6929: SQLancer calc.date undefined

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 20 Jul 2020 09:33:05 +0200

monetdb (11.37.9) unstable; urgency=low

  * gdk: Hash buckets come in variable widths.  But if a BAT grows long enough so
    that the BAT indexes that are stored in the buckets don't fit anymore,
    the buckets need to be widened.  This is now fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 9 Jun 2020 09:33:05 +0200

monetdb (11.37.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 29 May 2020 12:21:47 +0200

monetdb (11.37.5) unstable; urgency=low

  * Rebuilt.
  * BZ#6864: (I)LIKE with multiple % doen't find matches

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 26 May 2020 10:38:30 +0200

monetdb (11.37.3) unstable; urgency=low

  * Rebuilt.
  * BZ#6863: thash files not released upon drop table

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 18 May 2020 11:29:29 +0200

monetdb (11.37.1) unstable; urgency=low

  * Rebuilt.
  * BZ#6298: unexpectedly slow execution of SELECT length(fieldname)
    FROM tablename LIMIT 1 queries
  * BZ#6401: Suspected memory leak in mserver5 when creating/dropping tables
  * BZ#6687: Count distinct very slow and use too much the hard drive
  * BZ#6731: Add system view to allow querying of available prepared
    statements and their parameters
  * BZ#6732: Add SQL command to close a specific prepared statement
  * BZ#6750: Executing a query on a non-existing column on a remote table
    crashes the remote server
  * BZ#6785: function sys.isaURL(url) should have been declared as
    sys.isaURL(string)
  * BZ#6808: reveal the alarm.sleep procedure in SQL
  * BZ#6813: function not_uniques(bigint) returns error when called
  * BZ#6818: usage of multiple column expressions in where-clause (f(a),
    f(b)) in (select a, b)  causes assertion failure on mserver5
  * BZ#6821: Failed to start monetdb with embedded python
  * BZ#6828: Server crashes when executing a window query with ordering
    by EXTRACT date
  * BZ#6846: Global temporary table not accessible in other connections
    / sessions
  * BZ#6847: A simple way of speeding up impscheck for dense canditers
  * BZ#6850: Idle timestamp not set
  * BZ#6851: json parser doesn't parse integers correctly

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 11 May 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * monetdb5: The mserver5 option --verbose (-v) was removed.  A similar effect can
    be had by issuing the query CALL logging.setcomplevel('SQL_TRANS',
    'INFO'); as the monetdb user.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 8 May 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * selinux: There was a problem with the MonetDB SELinux support on Fedora 32.
    That is fixed in this release.  In order to do a proper upgrade of
    the package if you have already installed MonetDB-selinux on Fedora
    32, you may need to uninstall (dnf remove) the old package and then
    install the new.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 6 May 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * gdk: The functions BATintersect, BATsemijoin, and BATsubcross have an
    extra argument, bool max_one, which indicates that there must be no
    more than one match in the join.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 28 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * monetdb5: The functions algebra.intersect, algebra.semijoin, and
    algebra.crossproduct have an extra argument, bool max_one, which
    indicates that there must be no more than one match in the join.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 28 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Updating the value of a sequence now requires privilege on its own
    schema.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 23 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * clients: The monetdb-client-tools (Debian/Ubuntu) and MonetDB-client-tools
    (Fedora/RH) containing the stethoscope, tachograph, and tomograph has
    been removed.  A completely new version of stethoscope will be released
    to replace the old version.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 20 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * gdk: The "unique" property on BATs was removed.  The property indicated
    that all values in a BAT *had* to be distinct, but this was not
    actually used.
  * gdk: A new type of candidate list has been introduced.  Candidate lists
    are used internally to specify which rows of a column participate
    in an operation.  Before, candidate lists always contained a list of
    candidate row IDs.  The new candidate list type specifies a list of
    row IDs that should NOT be considered (negative candidates).
  * gdk: The maximum number of BATs in the system has been increased for 64
    bit architectures.
  * gdk: The hash tables used internally by the system now uses a technique
    based on Linear Hashing which allows them to grow gracefully.  This
    means that hash tables aren't removed and recreated nearly as often
    anymore.  This also meant that the hash table had to be split into
    two files, which means that after an upgrade the hash tables have to
    be recreated.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 20 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * merovingian: On Fedora and RHEL systems (not RHEL 6), if monetdbd runs under systemd,
    when the package is updated, monetdbd (and hence any mserver5 process
    it runs) is restarted.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 20 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * monetdb5: The example module opt_sql_append is not installed in the binary
    packages anymore.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 20 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * MonetDB: A new system to deal with debug output has been implemented.  There is
    now an option --dbtrace to mserver5 that takes a file argument to which
    debug output is written.  The default value is the file mdbtrace.log
    inside the database directory.  This option can also be set through
    the monetdb program.
  * MonetDB: The home directory of the automatically created monetdb user was
    changed from /var/MonetDB to /var/lib/monetdb (RPM based systems
    only).  This home directory is (currently) not used for anything,
    though.
  * MonetDB: Python 2 support has been removed.  There is now only support for
    using Python 3.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 20 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * odbc: The NUMERIC and FLOAT types are now handled fully.  Before only DECIMAL,
    FLOAT, and DOUBLE were handled fully.
  * odbc: Some bugs were fixed in the passing back and forth between application
    and server of values of type GUID (UUID).

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 20 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * clients: Removed the possibility of using the MD5 checksum for authentication
    purposes.  It was never actively used but was there as an option.
    Now the option has been removed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 16 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: The sys.querylog_enable(threshold integer) now actually enables the
    querylog and uses a threshold in milliseconds.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 16 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Removed UNION JOIN statements. They were dropped by the SQL:2003
    standard, plus MonetDB implementation was not fully compliant.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Wed, 15 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: The OFFSET value in the COPY INTO query now counts uninterpreted
    newlines.  Before it counted "unquoted record separators" which meant
    that if you had a single quote on a line that you want to skip, you
    could not use the feature.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 1 Apr 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * gdk: Implemented a version of BATproject, called BATproject2, with two
    "right" arguments which conceptually follow each other.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 30 Mar 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Added support for FROM RANGE MINVALUE TO RANGE MAXVALUE and FROM RANGE
    MINVALUE TO RANGE MAXVALUE WITH NULL VALUES cases in partitioned tables
    by range (before they weren't).

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 27 Mar 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * gdk: Removed MT_mmap and MT_munmap from the list of exported functions.
    Use GDKmmap and GDKmunmap with the same parameters instead.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 25 Mar 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * gdk: Changed the interface of the atom "fix" and "unfix" functions.
    They now return a value of type gdk_return to indicate success/failure.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 20 Mar 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * merovingian: Added dbtrace mserver5 option to the daemon in order to set
    mserver5's output directory for the produced traces.

 -- Thodoris Zois <thodoris.zois@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * monetdb5: Added mserver5 option (--dbtrace=<path>) in order to be able to
    specify the output file any produced traces.

 -- Thodoris Zois <thodoris.zois@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * clients: Add port and host as fields in the .monetdb file.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * MonetDB: Removed support for bam and sam files.

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Implemented 'covar_pop' and 'covar_samp' aggregate functions, as well
    as their window function counterparts. Implemented 'stddev_samp',
    'stddev_pop', 'var_samp', 'var_pop', 'corr' and 'group_concat'
    window function correspondents.
  * sql: Extended SQL catalog with CREATE WINDOW syntax for user-defined
    SQL:2003 window functions. At the moment, window functions must be
    defined on the backend engine, i.e. on this case MAL. In the current
    implementation, the backend code generation creates two additional
    columns of type lng with the start and end offsets for each row.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Removed support for Python 2.  Python 2 itself is no longer
    supported.  Use Python 3 instead.  Functions that were declared as
    LANGUAGE PYTHON2 or LANGUAGE PYTHON2_MAP are changed to LANGUAGE
    PYTHON and LANGUAGE PYTHON_MAP respectively (without changing the
    Python code).

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Added prepared_statements_args view, which details the arguments for
    the prepared statements created in the current session.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Added sys.prepared_statements view, which lists the available prepared
    statements in the current session.
  * sql: Added deallocate statements with the syntax 'DEALLOCATE [PREPARE]
    { number | ALL }', to close an existing prepared statement or all,
    through the SQL layer. Previously this feature was available via MAPI
    exclusively with the "release" command.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * MonetDB: Added mserver5 option (--set raw_strings=true|false) and monetdb
    database property (raw_strings=yes|no) to control interpretation
    of strings.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * gdk: Removed the tunique property.  The tunique property indicated that
    all values in the column had to be distinct.  It was removed because
    it wasn't used.

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * monetdb5: Removed function bat.setKey().

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Added support for raw strings using the syntax r'' or R''. This means
    that C-like escapes will remain uninterpreted within those strings. For
    instance SELECT r'\"' returns a string of length two. The user needs
    to escape single quotes by doubling them: SELECT r''''.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Implemented ROLLUP, CUBE and GROUPING SETS from SQL:1999. They
    define grouping subsets used with the GROUP BY clause in order to
    compute partial groupings. Also, the GROUPING aggregate was
    added. This aggregate is a bitmask identifying the grouping columns
    not present in the generated grouping row when used with the
    operators described above.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * gdk: BATrangeselect now has two extra arguments: anti and symmetric
    (both bool).

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * monetdb5: algebra.rangejoin now has two extra arguments: anti:bit and
    symmetric:bit.

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * monetdb5: Added session identifier, number of workers and memory claim to the
    sysmon queue.
  * monetdb5: The worker (number of threads), memory (in MB) and optimizer pipeline
    limits can now be set per user session basis. The query and session
    timeouts are now set in seconds.
  * monetdb5: With required privileges an user can set resource limits for a session.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Updated user session procedures by adding the possibility to set properties
    based on a session identifier.
    Optimizer pipeline: sys.setoptimizer(int, string)
    Number of worker threads: sys.setworkerlimit(int, int)
    Memory limits (in MB): sys.setmemorylimit(int, int)
    Query timeout (in ms): sys.setquerytimeout(int, int)
    Session timeout (in ms): sys.setsessiontimeout(int, int)
    The first argument corresponds to the id of the session to modify, and
    these procedures are bound to the monetdb user exclusively.
    The versions of the mentioned procedures with just the second argument were
    added as well, where the changes are reflected in the current user session,
    and therefore every user can call them.
  * sql: The procedures sys.settimeout(bigint), sys.settimeout(bigint,bigint)
    and sys.session(bigint) are now deprecated. Instead use sys.setquerytimeout
    and sys.setsessiontimeout mentioned above.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * monetdb5: There are now versions of group.(sub)group(done) that produce a single
    output containing just the groups.
  * monetdb5: algebra.join and algebra.leftjoin now have forms which return a single
    column.  The column that is returned is the left column of the two
    column version.

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * sql: Added SQL procedure sys.hot_snapshot() which can be used to write
    a snapshot of the database to a tar file. For example,
    sys.hot_snapshot('/tmp/snapshot.tar'). If compression support is
    compiled in, snapshots can also be compressed ('/tmp/snapshot.tar.gz').
    The tar file expands to a single directory with the same name as the
    database that was snapshotted. This directory can be passed directly
    as the --dbpath argument of mserver5 or it can be copied into an
    existing dbfarm and started from monetdbd.

 -- Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * clients: Added 'sessionid' column to system function sys.queue(), so each query
    gets tagged with the current session identifier

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * clients: Allow monetdb user to control session and query time out and selectively
    stopping a client sessions with a soft termination request.

 -- Martin Kersten <mk@cwi.nl>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.37.1) unstable; urgency=low

  * monetdb5: The MAL profiler now assigns the SQL TRACE output to the client record
    thereby avoiding the interaction with other queries, but loosing
    insight of competing queries. The stethoscope should be used for that.

 -- Martin Kersten <mk@cwi.nl>  Sat, 22 Feb 2020 11:10:50 +0200

monetdb (11.35.19) unstable; urgency=low

  * Rebuilt.
  * BZ#6829: NTILE window function returns incorrect results

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 22 Feb 2020 08:49:38 +0100

monetdb (11.35.17) unstable; urgency=low

  * Rebuilt.
  * BZ#6827: CUME_DIST window function returns incorrect results

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 21 Feb 2020 14:22:38 +0100

monetdb (11.35.15) unstable; urgency=low

  * Rebuilt.
  * BZ#6817: running analyze on a schema which contains a stream table
    stops with an error
  * BZ#6819: functions do not persist

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 17 Feb 2020 12:40:46 +0100

monetdb (11.35.13) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 12 Feb 2020 11:03:15 +0100

monetdb (11.35.11) unstable; urgency=low

  * Rebuilt.
  * BZ#6805: Using the cascade operator in a drop table statement ends in
    an exit from the Monetdb shell.
  * BZ#6807: Median_avg and quantile_avg ignore NULL values
  * BZ#6815: query with ifthenelse() crashes mserver5
  * BZ#6816: Monetdb Crashes on INSERT statement after ALTER statement in
    another connection

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 11 Feb 2020 14:07:49 +0100

monetdb (11.35.9) unstable; urgency=low

  * Rebuilt.
  * BZ#6804: DNS resolution of 0.0.0.0 fails on recent Ubuntus

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 18 Dec 2019 11:02:41 +0100

monetdb (11.35.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 17 Dec 2019 10:03:07 +0100

monetdb (11.35.5) unstable; urgency=low

  * Rebuilt.
  * BZ#6723: columns aliases duplicates should not be allowed. automatic
    aliasing required.
  * BZ#6724: Prepare confuses types when more than one argument is used
  * BZ#6726: Python aggregation does not create aggr_group when aggregating
    over all rows
  * BZ#6765: GRANT SELECT privilege on a subset of table columns results
    in access denied error when selecting the same columns from the table
  * BZ#6790: Count distinct giving wrong results
  * BZ#6791: str_to_time('11:40', '%H:%M') creates wrong time value
  * BZ#6792: JSON path compiler accepts invalid input
  * BZ#6793: cast(interval second value to int or decimal) is wrong (by
    a factor of 1000), cast(interval month value to decimal or floating
    point) fails
  * BZ#6794: external name fits.listdir not bound (sys.listdir) Fatal
    error during initialization:
  * BZ#6796: Incorrect crash time reported by monetdb tool after crash
    of mserver5
  * BZ#6798: json.text off by one error

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 12 Dec 2019 09:24:08 +0100

monetdb (11.35.3) unstable; urgency=low

  * Rebuilt.
  * BZ#3533: SQL aggregate functions avg(), sum() and median() return an
    error when used on a column with datatype interval second

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 25 Nov 2019 12:34:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * Rebuilt.
  * BZ#6134: Query produces error: HEAPalloc: Insufficient space for HEAP
    of 1168033427456 bytes.
  * BZ#6613: LATERAL crash /.../rel_bin.c:1473: rel2bin_table: Assertion
    `0' failed.
  * BZ#6683: Bug in subselect
  * BZ#6686: Bug in subselect (count function)
  * BZ#6688: Bug in subselect (or condition)
  * BZ#6689: Trying to improve the performance of SQL queries with a large
    list of members in IN clause.
  * BZ#6695: timestamp transformation
  * BZ#6700: Monetdb Bugs in Subselect statements:
  * BZ#6722: window functions issues
  * BZ#6740: while upgrading the database from verison (MonetDB-11.27.13)
    to (MonetDB-11.33.3) we are unable to bring up the database
  * BZ#6754: in mclient a strang msg is reported after issueing command:
    set schema sys;
  * BZ#6755: Assertion failure in rel_bin.c
  * BZ#6756: Error in optimizer garbageCollector on merge tables select
  * BZ#6757: Double free or corruption (out)
  * BZ#6758: SIGSEGV in __strcmp_sse2_unaligned()
  * BZ#6759: Python JSON loader creates invalid data type for strings
  * BZ#6761: Error: Program contains errors.:(NONE).multiplex
  * BZ#6762: mserver5 crashes on (re-)start
  * BZ#6764: mserver5 crashes with corruption, double free, invalid size
    or invalid pointer
  * BZ#6766: Missing bulk implementation for get_value and next_value calls
  * BZ#6769: ProfilerStart is not threadsafe
  * BZ#6771: R-devel
  * BZ#6773: json.filter returns corrupted string when selecting JSON
    null value
  * BZ#6774: PROD aggregation gives wrong result
  * BZ#6775: NOT IN with an AND containing an OR gives wrong result
  * BZ#6776: Creating a table with a full outer join query gives type with
    wrong digits on the joined key.
  * BZ#6779: Using Windows Messages translation for errno error codes.
  * BZ#6780: Wrong value of the rank function
  * BZ#6781: Insert after index creation crash
  * BZ#6783: AVG changes scale of its results
  * BZ#6784: function sys.isauuid(string) should return false if string
    value cannot be converted to a UUID

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 18 Nov 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * sql: Removed functions json.text(string) returns string and json.text(int)
    returns string. Their MAL implementation didn't exist, so they were
    meaningless.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Mon, 4 Nov 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * merovingian: Added "vmmaxsize" and "memmaxsize" mserver5 options to the daemon in
    order to set mserver5's maximum virtual and committed memory
    respectively.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 17 Oct 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * sql: Strings are now limited to 1GB, double-quoted tokens are limited to 2kB.
    These sizes are bytes of (UTF-8 encoded) input data.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 25 Sep 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * sql: There are new aggregate functions sys.median_avg and sys.quantile_avg
    that return the interpolated value if the median/quantile doesn't fall
    exactly on a particular row.  These functions always return a value
    of type DOUBLE and only work for numeric types (various width integers
    and floating point).

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 23 Sep 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * gdk: BATcalcbetween and all its variants now have an extra bool parameter
    "anti" to invert the test.

 -- Sjoerd Mullender <sjoerd@acm.org>  Sun, 8 Sep 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * monetdb5: The server "console" has been removed, as has the --daemon option.
    The server now doesn't read from standard input anymore.  The way to
    stop a server is by sending it a TERM signal (on Linux/Unix) or by
    sending it an interrupt signal (usually control-C -- on all
    systems).

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 5 Sep 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * sql: Added sys.deltas ("schema" string, "table" string, "column" string)
    returns table ("values" bigint) system function which returns a single
    column with 6 values: a flag indicating if the column's upper table is
    cleared or not, the count of the RDONLY, RD_INS and RD_UPD_ID deltas
    of the column itself, the number of deleted values of the column's
    table, as well as the level of the current transaction in the
    transaction level tree. It should be used for debugging purposes only.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 30 Aug 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * monetdb5: Implemented a function bat.diffcand to calculate difference of two
    candidate lists.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 30 Aug 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * monetdb5: The mtime module was completely rewritten, the atom types date,
    daytime, and timestamp were changed.  Upgrade code for BATs
    containing these types has been implemented.  The old daytime type
    used a 32 bit integer to record milliseconds since the start of the
    day.  The new daytime type uses a 64 bit integer to record
    microseconds since the start of the day.  The old date type recorded
    days since or before the year 1.  The new daytime type records the
    day of the month and the number of months since the year -4712
    separately in a single 32 bit integer of which only 26 bits are
    used.  Dates now use the proleptic Gregorian calendar, meaning the
    normal Gregorian callendar has been extended backward, and before
    the year 1, we have the year 0.  Both the old and new timestamp
    types are a combination of a daytime and a date value, but since
    those types have changed, the timestamp type has also changed.  The
    new date type has a smaller range than the old.  The new date range
    is from the year -4712 to the year 170049.  During conversion of
    date and timestamp columns, the dates are clamped to this range.
  * monetdb5: The tzone and rule atom types have been removed.  They were not used
    by any code, and they were defined in a non-portable way.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 30 Aug 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * sql: Added "VALUES row_list" statement as a top SQL projection statement.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 30 Aug 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * merovingian: Added ipv6 property to monetdbd properties to force IPv6 addresses
    binding only.  By default this property is false to allow IPv4
    addresses as well.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 30 Aug 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * monetdb5: Added "mapi_ipv6" property to monet_options to force ipv6 address
    binding only.  This property is inherited while forking from
    monetdbd if it is also set there.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 30 Aug 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * gdk: All forms of BATcalcbetween and VARcalcbetween have extra bool arguments
    for low inclusive, high inclusive and nils false.  The latter causes
    the result to be false instead of nil if the value being checked is nil.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 30 Aug 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * monetdb5: Removed (bat)calc.between_symmetric and changed (bat)calc.between
    by adding a number of extra arguments, all of type :bit: symmetric,
    low inclusive, high inclusive, nils false.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 30 Aug 2019 12:22:22 +0100

monetdb (11.35.1) unstable; urgency=low

  * sql: The implementation of in-expression now follows a join-based approach
    instead of using iterative union/selects. This greatly improves
    performance for large in-value-lists. Furthermore the old approach has
    large in-value-lists generate large MAL plans. This is now no longer
    the case.

 -- Aris Koning <aris.koning@monetdbsolutions.com>  Fri, 30 Aug 2019 12:22:22 +0100

monetdb (11.33.11) unstable; urgency=low

  * Rebuilt.
  * BZ#6749: mserver5 restart aborts/segfaults after dropping column
    with constraint

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 30 Aug 2019 02:27:33 +0200

monetdb (11.33.9) unstable; urgency=low

  * Rebuilt.
  * BZ#6571: Jdbc connection hangs
  * BZ#6693: mix of long and short queries make JDBC-driver hang
  * BZ#6741: report no such table when execute “alter table tb1 rename
    to tb2” according to using mapi
  * BZ#6744: CREATE SEQUENCE seq;  fails
  * BZ#6748: MonetDB "forgets" columns after ALTER TABLE statements
  * BZ#6751: ODBC driver(11.33.3) Seg Faults when "fn ucase" is used in SQL

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 20 Aug 2019 13:39:03 +0200

monetdb (11.33.9) unstable; urgency=low

  * sql: Many fixes for using the server in a highly concurrent setting with
    many clients doing read-only queries mixed with clients doing updating
    queries.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 20 Aug 2019 13:39:03 +0200

monetdb (11.33.7) unstable; urgency=low

  * Rebuilt.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Wed, 07 Aug 2019 13:35:13 +0200

monetdb (11.33.5) unstable; urgency=low

  * Rebuilt.
  * BZ#6697: Duplicate expressions not eliminated with long CASE statement
  * BZ#6701: When changing the schema name of a table, referencing rows
    from sys.columns, sys.keys and more tables are not removed
  * BZ#6703: SQL optimizer enters loop and goes into stack overflow
  * BZ#6706: prepare doesn't recognize merge statement
  * BZ#6712: Where clause with cast ignores sub-select
  * BZ#6713: COPY INTO FROM 'file.xz' does not work
  * BZ#6714: Assertion failure in rel_select.c for correlated subquery in
    aggregation query (with group by and having and order by and limit)
  * BZ#6715: Assertion failure in rel_bin.c for MERGE INTO command
  * BZ#6716: COPY INTO does not load UTF8 encoded text
  * BZ#6718: Can't copy table into another table with constraints
    (mkey.bulk_rotate_xor_hash)
  * BZ#6720: Compilation issues on gcc 9.1.1 [-Werror=stringop-truncation]
  * BZ#6721: Possibly incorrect call to pcre_exec
  * BZ#6725: Prepare statement on non-existing function crashes
  * BZ#6728: SELECT DISTINCT not removing duplicates
  * BZ#6729: Creating a table with duplicate column name should not
    be possible
  * BZ#6730: sys.stop or sys.pause a INSERT query triggers "BATproject:
    does not match always"
  * BZ#6736: Unexpected query result with merge tables and view after
    upgrade
  * BZ#6738: issue with window functions and hugeint type coercion

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Thu, 01 Aug 2019 11:56:38 +0200

monetdb (11.33.5) unstable; urgency=low

  * gdk: We now look at the limits imposed by cgroups and the setrlimit system
    call to initialize some internal values related to how much (virtual)
    memory we think is available.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 15 Jul 2019 11:56:38 +0200

monetdb (11.33.5) unstable; urgency=low

  * buildtools: Removed restriction on using combinations of --enable-assert,
    --enable-debug,  and --enable-optimize.  --enable-debug adds a -g (or
    -even -g3) option, --enable-debug=gdb adds a -ggdb3 flag (for GCC);
    --enable-optimize adds a bunch of optimization flags; --disable-debug
    (or --enable-debug=no) removes any -g flags; --disable-optimize
    removes any -O flags; --enable-optimize=auto leaves the optimization
    flags untouched.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 12 Jul 2019 11:56:38 +0200

monetdb (11.33.5) unstable; urgency=low

  * sql: Changed the internal representation of RANGE MINVALUE and RANGE MAXVALUE
    in MERGE TABLE partitions.  Before, the limits were represented by
    the smallest and largest value of the domain of the column, now these
    are represented by a NULL value.  This has the added benefit that if
    you use TO RANGE MAXVALUE, the largest value of the domain is included
    in the partition (before it wasn't).  Also, these new limits now work
    for any ordered type, so including VARCHAR.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Jun 2019 11:56:38 +0200

monetdb (11.33.3) unstable; urgency=low

  * Rebuilt.
  * BZ#6647: Add suport to Python 3 on Windows
  * BZ#6696: Re-use of MAL explain plans with complex type coercions

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 26 Apr 2019 15:11:15 +0200

monetdb (11.33.1) unstable; urgency=low

  * Rebuilt.
  * BZ#2403: stream: http read support in streams
  * BZ#2416: GDK: file/dir creation mask
  * BZ#2478: SQL: rename columns
  * BZ#2496: SQL: implement greatest / least
  * BZ#3384: Auxiliary window functions
  * BZ#3416: log() SQL function only supports natural logarithm
  * BZ#3448: Make lbatomic_ops optional if installed
  * BZ#3520: Add support for scalar function LN(num)
  * BZ#3530: sigabort on window aggr function
  * BZ#3567: Add support for: ALTER TABLE [schema1.]oldtablename RENAME [TO]
    [schema2.]newtablename
  * BZ#3743: DELETE FROM merge table not supported.
  * BZ#3832: Cannot use expressions in GROUP BY clause
  * BZ#3946: Expose C log2 function to SQL
  * BZ#4056: mapi_timeout is not implemented
  * BZ#6181: comments cause error with return in function
  * BZ#6326: Eliminate unused UNION tables
  * BZ#6347: Mserver returns with "memory exhausted in" error if query
    size exceeds 2.5MB
  * BZ#6402: JDBC: Support for Connection.prepareCall
  * BZ#6475: Remove unused SQL global variable "history"
  * BZ#6588: Table aliasing are not supported in SQL update queries
  * BZ#6591: Name mangling in the SQL catalog results in ambiguity
  * BZ#6608: Sqlitelogictest error message in group by with coalesce
  * BZ#6609: Rename Schema in MonetDB
  * BZ#6636: sys.queue() extension: allow DBA to see all running queries
  * BZ#6671: Error when running user function on merge table with remote
    part
  * BZ#6674: R UDF with Date type fails to convert RAPI
  * BZ#6676: Max data length of 2048 for column sys._tables.query is too
    small for the actual data (2811 for view sys.ids)
  * BZ#6678: Binding NULL parameter to parametrized query results in syntax
    error on execution
  * BZ#6680: Copy cannot open CSV file if systemctl enabled
  * BZ#6684: Inserting into a replica table crashes the server
  * BZ#6685: adding a view to a merge table gives unexpected behaviour
  * BZ#6690: Unable to fetch empty string with ODBC driver

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 05 Apr 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * merovingian: Added a new database property named `profilerbeatfreq`. Its value,
    <freq>, should be an integer and, if it is set the command
    `profilerstart` will call stethoscope with this value as the
    argument to -b. This will instruct stethoscope to collect heartbeat
    events from the MonetDB server every <freq> milliseconds. Please note
    that no type checking is done, and if
    <freq> is not an integer, stethoscope will silently ignore it.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Tue, 19 Mar 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * buildtools: We now use the C11 atomic operations if available, although
    libatomic_ops is still used if present and not disabled on the configure
    command line.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 19 Mar 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * gdk: During processing, we now try to maintain the smallest and largest
    values that occur in a BAT.  This information is not saved across
    server restarts.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 19 Mar 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * selinux: There is one tunable parameter, mserver5_can_read_home, which can
    be set using "setsebool -P mserver5_can_read_home=true" to allow an
    mserver5 process started by monetdbd under the control of systemd to
    read files in users' home directories.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 19 Mar 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * monetdb5: Changed the way blobs are ordered.  Before, shorter blobs came before
    longer, now the contents is compared first.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 8 Feb 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Implemented two-argument least/greatest functions.  If one argument
    is NULL, the functions return the other value, otherwise they return
    the least/greatest of the two arguments.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 28 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Implemented SQL2003 natural logarithm function: ln(num_expr).

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 24 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * monetdb5: Removed function blob.tostring() since it cannot guarantee that the
    resulting string is properly encoded in UTF-8.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 23 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Function octet_length now also accepts a BLOB argument and returns
    the length of the BLOB (i.e. the same as length when called with a
    BLOB argument).

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 23 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * monetdb5: Removed the type "sqlblob", changed the external format of the type
    "blob" to be like what "sqlblob" used to be.  In other words, the
    "blob" type is now SQL-compatible.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 22 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Implemented length(blob) and comparison between blobs.
  * sql: Implemented a two argument function log which calculates the logarithm
    of the first argument using the second argument as base.
  * sql: Next to the functions log (natural logarithm) and log10 (base 10
    logarithm), there is now also log2 (base 2 logarithm).

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 22 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Removed unused global SQL variable "history".

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 18 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Allow usage of custom expressions in GROUP BY and PARTITION BY
    clauses. The same expressions can be used in the projection phase as
    long as it is exactly the same used in the grouping clause (textual
    lookup is performed). As an example the query:
    SELECT col1*2 FROM t1 GROUP BY col1*2; is correct, while
    SELECT sin(col1+5) FROM t1 GROUP BY col1*2; is wrong.
  * sql: Allow usage of WITH clauses in insert, update, delete and merge
    statements.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Implemented merge statements from SQL:2003 standard. Using a source
    relation R, a target table T is updating depending on the result of
    the merge. In case of a match, the table T's row is either updated
    or deleted with R's row. In a non-match case, R's row is inserted
    into T. The grammar is the follows:
    > MERGE INTO target [ [AS] ident ] USING source ON search_condition
    { WHEN MATCHED [ AND search_condition ] THEN
      { UPDATE SET assignment_list | DELETE } } |
    { WHEN NOT MATCHED [ AND search_condition ] THEN
      INSERT [ column_list ] [ { DEFAULT VALUES | VALUES row_values } ] }
  * sql: Added possibility to change the schema of a table with the syntax:
    > ALTER TABLE [ IF EXISTS ] qname SET SCHEMA ident
  * sql: Added optional alias option for target table in update and delete
    statements: (e.g. UPDATE target AS alias SET col1=1 WHERE alias.col2 < 5)

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Improved and extended storagemodel functionality. Changes include:
  * sql: Added views sys."tablestorage" and sys."schemastorage" for easy and
    quick assesment of aggregated storage usage per table or per schema.
  * sql: Excluded listing system tables in views sys."storage", sys."tablestorage"
    and sys."schemastorage". You can still use sys."storage"() to query
    storage of system tables and columns.
  * sql: In procedure sys.storagemodelinit() when populating table
    sys.storagemodelinput it now excludes system tables as system tables are
    not useful to be modeled for storagesize by application users.
    It now also computes and populates the atomwidth column more correctly
    for variable size data types (strings, blobs) when the table has
    representative data in those columns.
  * sql: System function sys.columnsize() has been corrected for types: tinyint,
    real, date, time, timetz, sec_interval, month_interval, decimal, uuid,
    mbr, char, clob, json, url, blob, geometry and geometrya.
    For variable size data types (varchar, char, clob, json, url, blob,
    geometry, geometrya) it now returns the columnsize excluding the
    variable heapsize. The heapsize is retrievable via sys.heapsize().
  * sql: System function sys.heapsize() has been corrected for all variable size
    data types: varchar, char, clob, json, url, blob, geometry and geometrya.
  * sql: System function sys.imprintsize() has been corrected. The imprintsize
    depends on the width (1 or 2 or 4 or 8 or 16 bytes) of the data type.
    Also instead of 12% it now uses 20%, which is a better estimate.
  * sql: System function sys.storagemodel() has been removed as it outputs the
    same data as view sys.storagemodel. Use view sys.storagemodel instead.
  * sql: Corrected views sys.storagemodel and sys.tablestoragemodel by returning
    a computed orderidxsize when the count has been changed in the
    sys.storagemodelinput table.  Also the views now return data ordered
    by schema, table and column names.
  * sql: Extended view sys.tablestoragemodel with column: "storages". Besides
    columns also keys (primary, foreign and unique keys) and indexes
    (ordered, imprints) use storage, so the "storages" count can be higher
    than the number of columns per table.
  * sql: Corrected the data type of columns "schema", "table", "column", "type",
    "mode" and location in table sys.storagemodelinput and functions
    sys."storage"(), sys."storage"(sname), sys."storage"(sname, tname)
    and sys."storage"(sname, tname, cname) from string into varchar(1024).
    Consequently also the views based on the table or functions will be
    reporting varchar(1024) as column meta data instead of clob for those
    columns.  This allows faster querying and reporting by generic SQL
    programs which treat clob querying different from varchar columns.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Extended windowing functions catalog with SQL standard semantics.
    Standard aggregation functions can now be used in windowing
    functions: (avg,max,min,sum,prod,count). Other windowing specific
    functions were also implemented: (percent_rank,cume_dist,ntile,
    lag,lead,first_value,last_value,nth_value).
  * sql: The standard frame specification was implemented for aggregation
    functions as well as first_value, last_value and nth_value
    functions. The available frames are rows, range and groups.
    Bounds can be unbounded (partition limit), the current row, a fixed
    number of rows (constant), or variable (column as input).
    (e.g SELECT COUNT(col1) OVER (PARTITION BY col2 ORDER BY col3 RANGE
    BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t1;).
  * sql: Added WINDOW keyword which is optionally provided after the FROM
    clause, with window specifications used in the projection
    (e.g SELECT SUM(col1) OVER w1, LAST_VALUE(col2) OVER w2 FROM t1
    WINDOW w1 AS (ROWS BETWEEN 5 PRECEDING AND 0 FOLLOWING),
    w2 AS (w1);).
  * sql: Our previous partitioning implementation didn’t impose order in the
    input. With this reexamination, partitioning now imposes ascending
    order by default, thus pairing with the industry standard
    implementation.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Implemented X'...' style binary string literals.
  * sql: Implemented U&'...' Unicode character string literals and
    U&"..." Unicode delimited identifiers, including UESCAPE.  For the
    string literals, you can have U&'...' '...' '...' UESCAPE '...' where
    the escape must be as single character and the other '...' strings
    are also Unicode character string literals.  For now, these latter
    strings also undergo C-style backslash interpretation.
  * sql: Implemented PostgreSQL-like E'...' strings.  The strings can contain
    C-style backslash escapes.  The old format strings '...' currently
    still also accept C-style escapes, but that feature will be removed
    in a future release.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * gdk: Added an extra argument of type `bool' to the atom to string and
    string to atom methods to indicate whether the string is for
    internal use (casting the value to or from a string) of external use
    (to be printed).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * monetdb5: The MAL functions algebra.sort and algebra.firstn now have a new,
    extra second-to-last argument, nilslast:bit, which indicates where
    NIL values are to be sorted: at the beginning, or at the end.  The old
    behavior is when for algebra.sort, the value of nilslast is equal to
    the value or the reverse:bit parameter, for algebra.firstn when the
    value of nilslast is opposite to the value of the asc:bit parameter.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Implemented the NULLS FIRST and NULLS LAST option to ORDER BY.  The
    default is NULLS FIRST for ASC(ending) and NULLS LAST for DESC(ending).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * gdk: Implemented a nilslast option for BATfirstn.  If set, NILs come
    last in the ordering that BATfirstn simulates, so non-NIL values are
    preferentially returned.  The old behavior can be obtained by setting
    nilslast to !asc(ending).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * gdk: Implemented a nilslast option for BATsort.  This option should be
    equal to the reverse option for stable sort (it is not implemented for
    stable sort), but can be different from reverse for non-stable sort.
    The functions BATsort and GDKqsort have extra parameters, the function
    GDKqsort_rev has been removed (superseded by GDKqsort with the new
    `reverse' parameter).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * gdk: The BUNtail, BUNtvar, BUNtloc, and BUNtpos macros (and Tloc and Tpos)
    now return a `void *' instead of a `char *'.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Added possibility to rename SQL schemas, tables and columns with ALTER
    statements:
    > ALTER SCHEMA [ IF EXISTS ] ident RENAME TO ident
    > ALTER TABLE [ IF EXISTS ] qname RENAME TO ident
    > ALTER TABLE [ IF EXISTS ] qname RENAME [ COLUMN ] ident TO ident
    Also added optional IF EXISTS clause to other existing ALTER TABLE
    statements.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * clients: The mclient program can now be quit by typing quit or exit on the
    command-line.  This makes it easier for novice users to quit the program
    if they do not know that the standard command to quit is \q.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low


 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: The sql SAMPLE syntax is extended to include an optional integral SEED
    parameter that sets the seed for the internal random number generator
    in the sample algorithm.  When the seed is set, the user can obtain
    a reproducible sample set from a static dataset with the same sample
    query. The new syntax is
    SELECT ... FROM ... WHERE ... SAMPLE <expr> [SEED <integer>]

 -- Aris Koning <aris.koning@monetdbsolutions.com>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Implemented a version of COPY INTO that reads/writes files from/to
    the client instead of doing it in the server.  This has the
    advantage that COPY INTO is then no longer restricted to only the
    "super user" monetdb, nor only to absolute file names.  The syntax
    to have the server communicate with the client for file content is
    COPY INTO table FROM file ON CLIENT ...; and COPY query INTO file ON
    CLIENT ...;.  This also works for COPY BINARY INTO.  There is also
    the possibility to specify that files are to be read/written by the
    server by using ON SERVER.  This is also the default when ON CLIENT
    or ON SERVER is not specified.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * stream: The functions mnstr_write{Sht,Int,Lng,Hge} and their Array variants
    now swap bytes of the written values if the stream is set to swap bytes
    (i.e. big-endian on a little-endian machine and v.v.).
  * stream: Removed defines ST_ASCII, ST_BIN, ST_READ, ST_WRITE from stream.h.
  * stream: Changed function mnstr_set_byteorder(stream, char) to
    mnstr_set_bigendian(stream, bool) where the second argument should
    be `true' for specifying that the stream is bigendian.  This sets an
    internal flag whether or not to swap bytes which can be retrieved
    with mnstr_get_swapbytes(stream).
  * stream: Changed function `int mnstr_byteorder(stream)' to `bool
    mnstr_get_swapbytes(stream)'; it now returns whether bytes are
    swapped.
  * stream: Changed function `int mnstr_type(stream)' to `bool
    mnstr_isbinary(stream)'.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * mapilib: Removed function mapi_cache_shuffle.
  * mapilib: Removed function mapi_stream_query.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * buildtools: We now also build the Python 3 integration packages for Fedora, Debian,
    Ubuntu, and Windows (not for Debian 8, Ubuntu 14.04, or EPEL 6 and 7
    which are too old).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * gdk: Function PROPdestroy now takes a BAT* parameter.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * gdk: A whole bunch of functions now take a bool argument instead of an
    int argument.  Some functions now return a bool instead of an int.
    In all these cases, the int was used as a Boolean value.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: The sys.functions table now has an extra column called "system" of
    type BOOLEAN whose value is TRUE for system functions (i.e. functions
    that should not be dumped).  The table sys.systemfunctions has been
    changed to a view and is now officially deprecated.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.33.1) unstable; urgency=low

  * sql: Extended merge tables with partitioning using a predicate:
    > CREATE MERGE TABLE [ IF NOT EXISTS ] table_name (... columns ...)
    [ PARTITION BY { RANGE | VALUES }
    { ON '(' column_name ')' | USING '(' expression ')' } ]
    The partitioning can occur by range or list of values using one of
    the table's columns or an expression. The domain of the partitioning
    scheme will be covered by each child table added with alter statements
    depending if the table is partitioned by range or list of values:
    > ALTER TABLE merge_table_name { ADD | SET } TABLE child_table_name
    AS PARTITION IN '(' expression [ ',' ... ] ')' [ WITH NULL ]
    > ALTER TABLE merge_table_name { ADD | SET } TABLE child_table_name
    AS PARTITION BETWEEN { RANGE MINVALUE | expression } AND
    { RANGE MAXVALUE | expression } [ WITH NULL ]
    > ALTER TABLE merge_table_name { ADD | SET } TABLE child_table_name
    AS PARTITION WITH NULL
    When updating a single partition range/list of values, the SET
    keyword should be used instead of ADD.
    INSERT, UPDATE and DELETE statements are possible on partitioned
    tables with corresponding validation on each partition domain.
    The system tables sys.table_partitions, sys.range_partitions and
    sys.value_partitions were added to store meta-information about
    each existing partition.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 4 Jan 2019 15:26:55 +0200

monetdb (11.31.13) unstable; urgency=low

  * Rebuilt.
  * BZ#6643: schema name qualifier in create global temporary table
    json.table6643 ... is not honered
  * BZ#6645: optimizer treats all the functions with no or constant
    parameters as constant
  * BZ#6650: PREPARE SQL statement fails to compile user defined functions
    with parameter/s
  * BZ#6651: Multi-column IN clause for subquery produces wrong results
  * BZ#6653: CREATE TABLE accepts empty table/column name
  * BZ#6654: Incorrect handling of 'TRUE' in compound select
  * BZ#6657: Restart sequence with a non atomic sub-query cardinality
    gives wrong error message
  * BZ#6660: GRANTing a ROLE is not idempotent
  * BZ#6662: Concurrency Conflicts Exception string "!transaction is
    aborted because of concurrency conflicts, will ROLLBACK instead" not
    shown on prompt.
  * BZ#6664: mserver5 crash: infinite recursive happens at rel_bin.c:489
  * BZ#6665: Creation of serial types does not accept negative numbers
  * BZ#6666: COPY INTO from .. LOCKED doubles input data
  * BZ#6668: The SAMPLE key word doesn't work in a subquery.
  * BZ#6669: COPY [xxx RECORDS] INTO foo FROM STDIN ... doesn't work
    without specifying nr of to be copied records
  * BZ#6672: SQLGetData with SQL_C_WCHAR string truncation and invalid
    StrLen_or_Ind value

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 04 Jan 2019 10:34:42 +0100

monetdb (11.31.13) unstable; urgency=low

  * sql: Disabled function sys.getcontent(url).

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 30 Oct 2018 10:34:42 +0100

monetdb (11.31.13) unstable; urgency=low


 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 11 Oct 2018 10:34:42 +0100

monetdb (11.31.11) unstable; urgency=low

  * Rebuilt.
  * BZ#6648: key property potentially wrong after type conversion
  * BZ#6649: Projection inside within transaction gives wrong results

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 11 Oct 2018 09:48:25 +0200

monetdb (11.31.11) unstable; urgency=low

  * MonetDB: Some subtle dependencies between RPMs have been fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 10 Oct 2018 09:48:25 +0200

monetdb (11.31.9) unstable; urgency=low

  * Rebuilt.
  * BZ#6640: timestamp_to_str returning incorrectly adjusted results
  * BZ#6641: race condition in SQL UDF with update
  * BZ#6642: Hanging query
  * BZ#6646: Example SQLcopyinto.java does not work

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 05 Oct 2018 09:50:02 +0200

monetdb (11.31.9) unstable; urgency=low

  * buildtools: On Ubuntu 18.10 (Cosmic Cuttlefish), the libmonetdb5-server-bam package
    cannot be built because of an incompatibility in the libbam library
    (it cannot be used in a shared object).

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Oct 2018 09:50:02 +0200

monetdb (11.31.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 29 Aug 2018 13:19:10 +0200

monetdb (11.31.5) unstable; urgency=low

  * Rebuilt.
  * BZ#6506: Improper performance counters
  * BZ#6606: Misleading parameter name in generate_series function
  * BZ#6639: COMMENT ON TABLE abc IS NULL invalidly sets the remark column
    to null where remark column is defined as NOT NULLable

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 29 Aug 2018 09:22:10 +0200

monetdb (11.31.5) unstable; urgency=low

  * buildtools: Build the MonetDB-cfitsio RPM and libmonetdb5-server-cfitsio
    Debian/Ubuntu package.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 28 Aug 2018 09:22:10 +0200

monetdb (11.31.5) unstable; urgency=low

  * merovingian: Added a "logrotate" configuration file.  See /etc/logrotate.d/monetdbd.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 27 Aug 2018 09:22:10 +0200

monetdb (11.31.3) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 21 Aug 2018 09:59:19 +0200

monetdb (11.31.1) unstable; urgency=low

  * Rebuilt.
  * BZ#4020: Importing timestamp with zone from copy into
  * BZ#6564: Changes to the Remote Table definition
  * BZ#6575: Sqlitelogictest crash on groupby query with coalesce call
  * BZ#6579: Sqlitelogic test infinite loop while compiling SQL query
  * BZ#6586: Sqlitelogictest crash on complex aggregation query
  * BZ#6593: Poor performance with like operator and escape clause
  * BZ#6596: Multicolumn aggregation very slow after ANALYZE when persistent
    hashes are enabled
  * BZ#6605: Sqlitelogictest set queries with wrong results
  * BZ#6610: Sqlitelogictest algebra.rangejoin undefined
  * BZ#6611: Cannot compile with GCC 8.1 and --enable-debug=no
  * BZ#6612: Implement BLOB handling in python UDFs
  * BZ#6614: JDBC 2.35/2.36 throws NullPointerException on getObject(int i)
    on Timestamp column
  * BZ#6615: JDBC 2.35 returns "false" for Boolean NULL
  * BZ#6616: JDBC 2.35 returns minint (-2147483648) for int NULL
  * BZ#6618: dependency column on sequence violated by DROP SEQUENCE
  * BZ#6621: SELECT FROM REMOTE TABLE WHERE <> returns wrong results
  * BZ#6624: "Cannot use non GROUP BY column in query results without an
    aggregate function" when using aggregate function in both HAVING and
    ORDER BY clauses.
  * BZ#6625: OR in subselect causes the server to crash with segmentation
    fault
  * BZ#6627: stddev_pop inconsistent behaviour
  * BZ#6628: User cannot insert into own local temporary table
  * BZ#6629: CREATE TABLE IF NOT EXISTS returns 42000!
  * BZ#6630: Sqlitelogictest cast NULL to integer failing
  * BZ#6632: Dataflow causes crash when THRnew fails
  * BZ#6633: ILIKE clauses don't work on certain characters
  * BZ#6635: monetdbd exits due to "Too many open files" error
  * BZ#6637: Within a transaction, d after an error causes mclient to exit
  * BZ#6638: (sequences of) mkey.bulk_rotate_xor_hash() can generate NIL
    from non-NIL making multi-col joins return wrong results

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 15 Aug 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * clients: ODBC SQLGetInfo now returns a positive numeric value for InfoTypes:
    SQL_MAX_COLUMN_NAME_LEN, SQL_MAX_DRIVER_CONNECTIONS,
    SQL_MAX_IDENTIFIER_LEN, SQL_MAX_PROCEDURE_NAME_LEN,
    SQL_MAX_SCHEMA_NAME_LEN, SQL_MAX_TABLE_NAME_LEN and
    SQL_MAX_USER_NAME_LEN.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 2 Aug 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * gdk: Hash indexes are now persistent across server restarts.
  * gdk: The macros bunfastapp and tfastins and variants no longer set the dirty
    flag of the heap they write to.  This now needs to be done separately
    (and preferably outside of the inner loop).

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 30 Jul 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * gdk: Removed batDirty flag from BAT record.  Its function is completely
    superseded by batDirtydesc and the dirty flags on the various heaps.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 27 Jul 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * clients: ODBC: Implemented SQL_ATTR_QUERY_TIMEOUT parameter in SQLSetStmtAttr.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 24 Jul 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * gdk: Removed "masksize" argument of function BAThash.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 24 Jul 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * sql: Removed deprecated table producing system functions:
    sys.dependencies_columns_on_functions()
    sys.dependencies_columns_on_indexes()
    sys.dependencies_columns_on_keys()
    sys.dependencies_columns_on_triggers()
    sys.dependencies_columns_on_views()
    sys.dependencies_functions_on_functions()
    sys.dependencies_functions_on_triggers()
    sys.dependencies_keys_on_foreignkeys()
    sys.dependencies_owners_on_schemas()
    sys.dependencies_schemas_on_users()
    sys.dependencies_tables_on_foreignkeys()
    sys.dependencies_tables_on_functions()
    sys.dependencies_tables_on_indexes()
    sys.dependencies_tables_on_triggers()
    sys.dependencies_tables_on_views()
    sys.dependencies_views_on_functions()
    sys.dependencies_views_on_triggers()
    They are replaced by new system dependency_* views:
    sys.dependency_args_on_types
    sys.dependency_columns_on_functions
    sys.dependency_columns_on_indexes
    sys.dependency_columns_on_keys
    sys.dependency_columns_on_procedures
    sys.dependency_columns_on_triggers
    sys.dependency_columns_on_types
    sys.dependency_columns_on_views
    sys.dependency_functions_on_functions
    sys.dependency_functions_on_procedures
    sys.dependency_functions_on_triggers
    sys.dependency_functions_on_types
    sys.dependency_functions_on_views
    sys.dependency_keys_on_foreignkeys
    sys.dependency_owners_on_schemas
    sys.dependency_schemas_on_users
    sys.dependency_tables_on_foreignkeys
    sys.dependency_tables_on_functions
    sys.dependency_tables_on_indexes
    sys.dependency_tables_on_procedures
    sys.dependency_tables_on_triggers
    sys.dependency_tables_on_views
    sys.dependency_views_on_functions
    sys.dependency_views_on_procedures
    sys.dependency_views_on_views

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 7 Jun 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * gdk: A whole bunch of functions that took an int argument that was used as a
    Boolean (true/false) value now take a value of type bool.  The functions
    BATkeyed, BATordered and BATordered_rev now return a bool instead of
    an int.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * monetdb5: The lsst module was moved to a separate repository
    (https://dev.monetdb.org/hg/MonetDB-lsst/).

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * clients: Added a '-f rowcount' option in mclient to repress printing the actual
    data of a resultset, but only print the number of returned tuples

 -- Ying Zhang <y.zhang@cwi.nl>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * buildtools: On Windows, the separate MonetDB5-Geom installer has been incorporated
    into the main MonetDB5-SQL installer and is therefore no longer
    available as a separate download.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * merovingian: Changed the monetdb profilerstart command to be more robust.  If the
    server or stethoscope crashed before, the pid file is still there,
    so the next time we try to start stethoscope, it will fail.  Now the
    profilerstart command will check if a stethoscope process with the
    recorded pid is running. If not, we start stethoscope, assuming that
    something went wrong before.
  * merovingian: Changed the monetdb stop command to try to stop stethoscope before
    stoping the server. The error conditions that can arrise from attempting
    to stop stethoscope are:
    - The database is not running.
    - The profilerlogpath is not set.
    - The profiler.pid file does not exist or is inaccessible.
    - The contents of the profiler.pid are not valid.
    - Shutdown of stethoscope did not succeed.
    - Removing the profiler.pid file failed.
    In all the cases, the attempt to stop the server can continue normally,
    so we actually ignore any errors that rise from the attempt to stop
    stethoscope.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * testing: Removed helper programs Mtimeout and MkillUsers: they have long been
    superseded by timeout handling by Mtest.py itself.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * gdk: Removed the tdense property: it's function is completely replaced by
    whether or not tseqbase is equal to oid_nil.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * sql: Implemented group_concat(X,Y) aggregate function which also
    concatenates a column of strings X, but using a supplied string Y as
    the separator. This function is also a SQL extension.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * sql: Implemented group_concat(X) aggregate function which concatenates a
    column of strings using a comma as a separator. This function is not
    featured in the SQL standard.

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.31.1) unstable; urgency=low

  * stream: Added support for lz4 compressed files in the stream library

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Thu, 31 May 2018 10:52:45 +0200

monetdb (11.29.7) unstable; urgency=low

  * Rebuilt.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Thu, 31 May 2018 10:17:56 +0200

monetdb (11.29.5) unstable; urgency=low

  * Rebuilt.
  * BZ#6562: Sqlitelogictest crash on group by query with not in operator
  * BZ#6565: Sqlitelogictest crash on complex select query with coalesce
    call
  * BZ#6566: Sqlitelogictest unavailable calc.- MAL operations
  * BZ#6568: Sqlitelogictest crash on complex case query
  * BZ#6569: Sqlitelogictest select query with not between cause with
    wrong results
  * BZ#6570: Sqlitelogictest select coalesce undefined calc
  * BZ#6572: ordered index Error in optimizer garbageCollector
  * BZ#6573: Sqlitelogictest crash on complex select query with case
    statement
  * BZ#6574: server crashed could not find ordered index while creating
    a table
  * BZ#6576: Sqlitelogictest aritmetic expressions with negative numbers
    handling
  * BZ#6577: creating temp table kills performance of the original query
  * BZ#6578: One two-tuple insert gives different results than two single
    inserts
  * BZ#6581: Join condition errors.
  * BZ#6583: Fixed size string concatenation with integer results in fixed
    size string of size 0
  * BZ#6584: SELECT FROM REMOTE TABLE WHERE IS NOT NULL produces wrong
    result
  * BZ#6585: Nested Merge tables cause an infinite loop in rel_optimizer
  * BZ#6587: Sqlitelogictest crash on complex case statement
  * BZ#6589: Sqlitelogictest crash on complex on complex expression
  * BZ#6594: Sqlitelogictest crash on complex case statement
  * BZ#6595: Remote decimal division triggers assertion / returns wrong
    answer
  * BZ#6598: Python 3.4 not supported (due to usage of Py_DecodeLocale)
  * BZ#6600: Sqlitelogictest queries fail to execute
  * BZ#6601: "where is null" clause on remote table causes problem with
    next query
  * BZ#6602: Sqlitelogictest wrong results in IN query
  * BZ#6603: Sqlitelogictest: Aggregation query with distinct clause
    produces duplicated rows

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Fri, 25 May 2018 11:41:04 +0200

monetdb (11.29.5) unstable; urgency=low

  * sql: Corrected the definition of view: sys.ids.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 17 May 2018 11:41:04 +0200

monetdb (11.29.5) unstable; urgency=low

  * buildtools: On Linux and Unix, try not to link to libraries multiple times: that
    only causes the code (and worse, the variables in those libraries) to be
    included multiple times.  On Windows, we do need to link to libraries
    multiple times (once for each DLL we create if the DLL references
    anything from the library) but that doesn't cause the linked library
    to be loaded multiple times.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 3 Apr 2018 11:41:04 +0200

monetdb (11.29.3) unstable; urgency=low

  * Rebuilt.
  * BZ#3824: Created table not visible from ODBC
  * BZ#6556: Sqlitelogictest division by zero on COALESCE call
  * BZ#6557: Sqlitelogictest crash on aggregation query with not in
  * BZ#6559: rows in sys.statistics are not removed when a temporary table
    is dropped.
  * BZ#6560: Sqlitelogictest crash on group by query with having in
  * BZ#6561: Sqlitelogictest crash on group by query with having not
    in clause

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 27 Mar 2018 14:27:04 +0200

monetdb (11.29.3) unstable; urgency=low

  * sql: Extended support to use CREATE ORDERED INDEX on columns of type: char,
    varchar, clob, blob, url, json, inet and uuid.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 15 Mar 2018 14:27:04 +0200

monetdb (11.29.1) unstable; urgency=low

  * Rebuilt.
  * BZ#3574: Add support for: create OR REPLACE view ...
  * BZ#3831: Extend date part extraction and date formating functions to
    support more formats like "quarter", "iso year/week"
  * BZ#6244: Add support for: TRUNCATE TABLE
  * BZ#6249: DEFAULT in row-values missing (sqlsmith)
  * BZ#6346: BATsort returns GDK_SUCCEED when **sorted bat is null
  * BZ#6507: Column Header coming with trailing spaces in compiled version
    of MonetDB 11.27.9/11
  * BZ#6513: Sqlitelogictest: Wrong MAL plan generation for column product
  * BZ#6526: Crash using aggregate function inside a case statement in
    having clause
  * BZ#6529: Sqlitelogictest crash in select query with IN operator and cast
  * BZ#6530: Sqlitelogictest: select query with NOT IN giving wrong results
  * BZ#6532: copy into ignore null as directive if first column doesn't
    come from file
  * BZ#6534: [Mar2018]: mclient -f tab / --format=tab complains about
    "unsupported formatter"
  * BZ#6535: [Mar2018]: mclient -t / --timer does not work as documented
  * BZ#6536: [Mar2018]: timing output of mclient -t / --timer= should go
    to stderr rather than stdout
  * BZ#6537: [Mar2018]: mclient's default timing mode should (again) be
    "none" rather than "clock"
  * BZ#6541: [Mar2018]: mclient reports incorrect wall-clock time
  * BZ#6542: assertion failure when querying: select count(*) from
    sys.commented_function_signatures;
  * BZ#6543: Mar2018: truncate on SQL system tables should NOT be allowed
  * BZ#6545: Sqlitelogictest crash in IN query
  * BZ#6546: Sqlitelogictest crash in IN query with division
  * BZ#6547: OS-dependent behaviour for ilike
  * BZ#6548: Select from remote table leaves session open
  * BZ#6549: Add log messages when listen fails
  * BZ#6550: Sqlitelogictest crash on complex CASE statement
  * BZ#6551: Sqlitelogictest wrong NULL value cast
  * BZ#6552: Sqlitelogictest crash on complex case statement
  * BZ#6553: Sqlitelogictest crash on aggregation with having statement
  * BZ#6554: Sqlitelogictest crash on complex case statement
  * BZ#6555: Sqlitelogictest wrong result set generated from complex
    case statement

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 15 Mar 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * mapilib: The three mapi_explain* functions and mapi_trace don't return any
    useful information, so they now return void.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 8 Mar 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * utils: The function mcrypt_getHashAlgorithms now returns a static, constant
    string, so the result should not be modified or freed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 8 Mar 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * clients: ODBC: The driver function SQLProcedureColumns was implemented.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 28 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * gdk: Changed return type of function void_replace_bat from BUN to gdk_return:
    it now only returns whether the operation succeeded or not.
  * gdk: Changed the return type of BATroles from void to gdk_return: it can
    fail due to malloc failure.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 16 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * MonetDB: mclient's execution time profiling options and output format have
    been changed. Instead of implicitly via the "--interactive"/"-i"
    option (or when using an interactive mclient console), execution time
    profiling is now controlled via an explicit "--timer=timermode"/"-t
    timermode" command-line option, or a "\t timermode" command in the
    interactive mclient console. The default (also in the interactive
    mclient console) is now timermode "none", i.e., no timing information
    is given. Timermode "clock" activates client-side wall-clock timing
    ("clk") in "human-friendly" format much like the interactive mode did
    before. Timermode "performance" also provides detailed server-side
    timings: "sql" is the time to parse the SQL query, optimize the
    logical relational plan and create the initial physical (MAL) plan;
    "opt" is the time to optimize the physical (MAL) plan; "run" is the
    time to execute the physical (MAL) plan. With timermode "performance"
    all server-side timings and the client-side wall-clock time are given
    in milliseconds (ms). Note that the client-measured wall-clock time
    "clk" is reported per query only when options "--interactive" or
    "--echo" are used, because only then does mclient send individual
    lines (statements) of the SQL script to the server. Otherwise, mclient
    sends the SQL script in large(r) batch(es) to the server, and, thus,
    only the total wall-clock time per batch is measured and reported. The
    server-measured detailed performance timings "sql", "opt", "run" are
    always measured and reported per query. Also, all timing information
    is now given on a separate line and sent to stderr rather than stdout.

 -- Stefan Manegold <Stefan.Manegold@cwi.nl>  Wed, 14 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * buildtools: Added the .pdb files needed for debug symbols to the Windows installer
    for MonetDB/SQL.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 12 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * gdk: Removed functions ALIGNsetH, ALIGNsetT, and CREATEview_ (mind the
    underscore).  The first can easily be replace by using BAThseqbase
    (that's all it did), the second was only used once, and the third can
    be replace by VIEWcreate.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 9 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * MonetDB: Some types and constants were moved from configure (and hence
    monetdb_config.h) to gdk.h.  In particular, the types "lng" and
    "ulng" have been moved and can therefore no longer be used by code
    that doesn't (ultimately) include gdk.h.  Just use int64_t instead.
    A bunch of format defines have been removed: SZFMT, SSZFMT, PTRFMT,
    PDFMT.  Just use the C standard codes for those (%zu, %zd, %p, %td).
    The define for printing a lng (LLFMT) was also moved.  Use PRId64 for
    printing int64_t in code not using gdk.h.  Removed all references to
    __int64 and long long (use int64_t instead).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 9 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * sql: Added new system view: sys.ids which contains all database objects
    ids which can be used in sys.dependencies table.
  * sql: Added new system view: sys.dependencies_vw which shows all data of
    sys.dependencies including names on objects, object types and dependency types.
  * sql: Added 25 new system views for finding out dependencies between database objects.
    These new dependency views improve, extend and replace the 17
    sys.dependencies_X_on_Y() functions as previously defined in
    21_dependency_functions.sql. Those sys.dependencies_X_on_Y() functions
    are now marked as deprecated.
  * sql: Added new system view: sys.roles which contains all defined roles.
  * sql: Added new system view: sys.var_values which shows the values for
    system variables.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * clients: ODBC: Changed table types as used by SQLTables from "LOCAL TEMPORARY"
    and "GLOBAL TEMPORARY" to "LOCAL TEMPORARY TABLE" and "GLOBAL TEMPORARY
    TABLE" respectively.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * clients: ODBC: Initial support for the HUGEINT type in SQL was added.  Any value
    with type HUGEINT can be retrieved in a C variable with type SQL_C_CHAR
    or SQL_C_WCHAR.  A value of type HUGEINT can be retrieved in other C
    types as long as they fit, the largest C type supported being a 64 bit
    integer (equivalent to BIGINT).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * monetdb5: Implemented function pcre.replace_first which is like pcre.replace,
    except it only replaces the first match.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * gdk: Removed unused functions BATmemsize and BATvmsize.
  * gdk: Removed the tnodense property: it was maintained but never actually
    used, not even stored.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * sql: Added support for COMMENT ON statements using SQL syntax:
     COMMENT ON { SCHEMA | TABLE | VIEW | COLUMN | INDEX | SEQUENCE |
                FUNCTION | PROCEDURE | AGGREGATE | FILTER FUNCTION | LOADER }
          qname IS { 'my description text' | NULL | '' } ;
    For COLUMN the qname can be "table_name"."column_name" or fully qualified
    as in: "schema_name"."table_name"."column_name".
    For FUNCTION, PROCEDURE, AGGREGATE, FILTER FUNCTION and LOADER the qname
    may need to include the signature (argument types) to be able to
    differentiate between multiple overloaded functions which have the same name
    and schema.
    By specifying IS NULL or IS '' you remove the comment for the database object.
    If a database object is dropped, the associated comment is also removed.
    Note: it is not allowed or possible to add comments for temporary tables or
          objects in schema "tmp".
    The sql catalog has been extended with system table: sys.comments.
    The keyword 'COMMENT' has now become a reserved keyword.

 -- Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * sql: Removed system function sys.environment(). It was a duplicate of system
    function sys.env().

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * stream: The interface of mnstr_fgetpos and mnstr_fsetpos was changed to look
    more like the standard C functions fsetpos and fgetpos: they both have
    a second argument "pointer to fpos_t".

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * clients: The functions in the mapi library that require 64 bit integers now
    use the standard type int64_t instead of the non-standard mapi_int64.
    This requires a compilation environment that has the stdint.h include
    file (standardized in C99).  Compilation of the library also requires
    the inttypes.h include file (also standardized in C99).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * sql: Implemented behavior for DROP SCHEMA my_schema RESTRICT command.
    Previously the RESTRICT keyword was accepted but not obeyed. It would
    always do a CASCADE operation.  Also the default behavior of DROP SCHEMA
    my_schema command is now changed into RESTRICT behavior (was CASCADE).

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * gdk: The NIL representation of the internal flt and dbl types was changed
    from the smallest representable finite value to NaN (not-a-number).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * sql: The internal NULL representation of the REAL (FLOAT) and DOUBLE
    types was changed from the smallest representable finite value to NaN
    (not-a-number).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * testing: Added a --data_path option to Mtest.py that defines an external data
    repository. See the commit message of c484932c7fd8 for more info.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * gdk: Changed the interface of ATOMformat and VALformat: they now return a
    pointer to the allocated string.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * gdk: The length "method" for atoms now returns a size_t, the "len" field of
    a ValRecord is now a size_t, the "size" field of the atomDesc structure
    is now unsigned short.
  * gdk: Removed the "align" field from the ATOM descriptor (atomDesc) structure.
  * gdk: The atomtostr and atomfromstr "methods" for atoms now return ssize_t
    and require a pointer to size_t for the size of the buffer.
  * gdk: The atom tostr and fromstr "methods" now always return -1 on error.
    A return value greater than 0 is normal, a return value of 0 is not
    normal, but technically not an error.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * sql: A column default value can be used in a UPDATE statement: UPDATE tname
    SET cname = DEFAULT, and INSERT statements: INSERT INTO tname VALUES
    (..., DEFAULT, ...)
  * sql: Added support for TRUNCATE statements conforming to the SQL:2008 standard:
     TRUNCATE [ TABLE ] qname [ CONTINUE IDENTITY | RESTART IDENTITY ]
              [ RESTRICT | CASCADE ]
    In a TRUNCATE statement a 'CONTINUE IDENTITY' or 'RESTART IDENTITY'
    clause can be passed to restart or not, being the former the default one.
    The 'CASCADE' option instructs to truncate referencing table(s) also if
    the referencing table(s) have foreign key references to this table.
    The default behavior is 'RESTRICT'.
    Note: it is possible to use TRUNCATE statements in a transaction and
    thus to rollback the effects of a truncate.
    The keywords 'TRUNCATE' and 'CONTINUE' have now become reserved keywords.
  * sql: Added possibility to GRANT or REVOKE a TRUNCATE privilege to a user or role.
  * sql: Added possibility to define a TRIGGER on a TRUNCATE event.
  * sql: Added possibility to specify 'OR REPLACE' in following CREATE commands:
     CREATE [ OR REPLACE ] VIEW qname ...
     CREATE [ OR REPLACE ] TRIGGER qname ...
  * sql: Added possibility to specify 'IF EXIST' in following DROP commands:
     DROP AGGREGATE [ IF EXISTS ] qname ...
     DROP FUNCTION [ IF EXISTS ] qname ...
     DROP FILTER FUNCTION [ IF EXISTS ] qname ...
     DROP LOADER [ IF EXISTS ] qname ...
     DROP PROCEDURE [ IF EXISTS ] qname ...
     DROP TRIGGER [ IF EXISTS ] qname ...

 -- Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * monetdb5: The EXPLAIN command now shows all the MAL type resolutions, because in
    general users may not be aware of their signatures.  It also simplifies
    programs to analyze such plans.

 -- Martin Kersten <mk@cwi.nl>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * monetdb5: Implemented versions of group.(sub)group(done) that don't return
    a histogram.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * stream: Removed function wbstream.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * monetdb5: Removed MAL functions streams.socketRead, streams.socketReadBytes,
    streams.socketWrite, and streams.socketWriteBytes.
  * monetdb5: Removed MAL functions streams.openRead(s:streams):streams and
    streams.openWrite(s:streams):streams.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * stream: Removed functions udp_rastream and udp_wastream.
  * stream: Removed functions socket_rstream and socket_wstream.
  * stream: Removed functions append_wstream and append_wastream.
  * stream: Removed functions mnstr_rstream and mnstr_wstream.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * merovingian: Add daemon commands for starting/stopping collection of profiler
    (stethoscope) logs.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * mapilib: The functions mapi_error_str and mapi_result_error now return const char
    * instead of plain char * to indicate that the returned data belongs
    to the library and should not be changed or freed by the application.
  * mapilib: New function const char *mapi_result_errorcode(MapiHdl) which returns
    the SQLSTATE code if available when an error has occurred.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * monetdb5: Lots of changes to streamline the internal error handling.
    In principle, all errors should now include a SQLSTATE error code
    (see the SQL standard).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * sql: Lots of changes to streamline the internal error handling.
    In principle, all errors should now include a SQLSTATE error code
    (see the SQL standard).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * sql: Added support for extracting the quarter (number between 1 and 4)
    of a date or a timestamp or a timestamp with timezone in SQL:
     EXTRACT ( QUARTER FROM my_date_expr ).
    Added support for extracting the week (number between 1 and 53)
    of a date or a timestamp or a timestamp with timezone in SQL:
     EXTRACT ( WEEK FROM my_date_expr ).
    Added support for scalar functions: quarter(date_expr),
    quarter(timestamp_expr) and quarter(timestamptz_expr).

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.29.1) unstable; urgency=low

  * clients: Add a new pretty printing option to stethoscope
    Running stethoscope with the flag -j will produce not pretty printed
    output (one json object per line). Running with the -y flag will produce
    pretty printed output. Running with neither will produce the legacy,
    line oriented format

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Fri, 2 Feb 2018 13:52:38 +0100

monetdb (11.27.13) unstable; urgency=low

  * Rebuilt.
  * BZ#3470: Support setClob without length restrictions
  * BZ#6468: JDBC 2.27 fails with year < 1000
  * BZ#6482: Query failures on order by on union
  * BZ#6483: Monetdb crashes, on query
  * BZ#6487: UNION of NULLs with several tables fails
  * BZ#6488: Semijoin returns duplicate values from a column with unique
    values
  * BZ#6489: Sqlitelogictest - Wrong result set of complex conditional query
  * BZ#6490: Sqlitelogictest - Select query with an IN clause parse error
  * BZ#6491: SELECT IN returns NULL instead of false when not found
  * BZ#6492: Persistent hashes stored and then ignored. Storage info not
    in sync with actual indices.
  * BZ#6493: Sqlitelogictest - Aggregation query on empty table with
    DISTINCT clause
  * BZ#6494: Sqlitelogictest - Algebra operators priority in select query
  * BZ#6495: Sqlitelogictest - Omitting AS in a result set column alias name
  * BZ#6496: Sqlitelogictest - Select interval comparisons between
    floating-points and NULL
  * BZ#6497: Sqlitelogictest - Select not between query producing wrong
    results
  * BZ#6498: large virtual memory spike on BLOB column COUNT
  * BZ#6499: Crash when trying to replace a function defined in sys from
    a different schema
  * BZ#6502: Query with multiple limit clauses does not return anything
  * BZ#6508: Segmentation fault in mserver5 on Python2 UDF with TIMESTAMP
    column input that has NULL values (conversion.c:438, PyNullMask_FromBAT)
  * BZ#6510: Sqlitelogictest: Wrong output in aggregation query
  * BZ#6512: Monetdb crashes on query with limit after sort with case
  * BZ#6514: Sqlitelogictest: Range query between NULL values not possible
  * BZ#6515: Insert null second interval value results in 0
  * BZ#6516: Sqlitelogictest unknown bat append operation
  * BZ#6517: Sqlitelogictest overflow in conversion during MAL plan
    execution
  * BZ#6518: Sqlitelogictest: count aggregation with not in operator
  * BZ#6519: Sqlitelogictest: algebra join between lng and int BATs
    undefined
  * BZ#6520: UPDATE with correlated subquery causes assertion (or segfault)
  * BZ#6522: Sqlitelogictest: IN operator return a single column
  * BZ#6523: Sqlitelogictest: Case statement subquery missing
  * BZ#6524: Sqlitelogictest: Crash in aggregation query with IN operator
  * BZ#6527: Crash using order by alias in subquery

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 02 Feb 2018 13:53:49 +0100

monetdb (11.27.13) unstable; urgency=low

  * buildtools: Added the .lib and .h files needed for building extensions to the
    Windows installer.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 16 Jan 2018 13:53:49 +0100

monetdb (11.27.11) unstable; urgency=low

  * Rebuilt.
  * BZ#3898: Deadlock on insertion
  * BZ#6429: ROUND produces wrong data type
  * BZ#6436: Query sequence with 2x ifthenelse() and next nullif() causes
    mserver5 Segmentation fault
  * BZ#6439: Invalid references to sys.columns.id from
    sys.statistics.column_id
  * BZ#6442: SEGFAULT with COPY INTO BEST EFFORT and skipping input columns
  * BZ#6443: complex(?) query forgets(?) column name
  * BZ#6444: Using 'with' keyword with table returning function crashes
    monetdb
  * BZ#6445: Sqlitelogictest crash in MySQL query
  * BZ#6446: sql_parser.y bug?
  * BZ#6448: 'insert into' with multiple rows containing subqueries crashes
  * BZ#6449: Assertion error in rel_dce_refs (sqlsmith)
  * BZ#6450: Assertion error in exp_bin (sqlsmith)
  * BZ#6451: Assertion error in sql_ref_dec (sqlsmith)
  * BZ#6453: Assertion error  in rel_rename_exps (sqlsmith)
  * BZ#6454: SQL lexical error
  * BZ#6455: Assertion error in rel_apply_rewrite (sqlsmith)
  * BZ#6456: NULL becomes 0 in outer join
  * BZ#6459: Assertion error in exp_bin (sqlsmith)
  * BZ#6462: large virtual memory spike on BLOB column select
  * BZ#6465: appending to variables sized atom bats other than str bats
    with force flag may result in corrupted heap
  * BZ#6467: date_to_str formatter is wrong
  * BZ#6470: mitosis gets in the way of simple select
  * BZ#6471: calls to sys.generate_series should auto-convert arguments
  * BZ#6472: Assertion failure in rel_rename (Sqlsmith)
  * BZ#6477: assertion eror rel_push_project_up (sqlsmith)
  * BZ#6478: Crash with nested order by/ limit offset
  * BZ#6479: Mserver receives an assertion error on a procedure call
  * BZ#6480: Segfault in mvc_find_subexp (sqlsmith)

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 04 Dec 2017 09:56:39 +0100

monetdb (11.27.11) unstable; urgency=low

  * gdk: Reimplemented summing of a column of floating point (flt and dbl)
    values.  The old code could give wildly inaccurate results when adding
    up lots and lots of values due to lack of precision.  Try SELECT sum(c)
    FROM t; where t is 100,000,000 rows, c is of type REAL and all values
    are equal to 1.1.  (The old code returned 33554432 instead of 1.1e8.)

 -- Sjoerd Mullender <sjoerd@acm.org>  Sun, 5 Nov 2017 09:56:39 +0100

monetdb (11.27.9) unstable; urgency=low

  * BZ#6460: selinux doen't allow mmap

 -- Sjoerd Mullender <sjoerd@acm.org>  Sun, 5 Nov 2017 09:56:39 +0100

monetdb (11.27.9) unstable; urgency=low

  * Rebuilt.
  * BZ#6207: identifier ambiguous when grouping and selecting the same
    column twice
  * BZ#6335: Sqlitelogictest crash in complex SQL query
  * BZ#6405: Compilation error if DISABLE_PARENT_HASH not defined
  * BZ#6412: Overflow in sys.epoch
  * BZ#6413: Wrong answer for TPC-H Q17
  * BZ#6414: Using RPAD returns: could not allocate space
  * BZ#6416: Sqlitelogictest crash in aggregation query with a NOT IN clause
  * BZ#6417: Segfault encountered (sqlsmith)
  * BZ#6418: Segfault in renaming (sqlsmith)
  * BZ#6419: segfault in rel_optimizer (sqlsmith)
  * BZ#6420: Assertion error in mergetable task (sqlsmith)
  * BZ#6422: Another assertion error in rel_or (sqlsmith)
  * BZ#6423: Dereference null pointer (sqlsmith)
  * BZ#6424: Assertion error in rel_rename_expr (sqlsmith)
  * BZ#6425: Assertion error in exp_bin (sqlsmith)
  * BZ#6426: Assertion error in rel_find_exp_ (sqlsmith)
  * BZ#6427: Assertion error in eq_typeswitchloop (sqlsmith)
  * BZ#6428: Sqlitelogictest crash in aggregation query
  * BZ#6430: Assertion raised in another eq_typeswitch error (sqlsmith)
  * BZ#6431: Sqlitelogictest crash in aggregation query with a long
    having clause
  * BZ#6432: Assertion error in exp_bin (sqlsmith)
  * BZ#6433: Sqlitelogictest crash in complex SELECT query with IN operator
  * BZ#6435: Sqlitelogictest crash in simple select query
  * BZ#6437: System schemas "profiler" and "json" shouldn't be allowed to
    be dropped.
  * BZ#6438: Implement functionality to enforce the restrict option in:
    DROP SCHEMA xyz RESTRICT;
  * BZ#6440: Faulty plan generated. Query returns more rows than expected
    or existing in the view sys.tables.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 23 Oct 2017 15:39:35 +0200

monetdb (11.27.9) unstable; urgency=low

  * gdk: A serious bug, possibly resulting in database corruption, having to
    do with appending data to a string BAT was fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 23 Oct 2017 15:39:35 +0200

monetdb (11.27.7) unstable; urgency=low

  * Rebuilt.
  * BZ#4017: server crashes when executing particular loopback query in
    embedded python
  * BZ#6239: Incorrect profiling
  * BZ#6261: New handling of delta tables hurts badly reusage of bats
  * BZ#6287: should the CORR function return some numeric type that allows
    fractions?
  * BZ#6321: Two-column aggregation on join result extremely slow.
  * BZ#6343: MERGE TABLE issue: unable to find
  * BZ#6348: Interference of procedure/table name
  * BZ#6350: Carriage return and form feed in TEXT fields are returned as
    'r' and 'f' in jdbcclient and ResultSets
  * BZ#6352: Scope resolution problem (sqlsmith)
  * BZ#6353: implicit NULL value not propagated in distributed/remote query
  * BZ#6374: Wrong answer from merge table after content changes
  * BZ#6379: Table UDF: SEGV raised when invoking a non existing function
  * BZ#6380: unable to create new databases from clean installation
  * BZ#6381: Parser misses error messages in conditional
  * BZ#6382: Can't set JSON fields via PreparedStatement
  * BZ#6384: crash when setting a wrong listenaddr
  * BZ#6385: AGGREGATE UDFs with more than 2 parameters incorrectly
    processed
  * BZ#6386: Unexpected error from server for query with long floats
  * BZ#6387: Performance degradation on multi column sort
  * BZ#6388: JDBC Connection via user voc produces errors when fetching
    certain meta data information
  * BZ#6392: SELECT EXISTS (empty table) returns 'true'
  * BZ#6395: BAT leak of scalar result sets
  * BZ#6397: Isolation of generating functions not correct
  * BZ#6398: Null Matches in outer join are not supported
  * BZ#6399: UDF crashes when subquery and scalar values are passed
    as pameters
  * BZ#6400: getCharacterStream() currently not supported
  * BZ#6404: COPY INTO crashes if table has primary key or foreign key
    constraint
  * BZ#6409: sqllogictest crash on aggregation query with NOT IN clause
    in HAVING clause
  * BZ#6410: Sqlitelogictest crash on aggregation query with IN clause
  * BZ#6411: Sqlitelogictest crash in aggregation query

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Wed, 11 Oct 2017 11:01:48 +0200

monetdb (11.27.5) unstable; urgency=low

  * Rebuilt.
  * BZ#6375: MAL profiler truncates JSON objects larger than 8192 characters

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 27 Jul 2017 12:56:09 +0200

monetdb (11.27.3) unstable; urgency=low

  * Rebuilt.
  * BZ#6325: Merge table unusable in other connections
  * BZ#6328: Transactional/multi-connection issues with merge tables
  * BZ#6336: VALUES multiple inserts error
  * BZ#6339: Mserver5 crashes on nested SELECT
  * BZ#6340: sample operator takes effect after the execution of the query,
    expected before
  * BZ#6341: MERGE TABLE issue: Cannot register
  * BZ#6342: MERGE TABLE issue: hang
  * BZ#6344: Spurious errors and assertions (SQLsmith)

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 25 Jul 2017 10:44:31 +0200

monetdb (11.27.3) unstable; urgency=low

  * buildtools: The Debian and Ubuntu installers have been fixed: there was a file
    missing in the Jul2017 release.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 24 Jul 2017 10:44:31 +0200

monetdb (11.27.3) unstable; urgency=low

  * buildtools: Added a new RPM called MonetDB-selinux which provides the SELinux
    policy required to run MonetDB under systemd, especially on Fedora 26.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 14 Jul 2017 10:44:31 +0200

monetdb (11.27.3) unstable; urgency=low

  * merovingian: monetdbd was leaking open file descriptors to the mserver5 process
    it started.  This has been fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 14 Jul 2017 10:44:31 +0200

monetdb (11.27.3) unstable; urgency=low

  * buildtools: The Windows installers (*.msi files) are now created using the WiX
    Toolset.
  * buildtools: The Windows binaries are now built using Visual Studio 2015.  Because of
    this, you may need to install the Visual C++ Redistributable for Visual
    Studio 2015 before being able to run MonetDB.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Jul 2017 10:44:31 +0200

monetdb (11.27.3) unstable; urgency=low

  * gdk: Many functions in GDK are now annotated with the GCC attribute
    __warn_unused_result__ meaning that the compiler will issue a warning
    if the result of the function (usually an indication of an error)
    is not used.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Jul 2017 10:44:31 +0200

monetdb (11.27.1) unstable; urgency=low

  * Rebuilt.
  * BZ#3465: Request: add support for CREATE VIEW with ORDER BY clause
  * BZ#3545: monetdb commands don't work with -h -P -p options (locally
    and remotely)
  * BZ#3996: select * from sys.connections always returns 0 rows. Expected
    to see at least one row for the active connection.
  * BZ#6187: Nested WITH queries not supported
  * BZ#6225: Order of evaluation of the modulo operator
  * BZ#6289: Crashes and hangs with remote tables
  * BZ#6292: Runaway SQL optimizer in too many nested operators
  * BZ#6310: Name resolution error (sqlsmith)
  * BZ#6312: Object not found in LIMIT clause (sqlsmith)
  * BZ#6313: Null type resolution in disjunction fails (sqlsmith)
  * BZ#6319: Server crash on LATERAL (sqlsmith)
  * BZ#6322: Crash on disjunction with LIMIT (sqlsmith)
  * BZ#6323: Deadlock calling sys.bbp()
  * BZ#6324: Sqlitelogictest crash in a IN query (8th)
  * BZ#6327: The daemon does not respect the actual name of the mserver5
    executable
  * BZ#6330: Sqlitelogictest crash on a complex SELECT query
  * BZ#6331: sys.statistics column "nils" always contains 0. Expected a
    positive value for columns that have one or more nils/NULLs
  * BZ#6332: Sqlitelogictest crash related to an undefined MAL function

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 05 Jul 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * merovingian: Added handling of a dbextra property per database at the daemon
    level. The user can set the dbextra property for a database using the
    command:  $ monetdb set dbextra=<path> <database> and the daemon will
    make sure to start the new server using the correct
    --dbextra parameter.

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * monetdb5: The "sub" prefix of many functions, both at the MAL and the C level,
    has been removed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * MonetDB: Added a new server-side protocol implementation. The new protocol
    is backwards compatible with the old protocol. Clients can choose
    whether they want to use the old or the new protocol during the initial
    handshake with the server. The new protocol is a binary column-based
    protocol that is significantly faster than the old protocol when
    transferring large result sets. In addition, the new protocol supports
    compression using Snappy or LZ4.

 -- Mark Raasveldt <m.raasveldt@cwi.nl>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * gdk: Improved error checking in the logger code (dealing with the write-ahead
    log); changed return types a several functions from int to gdk_return
    (i.e., they now return GDK_SUCCEED or GDK_FAIL).  The logger no longer
    calls GDKfatal on error.  Instead the caller is responsible for dealing
    with errors.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * sql: Made the operator precedence of % equal to those of * and /.  All three
    are evaluated from left to right.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * MonetDB: Moved the sphinx extension module to its own repository.
    See https://dev.monetdb.org/hg/MonetDB-sphinx/.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * gdk: BATsort may now create an order index as a by product.
  * gdk: Quantile calculations now use the order index if available (and use
    BATsort otherwise, producing an order index).
  * gdk: Quantiles calculate a position in the sorted column.  If this position
    is not an integer, we now choose the nearest position, favoring the
    lower if the distance to the two adjacent positions is equal (round
    down to nearest integer).

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * MonetDB: Removed GSL module: it's now a separate (extension) package.
    See https://dev.monetdb.org/hg/MonetDB-gsl/.
  * MonetDB: The PCRE library is now optional for systems that support POSIX regular
    expressions.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * sql: Removed table sys.connections.  It was a remnant of an experimental
    change that had already been removed in 2012.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * gdk: Removed function BATprintf.  Use BATprint or BATprintcolumns instead.
  * gdk: Removed BATsave from the list of exported functions.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * MonetDB: Added 5 new sys schema tables: function_languages, function_types,
    key_types, index_types and privilege_codes.  They are pre-loaded with
    static content and contain descriptive names for the various integer
    type and code values.  See also sql/scripts/51_sys_schema_extension.sql

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * monetdb5: Changed the interfaces of the AUTH* functions: pass values, not pointers
    to values.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * gdk: Replaced BBPincref/BBPdecref with BBPfix/BBPunfix for physical reference
    count and BBPretain/BBPrelease for logical reference count maintenance.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * gdk: Removed automatic conversion of 32-bit OIDs to 64 bits on 64-bit
    architectures.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * gdk: Removed functions OIDbase() and OIDnew().
  * gdk: Removed talign field from BAT descriptor.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * monetdb5: Removed calc.setoid().
  * monetdb5: group.subgroup is now called group.group if it is not refining a group.
    Both group.group and group.subgroup now also have variants with a
    candidate list.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * clients: The mclient and msqldump programs lost compatibility with old
    mserver5 versions (pre 2014) which didn't have a "system" column in
    the sys.schemas table.
  * clients: The mclient and msqldump programs lost compatibility with ancient
    mserver5 versions (pre 2011) which didn't have the sys.systemfunctions
    table.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * gdk: BATappend now takes an optional (NULL if not used) candidate list for
    the to-be-appended BAT.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * gdk: New function BATkeyed(BAT *b) that determines (possibly using a hash
    table) whether all values in b are distinct.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * clients: Removed the "array" and "quick" functions from the mapi library.
    To be precise, the removed functions are: mapi_execute_array,
    mapi_fetch_field_array, mapi_prepare_array, mapi_query_array,
    mapi_quick_query, mapi_quick_query_array, and mapi_quick_response.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * monetdb5: The allocation schemes for MAL blocks and Variables has been turned
    into block-based.  This reduces the number of malloc()/free() calls.

 -- Martin Kersten <mk@cwi.nl>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * sql: Protect against runaway profiler events If you hit a barrier block
    during profiling, the JSON event log may quickly become unwieldy. Event
    production is protected using a high water mark, which ensures that
    never within the single execution of MAL block the instruction causes
    excessive event records.

 -- Martin Kersten <mk@cwi.nl>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.27.1) unstable; urgency=low

  * clients: Added a more elaborate \help command for SQL expressions.

 -- Martin Kersten <mk@cwi.nl>  Mon, 29 May 2017 09:29:52 +0200

monetdb (11.25.23) unstable; urgency=low

  * Rebuilt.
  * BZ#6290: Crash (and assertion failure) with a correlated subquery with
    NOT IN in the select-list
  * BZ#6291: crash if executes a function with sample operator
  * BZ#6294: Sqlitelogictest crash
  * BZ#6296: Another sqllitelogictest crash :(
  * BZ#6297: 7th sqllitelogictest crash :(
  * BZ#6300: Protect against missing BATs (sqlsmith)
  * BZ#6314: Lateral crash report (sqlsmith)
  * BZ#6315: Exist operator on type bigint missing (sqlsmith)
  * BZ#6316: Coalesc and limit error (sqlsmith)
  * BZ#6317: Two-column integer aggregation extremely slow
  * BZ#6318: Daemon crashes if .merovignian_properties for a database
    contains more than 42 entries
  * BZ#6320: The daemon ignores all but the last entry in the
    .merovignian_properties file when spawning mserver5

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Mon, 29 May 2017 10:09:01 +0200

monetdb (11.25.21) unstable; urgency=low

  * Rebuilt.
  * BZ#6260: Sqlitelogictest crash
  * BZ#6288: Function cannot find column in merge table
  * BZ#6295: msqldump writes unescaped timestamp values when using inserts

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 25 Apr 2017 11:05:40 +0200

monetdb (11.25.21) unstable; urgency=low

  * monetdb5: Fixed a bug causing a crash during cleanup when mserver5 is stopped
    with monetdb stop database.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 19 Apr 2017 11:05:40 +0200

monetdb (11.25.19) unstable; urgency=low

  * Rebuilt.
  * BZ#6259: crash on select query from sqlitelogictests

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 18 Apr 2017 10:14:40 +0200

monetdb (11.25.19) unstable; urgency=low

  * gdk: A potential deadlock was fixed in order index creation.
  * gdk: A bug that could happen during recovery of the write-ahead log (WAL)
    was fixed.  See changeset 98ad79c555cc for details.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 18 Apr 2017 10:14:40 +0200

monetdb (11.25.19) unstable; urgency=low

  * monetdb5: Some memory leaks were plugged.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 18 Apr 2017 10:14:40 +0200

monetdb (11.25.19) unstable; urgency=low

  * sql: Some memory leaks were plugged.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 18 Apr 2017 10:14:40 +0200

monetdb (11.25.17) unstable; urgency=low

  * Rebuilt.
  * BZ#6110: cast of a SQL boolean value to a string or clob or (var)char
    is wrong
  * BZ#6254: Crash (and assertion failure) after querying a view which
    uses a correlated subquery in the select-list
  * BZ#6256: Assertion Trigger on FULL OUTER JOIN with more than two
    BETWEEN clauses
  * BZ#6257: wrong count values (1 instead of 0) for correlated aggregation
    queries
  * BZ#6258: Vulnerability in FITS and NETCDF data vaults

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 11 Apr 2017 12:49:56 +0200

monetdb (11.25.17) unstable; urgency=low

  * sql: Upgrade code was added for an old change in the sys.settimeout function.
  * sql: A bug was fixed with the automatic "vacuum" operation on system tables.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 11 Apr 2017 12:49:56 +0200

monetdb (11.25.15) unstable; urgency=low

  * Rebuilt.
  * BZ#6250: Assertion failure when querying a Blob column with order
    by DESC
  * BZ#6253: FITS Data Vaults does not work when using user/pw and other
    than sys schema name

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 30 Mar 2017 14:00:54 +0200

monetdb (11.25.13) unstable; urgency=low

  * Rebuilt.
  * BZ#6216: Assertion raised (sqlsmith)
  * BZ#6227: Monetdb fails on remote tables
  * BZ#6242: Crash on rel_reduce_groupby_exps (sqlsmith)
  * BZ#6243: Static optimization gives wrong result (1 + NULL = -127)
  * BZ#6245: Nested query crashes all versions of MonetDB or gives wrong
    result starting from Dec2016-SP2
  * BZ#6246: update statements: references to a table do not bind to
    its alias
  * BZ#6247: Type analysis issue (sqlsmith)
  * BZ#6248: update statements: the semantic stage does not resolve the
    relation in the from clause
  * BZ#6251: Crash after adding an ordered index on sys.statistics column
    and querying sys.statistics

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 29 Mar 2017 13:18:23 +0200

monetdb (11.25.11) unstable; urgency=low

  * Rebuilt.
  * BZ#6138: Weak duplicate elimination in string heaps > 64KB
  * BZ#6183: ResultSet returns double quoted column name if name contains
    space characters
  * BZ#6219: Crash in rel_optimizer (sqlsmith)
  * BZ#6228: mclient crashes if real column is multiplied by it itself
  * BZ#6229: ANALYZE, unexpected end of input
  * BZ#6230: ANALYZE, syntax error
  * BZ#6237: semijoin with empty right bat does not return immediately

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Mar 2017 10:10:14 +0100

monetdb (11.25.11) unstable; urgency=low

  * gdk: Fixed a bug when appending string bats that are fully duplicate
    eliminated.  It could happend that the to-be-appended bat had an empty
    string at an offset and at that same offset in the to-be-appended-to bat
    there happened to be a (sequence of) NULL(s).  Then this offset would be
    used, even though it might nog be the right offset for the empty string
    in the to-be-appended-to bat.  This would result in multiple offsets for
    the empty string, breaking the promise of being duplicate eliminated.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 28 Feb 2017 10:10:14 +0100

monetdb (11.25.9) unstable; urgency=low

  * Rebuilt.
  * BZ#6217: Segfault in rel_optimizer (sqlsmith)
  * BZ#6218: grouped quantiles with all null group causes following groups
    to return null
  * BZ#6224: mal_parser: cannot refer to types containing an underscore

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Mon, 27 Feb 2017 11:15:08 +0100

monetdb (11.25.7) unstable; urgency=low

  * Rebuilt.
  * BZ#4034: argnames array in rapi.c has fixed length (that was too short)
  * BZ#6080: mserver5: rel_bin.c:2391: rel2bin_project: Assertion `0'
    failed.
  * BZ#6081: Segmentation fault (core dumped)
  * BZ#6082: group.subgroup is undefined if group by is used on an
    expression involving only constants
  * BZ#6111: Maximum number of digits for hge decimal is listed as 39 in
    sys.types. Should be 38 as DECIMAL(39) is not supported.
  * BZ#6112: Crash upgrading Jul2015->Jun2016
  * BZ#6130: Query rewriter crashes on a NULL pointer when having a
    correlated subquery
  * BZ#6133: A crash occurs when preparing an INSERT on joined tables
    during the query semantic phase
  * BZ#6141: Getting an error message regarding a non-GROUP-BY column
    rather than an unknown identifier
  * BZ#6177: Server crashes
  * BZ#6186: Null casting causes no results (silent server crash?)
  * BZ#6189: Removing a NOT NULL constraint from a PKey column should NOT
    be allowed
  * BZ#6190: CASE query crashes database
  * BZ#6191: MT_msync failed with "Cannot allocate memory"
  * BZ#6192: Numeric column stores wrong values after adding large numbers
  * BZ#6193: converting to a smaller precision (fewer or no decimals after
    decimal point) should round/truncate consistently
  * BZ#6194: splitpart returns truncated last part if it contains non
    ascii caracters
  * BZ#6195: Cast from huge decimal type to smaller returns wrong results
  * BZ#6196: Database crashes after generate_series query
  * BZ#6198: COALESCE could be more optimized
  * BZ#6201: MonetDB completely giving up on certain queries - no error
    and no result
  * BZ#6202: querying a table with an ordered index on string/varchar
    column crashes server and makes server unrestartable!
  * BZ#6203: copy into: Failed to import table Leftover data 'False'
  * BZ#6205: Integer addition overflow
  * BZ#6206: casting strings with more than one trailing zero ('0') to
    decimal goes wrong
  * BZ#6209: Aggregation over complex OR expressions produce wrong results
  * BZ#6210: Upgrading a database from Jun2015 or older crashes the server
  * BZ#6213: SQLsmith causes server to crash

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Thu, 16 Feb 2017 10:44:44 +0100

monetdb (11.25.5) unstable; urgency=low

  * Rebuilt.
  * BZ#4039: Slow mserver5 start after drop of tables (> 1 hour)
  * BZ#4048: Segfault on vacuum with parallel updates
  * BZ#6079: pushselect optimizer bug on MAL snippet
  * BZ#6140: INNER JOIN gives the results of a CROSS JOIN
  * BZ#6150: Query giving wrong results, extra records are appearing
  * BZ#6175: The program can't start because python27.dll is missing from
    your computer.
  * BZ#6178: AVG + GROUP BY returns NULL for some records that should
    have results
  * BZ#6179: mergetable optimizer messes up sample
  * BZ#6182: sys.shutdown triggers assertion in clients.c
  * BZ#6184: Incorrect result set - Extra records in result set

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Fri, 13 Jan 2017 11:15:52 +0100

monetdb (11.25.3) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 17 Dec 2016 11:58:13 +0100

monetdb (11.25.1) unstable; urgency=low

  * Rebuilt.
  * BZ#3357: Implement setQueryTimeout()
  * BZ#3445: Add support for database name to dotmonetdb file
  * BZ#3973: JDBC hangs
  * BZ#3976: Performance enhancement to LIKE without wildcards
  * BZ#4005: Correlated update causes incorrect null constraint violation
  * BZ#4016: merge table only optimises for point query
  * BZ#4040: sys.storage call can take a long time
  * BZ#4047: Segfault when updating a dropped table
  * BZ#4050: Database corruption when running low on inode
  * BZ#4057: missing bulk operations between constant and bat
  * BZ#4061: SIGSEGV in candscan_lng
  * BZ#4066: Deadlocked monetdbd
  * BZ#6068: Error message about incompatible BBP version should be clearer
  * BZ#6069: query with union all silently crashes
  * BZ#6070: setting negative session query timeout should not be
    possible/allowed
  * BZ#6071: where clause with cast and floor fails to sigsegv
  * BZ#6072: Bind to UPD delta column does not get/show type information
    in EXPLAIN
  * BZ#6073: Missing type information for constants in MAL explain
  * BZ#6074: SET ROLE command does not work
  * BZ#6075: gdk_calc.c:13113: BATcalcifthenelse_intern: Assertion `col2 !=
    NULL' failed.
  * BZ#6076: rel_optimizer.c:5426: rel_push_project_up: Assertion `e'
    failed.
  * BZ#6077: mserver5: rel_optimizer.c:5444: rel_push_project_up: Assertion
    `e' failed.
  * BZ#6078: rel_bin.c:2402: rel2bin_project: Assertion `0' failed.
  * BZ#6084: Merge table point to wrong columns if columns in partition
    tables are deleted
  * BZ#6108: monetdb5-sql sysv init script does not wait for shutdown
  * BZ#6114: segfault raised in the query rewriter due to a null pointer
  * BZ#6115: Assertion hit in the codegen
  * BZ#6116: Codegen does not support certain kind of selects on scalar
    subqueries
  * BZ#6117: Assertion hit in the query rewriting stage during the push
    down phase
  * BZ#6118: SIGSEGV in strPut due to shared heap
  * BZ#6119: Assertion hit in the MAL optimiser on a complex query
  * BZ#6120: QUANTILE() treats NULL as if it is zero
  * BZ#6121: SELECT a.col IN ( b.col FROM b ) FROM a statements with no
    error but no result
  * BZ#6123: Assertion hit in the codegen #2
  * BZ#6124: CASE <column> WHEN NULL THEN 0 ELSE 1 END returns wrong result
  * BZ#6125: Stack overflow in the query rewriter with a query having an
    OR condition and a nested SELECT subexpression
  * BZ#6126: batcalc.== can't handle void BATs
  * BZ#6139: Debian libmonetdb13 conflicts with libmonetdb5-server-geom

 -- Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com>  Wed, 14 Dec 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * buildtools: New packages MonetDB-python2 (Fedora) and monetdb-python2 (Debian/Ubuntu)
    have been created for Python 2 integration into MonetDB.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 6 Dec 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: The tnokey values must now be 0 if it is not known whether all values
    in a column are distinct.
  * gdk: The 2-bit tkey field in the bat descriptor has been split into two
    single bit fields: tkey and tunique.  The old tkey&BOUND2BTRUE value
    is now stored in tunique.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 1 Dec 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: Implemented conversion to str from any type (not just the internal
    types).

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 26 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * MonetDB: The Perl, PHP, and Python clients, and the JDBC driver each now have
    their own repositories and release cycles.  The Python client is
    maintained by Gijs Molenaar on Github
    (https://github.com/gijzelaerr/pymonetdb), the other clients are
    maintained by CWI/MonetDB on our own server
    (https://dev.monetdb.org/hg/monetdb-java,
    https://dev.monetdb.org/hg/monetdb-perl,
    https://dev.monetdb.org/hg/monetdb-php).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: VALcopy and VALinit both return their first argument on success or
    (and that's new) NULL on (allocation) failure.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * monetdb5: Removed the zorder module with functions zorder.encode, zorder.decode_x
    and zorder.decode_y.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * sql: Removed functions sys.zorder_encode, sys.zorder_decode_x, and
    sys.zorder_decode_y.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: BATattach now can also create a str BAT from a file consisting of
    null-terminated strings.  The input file must be encoded using UTF-8.
  * gdk: BATattach now copies the input file instead of "stealing" it.
  * gdk: Removed the lastused "timestamp" from the BBP.
  * gdk: Removed batStamp field from BAT descriptor, and removed the BBPcurstamp
    function.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * monetdb5: Removed command bbp.getHeat().

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: Removed unused functions BBPhot and BBPcold.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * buildtools: With OID size equal to ABI/word size, mserver5 does not need to print
    the OID size, anymore.
  * buildtools: Removed obsolete code associated with long gone static linking option.

 -- Stefan Manegold <Stefan.Manegold@cwi.nl>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * sql: The experimental recycler code is moved to the attic.

 -- Martin Kersten <mk@cwi.nl>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * buildtools: Removed configure option --enable-oid32 to compile with 32 bit OIDs
    on a 64 bit architecture.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * sql: The syntax of bat.new(:oid,:any) has been changed by dropping the
    superflous :oid.  All BATs are now binary associations between a void
    column and a materialized value column.  (except for the internal
    :bat[:void,:void] representation of simple oid ranged tails.)

 -- Martin Kersten <mk@cwi.nl>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: Removed BATderiveTailProps and BATderiveProps.  Just set the properties
    you know about, or use BATsettrivprop.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: Removed the macro BUNfirst.  It can be replaced by 0.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: Changed BATroles by removing the argument to set the name of the
    head column.
  * gdk: The head column is now completely gone.  MonetDB is completely
    "headless".
  * gdk: The format of the BBP.dir file was simplified.  Since the head column
    is VOID, the only value that needs to be stored is the head seqbase.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * monetdb5: Removed bat.setColumn with two arguments and bat.setRole.  Use
    bat.setColumn with one argument instead.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: BATs now only have a single (logical) name.
  * gdk: The function BATmirror is gone.  The HEAD column is always VOID (with
    a non-nil seqbase) and the TAIL column carries the data.  All functions
    that deal with data work on the TAIL column.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: BATkey now works on the TAIL column instead of the HEAD column.
  * gdk: Replaced BATseqbase with BAThseqbase and BATtseqbase, the former for
    setting the seqbase on the HEAD, the latter for setting the seqbase
    on the TAIL.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * monetdb5: Removed function BKCappend_reverse_val_wrap: it was unused.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: Replaced function BATnew with COLnew with slightly different arguments:
    the first argument of COLnew is the SEQBASE of the head column (which
    is always VOID).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * gdk: The "wrd" type has been removed from GDK and MAL.  The type was defined
    to be a 32 bit integer on 32 bit architectures and a 64 bit integer
    on 64 bit architectures.  We now generally use "lng" (always 64 bits)
    where "wrd" was used.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * monetdb5: The "wrd" type has been removed from GDK and MAL.  The type was defined
    to be a 32 bit integer on 32 bit architectures and a 64 bit integer
    on 64 bit architectures.  We now generally use "lng" (always 64 bits)
    where "wrd" was used.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.25.1) unstable; urgency=low

  * monetdb5: Keep a collection of full traces.  Each time the SQL user applies
    the TRACE option, the full json trace is retained within the
    <dbpath>/<dbname>/sql_traces

 -- Martin Kersten <mk@cwi.nl>  Fri, 7 Oct 2016 10:57:19 +0100

monetdb (11.23.13) unstable; urgency=low

  * Rebuilt.
  * BZ#4058: Server crashes with a particular conditional query
  * BZ#4064: Assertion: column not found
  * BZ#4067: Relevant column name not printed when a CSV parsing error
    occurs
  * BZ#4070: Extra condition in join predicate of explicit join produces
    wrong MAL code
  * BZ#4074: Cannot use prepared statements when caching disabled
  * BZ#6065: CTE with row number and union fails within MAL

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 07 Oct 2016 11:01:07 +0200

monetdb (11.23.11) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 28 Sep 2016 13:47:01 +0200

monetdb (11.23.11) unstable; urgency=low

  * buildtools: We now use the CommonCrypto library instead of the OpenSSL library
    on Darwin.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 26 Sep 2016 13:47:01 +0200

monetdb (11.23.9) unstable; urgency=low

  * Rebuilt.
  * BZ#3939: Assert failure on concurrent queries when querying sys.queue
  * BZ#4019: Casting a timestamp from a string results in NULL
  * BZ#4025: expressions in the WHERE clause that evaluates incorrectly
  * BZ#4038: After upgrade from 11.21.19, jdbc couldn't list tables for
    non sys users
  * BZ#4044: Server crash when trying to delete a table has been added to
    a merge table with "cascade" at the end
  * BZ#4049: Wrong results for queries with "OR" and "LEFT JOIN"
  * BZ#4052: Infinite loop in rel_select
  * BZ#4054: copy into file wrongly exports functions
  * BZ#4059: Geom functions only visible by user monetdb
  * BZ#4060: BAT leak in some aggregate queries
  * BZ#4062: Error: SELECT: no such binary operator 'like(varchar,varchar)'
    when used in query running in other schema than sys

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 19 Sep 2016 09:30:29 +0200

monetdb (11.23.7) unstable; urgency=low

  * Rebuilt.
  * BZ#4014: KILL signal
  * BZ#4021: Analyze query does not escape input [security]
  * BZ#4026: JDBC driver incorrectly converts TINYINT fields to String
    instead of an integer type.
  * BZ#4028: inputs not the same size
  * BZ#4032: no decimal places after update. ODBC driver
  * BZ#4035: SQL Function call bug
  * BZ#4036: Possible sql_catalog corruption due to unclean backuped tail

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 13 Jul 2016 14:33:03 +0200

monetdb (11.23.7) unstable; urgency=low

  * java: Corrected PROCEDURE_TYPE output value of method DatabaseMetaData.getProcedures().
    It used to return procedureReturnsResult. Now it returns procedureNoResult.
    Corrected ORDINAL_POSITION output value of method DatabaseMetaData.getProcedureColumns().
    It used to start with 0, but as procedures do not return a result value it now
    starts with 1 for all the procedure arguments, as defined by the JDBC API.
  * java: Improved output of method DatabaseMetaData.getProcedures(). The REMARKS
    column now contains the procedure definition as stored in sys.functions.func.
    The SPECIFIC_NAME column now contains the procedure unique identifier as
    stored in sys.functions.id. This allows the caller to retrieve the specific
    overloaded procedure which has the same name, but different arguments.
    Also improved output of method DatabaseMetaData.getProcedureColumns().
    The SPECIFIC_NAME column now contains the procedure unique identifier as
    stored in sys.functions.id. This allows the caller to retrieve the proper
    arguments of the specific overloaded procedure by matching the SPECIFIC_NAME
    value.
  * java: Improved output of method DatabaseMetaData.getFunctions(). The REMARKS
    column now contains the function definition as stored in sys.functions.func.
    The SPECIFIC_NAME column now contains the function unique identifier as
    stored in sys.functions.id. This allows the caller to retrieve the specific
    overloaded function which has the same name, but different arguments.
    Also improved output of method DatabaseMetaData.getFunctionColumns().
    The SPECIFIC_NAME column now contains the function unique identifier as
    stored in sys.functions.id. This allows the caller to retrieve the proper
    arguments of the specific overloaded function by matching the SPECIFIC_NAME
    value.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 7 Jul 2016 14:33:03 +0200

monetdb (11.23.5) unstable; urgency=low

  * Rebuilt.
  * BZ#4031: mclient doesn't accept - argument to refer to stdin

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 04 Jul 2016 12:57:25 +0200

monetdb (11.23.5) unstable; urgency=low

  * MonetDB: Lots of memory leaks have been plugged across the whole system.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 1 Jul 2016 12:57:25 +0200

monetdb (11.23.3) unstable; urgency=low

  * Rebuilt.
  * BZ#4015: Daemon crashes on database release command

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 10 Jun 2016 13:23:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * Rebuilt.
  * BZ#2407: Merovingian: allow binds to given ip/interface
  * BZ#2815: No SRID support
  * BZ#3460: incomplete implementation of JDBC driver supportsConvert(),
    supportsConvert(int fromType, int toType) methods in
    MonetDatabaseMetaData.java
  * BZ#3711: JDBC connection using jdbcclient.jar is very slow
  * BZ#3877: MonetDBLite should allow close then re-open databases?
    without restarting R
  * BZ#3911: Invalid connect() call in 'redirect' mode
  * BZ#3920: query with DISTINCT and correlated scalar subquery in SELECT
    list causes Assertion failure and crash of mserver5
  * BZ#3927: COUNT( distinct my_clob ) , QUANTILE( my_double , number )
    fails in dev build
  * BZ#3956: MonetDBLite unable to execute LIMIT 1 statement
  * BZ#3972: Drastic Memory leak of 600GBs while generating plan for Query
    with 25 joins
  * BZ#3974: Prepared statement rel_bin.c:2378: rel2bin_project: Assertion
    `0' failed.
  * BZ#3975: Suspicious code in store_manager() on exit path
  * BZ#3978: SQL returns TypeException 'aggr.subcorr' undefined for
    sys.corr function
  * BZ#3980: JOIN with references on both sides crashes mserver
  * BZ#3981: Incorrect LEFT JOIN when FROM clause contains nested subqueries
  * BZ#3983: Creation of a Foreign Key which partially maps to a primary
    key is accepted without a warning
  * BZ#3984: Multiple paths in the .profile
  * BZ#3985: ruby-monetdb-sql gem fails for negative timezone offset
    (USA, etc.)
  * BZ#3987: Segfault on malformed csv import
  * BZ#3991: MonetDBLite feature request: default monetdb.sequential to
    FALSE on windows
  * BZ#3994: MonetDBLite dbDisconnect with shutdown=TRUE freezes the
    console on windows
  * BZ#3995: NullPointerException when calling getObject()
  * BZ#3997: calling scalar functions sys.isaUUID(str) or sys.isaUUID(uuid)
    fail
  * BZ#3999: length() returns wrong length for strings which have spaces
    at the end of the string
  * BZ#4010: RELEASE SAVEPOINT after ALTER TABLE crashes mserver5
  * BZ#4011: sys.sessions.user column always shows 'monetdb'
  * BZ#4013: GDKextendf does not free up memory when it fails due to
    insufficient resources

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 01 Jun 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Fixed problem in DatabaseMetaData.getUDTs() when it was called with
    types parameter filled.  It used to throw SQException with message:
    SELECT: identifier 'DATA_TYPE' unknown. Now it returns the UDTs which
    match the provided array of data types.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 26 May 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Implemented MonetDatabaseMetaData.supportsConvert() and
    MonetDatabaseMetaData.supportsConvert(int fromType, int toType) methods.
    It used to always return false. Now it returns true for the supported conversions.
    This fixes Bug 3460.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 19 May 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Corrected MonetResultSet.getObject(String columnName). It no longer
    throws a NullPointerException in cases where internally a
    MonetVirtualResultSet is used.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 12 May 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Improved JdbcClient program when presenting query data to console.
    It used to send an SQL catalog query for each query result column
    which slowed down the interactive response considerably.
    These additional SQL catalog queries have been eliminated.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 12 May 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Fixed Connection.isValid(): this method should never attempt to
    close the connection, even if an error has occurred.

 -- Jennie Zhang <y.zhang@cwi.nl>  Sun, 8 May 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: ResultSet.setFetchSize(): added a dummy implementation to get rid
    of the SQLFeatureNotSupportedException. In MonetDB, it does not
    make sense to set the fetch size of a result set. If one really
    wants to set the fetch size, one should use Statement.setFetchSize()
    instead.

 -- Jennie Zhang <y.zhang@cwi.nl>  Sun, 8 May 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Fixed resource leak in ResultSetMetaData. It created and cached a ResultSet
    object for each column but never closed the ResultSet objects.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 21 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Corrected DatabaseMetaData methods which accept a catalog filter argument.
    Those methods will now filter the results on the specified catalog name,
    whereas previously the catalog filter argument was ignored.
  * java: Corrected output of column KEY_SEQ of DatabaseMetaData methods:
    getPrimaryKeys(), getImportedKeys(), getExportedKeys() and
    getCrossReference(). It now starts at 1 instead of 0 previously.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Corrected DatabaseMetaData.getSchemas() by returning 2 instead of 3 columns.
  * java: Improved DatabaseMetaData.getColumns() by returning two additional
    columns: IS_AUTOINCREMENT and IS_GENERATEDCOLUMN.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed BATconst.  Use BATconstant instead.
  * gdk: Changed BATconstant.  It now has a new first argument with the seqbase
    for the head column.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Improved DatabaseMetaData.getTypeInfo(). It now returns better information
    on LITERAL_PREFIX, LITERAL_SUFFIX, CREATE_PARAMS, CASE_SENSITIVE,
    FIXED_PREC_SCALE and MAXIMUM_SCALE for some data types. Also the returned rows
    are now ordered by DATA_TYPE, TYPE_NAME, PRECISION as required by the specs.
    Also corrected output column names "searchable" into "SEARCHABLE" and
    "MAXIMUM SCALE" into "MAXIMUM_SCALE" to match the JDBC specification.
  * java: Corrected DatabaseMetaData.getPseudoColumns(). It used to return 12 empty rows.
    Now it returns no rows as MonetDB does not have pseudo columns.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * clients: The Ruby client is now in a separate repository
    (http://dev.monetdb.org/hg/monetdb-ruby) and released independently.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Implemented method DatabaseMetaData.getClientProperties(). It used to always
    return a resultset with 4 completely empty rows.  It now returns a
    resultset with the possible connection properties.
  * java: Implemented method DatabaseMetaData.getUDTs(). It used to return an empty
    resultset. Now it returns the User Defined Types such as inet, json, url and uuid.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * buildtools: A new package MonetDB-lidar (Fedora) or libmonetdb5-server-lidar
    (Debian/Ubuntu) has been created to work with LiDAR data.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * geom: The geom module has been completely overhauled.  Types are now specified
    as GEOMETRY(POINT) instead of POINT, old functions have been removed,
    new ones introduced.  However, even with all the changes, a database
    upgrade should still be possible (as always, make a backup first).

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Extended the storage() table producing function to also accept
    storage([schemaname [, tablename [, columnname]]])

 -- Martin Kersten <mk@cwi.nl>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Corrected the returned table types in DatabaseMetaData.getTableTypes().
    It now returns all 10 table types (as stored in sys.table_types) instead
    of the previously 8 hardcoded table types.
    For old MonetDB servers which do not have the sys.table_types table,
    the old behavior is retained.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Implemented methods DatabaseMetadata.getProcedures() and
    DatabaseMetadata.getProcedureColumns(). They used to return an empty resultset.
    Now they return the expected Procedures and ProcedureColumns.
    Also getProcedureColumns() now returns a resultset with all 20 columns
    instead of 13 columns previously.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Method getFunctionColumns() in DatabaseMetadata used to throw an
    SQLException:  getFunctionColumns(String, String, String, String) is
    not implemented.
    This method is now implemented and returns a resultset.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Method getFunctions() in DatabaseMetadata used to throw an SQLException:
     SELECT: no such column 'functions.sql'
    This has been corrected. It now returns a resultset as requested.
  * java: The resultsets of DatabaseMetadata methods now no longer return a
    value for the *_CAT columns as MonetDB does not support Catalogs.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * buildtools: Implemented a systemd configuration file for a monetdbd.service
    on systems that support it (Fedora, newer Ubuntu).

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed BATmmap.  It was no longer used.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * java: Fixed a memory leak in MonetDatabaseMetaData.java for a static cache
    which kept references to closed Connection objects.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: The :bat[:oid,:any] type descriptor has been turned into its columnar
    version :bat[:any]

 -- Martin Kersten <mk@cwi.nl>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Converted the *.mal scripts into *.malC versions to prepare for removal
    of the mserver console.

 -- Martin Kersten <mk@cwi.nl>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: BUNdelete and BATdel don't accept a foce argument and only allow
    deleting values that have not yet been committed.  BUNdelete exchanges
    the deleted value with the last value (if the deleted value isn't the
    last value).  BATdel compacts the BAT by shifting values after the
    deleted values up.  The list of to-be-deleted values in BATdel must
    be sorted and unique.
  * gdk: Removed BUNreplace from list of exported functions.  It wasn't used,
    and there is still BUNinplace and void_inplace that do more-or-less
    the same thing.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Changed BATderiveHeadProps to BATderiveTailProps (and it now works on
    the tail column).
  * gdk: Removed unused functions BATalpha, BATdelta, and BATprev.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed functions mat.hasMoreElements, mat.info, mat.mergepack,
    mat. newIterator, mat.project, mat.pack2, mat.sortReverse, mat.sort,
    and mat.slice.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed function VIEWcombine.  Use BATdense instead.
  * gdk: Removed "left" parameter from BUNinplace.  It wasn't used since the
    BAT it works on is dense headed.
  * gdk: Created function BATdense to easily create a [void,void] BAT with
    specified seqbases for head and tail and a count.
  * gdk: Removed function BATmark.  When all head columns are dense, BATmark
    basically only created a new [void,void] BAT.
  * gdk: Renamed BATsubsort to BATsort.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed grouped aggregate functions from the aggr module in which the
    groups were indicated by the head column of the bat to be aggregated.
    Use the interface with a separate group bat instead.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: The server now stops executing a query when the client disconnects.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed "sub" from the names of the function BATsubselect,
    BATthetasubselect, BATsubcross, BATsubleftjoin, BATsubouterjoin,
    BATsubthetajoin, BATsubsemijoin, BATsubdiff, BATsubjoin, BATsubbandjoin,
    BATsubrangejoin, and BATsubunique.
  * gdk: Removed BATsubleftfetchjoin: it was not used.
  * gdk: Removed BATcross1.  Use BATsubcross instead.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed algebra.join.  Use algebra.subjoin instead.
  * monetdb5: Removed algebra.antijoin.  Use algebra.subantijoin or
    algebra.subthetajoin instead.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: The MAL function 'leftfetchjoin' is renamed to its relational algebra
    version 'projection'

 -- Martin Kersten <mk@cwi.nl>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: The generic property handling scheme has been removed. It was used in
    just a few places, for widely different purposes and contained cruft.

 -- Martin Kersten <mk@cwi.nl>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed functions str.iconv and str.codeset.  Internally, strings are
    always in UTF-8 encoding, so we can't allow code set conversions.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * sql: Disallow GRANT <some-user> TO <role-or-use>.  Only explicitly
    created roles can be granted.

 -- Jennie Zhang <y.zhang@cwi.nl>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * sql: Extended grantable schema privileges: when a user is granted the
    "sysadmin" role, the user now hcan not only create schemas, but
    also drop schemas.
  * sql: Introduced COPY INTO/ COPY FROM global privileges. These privileges
    allows other users than 'monetdb' to be granted the privileges
    to use the MonetDB bulk data loading/exporting features, i.e.,
    COPY FROM <file> and COPY INTO <file>.

 -- Jennie Zhang <y.zhang@cwi.nl>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed all versions of the SORTloop macro.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed algebra.like with a BAT argument.  Use algebra.likesubselect
    instead.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed Batkdiff.  Use BATsubdiff instead.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed BATselect.  Use BATsubselect instead.
  * gdk: Removed BATsemijoin.  Use BATsubsemijoin instead.
  * gdk: Removed BATjoin.  Use BATsubjoin instead.
  * gdk: Removed BATleftjoin.  Use BATsubleftjoin or BATproject instead.
  * gdk: Removed BATleftfetchjoin.  Use BATproject instead.
  * gdk: Removed BUNins from the list of exported functions.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed algebra.leftjoin.  Use algebra.subleftjoin or
    algebra.leftfetchjoin instead.
  * monetdb5: Removed algebra.tdiff and algebra.tinter.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed algebra.sample.  Use sample.subuniform instead.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed algebra.select.  Use algebra.subselect instead.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed legacy functions BATuselect and BATuselect_.
  * gdk: Removed legacy functions BATantijoin, BATbandjoin, BATouterjoin,
    BATrangejoin, and BATthetajoin.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed function BATrevert.
  * gdk: BATordered now works on the TAIL column.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed algebra.revert.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed obsolete functions BATorder() and BATorder_rev().

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed bat.order and bat.orderReverse functions.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Changed client.getUsers to return two bats, one with the user id
    and one with the user name.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Implemented algebra.subdiff and algebra.subinter.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Implemented BATsubdiff which returns a list of OIDs (sorted, i.e. usable
    as candidate list) of tuples in the left input whose value does not
    occur in the right input.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed algebra.tdifference and algebra.tintersect.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed function BATkintersect.  It wasn't used anymore.  It's
    functionality can be obtained by using BATsubsemijoin.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * gdk: Removed the function BATkunion.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.23.1) unstable; urgency=low

  * monetdb5: Removed algebra.tunion.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 5 Apr 2016 16:10:50 +0200

monetdb (11.21.19) unstable; urgency=low

  * Rebuilt.
  * BZ#3905: MonetDB doesn't handle ANY/SOME/ALL operator correctly
  * BZ#3929: R aggregate not recognized when using 3 or more parameters
  * BZ#3965: Not possible to quote/escape single quote character in the
    name of the file to load.
  * BZ#3968: Missing double use of column names

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 05 Apr 2016 11:29:47 +0200

monetdb (11.21.19) unstable; urgency=low

  * gdk: Fixed a bug that caused various instances where old data returned or
    where crashes occurred.  The problem was that internally data wasn't
    always marked dirty when it was being changed, causing later processing
    to not deal with the changed data correctly.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 4 Apr 2016 11:29:47 +0200

monetdb (11.21.17) unstable; urgency=low

  * Rebuilt.
  * BZ#2972: SQL URL functionality contains errors
  * BZ#3881: Server crashes on bulk load
  * BZ#3890: Window function + group by in subselect, rel2bin_project:
    Assertion `0' failed
  * BZ#3891: MonetDB crashes when executing SQL with window function
  * BZ#3900: null handling in some sql statements is incorrect
  * BZ#3906: Multi-column 1-N table-function with mitosis produces different
    column counts
  * BZ#3917: Date difference returns month_interval instead of day_interval
  * BZ#3938: Wrong error message on violating foreign key constraint
  * BZ#3941: Wrong coercion priority
  * BZ#3948: SQL: select * from sys.sys.table_name; is accepted but should
    return an error
  * BZ#3951: extern table_funcs not visible from Windows DLL for extensions
    like vaults (crashes)
  * BZ#3952: Stream table gives segfault
  * BZ#3953: MIN/MAX of a UUID column produces wrong results
  * BZ#3954: Consolidate table assertion error
  * BZ#3955: (incorrect) MAL loop instead of manifold triggered by simple
    change in target list

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 24 Mar 2016 09:25:15 +0100

monetdb (11.21.15) unstable; urgency=low

  * Rebuilt.
  * BZ#3549: bulk string operations very slow
  * BZ#3908: LEFT JOIN with OR conditions triggers assertion
  * BZ#3909: Incorrect column name in OR condition of LEFT JOIN crashes
    mserver
  * BZ#3910: COPY INTO table (column1, column2) got wrong result
  * BZ#3912: When table/column names conflicts, data ends in multiple
    tables!
  * BZ#3918: MonetDB.R version 1.0.1 incorrectly constructs the batfile
    script
  * BZ#3919: Table conflict when the table name and fields are identical
  * BZ#3921: Creating a table from a complex query crashes mserver or
    triggers assertion
  * BZ#3922: AVG( column ) returns NaN rather than Inf when column
    contains Inf
  * BZ#3928: When killing a virtual machine, sql_logs/sql/log is empty
  * BZ#3930: Wrong typecast on character columns in prepared statements
    when using Umlaute
  * BZ#3932: CASE expressions with constants are not evaluated correctly
  * BZ#3933: replace "exit" by "throw new Exception"
  * BZ#3937: bad BAT properties with binary copy into and NULL values
  * BZ#3940: Date calculation and comparison produce wrong result

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 10 Mar 2016 09:31:09 +0100

monetdb (11.21.15) unstable; urgency=low

  * monetdb5: Fixed potential crash in MAL debugger when accessing BATs by
    index. Functionality dropped as it is also a security leak.

 -- Martin Kersten <mk@cwi.nl>  Tue, 5 Jan 2016 09:31:09 +0100

monetdb (11.21.13) unstable; urgency=low

  * Rebuilt.
  * BZ#2014: 'null' from copy into gets wrong
  * BZ#3817: opt_pushselect stuck with multi-table UDF
  * BZ#3835: windows does not release ram after operations
  * BZ#3836: rand() only gets evaluated once when used as an expression
  * BZ#3838: Update column with or without parenthesis produce different
    results
  * BZ#3840: savepoints may crash the database
  * BZ#3841: mclient fails with response "Challenge string is not valid"
  * BZ#3842: SQL execution fails to finish and reports bogus error messages
  * BZ#3845: Too many VALUES in INSERT freeze mserver5
  * BZ#3847: Wrong SQL results for a certain combination of GROUP BY /
    ORDER BY / LIMIT
  * BZ#3848: mserver segfault during bulk loading/updating
  * BZ#3849: HUGEINT incorrect value
  * BZ#3850: DEL character not escaped
  * BZ#3851: expression that should evaluate to FALSE evaluates to TRUE
    in SELECT query
  * BZ#3852: CASE statement produces GDK error on multithreaded database:
    BATproject does not match always
  * BZ#3854: Complex expression with comparison evaluates incorrectly in
    WHERE clause
  * BZ#3855: Foreign key referencing table in a different schema -
    not allowed.
  * BZ#3857: Large LIMIT in SELECT may abort the query
  * BZ#3861: Using window functions cause a crash
  * BZ#3864: Error in bulk import for chinese character
  * BZ#3871: NOT x LIKE triggers "too many nested operators"
  * BZ#3872: mserver crashes under specific combination of JOIN and WHERE
    conditions
  * BZ#3873: mserver5: gdk_bat.c:1015: setcolprops: Assertion `x !=
    ((void *)0) || col->type == 0' failed.
  * BZ#3879: Database crashes when querying with several UNION ALLs.
  * BZ#3887: Querying "sys"."tracelog" causes assertion violation and
    crash of mserver5 process
  * BZ#3889: read only does not protect empty tables
  * BZ#3895: read only does not protect this table

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 05 Jan 2016 11:05:59 +0100

monetdb (11.21.11) unstable; urgency=low

  * Rebuilt.
  * BZ#3828: Schema corruption after several ALTER TABLE statements and
    server restart
  * BZ#3839: msqldump generates incorrect syntax ON UPDATE (null)

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 30 Oct 2015 13:47:30 +0100

monetdb (11.21.9) unstable; urgency=low

  * Rebuilt.
  * BZ#3816: Server crashes when trying to convert timestamp to str with
    incorrect format
  * BZ#3823: JDBC Connection to a schema - setSchema() error
  * BZ#3827: Certains comparisons between UUID produce a MAL error
  * BZ#3829: Certains simple WHERE clause cause MonetDB to segfault
    without explanation
  * BZ#3830: Coalesce typing inconsistencies
  * BZ#3833: NULL literals refused at many places
  * BZ#3834: Date comparison returns incorrect results

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 26 Oct 2015 11:49:34 +0100

monetdb (11.21.7) unstable; urgency=low

  * Rebuilt.
  * BZ#3789: Query on large string table fails on HEAPextend
  * BZ#3794: table function sys.rejects() and view sys.rejects() are listed
    are metadata objects but give an (incorrect) error when they are queried
  * BZ#3797: COPY INTO with incorrect number columns
  * BZ#3798: SELECT query with INTERSECT causes assertion failure
  * BZ#3800: LIKE is broken for many patterns
  * BZ#3802: Disk space never freed: a logical ref is keeped on a deleted
    BATs
  * BZ#3803: SQL query parser fails to parse valid SELECT query with a
    CASE .. END in it. It fails with parser error: identifier 'x' ambiguous
  * BZ#3804: `monetdb status` command crashes under certain conditions
  * BZ#3809: Inefficient plan is generated for queries with many (>= 24)
    joined tables which take a long time or an HEAPalloc error. I get Error:
    GDK reported error. HEAPalloc: Insufficient space for HEAP of 400000000
    bytes.
  * BZ#3810: Fix statistics gathering
  * BZ#3811: NOT LIKE not working if the operand doesn't contains wildcards.
  * BZ#3813: COPY INTO fails on perfectly clean CSV file
  * BZ#3814: Server crash when using bitwise NOT operation in SQL query
  * BZ#3818: Crash when performing UNION/GROUP BY over tables with
    different columns
  * BZ#3819: order of tables in FROM-clause has negative impact on generated
    plan (using crossproducts instead of joins)
  * BZ#3820: mclient accepts table with repeated constraint which causes
    crash on insert
  * BZ#3821: Unexpected error when using a number instead of a boolean
  * BZ#3822: Yet another LIKE operator issue
  * BZ#3825: MonetDB not cleaning intermediate results which leads to
    filling up disk space and ultimately server crash

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 20 Oct 2015 14:06:53 +0200

monetdb (11.21.7) unstable; urgency=low

  * clients: In the SQL formatter of mclient (the default) we now properly align
    East Asian wide characters.

 -- Sjoerd Mullender <sjoerd@acm.org>  Sun, 30 Aug 2015 14:06:53 +0200

monetdb (11.21.5) unstable; urgency=low

  * Rebuilt.
  * BZ#3730: SAMPLE function not sampling randomly

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 24 Aug 2015 12:52:24 +0200

monetdb (11.21.3) unstable; urgency=low

  * Rebuilt.
  * BZ#3361: constants as MAL function parameters prevent intermediate reuse
  * BZ#3440: Sequence type errors
  * BZ#3449: mserver crash on start - Freebsd 10 amd64
  * BZ#3496: autocompletion table names does not work correctly
  * BZ#3758: "COPY INTO ..." doesn't work, if executing from 2 processes
    concurrently.
  * BZ#3763: JDBC PreparedStatement for a table with 14 Foreign Keys
    crashing the Database
  * BZ#3783: Behavioural change in Jul2015 for 'timestamp minus timestamp'
  * BZ#3784: Assertion failed: (bn->batCapacity >= cnt), function
    BAT_scanselect, file gdk_select.c, line 1008.
  * BZ#3785: sum(interval) causes overflow in conversion to bte
  * BZ#3786: ResultSet.close() never sends Xclose to free resources
  * BZ#3787: "b and g must be aligned" from complex group/union query
  * BZ#3791: HEAPextend: failed to extend to 2420077101056

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 18 Aug 2015 13:44:54 +0200

monetdb (11.21.3) unstable; urgency=low

  * sql: Differences between time, timestamp, and date values now return properly
    typed interval types (second or month intervals) instead of integers.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 18 Aug 2015 13:44:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * Rebuilt.
  * BZ#3364: Cannot set role back to a user's default role
  * BZ#3365: Unable to grant object privileges while having a non-default
    current_role
  * BZ#3476: Cannot revoke object access
  * BZ#3556: when 2 multiplexed functions in MAL plan, only one is mapped
    correctly to bat<mod>.function primitive
  * BZ#3564: Request: add support for postgresql specific scalar function:
    split_part(string text, delimiter text, field int)
  * BZ#3625: SIGSEGV because mat array can overrun in opt_mergetable.c
  * BZ#3627: SQRT in CASE does not work as of Oct2014
  * BZ#3654: configure --enable-fits requires extra commands after creating
    a database instance
  * BZ#3673: mclient 'expanded' row formatter
  * BZ#3674: Obfuscate event tracing
  * BZ#3679: No error is given when incorrect timezone value is specified
    for a timetz column
  * BZ#3686: Wrong associativity of multiply/divide
  * BZ#3702: Filter function not found if created in a user schema
  * BZ#3708: wrong scoping for cross-schema view references
  * BZ#3716: alter table my_merge_table drop table t1; crashes mserver5
    with Segmentation fault
  * BZ#3724: Wrong size calculation in BATsubjoin
  * BZ#3732: memory leak (of InstrRecord) in opt_mergetable
  * BZ#3733: "(TRUE OR <Exp>) AND <Exp>" is evaluated incorrectly
  * BZ#3735: python connection with unix_socket
  * BZ#3736: crash if mclient disconnects abruptly during a query
  * BZ#3738: Database inconsistency when using savepoint
  * BZ#3739: CASE statements do not handle NULLs in the IN () operator
    properly
  * BZ#3740: select epoch(now()); types timestamptz(7,0) and bigint(64,0)
    are not equal
  * BZ#3742: Division By Zero
  * BZ#3744: cast to int gives different results for decimal than double
  * BZ#3747: joins fail in the presence of nulls
  * BZ#3748: Missing META-INF/services/java.sql.Driver in JDBC package
  * BZ#3753: Hang on json field parsing
  * BZ#3754: select from a REMOTE TABLE referring local table crashes
    mserver5
  * BZ#3756: column type conversion sticks to subsequent queries
  * BZ#3759: select data from "sys"."rejects" returns unexpected error and
    when next select data from "sys"."sessions" causes an assertion failure
    in mal_interpreter.c:646.
  * BZ#3760: SQL parser has problem with (position of) a scalar subquery
    in a SELECT-list
  * BZ#3761: SQL executor has problem with (position of) a subquery in a
    SELECT-list. Inconsistent behavior.
  * BZ#3764: DROPping multiple users causes a crash
  * BZ#3765: Re-granting a revoked privilege does not work
  * BZ#3766: VIEW not visible if created under a different schema
  * BZ#3767: CREATE TEMP TABLE using "LIKE" incorrectly handled
  * BZ#3769: SIGSEGV when combining a cast/column alias with a UNION
    ALL view
  * BZ#3770: combined conditions on declared table in User Defined Function
    definition crashes monetdb
  * BZ#3771: Owner of the schema loses rights if assumes the monetdb role.
  * BZ#3772: Any user can grant a role.
  * BZ#3773: quantile(col, 0) and quantile(col, 1) fail
  * BZ#3774: mclient is unaware of merge tables and remote tables
  * BZ#3775: COPY INTO: Backslash preceding field separator kills import
  * BZ#3778: Crash on remote table schema mismatch
  * BZ#3779: server crashes on MAX() on SELECT DISTINCT something combo

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 07 Aug 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * java: Improved JDBC driver to not throw NullPointerException anymore
    when calling isNullable() or getPrecision() or getScale() or
    getColumnDisplaySize() or getSchemaName() or getTableName() or
    getColumnClassName() on a ResultSetMetaData object.

 -- Martin van Dinther <martin.van.dinther@monetdbsolutions.com>  Thu, 6 Aug 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * sql: Added support for 128-bit integers (called HUGEINT) on platforms that
    support this.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 28 Jul 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * java: We now compile the Java classes using the latest Java 1.8 version, and
    we tell it to compile for Java 1.7.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 16 Jul 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * buildtools: Upgraded the license to the Mozilla Public License Version 2.0.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Jun 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * clients: Added a new output format to mclient: --format=expanded (or -fx).
    In this format, column values are shown in full and below each other.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Jun 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * sql: Removed support for the mseed library.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Jun 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * sql: Removed support for RDF.
  * sql: Removed DataCell.  It was experimental code that was never enabled.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Jun 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * gdk: BUNtvar and BUNhvar macros no longer work for TYPE_void columns.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Jun 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * gdk: Changed interfaces of a lot of GDK-level functions.  When they modify a
    BAT, don't return the same BAT or NULL, but instead return GDK_SUCCEED
    or GDK_FAIL.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Jun 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * monetdb5: Implemented batcalc.min and batcalc.max.  Made calc.min and calc.max
    generic so that no other implementations are needed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Jun 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * monetdb5: Removed function batcalc.ifthen.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Jun 2015 14:56:54 +0200

monetdb (11.21.1) unstable; urgency=low

  * gdk: Changed a bunch of hash-related functions to work on the tail column.
    The functions that have been changed to work on the tail column are:
    BAThash, BATprepareHash, HASHgonebad, HASHins, and HASHremove.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 3 Jun 2015 14:56:54 +0200

monetdb (11.19.15) unstable; urgency=low

  * Rebuilt.
  * BZ#3707: var() possibly not working in debug builds
  * BZ#3720: Incorrect results on joining with same table
  * BZ#3725: LEFT JOIN bug with CONST value
  * BZ#3731: left shift for IP addresses not available to non-system users

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 03 Jun 2015 12:31:39 +0200

monetdb (11.19.13) unstable; urgency=low

  * Rebuilt.
  * BZ#3712: Concurrency issue on querying the SQL catalog
  * BZ#3713: Long startup cost for simple session
  * BZ#3715: Crash with two ALTER TABLE statements in a transaction
  * BZ#3718: Adding and dropping a non existing tablename to/from a merge
    table is accepted without an error
  * BZ#3719: Assertion failure in /MonetDB-11.19.11/gdk/gdk_bat.c:2841:
    BATassertHeadProps: Assertion `!b->H->key || cmp != 0' failed.
  * BZ#3723: Assertion failure in rel_bin.c:2548: rel2bin_groupby: Assertion
    `0' failed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 19 May 2015 13:34:49 +0200

monetdb (11.19.11) unstable; urgency=low

  * Rebuilt.
  * BZ#3466: UPDATE statements fails with "GDKerror: MT_mremap() failed"
  * BZ#3602: Surprising overload resolution of generate_series
  * BZ#3613: SQL data dictionary contains columns names which are also
    special keywords. This causes unexpected/unneeded SQL query errors
  * BZ#3645: Network address operators such as << and <<= do not work
  * BZ#3647: missing BAT for a column leads to crash in gtr_update_delta
  * BZ#3648: memory corruption on unclean connection shutdown with local
    temporary tables
  * BZ#3650: Naming of persistent BATs is fragile
  * BZ#3653: PREPARE crashes mserver if unbound variable is function
    parameter
  * BZ#3655: SQL WHERE -1 in (-1) issue?
  * BZ#3656: error message after calling fitsload()
  * BZ#3660: Incorrect Results for Comparison Operators on inet Datatype
  * BZ#3661: Ship debug symbols for pre-built binaries
  * BZ#3662: UPDATE row with row value constructor crashes monetdb server
  * BZ#3663: Incorrect result ROW_NUMBER in subquery
  * BZ#3664: SQLstatementIntern missing parameter when using jsonstore
  * BZ#3665: inter-session starvation issue, particularly affects sys.queue
  * BZ#3666: casting text column to inet truncating text column and
    resulting inet for first occurrence only
  * BZ#3667: insert of negative value for oid column aborts mserver5
    process with assertion failure
  * BZ#3669: ALTER TABLE <tbl_nm> ADD CONSTRAINT <tbl_uc1> UNIQUE (col1,
    col2, col3) causes Assertion failure and abort
  * BZ#3671: ODBC-Access on Windows 2012 does not work - E_FAIL
  * BZ#3672: libbat_la-gdk_utils.o: relocation R_X86_64_PC32 against
    `MT_global_exit' can not be used when making a shared object
  * BZ#3676: merovingian hangs trying to exit
  * BZ#3677: Crash in BATgroup_internal (caused by 87379087770d?)
  * BZ#3678: Ruby driver installation ignores prefix
  * BZ#3680: Prepared statements fail on execution with message 'Symbol
    type not found'
  * BZ#3684: Wrong query result set WHERE "IS NULL" or "NOT IN" clauses
    uses in combination with ORDER, LIMIT and OFFSET
  * BZ#3687: 'bat.insert' undefined
  * BZ#3688: Crash at exit (overrun THRerrorcount?)
  * BZ#3689: No more connections accepted if a single client misbehaves
  * BZ#3690: find_fk: Assertion `t && i' failed.
  * BZ#3691: conversion of whitespaces string to double or float is accepted
    without an error during insert
  * BZ#3693: algebra.join undefined (caused by non-existing variables in
    the plan)
  * BZ#3696: Inconsistent behavior between dbl (SQL double) and flt (SQL
    real) data types and across platforms
  * BZ#3697: mserver5[26946]: segfault at 0 ip 00007f3d0e1ab808 sp
    00007f3cefbfcad0 error 4 in lib_sql.so[7f3d0e180000+16c000]
  * BZ#3699: segfault again! (during last week I found 3 segfault bugs
    already)
  * BZ#3703: INSERT INTO a MERGE TABLE crashes mserver5
  * BZ#3704: Unknown identifier from subquery
  * BZ#3705: Assertion failure in rel_bin.c:2274: rel2bin_project: Assertion
    `0' failed.
  * BZ#3706: Assertion failure in gdk_bat.c: BATassertHeadProps: Assertion
    `!b->H->sorted || cmp <= 0' failed.
  * BZ#3709: "BATproject: does not match always" on abusive use of ALTER
    TABLE SET READ ONLY

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 23 Apr 2015 09:17:39 +0200

monetdb (11.19.11) unstable; urgency=low

  * buildtools: We now also create debug packages for Debian and Ubuntu.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 3 Feb 2015 09:17:39 +0200

monetdb (11.19.11) unstable; urgency=low

  * gdk: Replaced the rangejoin implementation with one that uses imprints if
    it can.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 27 Jan 2015 09:17:39 +0200

monetdb (11.19.9) unstable; urgency=low

  * Rebuilt.
  * BZ#3467: Field aliases with '#' character excise field names in
    result set.
  * BZ#3605: relational query without result
  * BZ#3619: Missing dll on MonetDB Start
  * BZ#3622: Type resolution error
  * BZ#3624: insert of incomplete or invalid ip address values in
    inet column is silently accepted but the values are not stored (they
    become/show nil)
  * BZ#3626: casting a type without alias results in program contains errors
  * BZ#3628: mclient and ODBC driver report 'type mismatch' when stddev_pop
    used in a select which returns 0 rows
  * BZ#3629: IF THEN ELSEIF always evaluates the first test as true
  * BZ#3630: segv on rel_order_by_column_exp
  * BZ#3632: running make clean twice gives an error in clients/ruby/adapter
  * BZ#3633: Wrong result for HAVING with floating-point constant
  * BZ#3640: Missing implementation of scalar function: sql_sub(<date>,
    <month interval>)
  * BZ#3641: SQL lexer fails to detect string end if it the last character
    is U+FEFF ZERO WIDTH NO-BREAK SPACE
  * BZ#3642: Combined WHERE conditions less-than plus equals-to produce
    incorrect results
  * BZ#3643: Missing implementations of scalar function: sql_sub(<timetz>,
    arg2)
  * BZ#3644: COPY INTO fails to import "inet" data type when value has
    prefix length in CIDR notation
  * BZ#3646: ORDER BY clause does not produce proper results on 'inet'
    datatype
  * BZ#3649: recycler crashes with concurrent transactions

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 23 Jan 2015 13:21:50 +0100

monetdb (11.19.9) unstable; urgency=low

  * sql: Fixed a typo in a column name of the sys.tablestoragemodel view
    (auxillary changed to auxiliary).

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 19 Jan 2015 13:21:50 +0100

monetdb (11.19.9) unstable; urgency=low

  * clients: Changes to the Perl interface, thanks to Stefan O'Rear:
    1. removes "use sigtrap", because this has global effects and should
    not be used by modules, only by the application.
    2. allows Perl 5.8.1+ Unicode strings to be passed to quote() and
    included in statements (UTF-8 encoded, as expected by Monet's str
    module)
    3. quote and unquote now use the same quoting rules as the MonetDB
    server, allowing for all characters except NUL to be round-tripped
    4. several character loops have been reimplemented in regex for much
    greater performance
    5. micro-optimizations to the result fetch loop
    6. block boundaries are preserved in piggyback data so that Xclose is
    not appended or prepended to a SQL command
    7. diagnostic messages #foo before a result header are ignored, this
    is necessary to use recycler_pipe
    8. fail quickly and loudly if we receive a continuation prompt (or any
    other response that starts with a non-ASCII character)
    9. header lines must start with %, not merely contain %, fixing a bug
    when querying a table where string values contain %
    10. after closing a large resultset, account for the fact that a reply
    will come and do not lose sync
    11. allow a MAPI_TRACE environment variable to dump wire protocol
    frames to standard output
    12. fixes maximum MAPI block size to match the server limit of 16k.
    previously would crash on blocks larger than 16k

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 13 Jan 2015 13:21:50 +0100

monetdb (11.19.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 21 Nov 2014 10:14:18 +0100

monetdb (11.19.5) unstable; urgency=low

  * Rebuilt.
  * BZ#3580: cosmetic change (append newline)
  * BZ#3609: Incorrect use of generate_series
  * BZ#3611: quantile() and median() commands crash when used 2x on the
    same variable on a null table
  * BZ#3612: assertion failure when deleting rows from table to which a
    FK constraint is defined
  * BZ#3620: ORDER BY broken when using UNION ALL
  * BZ#3621: Hexadecimal literal vs decimal literal

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 20 Nov 2014 10:37:22 +0100

monetdb (11.19.5) unstable; urgency=low

  * gdk: Implemented a change to the way in which string bats are appended.
    We now try harder to limit the growth of the string heap.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 20 Nov 2014 10:37:22 +0100

monetdb (11.19.5) unstable; urgency=low

  * monetdb5: Fixed adding of 0 intervals to dates.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 20 Nov 2014 10:37:22 +0100

monetdb (11.19.5) unstable; urgency=low

  * sql: Fixed sys.queue() implementation to report on other queries being
    executed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 20 Nov 2014 10:37:22 +0100

monetdb (11.19.5) unstable; urgency=low

  * sql: A number of bugs were fixed in the code to upgrade a database from
    previous releases.  This version should fix the upgrade of a database
    that had been upgraded to the Oct2014 release, but also properly
    upgrade directly from Jan2014 and Feb2013 releases.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 14 Nov 2014 10:37:22 +0100

monetdb (11.19.5) unstable; urgency=low

  * buildtools: The libraries included in the Windows installers have been upgraded.
    We now use libxml2-2.9.2, openssl-1.0.1j, pcre-8.36, and zlib-1.2.8.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Nov 2014 10:37:22 +0100

monetdb (11.19.5) unstable; urgency=low

  * gdk: Fixed some problems with BATsample.  It was possible for BATsample to
    return a value that was just beyond the end of the sampled BAT.  Also,
    on some systems the range of the rand() function is rather limited
    (0..32767) and trying to get a sample larger than this range would
    result in an infinite loop.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 5 Nov 2014 10:37:22 +0100

monetdb (11.19.3) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 28 Oct 2014 09:02:24 +0100

monetdb (11.19.1) unstable; urgency=low

  * Rebuilt.
  * BZ#2618: Implement master slave scheme
  * BZ#2945: evaluation of SQL "between SYMMETRIC" requires MAL iterator
    because there is no (bulk) MIN/MAX(a,b)
  * BZ#3204: monetdb create: allow setting admin password during creation
  * BZ#3390: Missing definition for pushSht in monetdb5/mal/mal_builder.h
  * BZ#3402: We should have a C implementation of mal.multiplex.
  * BZ#3422: Segmentation fault after large table insert
  * BZ#3459: incomplete implementation of JDBC driver getNumericFunctions(),
    getStringFunctions(), getSystemFunctions(), getTimeDateFunctions(),
    getSQLKeywords() methods in MonetDatabaseMetaData.java
  * BZ#3471: JDBC driver: incorrect output result of SQL query: SELECT 1 ;
  * BZ#3474: bulk and scalar versions of mkey.rotate_xor_hash differ
  * BZ#3484: COPY INTO on a file works fine on Linux/OSX, but not on Windows
  * BZ#3488: Slow SQL execution for correlated scalar subquery
  * BZ#3489: SQL query with ORDER BY does not order its result as requested
  * BZ#3490: SQL query kills the mserver5 (Segmentation fault)
  * BZ#3491: SQL query kills the mserver5 (Segmentation fault)
  * BZ#3493: Test monetdb5/modules/mal/Tests/pqueue.mal fails since
    recent checkins
  * BZ#3494: Tests monetdb5/modules/mal/Tests/pqueue[23].mal lack
    correct/expected/intended output
  * BZ#3495: Test sql/test/centipede/Tests/olap.sql lacks
    correct/expected/intended output
  * BZ#3497: monetdb start reports crash in merovingian.log
  * BZ#3498: SQL throws TypeException if aggregations and limit statements
    are both present
  * BZ#3502: Database was killed by signal SIGBUS
  * BZ#3504: COPY INTO does not allow OFFSET without specifying amount
    of records
  * BZ#3505: expression with <boolean> = NOT <boolean> returns a syntax
    error but NOT <boolean> = <boolean> not
  * BZ#3506: conversion to varchar terminates mserver
  * BZ#3508: conversion of string '0   ' to type smallint or integer fails
  * BZ#3510: timestamp + month interval generates bogus MAL?
  * BZ#3511: When having multiple selections combined with aliases not
    all of them seem to be evalauted.
  * BZ#3512: auto-conversion of string to `sht` type no longer works
  * BZ#3513: COPY BINARY INTO fails on 6gb file; works fine on 3gb
  * BZ#3516: inserting '0' into a column of datatype numeric fails
  * BZ#3518: UNION with subqueries
  * BZ#3521: large results of function exp() are not automatically returned
    as double
  * BZ#3522: SQL catalog table sys.columns lists columns for table ids
    which do not exist in sys.tables
  * BZ#3523: Window function over union gives no result
  * BZ#3524: wrong error on missing aggregation column
  * BZ#3527: select distinct - order by - limit 2 results in one single
    result
  * BZ#3528: segfault at mal_session.c:521
  * BZ#3532: several geom tests crash after manifold changes
  * BZ#3534: missing table name with invalid column in join using (and
    problems after resolving it)
  * BZ#3536: program contains error with join using integer and smallint
  * BZ#3542: gdk/gdk_bat.c:2904: BATassertHeadProps: Assertion
    `!b->H->revsorted || cmp >= 0' failed.
  * BZ#3543: invalid behavior and incorrect data results for SQL data
    type: numeric(4,4)
  * BZ#3544: sys.reuse() corrupts data
  * BZ#3546: Division by zero in CASE statement that should avoid it
  * BZ#3547: Empty query when selecting a field from a view made of
    UNION ALL
  * BZ#3551: Wrong ticks in TRACE
  * BZ#3552: incorrect data results for "WHERE int_col <> 0"
  * BZ#3554: Issue with subselect and ORDER BY
  * BZ#3555: Order of evaluation inside CASE WHEN
  * BZ#3558: numeric values (as strings) are incorrectly parsed/converted
    and invalid strings are accepted without error
  * BZ#3560: Error "BATproject: does not match always" with
    subselect/groupby/having
  * BZ#3562: mserver5: gdk_bat.c:2855: BATassertHeadProps: Assertion
    `!b->H->revsorted || cmp >= 0' failed.
  * BZ#3563: incorrect results for scalar function locate(in_str,
    search_str, occurrence)
  * BZ#3565: Wrong/confusing error message when trying to add a FK to a
    TEMP TABLE
  * BZ#3572: Table names with escaped double quotes are rejected
  * BZ#3573: alter table alter_not_null_test alter test set NOT NULL;
    is accepted when test contains null. This used to be restricted but
    isn't anymore
  * BZ#3575: segmentation fault in mserver5 process
  * BZ#3576: Dropping default value definitions from a table does not work
    as expected
  * BZ#3577: SIGSEGV in BATins_kdiff
  * BZ#3579: segmentation fault in mserver5 process
  * BZ#3581: mserver5: rel_bin.c:2504: rel2bin_groupby: Assertion `0'
    failed.
  * BZ#3582: mserver5: sql_mem.c:48: sql_ref_dec: Assertion `r->refcnt >
    0' failed.
  * BZ#3583: Possible buffer overflow in max(varchar)
  * BZ#3585: Incorrect query terminates connection
  * BZ#3586: mserver5: sql/storage/store.c:3610: sys_drop_func: Assertion
    `rid_func != oid_nil' failed.
  * BZ#3592: SIGSEGV in MANIFOLDjob
  * BZ#3593: delta_append_val: Assertion `!c || ((c)->S->count) ==
    bat->ibase' failed.
  * BZ#3594: gdk/gdk_bat.c:2855: BATassertHeadProps: Assertion
    `!b->H->revsorted || cmp >= 0' failed.
  * BZ#3595: Race/heap corruption on thread exit
  * BZ#3596: gdk_bat.c:2861: BATassertHeadProps: Assertion `!b->H->nonil ||
    cmp != 0' failed.
  * BZ#3597: SQL to MAL listing looses types
  * BZ#3598: SQL bulk load should ignore leading/trailing spaces also with
    type decimal (as with integers & real/double)
  * BZ#3599: Double-free of imprints
  * BZ#3601: Trivial typo in debian/monetdb5-sql.init.d
  * BZ#3603: "monetdb create -p" hangs monetdbd
  * BZ#3604: Sys.queue ignored upon errors

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 24 Oct 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * monetdb5: Removed algebra.materialize.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 15 Sep 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * monetdb5: Removed algebra.kunique and algebra.tunique.  They were subsumed by
    algebra.subunique.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 29 Aug 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * monetdb5: Remove algebra.antiuselect and algebra.thetauselect.  They were subsumed
    by algebra.subselect.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 26 Aug 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * monetdb5: Removed algebra.topN and its imlementation BATtopN.  The function was
    not used.
  * monetdb5: Removed aggr.histogram and its implementation BAThistogram.  The
    function was not used, and did not produce output in the "headless"
    (i.e. dense-headed) format.  Histograms can be created as a by-product
    of group.subgroup.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 25 Aug 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * gdk: Added "multifarm" capability.  It is now possible to separate persistent
    and transient BATs into different directories (presumably on different
    disks).  This can be done by using the --dbextra option of mserver5
    (see the man page).

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 25 Jul 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * buildtools: Jacqueline, the MonetDB/JAQL frontend, has been removed.  The frontend
    never grew beyond being experimental, and there is no interest anymore
    to maintain the code.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 25 Jul 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * sql: Added PostgreSQL compatible string TRIM, LTRIM, RTRIM, LPAD and RPAD
    functions

 -- Jennie Zhang <y.zhang@cwi.nl>  Fri, 25 Jul 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * mapilib: Changed mapi_timeout argument from seconds to milliseconds.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 25 Jul 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * stream: Changed mnstr_settimeout function so that the specified timeout is now
    in milliseconds (used to be seconds), and that it also needs an extra
    argument specifying a callback function (no arguments, int result)
    that should return TRUE if the timeout should cause the function to
    abort or continue what it was doing.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 25 Jul 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * merovingian: monetdb create: add -p flag to set monetdb user password on creation,
    and therefore allow creating the database in unlocked state

 -- Fabian Groffen <fabian@monetdb.org>  Fri, 25 Jul 2014 09:22:22 +0200

monetdb (11.19.1) unstable; urgency=low

  * sql: Stop support for upgrading directly from a database created with a
    server from the Oct2012 release or older.  You can upgrade via the
    Feb2013 or Jan2014 release.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 25 Jul 2014 09:22:22 +0200

monetdb (11.17.21) unstable; urgency=low

  * Rebuilt.
  * BZ#3519: Uppercase TRUE/FALSE strings cannot be converted to boolean
    values

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 25 Jul 2014 15:09:53 +0200

monetdb (11.17.19) unstable; urgency=low

  * Rebuilt.
  * BZ#3487: dead link to "Professional services"
  * BZ#3500: MonetDB driver wants an empty string for SQLTables and
    SQLColumns API calls, where other drivers expect NULL
  * BZ#3514: mserver5 crash due (assertion failure in gdk_select.c)
  * BZ#3515: mserver5 crash due (assertion failure in gdk_bat.c)

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 22 Jul 2014 11:42:07 +0200

monetdb (11.17.19) unstable; urgency=low

  * buildtools: Fix configure to continue without Python if the python binary is
    too old.  This instead of always aborting configure if python happens
    to be too old.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 3 Jun 2014 11:42:07 +0200

monetdb (11.17.17) unstable; urgency=low

  * Rebuilt.
  * BZ#3482: Crossproduct error

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 14 May 2014 09:55:28 +0200

monetdb (11.17.15) unstable; urgency=low

  * Rebuilt.
  * BZ#3424: numeric values at the front of strings determines whether
    CAST works successfully
  * BZ#3439: Python driver drops milliseconds from timestamps
  * BZ#3446: SET READ ONLY forgets previous changes
  * BZ#3455: String columns unusable from 64-bit .NET via ODBC
  * BZ#3456: Insert fails
  * BZ#3457: When kernel of remote client crashes, the connection remains
    established on server side
  * BZ#3458: mserver5 crash on SQL: SELECT COUNT(*) FROM SYS.TABLES HAVING
    COUNT(*) > 0
  * BZ#3461: mserver5 crash on SQL: SELECT * FROM SYS.ARGS WHERE FUNC_ID
    NOT IN (SELECT ID FROM SYS.FUNCTIONS) OR FUNC_ID NOT IN (SELECT *
    FROM SYS.FUNCTIONS)
  * BZ#3462: Invalid SQL (IN with subquery which returns multiple columns)
    is accepted
  * BZ#3463: Crash on SELECT with SERIAL aggregation and GROUP BY column
    alias's
  * BZ#3468: Local temporary table persists across sessions
  * BZ#3469: Absolute network paths considered invalid for COPY INTO
    ... FROM statement.
  * BZ#3473: Various memory leaks in SQL compilation
  * BZ#3477: ODBC driver raises "unexpected end of input" for prepared
    string parameter from .NET application
  * BZ#3481: Cannot run multiple COPY INTO statements in one 's'-command

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 08 May 2014 14:21:36 +0200

monetdb (11.17.15) unstable; urgency=low

  * buildtools: Lots of minor fixes were made for potential defects found by Coverity
    Scan.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 30 Apr 2014 14:21:36 +0200

monetdb (11.17.15) unstable; urgency=low

  * clients: ODBC: Implemented {call procedure-name(...)} escape.  The version
    {?=call ...} is not implemented.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 1 Apr 2014 14:21:36 +0200

monetdb (11.17.15) unstable; urgency=low

  * buildtools: On Windows we now build the geom module against version 3.4.2 of the
    geos library.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 24 Mar 2014 14:21:36 +0200

monetdb (11.17.13) unstable; urgency=low

  * Rebuilt.
  * BZ#3452: ODBC driver build fails on Mac OS X due to a conflicting
    types for the SQLColAttribute with the unixODBC library

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 06 Mar 2014 11:48:50 +0100

monetdb (11.17.11) unstable; urgency=low

  * Rebuilt.
  * BZ#3442: COPY INTO ... LOCKED reports incorrect count
  * BZ#3443: DROP INDEX crashes server with BATsubselect: invalid argument:
    b must have a dense head
  * BZ#3444: AND after ON () of LEFT OUTER JOIN with certain expressions
    will cause crash

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 03 Mar 2014 12:31:41 +0100

monetdb (11.17.11) unstable; urgency=low

  * buildtools: Configure now enables the SQL front end by default.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 28 Feb 2014 12:31:41 +0100

monetdb (11.17.11) unstable; urgency=low

  * merovingian: monetdb destroy -f now also works on running databases

 -- Fabian Groffen <fabian@monetdb.org>  Sun, 16 Feb 2014 12:31:41 +0100

monetdb (11.17.9) unstable; urgency=low

  * Rebuilt.
  * BZ#3435: INDEX prevents JOIN from discovering matches

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 13 Feb 2014 12:40:14 +0100

monetdb (11.17.7) unstable; urgency=low

  * Rebuilt.
  * BZ#3436: COPY INTO from file containing leading Byte Order Mark (BOM)
    causes corruption

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 07 Feb 2014 12:53:23 +0100

monetdb (11.17.5) unstable; urgency=low

  * Rebuilt.
  * BZ#3420: Database does not start after upgrade
  * BZ#3425: Temporal extraction glitches
  * BZ#3427: Consistent use of current_timestamp and now()
  * BZ#3428: Aggregation over two columns is broken
  * BZ#3429: SAMPLE on JOIN result crashes server
  * BZ#3430: Wrong temporary handling
  * BZ#3431: SQLGetInfo returns incorrect value for SQL_FN_NUM_TRUNCATE
  * BZ#3432: MonetDB SQL syntax incompatible with SQL-92 <delimited
    identifier> syntax

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 06 Feb 2014 10:27:36 +0100

monetdb (11.17.3) unstable; urgency=low

  * Rebuilt.
  * BZ#3418: Segmentation fault on a query from table expression
  * BZ#3419: Database does not start after upgrade
  * BZ#3423: Group by alias with distinct count doesn't work

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 25 Jan 2014 14:06:27 +0100

monetdb (11.17.1) unstable; urgency=low

  * Rebuilt.
  * BZ#3040: Wrong NULL behavior in EXCEPT and INTERSECT
  * BZ#3092: ODBC client doesn't support scalar function escape
  * BZ#3198: SIGSEGV insert_string_bat (b=0x7fffe419d0a0, n=0x7fffc4006010,
    append=0) at gdk_batop.c:196
  * BZ#3210: Unexpected concurrency conflict when inserting to 2 tables
    simultaneously and querying one of them
  * BZ#3273: Add support to Python DBAPI package for timetz, inet and
    url types
  * BZ#3285: no such table 'queryHistory'
  * BZ#3298: GDKmmap messages and monetdb start db takes very long
  * BZ#3354: Introduce query time-out
  * BZ#3371: (i)like generates batloop instead of algebra.likesubselect
  * BZ#3372: Large group by queries never complete - server at 100%
    cpu(all cores) until MonetDB stopped
  * BZ#3383: Bad performance with DISTINCT GROUP BY
  * BZ#3391: Bad performance with GROUP BY and FK with out aggregate
    function
  * BZ#3393: "COPY .. INTO ..." - escape of string quotes
  * BZ#3399: server crashed on simple (malformed) query
  * BZ#3401: inconsistent/strange handling of invalid dates
    (e.g. 2013-02-29) in where clause
  * BZ#3403: NOT NULL constraint can't be applied after deleting rows with
    null values
  * BZ#3404: Assertion `h->storage == STORE_MMAP' failed.
  * BZ#3408: nested concat query crashed server
  * BZ#3411: (disguised) BETWEEN clause not recognised. Hence no rangejoin.
  * BZ#3412: Boolean expressions in WHERE clause, result in incorrect
    resulsts
  * BZ#3417: Nested Common Table Expressions Crash

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 14 Jan 2014 14:39:02 +0100

monetdb (11.17.1) unstable; urgency=low

  * buildtools: Created packages for RPM based systems and Debian/Ubunty containing
    the MonetDB interface to the GNU Scientific Library (gsl).

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 10 Dec 2013 14:39:02 +0100

monetdb (11.17.1) unstable; urgency=low

  * gdk: Removed some unused fields in the atomDesc structure.  This change
    requires a complete recompilation of the whole suite.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 20 Nov 2013 14:39:02 +0100

monetdb (11.17.1) unstable; urgency=low

  * clients: ODBC: Implemented {fn scalar()} and {interval ...} escapes.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 20 Nov 2013 14:39:02 +0100

monetdb (11.17.1) unstable; urgency=low

  * python2: Changed defaults for connecting (defaults to unix socket now).
  * python2: Unix sockets partially working for control protocol.
  * python2: Add support for unix socket.

 -- Gijs Molenaar <g.j.molenaar@uva.nl>  Wed, 20 Nov 2013 14:39:02 +0100

monetdb (11.17.1) unstable; urgency=low

  * python3: Changed defaults for connecting (defaults to unix socket now).
  * python3: Unix sockets partially working for control protocol.
  * python3: Add support for unix socket.

 -- Gijs Molenaar <g.j.molenaar@uva.nl>  Wed, 20 Nov 2013 14:39:02 +0100

monetdb (11.17.1) unstable; urgency=low

  * buildtools: We no longer install the .la files in our Fedora/Debian/Ubuntu packages.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 20 Nov 2013 14:39:02 +0100

monetdb (11.17.1) unstable; urgency=low

  * gdk: Replaced the mutex implementation for both GNU C and Visual Studio with
    a home-grown implementation that uses atomic instructions (__sync_*()
    in gcc, _Interlocked*() in VS).

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 20 Nov 2013 14:39:02 +0100

monetdb (11.15.19) unstable; urgency=low

  * Rebuilt.
  * BZ#3243: Segmentation fault (possible data corruption) after clean
    shutdown
  * BZ#3258: Scheduling issues
  * BZ#3368: BAT sortedness info ignored on ORDER BY and TOPN
  * BZ#3374: UNIQUE constraint does not set tkey property on the
    corresponding BAT
  * BZ#3382: Response to PREPARE emtpy if query contains a LIMIT
  * BZ#3385: Simple query fails with 'identifier not found'
  * BZ#3387: mclient does not properly double quote schema names when
    using autofill tab
  * BZ#3388: case statement in "order by" clause doesn't work when used
    together with "group by"
  * BZ#3389: median function with "group by"  - SIGSEGV
  * BZ#3392: ODBC datatype conversion for INTEGER not working properly
  * BZ#3394: "Cannot find column type" error in temporary tables in
    functions
  * BZ#3395: error occurred during a query: "'CASE WHEN" sentence
  * BZ#3396: Improper UDF expansion
  * BZ#3397: Error in ODBC-Driver when using Prepared Statements
  * BZ#3398: Cannot stop monetdbd after erroneously starting an
    uninitialized dbfarm

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 20 Nov 2013 12:27:15 +0100

monetdb (11.15.19) unstable; urgency=low

  * clients: mclient: Fixed a bug where the -H option only worked if the readline
    history file already existed.  Now we properly create and use the
    history file.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 19 Nov 2013 12:27:15 +0100

monetdb (11.15.19) unstable; urgency=low

  * gdk: Stopped using the deprecated sbrk() system call.
  * gdk: Fixed a problem when reverse sorting a sorted column.
  * gdk: Fixed bugs that deal with problems that could possibly occur when
    transactions are aborted and the server is restarted.  See bug #3243.
  * gdk: A bug was fixed in the handling of grouped aggregates when all values
    in a group are null.  See bug #3388.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 19 Nov 2013 12:27:15 +0100

monetdb (11.15.19) unstable; urgency=low

  * monetdb5: Fixed a possible buffer overflow in the COPY INTO code.
  * monetdb5: Fixed a problem that when the server is using all available threads
    for a query, it was not possible to attach another client and have
    it execute even the smallest query.  This is fixed by creating extra
    threads for each client entering the fray at the cost of having more
    threads that execute queries.  But at least there is guaranteed progress
    for all clients (modulo the operating system scheduler).  See bug #3258.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 19 Nov 2013 12:27:15 +0100

monetdb (11.15.19) unstable; urgency=low

  * sql: Fixed a bug where the server at some point stopped saving compiled
    queries in the SQL query cache.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 19 Nov 2013 12:27:15 +0100

monetdb (11.15.19) unstable; urgency=low

  * merovingian: monetdbd(1) now refuses to startup if it cannot read the properties
    from the dbfarm, bug #3398

 -- Fabian Groffen <fabian@monetdb.org>  Fri, 15 Nov 2013 12:27:15 +0100

monetdb (11.15.19) unstable; urgency=low

  * clients: ODBC: Fixed interpretation SQL_C_SLONG/SQL_C_ULONG/SQL_C_LONG to
    refer to a 32 bit integer always (i.e. "int" on 64 bit architectures
    despite the name and the Microsoft documentation).  This seems to be
    the consensus.
  * clients: ODBC: Fixed transaction level: MonetDB only supports the highest level
    (SQL_TXN_SERIALIZABLE), so setting the transaction level can be accepted
    and ignored.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 6 Nov 2013 12:27:15 +0100

monetdb (11.15.17) unstable; urgency=low

  * Rebuilt.
  * BZ#3323: Heapcache bugs/performance issues
  * BZ#3331: SAMPLE will return same result every time.
  * BZ#3356: DatabaseMetaData.getColumns() doesn't work correctly when
    using index-based getters
  * BZ#3367: Fully qualified order by column gives "relational query
    without result"
  * BZ#3368: BAT sortedness info ignored on ORDER BY and TOPN
  * BZ#3370: SQL environment settings are updated even when the set
    statement fails
  * BZ#3373: Setting table to read-only (Bug 3362) fails on big-endian
  * BZ#3375: LIKE join: BATfetchjoin does not hit always
  * BZ#3376: COPY INTO fails with HEAPextend: failed to extend: MT_mremap()
    failed
  * BZ#3377: Query interfering with next query in same transaction,
    after SP4
  * BZ#3380: Python DBAPI driver throws exception when fetching EXPLAIN
    results
  * BZ#3381: Windows ODBC driver hangs or crashes on simple queries

 -- Hannes Muehleisen <hannes@cwi.nl>  Tue, 08 Oct 2013 16:12:02 +0200

monetdb (11.15.17) unstable; urgency=low

  * java: Rearranged order of returned columns of certain metadata functions to
    comply with the JDBC documentation.  See bug 3356.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 7 Oct 2013 16:12:02 +0200

monetdb (11.15.17) unstable; urgency=low

  * clients: ODBC: Implemented retrieving variable-length data in parts with
    SQLGetData.  See bug 3381.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 4 Oct 2013 16:12:02 +0200

monetdb (11.15.17) unstable; urgency=low

  * gdk: Removed the heap cache.  Since the fix for bug 3323 which made that
    the cache was actually getting used, bug 3376 made clear that it didn't
    work very well.  In addition, on Linux at least, the heap cache slows
    things down.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 30 Sep 2013 16:12:02 +0200

monetdb (11.15.15) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 25 Sep 2013 14:02:36 +0200

monetdb (11.15.13) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 20 Sep 2013 10:23:23 +0200

monetdb (11.15.13) unstable; urgency=low

  * merovingian: monetdb now no longer compresses output when not connected to a terminal,
    bug #3292

 -- Fabian Groffen <fabian@monetdb.org>  Tue, 30 Jul 2013 10:23:22 +0200

monetdb (11.15.11) unstable; urgency=low

  * Rebuilt.

 -- Hannes Muehleisen <hannes@cwi.nl>  Wed, 19 Jun 2013 17:06:18 +0200

monetdb (11.15.9) unstable; urgency=low

  * Rebuilt.

 -- Hannes Muehleisen <hannes@cwi.nl>  Wed, 19 Jun 2013 15:21:39 +0200

monetdb (11.15.9) unstable; urgency=low

  * java: Further improved setBigDecimal() method, based on patch by Ben Reilly
    in bug #3290

 -- Fabian Groffen <fabian@monetdb.org>  Sun, 9 Jun 2013 15:21:38 +0200

monetdb (11.15.9) unstable; urgency=low

  * java: Fixed bug where PreparedStatement.setBigDecimal() wouldn't format its
    input well enough for the server causing odd errors.
  * java: Allow PreparedStatement.setXXX() methods to be called with null
    arguments, bug #3288

 -- Fabian Groffen <fabian@monetdb.org>  Thu, 23 May 2013 15:21:38 +0200

monetdb (11.15.9) unstable; urgency=low

  * gdk: System calls to flush files to disks were added.  This may cause
    some slowdown, but it should provide better durability, especially
    in the face of power failures.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 7 May 2013 15:21:38 +0200

monetdb (11.15.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 26 Apr 2013 13:09:55 +0200

monetdb (11.15.7) unstable; urgency=low

  * sql: Added TEMPORARY to the non-reserved keywords, ie no need for double
    quotes when used as identifier.

 -- Niels Nes <niels@cwi.nl>  Sat, 13 Apr 2013 13:09:54 +0200

monetdb (11.15.5) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 12 Apr 2013 09:33:06 +0200

monetdb (11.15.5) unstable; urgency=low

  * java: The pre-compiled .jar files are now created using Java 7 instead of
    Java 6.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 11 Apr 2013 09:33:05 +0200

monetdb (11.15.5) unstable; urgency=low

  * gdk: Fixed a bug in case the candidate list is dense and completely
    outside the range of the bat being worked upon.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 8 Apr 2013 09:33:05 +0200

monetdb (11.15.5) unstable; urgency=low

  * monetdb5: Fixed argument parsing of mapi.reconnect() with 5 arguments.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 12 Mar 2013 09:33:05 +0200

monetdb (11.15.3) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 27 Feb 2013 15:26:54 +0100

monetdb (11.15.1) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 12 Feb 2013 09:51:41 +0100

monetdb (11.15.1) unstable; urgency=low

  * testing: enabled "top-level" Mtest.py
    So far, while Mtest.py could be called in any subdirectory of the MonetDB
    source tree (and could then run all tests in the entire sub-tree),
    it was not possible to call Mtest.py in the top-level MonetDB source
    directory to run all tests.  Instead, to run all tests, Mtest.py had to
    be called at least 4 times, once in each of these directories: "clients",
    "monetdb5", "sql", "geom".
    Now, it is possible to call Mtest.py once in the top-level MonetDB source
    directory to run all tests in one go.
    The behaviour of calling Mtest.py in any subdirectory, including the
    four mentioned above, did not changed, other than that now obsolete
    command line options "-p / --package <package>" and "-5 / --monetdb5"
    have been removed.

 -- Stefan Manegold <Stefan.Manegold@cwi.nl>  Thu, 17 Jan 2013 09:51:39 +0100

monetdb (11.15.1) unstable; urgency=low

  * clients: Mapi protocol v8 support was removed from all client drivers.  Protocol
    v8 has not been used by the servers any more since Apr2012 release
  * clients: The tool mnc was removed from installations

 -- Fabian Groffen <fabian@monetdb.org>  Tue, 15 Jan 2013 09:51:39 +0100

monetdb (11.15.1) unstable; urgency=low

  * java: merocontrol was changed to return server URIs, and lastStop time.
    Connections and dbpath were removed.
  * java: Mapi protocol v8 support was removed from MapiSocket.  Protocol
    v8 has not been used by the servers any more since Apr2012 release

 -- Fabian Groffen <fabian@monetdb.org>  Tue, 15 Jan 2013 09:51:39 +0100

monetdb (11.15.1) unstable; urgency=low

  * merovingian: Upgrade support for dbfarms from Mar2011 and Aug2011 was dropped

 -- Fabian Groffen <fabian@monetdb.org>  Tue, 15 Jan 2013 09:51:39 +0100

monetdb (11.15.1) unstable; urgency=low

  * merovingian: monetdb status now uses a more condensed output, to cater for the uris
    being shown, and prints how long a database is stopped, or how long
    ago it crashed

 -- Fabian Groffen <fabian@monetdb.org>  Tue, 15 Jan 2013 09:51:39 +0100

monetdb (11.15.1) unstable; urgency=low

  * merovingian: monetdb status now prints the connection uri for each database,
    when available.  The connections and database path properties have
    been dropped.

 -- Fabian Groffen <fabian@monetdb.org>  Tue, 15 Jan 2013 09:51:39 +0100

monetdb (11.15.1) unstable; urgency=low

  * merovingian: monetdb status now prints last crash date only if the database has
    not been started since.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Jan 2013 09:51:39 +0100

monetdb (11.15.1) unstable; urgency=low

  * monetdb5: mserver5: The --dbname and --dbfarm options have been replaced by the
    single --dbpath option.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Jan 2013 09:51:39 +0100

monetdb (11.15.1) unstable; urgency=low

  * clients: msqldump: Implmented an option (--table/-t) to dump a single table.
  * clients: Changed msqdump's trace option to be in line with mclient.  In both
    cases, the long option is --Xdebug and the short option is -X.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Jan 2013 09:51:39 +0100

monetdb (11.15.1) unstable; urgency=low

  * monetdb5: The scheduler of mserver5 was changed to use a fixed set of workers to
    perform the work for all connected clients.  Previously, each client
    connection had its own set of workers, easily causing resource problems
    upon multiple connections to the server.

 -- Martin Kersten <mk@cwi.nl>  Tue, 15 Jan 2013 09:51:39 +0100

monetdb (11.13.9) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Jan 2013 09:59:17 +0100

monetdb (11.13.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 12 Dec 2012 13:00:49 +0100

monetdb (11.13.7) unstable; urgency=low

  * java: Implemented type map support of Connection to allow custom mapping
    of UDTs to Java classes.  By default the INET and URL UDTs are
    now mapped to nl.cwi.monetdb.jdbc.types.{INET,URL}.  Most notably,
    ResultSet.getObject() and PreparedStatement.setObject() deal with the
    type map.

 -- Fabian Groffen <fabian@monetdb.org>  Fri, 23 Nov 2012 13:00:48 +0100

monetdb (11.13.7) unstable; urgency=low

  * java: Fixed a problem in PreparedStatement where the prepared statement's
    ResultSetMetaData (on its columns to be produced) incorrectly threw
    exceptions about non existing columns.  Bug #3192

 -- Fabian Groffen <fabian@monetdb.org>  Thu, 22 Nov 2012 13:00:48 +0100

monetdb (11.13.7) unstable; urgency=low

  * sql: Fixed crash when performing an INSERT on a table with string-like column
    defaulting to NULL and omitting that column from VALUES, bug #3168

 -- Fabian Groffen <fabian@monetdb.org>  Wed, 21 Nov 2012 13:00:48 +0100

monetdb (11.13.5) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 16 Nov 2012 09:29:41 +0100

monetdb (11.13.3) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@monetdb.org>  Tue, 16 Oct 2012 13:02:31 +0200

monetdb (11.13.3) unstable; urgency=low

  * java: Fixed problem with PreparedStatements and setXXX() methods using column
    numbers instead of names, bug #3158

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 10 Oct 2012 13:02:30 +0200

monetdb (11.13.1) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@monetdb.org>  Wed, 10 Oct 2012 11:31:56 +0200

monetdb (11.13.1) unstable; urgency=low

  * merovingian: Fixed problem where monetdbd would refuse to startup when discovery
    was set to false, bug #3155

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 9 Oct 2012 11:31:55 +0200

monetdb (11.13.1) unstable; urgency=low

  * monetdb5: Removed module attach since it wasn't used or even tested.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 25 Sep 2012 11:31:55 +0200

monetdb (11.13.1) unstable; urgency=low

  * clients: mclient now accepts URIs as database to connect to.

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 17 Sep 2012 11:31:55 +0200

monetdb (11.13.1) unstable; urgency=low

  * monetdb5: The MAL-to-C Compiler (mcc) was removed.  The code wasn't tested and
    most likely non-functional.

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 17 Sep 2012 11:31:55 +0200

monetdb (11.13.1) unstable; urgency=low

  * gdk: Removed the gdk_embedded (and embedded) option.  The code wasn't tested
    and most likely non-functional.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 17 Sep 2012 11:31:55 +0200

monetdb (11.13.1) unstable; urgency=low

  * clients: all strings returned by python2 are unicode, removed use_unicode option
  * clients: python2 and 3 type convertion speed improvements
  * clients: python2 uses new styl objects now (bug #3104)
  * clients: split python2 and python3

 -- Gijs Molenaar <g.j.molenaar@uva.nl>  Mon, 17 Sep 2012 11:31:55 +0200

monetdb (11.13.1) unstable; urgency=low

  * gdk: BAT-of-BATs is no longer allowed.  It was already not allowed to
    make these types of BATs persistent, but now they can't be created at
    all anymore.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 17 Sep 2012 11:31:55 +0200

monetdb (11.13.1) unstable; urgency=low

  * buildtools: Removed --enable-noexpand configure option.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 17 Sep 2012 11:31:55 +0200

monetdb (11.11.11) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 17 Sep 2012 10:00:19 +0200

monetdb (11.11.9) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 11 Sep 2012 10:33:30 +0200

monetdb (11.11.9) unstable; urgency=low

  * monetdb5: Changed the way nclients maximum was calculated to avoid 'out of client
    slots' errors way before the maximum was reached.

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 7 Sep 2012 10:33:29 +0200

monetdb (11.11.9) unstable; urgency=low

  * merovingian: Resolved a problem where monetdb could fail to start a database with
    the message "database 'X' started up, but failed to open up a
    communication channel".  Bug #3134, comment #7.

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 31 Aug 2012 10:33:29 +0200

monetdb (11.11.9) unstable; urgency=low

  * gdk: Fixed a bug in BATantijoin when either side is a singleton BAT.
    This fixes bug 3139.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 31 Aug 2012 10:33:29 +0200

monetdb (11.11.9) unstable; urgency=low

  * java: Fixed a bug where DatabaseMetaData.getURL() did return null:0 for
    hostname:port.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 14 Aug 2012 10:33:29 +0200

monetdb (11.11.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 13 Aug 2012 11:31:44 +0200

monetdb (11.11.7) unstable; urgency=low

  * merovingian: Starting a server now waits for as long as the server needs to possibly
    recover, bug #3134.  In case of a long wait, the monetdbd logfile
    gives extra information on what the server is doing to recover.
  * merovingian: Fixed a crash of monetdbd when local databases were unshared, bug #3135

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 2 Aug 2012 11:31:44 +0200

monetdb (11.11.7) unstable; urgency=low

  * monetdb5: The server now distinguishes between starting and started states,
    such that monetdbd can wait for it to finish starting.

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 2 Aug 2012 11:31:44 +0200

monetdb (11.11.7) unstable; urgency=low

  * java: Fixed adaptive cache size used when retrieving results, not to cause
    divide by zero errors when memory gets short, bug #3119.

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 20 Jul 2012 11:31:44 +0200

monetdb (11.11.7) unstable; urgency=low

  * merovingian: Resolved a problem where automatic starting of a database initiated by
    multiple clients at the same time could cause failed starts.  Bug #3107

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 18 Jul 2012 11:31:44 +0200

monetdb (11.11.7) unstable; urgency=low

  * clients: mclient no longer prints the SQLSTATE at the start of each error
    returned by the SQL-server.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 17 Jul 2012 11:31:44 +0200

monetdb (11.11.5) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@monetdb.org>  Tue, 10 Jul 2012 11:52:59 +0200

monetdb (11.11.5) unstable; urgency=low

  * gdk: Fixed intermittent problem that joins and selects return incorrect
    results and possibly inconsistent databases. The problems only occurred
    after a series of queries and updates, therefore it was hard to reproduce.

 -- Niels Nes <niels@cwi.nl>  Mon, 9 Jul 2012 11:52:58 +0200

monetdb (11.11.3) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@monetdb.org>  Mon, 09 Jul 2012 10:05:31 +0200

monetdb (11.11.3) unstable; urgency=low

  * merovingian: Fixed misc memory leaks, which caused monetdbd to grow in memory size
    over time.

 -- Fabian Groffen <fabian@cwi.nl>  Sat, 7 Jul 2012 10:05:31 +0200

monetdb (11.11.1) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@monetdb.org>  Fri, 06 Jul 2012 11:02:22 +0200

monetdb (11.11.1) unstable; urgency=low

  * buildtools: Created seperate RPM and DEB packages for MonetDB/JAQL.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 2 Jul 2012 11:02:20 +0200

monetdb (11.11.1) unstable; urgency=low

  * sql: COPY INTO now accepts optional parenthesis for file argument.
    Binary COPY INTO now requires 'COPY BINARY INTO'.

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 29 Jun 2012 11:02:20 +0200

monetdb (11.11.1) unstable; urgency=low

  * clients: ODBC: Fixed a bug where SQLNativeSql expected a statment handle instead
    of a connection handle.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 29 Jun 2012 11:02:20 +0200

monetdb (11.11.1) unstable; urgency=low

  * monetdb5: Crackers code has been removed.  Development continues in the holindex
    branch.

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 14 Jun 2012 11:02:20 +0200

monetdb (11.11.1) unstable; urgency=low

  * merovingian: Removed erroneously (re-)added master and slave properties, this
    functionality is currently not working.

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 13 Jun 2012 11:02:20 +0200

monetdb (11.11.1) unstable; urgency=low

  * buildtools: Removed --enable-bits option from configure.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 7 Jun 2012 11:02:20 +0200

monetdb (11.11.1) unstable; urgency=low

  * buildtools: Split the MonetDB-client-ruby RPM package into two and named them in
    accordance with the Fedora packaging guidelines as rubygem-<gem-name>.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 7 Jun 2012 11:02:20 +0200

monetdb (11.11.1) unstable; urgency=low

  * gdk: The sorted property, which was used to maintain whether a column in
    a BAT was sorted or reverse sorted, has been replaced by a pair of
    properties, sorted and revsorted.  These new properties can be set
    independently (unlike the old sorted property), and so if both are set,
    the column must be constant.  In addition, internal property checking
    has been overhauled.  Now, when a property is set incorrectly, and
    when assertions are enabled, an assertion will go off.  There is also
    a function which can derive properties.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 7 Jun 2012 11:02:20 +0200

monetdb (11.11.1) unstable; urgency=low

  * gdk: Implemented proper overflow checking on all arithmetic operations.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 7 Jun 2012 11:02:20 +0200

monetdb (11.9.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 07 Jun 2012 11:36:25 +0200

monetdb (11.9.7) unstable; urgency=low

  * clients: Resolved a cosmetical error where tab-characters would cause
    misalignments in tabular result views.  For the time being, tabs are
    now represented as a single space in tabular view.

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 23 May 2012 11:36:24 +0200

monetdb (11.9.7) unstable; urgency=low

  * gdk: Limit number of detected CPU cores to 16 on 32-bits systems to avoid
    running quickly out of addressable resources followed by a kill from
    the OS.

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 17 May 2012 11:36:24 +0200

monetdb (11.9.5) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@monetdb.org>  Wed, 16 May 2012 10:07:19 +0200

monetdb (11.9.5) unstable; urgency=low

  * merovingian: Fixed a bug where connecting to a stopped multiplex-funnel would result
    in a 'there are no available connections' error.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 May 2012 10:07:19 +0200

monetdb (11.9.5) unstable; urgency=low

  * sql: Databases that were upgraded from the Aug2011 release have an error
    in the catalog for SQL procedures.  This is now fixed.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 May 2012 10:07:19 +0200

monetdb (11.9.3) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@monetdb.org>  Mon, 14 May 2012 12:36:35 +0200

monetdb (11.9.3) unstable; urgency=low

  * buildtools: Windows: we now use OpenSSL 1.0.1b.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 2 May 2012 12:36:35 +0200

monetdb (11.9.3) unstable; urgency=low

  * gdk: Implemented MT_getrss for Mac OS X systems, this allows the server to
    know about how much memory is currently in use.

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 27 Apr 2012 12:36:35 +0200

monetdb (11.9.1) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 18 Apr 2012 09:48:42 +0200

monetdb (11.9.1) unstable; urgency=low

  * merovingian: The logfile and pidfile monetdbd properties are now displayed with
    dbfarm path when relative

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 12 Mar 2012 09:48:40 +0200

monetdb (11.9.1) unstable; urgency=low

  * clients: ODBC: Implemented the SQL_ATTR_CONNECTION_TIMEOUT attribute.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 12 Mar 2012 09:48:40 +0200

monetdb (11.9.1) unstable; urgency=low

  * clients: mclient now has a -a (--autocommit) option to turn off autocommit mode.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 12 Mar 2012 09:48:40 +0200

monetdb (11.9.1) unstable; urgency=low

  * java: Password reading by JdbcClient no longer results in strange artifacts
  * java: JdbcClient now returns exit code 1 in case of failures

 -- Wouter Alink <wouter@spinque.com>  Mon, 12 Mar 2012 09:48:40 +0200

monetdb (11.9.1) unstable; urgency=low

  * gdk: The type "chr" has been removed.
    chr has long been superseded by bte for 1 byte arithmetic plus it is
    pretty useless to hold single characters since we use Unicode and
    thus only a tiny subset of the supported character set would fit.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 12 Mar 2012 09:48:40 +0200

monetdb (11.9.1) unstable; urgency=low

  * monetdb5: The type "chr" has been removed.
    chr has long been superseded by bte for 1 byte arithmetic plus it is
    pretty useless to hold single characters since we use Unicode and
    thus only a tiny subset of the supported character set would fit.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 12 Mar 2012 09:48:40 +0200

monetdb (11.7.9) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@monetdb.org>  Mon, 12 Mar 2012 14:32:53 +0100

monetdb (11.7.9) unstable; urgency=low

  * java: Implemented missing Number types support in
    PreparedStatement.setObject()

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 28 Feb 2012 14:32:53 +0100

monetdb (11.7.7) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@monetdb.org>  Fri, 24 Feb 2012 13:06:00 +0100

monetdb (11.7.7) unstable; urgency=low

  * buildtools: Fixed some of the package names for Debian/Ubuntu.  Packages for
    libraries should contain the major number of the library version number.
    This was not always the case.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 22 Feb 2012 13:05:59 +0100

monetdb (11.7.7) unstable; urgency=low

  * java: Fixed bug in DatabaseMetaData.getSchemas() method that caused an SQL
    error when called with catalog and schema argument.

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 20 Feb 2012 13:05:59 +0100

monetdb (11.7.7) unstable; urgency=low

  * merovingian: Fixed a bug in the multiplex-funnel where certain clients would abort
    on responses for update queries.

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 17 Feb 2012 13:05:59 +0100

monetdb (11.7.7) unstable; urgency=low

  * sql: Fixed a crash that happened at the end of a database upgrade to the
    Dec2011 database scheme.  The crash happened during cleanup after the
    database was upgraded, so it was merely inconvenient.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 17 Feb 2012 13:05:59 +0100

monetdb (11.7.7) unstable; urgency=low

  * sql: Stripped off implementation-specific parts from error messages before
    they get presented to the user.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 15 Feb 2012 13:05:59 +0100

monetdb (11.7.7) unstable; urgency=low

  * java: Resolved a bug where JDBC and Control connections could terminate
    abruptly with 'Connection closed' messages

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 14 Feb 2012 13:05:59 +0100

monetdb (11.7.7) unstable; urgency=low

  * monetdb5: Fixed potential crash by dealing better with non-standard types.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 9 Feb 2012 13:05:59 +0100

monetdb (11.7.7) unstable; urgency=low

  * buildtools: On Debian and Ubuntu, install Python modules in dist-packages instead
    of site-packages.  This fixed bug 2997.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 7 Feb 2012 13:05:59 +0100

monetdb (11.7.7) unstable; urgency=low

  * merovingian: Fixed problem where version and mserver properties for monetdbd were
    not always successfully retrieved.  Bug #2982.
  * merovingian: Fixed problem where shutdown of monetdbd would lead to shutting down
    database 'control' which does not exist.  Bug #2983.
  * merovingian: Fixed issue causing (harmless) 'error reading from control channel'
    messages.  Bug #2984.
  * merovingian: Resolved problem where remote start/stop/etc. commands with monetdb
    would report error 'OK'.  Bug #2984.

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 30 Jan 2012 13:05:59 +0100

monetdb (11.7.5) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 20 Jan 2012 15:00:25 +0100

monetdb (11.7.3) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 17 Jan 2012 10:51:40 +0100

monetdb (11.7.3) unstable; urgency=low

  * monetdb5: A couple of memory leaks have been plugged.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 16 Jan 2012 10:51:39 +0100

monetdb (11.7.1) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 11 Jan 2012 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: Implemented getMetaData() method of PreparedStatement.

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 2 Jan 2012 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: Fixed an AssertionError for special results from e.g. EXPLAIN queries.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 27 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * merovingian: Fixed crash in monetdb when an invalid property was retrieved using
    the get command, bug #2953.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 27 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: Fixed overflow error when batching large statements, bug #2952

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 21 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: Resolved a concurrency problem where ResultSet's date-related getters
    could cause odd stack traces when used by multiple threads at the
    same time, bug #2950.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 20 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: JDBC now implements JDBCv4.1 which makes it possible to be built with
    Java 7 and up.  JDBCv4.1 is a maintenance release of JDBCv4, and hence
    can be compiled with Java 6, although the added methods obviously are
    not part of the java.sql interfaces.

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 19 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: SQLExceptions thrown now carry a SQLSTATE.  Until the server starts
    sending correct SQLSTATEs for all errors, server originated errors
    without SQLSTATE are considered generic data exceptions (22000).

 -- Fabian Groffen <fabian@cwi.nl>  Sun, 11 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: Fixed a bug where closing ResultSets and PreparedStatements could lead
    to errors on concurrent running queries using the same Connection due
    to a race condition.

 -- Fabian Groffen <fabian@cwi.nl>  Sat, 10 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: Changed version scheme of JDBC driver and MCL jar to be more standard,
    from monetdb-X.Y-<thing>.jar to monetdb-<thing>-X.Y.jar, bug #2943

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 8 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: Fix making connections with stethoscope to hosts without monetdbd.
    Bug #2944.

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 7 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: Fixed some bugs in the PHP interface affecting the mapi_ping(),
    monetdb_insert_id() and auto_commit() functions.  Bugs #2936, #2937,
    #2938.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 6 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * gdk: Fixed memory detection on 32-bits Solaris systems with more memory
    than can be addressed in 32-bits mode, bug #2935

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 6 Dec 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: ODBC: Fixed SQLNumResultCols and SQLDescribeCol to return useful
    information after a call to SQLPrepare and before any SQLExecute.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: mclient: The exact interpretation of the -i (--interactive) option
    and the - filename argument have changed.  The - filename argument
    means read from standard input and no longer implies that no \
    interpretation is done on the input.  Instead, \ interpretation is done
    if either standard input is a terminal, or if the -i option is given.
    The -i option no longer causes mclient to read from standard input.
    It only means to do \ interpretation when reading from standard input.
    Use the - filename argument to read from standard input.  Note that
    if no -s option is specified and no filename arguments are present,
    mclient still reads from standard input.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * sql: mclient: The csv output format can now also be of the form csv=c and
    csv+c where c is the column separator.  The form with csv+ produces
    a single header line with column names.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: ODBC: Improved internal query for SQLSpecialColumns.  Before, the query
    returned all columns taking part in a PRIMARY KEY *and* all columns
    taking part in a UNIQUE constraint.  Now it returns only one or the
    other set.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * sql: Changed a bug where the sign() function returned the same type as its
    argument instead of always an INTEGER.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: ODBC: The database name is now used as the catalog name throughout.
    Functions that return a catalog name return the database name, and
    functions that match on catalog name match it with the database name.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: ODBC: Implemented an easier way to create a log file of interactions
    with the ODBC driver.  You can now add a connection attribute
    "LOGFILE=filename" to the connection string parameter of
    SQLBrowseConnect and SQLDriverConnect, and to the relevant part of
    the Windows registry or odbc.ini file.  This value is only used if
    there is no environment variable ODBCDEBUG.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: The embedded monet instance capability of MonetConnection was removed.
  * java: Bump JDBC version to 2.0 (Liberica).  JDBC now implements JDBCv4 which
    makes it possible to be built with Java 6 and up.  Java 5 and before
    are no longer supported, and can use the 1.x releases of the driver.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: Quoting of object names for mclient's \d command is now more flexible
    and consistent with standard SQL quoting rules, bug #2846.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * merovingian: monetdb get output is now grouped by database instead of by property

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * merovingian: Unlike in previous releases, 'monetdbd get mserver' now returns the path
    to the mserver5 binary only for dbfarms that have a running monetdbd,
    instead of only for those that are not served by a monetdbd.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * merovingian: Add nclients property that controls the maximum number of concurrent
    clients allowed to access the database

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * monetdb5: Introduced new variable max_clients that allows to define how many
    concurrent connections are allowed to be made against the database.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: ODBC: Implemented SQLColumnPrivileges function.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * java: INTERVAL columns are now treated as decimals, since they can have
    sub-second precision.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * merovingian: Starting monetdbd without any arguments or without dbfarm is no longer
    supported.  A dbfarm now must be provided for each command.
  * merovingian: The control passphrase has been turned into a hash of the password, for
    a more stronger authorisation model as used by mclients.  On upgrade,
    any existing passphrase is converted to the hashed version of the
    passphrase.
  * merovingian: The monetdbd controlport option has been removed in favour of a
    boolean control option.  On upgrade, when controlport was set to
    a non-zero value and a passphrase was set, control is set to true,
    or false otherwise.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: Install new program, mnc, which provides netcat functionality, but
    based on MonetDB's communication libraries

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: Report full URI to database instead of just database when available
    in mclient.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * merovingian: The monetdbd discoveryport option has been removed in favour of a
    boolean discovery option.  On upgrade, when discoveryport was set to
    a non-zero value, discovery is set to true, or false otherwise.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * clients: The time format of the timer output can now be controlled with an
    optional argument to the -i option.  ms, s and m force the time to be
    formatted as milliseconds, seconds or minutes + seconds respectively.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * monetdb5: bpm and partitions have been moved to the attic.  It is replaced by
    the partition optimizer, still under construction.

 -- Martin Kersten <mk@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * monetdb5: mal_interpreter.mx Protect against concurrent exceptions If multiple
    parallel blocks access the exception variables and perform GDKfree
    on old messages, then we may enter a case that one thread attempts a
    second free.  Simple lock-based protection is the first line of defense.

 -- Martin Kersten <mk@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * monetdb5: The dataflow optimizer uses a less strict side-effect test for BAT
    new operations and better recognizes trivial plans.

 -- Martin Kersten <mk@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.7.1) unstable; urgency=low

  * monetdb5: The MAL debugger next/step operations semantics have been fixed.
    The profiler also now clearly shows entrance/exit of a MAL function.

 -- Martin Kersten <mk@cwi.nl>  Tue, 15 Nov 2011 09:43:23 +0100

monetdb (11.5.9) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 15 Nov 2011 14:06:33 +0100

monetdb (11.5.9) unstable; urgency=low

  * merovingian: Fixed a bug where monetdbd's socket files from /tmp were removed when
    a second monetdbd was attempted to be started using the same port.

 -- Fabian Groffen <fabian@cwi.nl>  Sun, 6 Nov 2011 14:06:32 +0100

monetdb (11.5.9) unstable; urgency=low

  * sql: Added a fix for bug #2834, which caused weird (failing) behaviour
    with PreparedStatements.

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 26 Oct 2011 14:06:32 +0100

monetdb (11.5.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 21 Oct 2011 09:32:09 +0200

monetdb (11.5.7) unstable; urgency=low

  * clients: ODBC: Implemented a workaround in SQLTables for bug 2908.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 20 Oct 2011 09:32:09 +0200

monetdb (11.5.5) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 18 Oct 2011 09:33:46 +0200

monetdb (11.5.5) unstable; urgency=low

  * clients: Small improvement to mclient's table rendering for tables without
    any rows.  Previously, the column names in the header could be
    squeezed to very small widths, degrading readability.

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 17 Oct 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * clients: Python DB API connect() function now supports PEP 249-style arguments
    user and host, bug #2901

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 12 Oct 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * clients: mclient now checks the result of encoding conversions using the iconv
    library.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 12 Oct 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * clients: Fixed a source of crashes in mclient when a query on the command line
    using the -s option is combined with input on standard input (e.g. in
    the construct mclient -s 'COPY INTO t FROM STDIN ...' < file.csv).

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 10 Oct 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * merovingian: Resolved problem where monetdbd would terminate abnormally when
    databases named 'control', 'discovery' or 'merovingian' were stopped.

 -- Fabian Groffen <fabian@cwi.nl>  Sun, 9 Oct 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * merovingian: monetdbd get status now also reports the version of the running monetdbd

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 7 Oct 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * clients: Fixed bug 2897 where slow (network) reads could cause blocks to not
    be fully read in one go, causing errors in the subsequent use of
    those blocks.  With thanks to Rémy Chibois.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 7 Oct 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * merovingian: Improved response time of 'monetdb start' when the database fails
    to start.

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 6 Oct 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * merovingian: Fixed a bug in monetdbd where starting a failing database could
    incorrectly be reported as a 'running but dead' database.

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 5 Oct 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * merovingian: To avoid confusion, all occurrences of merovingian were changed into
    monetdbd for error messages sent to a client.

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 30 Sep 2011 09:33:45 +0200

monetdb (11.5.5) unstable; urgency=low

  * clients: Fixed a bug in mclient where processing queries from files could result
    in ghost empty results to be reported in the output

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 27 Sep 2011 09:33:45 +0200

monetdb (11.5.3) unstable; urgency=low

  * Rebuilt.

 -- Fabian Groffen <fabian@cwi.nl>  Sun, 25 Sep 2011 14:14:49 +0200

monetdb (11.5.3) unstable; urgency=low

  * clients: Fixed Perl DBD rowcount for larger results, bug #2889

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 23 Sep 2011 14:14:49 +0200

monetdb (11.5.3) unstable; urgency=low

  * monetdb5: Fixed a problem where MAL variables weren't properly cleared before
    reuse of the data strucutre.  This problem could cause the data flow
    scheduler to generate dependencies between instructions that didn't
    actually exist, which in turn could cause circular dependencies among
    instructions with deadlock as a result.  Bugs 2865 and 2888.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 21 Sep 2011 14:14:49 +0200

monetdb (11.5.3) unstable; urgency=low

  * sql: Fixed a bug when using default values for interval columns.  Bug 2877.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 21 Sep 2011 14:14:49 +0200

monetdb (11.5.3) unstable; urgency=low

  * clients: Perl: We now distinguish properly between TABLE and GLOBAL TEMPORARY
    (the latter are recognized by being in the "tmp" schema).
  * clients: Perl: fixed a bunch of syntax errors.  This fixes bug 2884.  With thanks
    to Rémy Chibois.
  * clients: Perl: Fixed DBD::monetdb table_info and tabletype_info.  This fixes
    bug 2885.  With thanks to Rémy Chibois.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 19 Sep 2011 14:14:49 +0200

monetdb (11.5.3) unstable; urgency=low

  * sql: A bug was fixed where deleted rows weren't properly accounted for in
    all operations.  This was bug 2882.
  * sql: A bug was fixed which caused an update to an internal table to
    happen too soon.  The bug could be observed on a multicore system
    with a query INSERT INTO t (SELECT * FROM t) when the table t is
    "large enough".  This was bug 2883.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 16 Sep 2011 14:14:49 +0200

monetdb (11.5.3) unstable; urgency=low

  * clients: mclient: fix display of varchar columns with only NULL values.
  * clients: Fixed a bug in mclient/msqldump where an internal error occurred during
    dump when there are GLOBAL TEMPORARY tables.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 13 Sep 2011 14:14:49 +0200

monetdb (11.5.1) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 07 Sep 2011 09:13:40 +0200

monetdb (11.5.1) unstable; urgency=low

  * clients: msqldump now also accepts the database name as last argument on the
    command line (i.e. without -d).

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 31 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * clients: Made error messages from the server in mclient go to stderr, instead
    of stdout.

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 26 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * gdk: Removed conversion code for databases that still used the (more than
    two year) old format of "string heaps".

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 25 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * merovingian: Fixed confusing 'Success' error message for monetdb commands where an
    invalid hostname was given

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 23 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * merovingian: The path to the mserver5 binary is no longer returned for the mserver
    property with monetdbd get for a dbfarm which is currently served by
    a monetdbd.  Since the called monetdbd needs not to be the same as
    the running monetdbd, the reported mserver5 binary may be incorrect,
    and obviously lead to confusing situations.  Refer to the running
    monetdbd's logfile to determine the mserver5 binary location instead.

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 19 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * clients: Implemented SQL_ATTR_METADATA_ID attribute.  The attribute is used
    in SQLColumns, SQLProcedures, and SQLTablePrivileges.
  * clients: Implemented SQLTablePrivileges in the ODBC driver.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 18 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * merovingian: Added -n option to monetdbd start command, which prevents monetdbd
    from forking into the background.

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 17 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * gdk: On Windows and Linux/Unix we can now read databases built on the other
    O/S, as long as the hardware-related architecture (bit size, floating
    point format, etc.) is identical.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 10 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * merovingian: Fix incorrect (misleading) path for pidfile in pidfile error message,
    bug #2851

 -- Fabian Groffen <fabian@cwi.nl>  Sat, 6 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * buildtools: Fixed Fedora 15 (and presumably later) configuration that uses a tmpfs
    file system for /var/run.  This fixes bug 2850.

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 6 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * clients: mclient now automatically sets the SQL `TIME ZONE' variable to its
    (the client's) time zone.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 5 Aug 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * geom: Implemented NULL checks in the geom module.  Now when given NULL
    as input, the module functions return NULL instead of an exception.
    This fixes bug 2814.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 29 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * clients: Removed perl/Cimpl, MonetDB-CLI-MapiLib and MonetDB-CLI-MapiXS
  * clients: Switched implementation of MonetDB::CLI::MapiPP to Mapi.pm, and made
    it the default MonetDB::CLI provider.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * buildtools: The default OID size for 64-bit Windows is now 64 bits.  Databases with
    32 bit OIDs are converted automatically.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * clients: Made Mapi.pm usable with current versions of MonetDB again

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * monetdb5: Make crackers optional and disable by default, since it wasn't used
    normally

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * java: Add so_timeout Driver property to specify a SO_TIMEOUT value for the
    socket in use to the database.  Setting this property to a value in
    milliseconds defines the timeout for read calls, which may 'unlock'
    the driver if the server hangs, bug #2828

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * java: Added a naive implementation for PreparedStatement.setCharacterStream

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * gdk: Implemented automatic conversion of a 64-bit database with 32-bit OIDs
    to one with 64-bit OIDs.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * merovingian: added status property to get command

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * monetdb5: Authorisation no longer takes scenarios into account.  Access for only
    sql or mal is no longer possible.  Any credentials now mean access to
    all scenarios that the server has available.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * clients: When the first non-option argument of mclient does not refer to an
    exising file, it now is taken as database name.  This allows to simply
    do `mclient mydb`.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.5.1) unstable; urgency=low

  * java: The obsolete Java-based implementation for PreparedStatements (formerly
    activated using the java_prepared_statements property) has been dropped

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 26 Jul 2011 09:13:39 +0200

monetdb (11.3.7) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 26 Jul 2011 09:53:37 +0200

monetdb (11.3.5) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 20 Jul 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * sql: Fixed regression where the superuser password could no longer be
    changed, bug #2844

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 19 Jul 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * buildtools: We can now build RPMs on CentOS 6.0.  Since there is no geos library
    on CentOS, we do not support the geom modules there.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 13 Jul 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * gdk: Fixed a problem where appending string BATs could cause enormous growth
    of the string heap.  This fixes bug 2820.

 -- Sjoerd Mullender <sjoerd@acm.org>  Sat, 9 Jul 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * java: Return false from Statement.getMoreResults() instead of a
    NullPointerException when no query has been performed on the Statement
    yet, bug #2833

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 8 Jul 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * clients: Fix stethoscope's mod.fcn filter when using multiple targets, bug #2827

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 1 Jul 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * buildtools: We can now also build on Fedora 15.  This required some very minor
    changes.
  * buildtools: Changed configure check for OpenSSL so that we can also build on CentOS
    5.6.  We now no longer demand that OpenSSL is at least version 0.9.8f,
    but instead we require that the hash functions we need are supported.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 29 Jun 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * clients: The separate Python distribution now uses the same version number as
    the main package.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 29 Jun 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * gdk: Fixes to memory detection on FreeBSD.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 29 Jun 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * sql: Fixed incorrect insert counts.
  * sql: Fixed bug 2823: MAL exeption on SQL query with subquery in the where
    part.
  * sql: Redirect error from create scripts back to the first client.  This
    fixes bug 2813.
  * sql: Added joinidx based semijoin; push join through union (using
    joinidx).
  * sql: Fixed pushing select down.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 29 Jun 2011 12:43:02 +0200

monetdb (11.3.5) unstable; urgency=low

  * java: Fixed read-only interpretation.  Connection.isReadOnly now always
    returns false, setReadOnly now generates a warning when called with
    true.  Partly from bug #2818
  * java: Allow readonly to be set when autocommit is disabled as well.  Bug #2818

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 6 Jun 2011 12:43:02 +0200

monetdb (11.3.3) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 17 May 2011 16:45:39 +0200

monetdb (11.3.3) unstable; urgency=low

  * gdk: Fixed a bug where large files (> 2GB) didn't always get deleted on
    Windows.

 -- Sjoerd Mullender <sjoerd@acm.org>  Fri, 13 May 2011 16:45:38 +0200

monetdb (11.3.3) unstable; urgency=low

  * java: Insertion via PreparedStatement and retrieval via ResultSet of timestamp
    and time fields with and without timezones was improved to better
    respect timezones, as partly indicated in bug #2781.

 -- Fabian Groffen <fabian@cwi.nl>  Wed, 11 May 2011 16:45:38 +0200

monetdb (11.3.3) unstable; urgency=low

  * monetdb5: Fixed a bug in conversion from string to the URL type.  The bug was
    an incorrect call to free().

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 11 May 2011 16:45:38 +0200

monetdb (11.3.3) unstable; urgency=low

  * geom: Fixed various problems so that now all our tests work correctly on
    all our testing platforms.

 -- Sjoerd Mullender <sjoerd@acm.org>  Wed, 27 Apr 2011 16:45:38 +0200

monetdb (11.3.1) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 21 Apr 2011 09:38:31 +0200

monetdb (11.3.1) unstable; urgency=low

  * merovingian: Fix monetdb return code upon failure to start/stop a database

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 18 Apr 2011 09:38:31 +0200

monetdb (11.3.1) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 14 Apr 2011 10:11:08 +0200

monetdb (11.3.1) unstable; urgency=low

  * gdk: Fixed bugs in antiselect which gave the incorrect result when upper
    and lower bound were equal.  This bug could be triggered by the SQL
    query SELECT * FROM t WHERE x NOT BETWEEN y AND y.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 14 Apr 2011 10:11:07 +0200

monetdb (11.3.1) unstable; urgency=low

  * sql: Some names in the SQL catalog were changed.  This means that the
    database in the Apr2011 release is not compatible with pre-Apr2011
    databases.  The database is converted automatically when opened the
    first time.  This database can then no longer be read by an older
    release.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 14 Apr 2011 10:11:07 +0200

monetdb (11.3.1) unstable; urgency=low

  * clients: Plugged a small memory leak occurring upon redirects by the server
    (e.g. via monetdbd)

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 5 Apr 2011 10:11:07 +0200

monetdb (11.3.1) unstable; urgency=low

  * java: clarify exception messages for unsupported methods

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 5 Apr 2011 10:11:07 +0200

monetdb (11.3.1) unstable; urgency=low

  * merovingian: The forward property for databases has been removed.  Instead, only
    a global proxy or redirect mode can be set using monetdbd.

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 24 Mar 2011 10:11:07 +0200

monetdb (11.3.1) unstable; urgency=low

  * merovingian: monetdbd can no longer log error and normal messages to separate
    logfiles, logging to stdout and stderr is no longer possible either.
  * merovingian: The .merovingian_pass file is no longer in use, and replaced by the
    .merovingian_properties file.  Use monetdbd (get|set) passphrase to
    view/edit the control passphrase.  Existing .merovingian_pass files
    will automatically be migrated upon startup of monetdbd.
  * merovingian: monetdbd now understands commands that allow to create, start, stop,
    get and set properties on a given dbfarm.  This behaviour is intended
    as primary way to start a MonetDB Database Server, on a given location
    of choice.  monetdbd get and set are the replacement of editing the
    monetdb5.conf file (which is no longer in use as of the Apr2011
    release).  See monetdbd(1).

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 24 Mar 2011 10:11:07 +0200

monetdb (11.3.1) unstable; urgency=low

  * clients: Remove XQuery related code from Ruby adapter, PHP driver and Perl Mapi
    library

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 24 Mar 2011 10:11:07 +0200

monetdb (11.3.1) unstable; urgency=low

  * java: Removed XQuery related XRPC wrapper and XML:DB code, removed support
    for language=xquery and language=mil from JDBC.

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 24 Mar 2011 10:11:07 +0200

monetdb (11.3.1) unstable; urgency=low

  * clients: Make SQL the default language for mclient, e.g. to use when --language=
    or -l is omitted

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 24 Mar 2011 10:11:07 +0200

monetdb (11.3.1) unstable; urgency=low

  * monetdb5: mserver5 no longer reads monetdb5.conf upon startup by default.
    Use --config=file to have mserver5 read a configuration on startup

 -- Fabian Groffen <fabian@cwi.nl>  Thu, 24 Mar 2011 10:11:07 +0200

monetdb (11.1.1) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 24 Mar 2011 09:12:25 +0100

monetdb (11.1.1) unstable; urgency=low

  * gdk: Fixed memory detection on Darwin (Mac OS X) systems not to return
    bogus values

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 22 Mar 2011 09:12:24 +0100

monetdb (11.1.1) unstable; urgency=low

  * Rebuilt.

 -- Sjoerd Mullender <sjoerd@acm.org>  Thu, 17 Mar 2011 11:30:33 +0100

monetdb (11.1.1) unstable; urgency=low

  * geom: Set endianness for wkb en/decoding.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 15 Mar 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * monetdb5: sphinx module: update, adding limit/max_results support

 -- Stefan de Konink <stefan@konink.de>  Sat, 05 Mar 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * clients: Fixed bug 2677: SQL_DESC_OCTET_LENGTH should give the size in bytes
    required to copy the data.

 -- Sjoerd Mullender <sjoerd@acm.org>  Mon, 14 Feb 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * clients: Disable timer functionality for non-XQuery languages since it is
    incorrect, bug #2705

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 24 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * sql: Fix bug #2648, do not allow restarting a sequence with NULL via the
    result of a sub-query.

 -- Fabian Groffen <fabian@cwi.nl>  Mon, 24 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * gdk: MonetDB/src/gdk was moved to gdk

 -- Fabian Groffen <fabian@cwi.nl>  Fri, 14 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * clients: Added mapi_get_uri function to retrieve mapi URI for the connection

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * merovingian: Allow use of globs with all commands that accept database names as
    their parameters

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * java: PreparedStatements now free the server-side resources attached to them
    when closed.  This implements bug #2720

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * sql: Allow clients to release prepared handles using Xrelease commands

 -- Niels Nes <niels@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * clients: Allow to dump table data using INSERT INTO statements, rather than COPY
    INTO + CSV data using the -N/--inserts flag of mclient and msqldump.
    Bug #2727

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * clients: Added support for \dn to list schemas or describe a specific one

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * clients: Added support for \df to list functions or describe a specific one
  * clients: Added support for \ds to list sequences or describe a specific one

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * clients: Added support for wildcards * and ? in object names given to \d
    commands, such that pattern matching is possible, e.g. \d my*
  * clients: Added support for \dS that lists also system tables

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * clients: object names given to \d are now lowercased, unless quoted by either
    single or double quotes
  * clients: Strip any trailing whitespace with the \d command

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * merovingian: merovingian has been renamed into monetdbd.  Internally, monetdbd keeps
    referring to merovingian for e.g. settings and logfiles.  Merovingian
    has been renamed to make the process more recognisable as part of the
    MonetDB suite.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.1.1) unstable; urgency=low

  * monetdb5: Improve the performance of remote.put for BAT arguments.  The put
    speed is now roughly equal to the speed of get on a BAT.

 -- Fabian Groffen <fabian@cwi.nl>  Tue, 4 Jan 2011 11:30:32 +0100

monetdb (11.0.0-0) unstable; urgency=low

  * Created top-level bootstrap/configure/make with new version numbers.

 -- Sjoerd Mullender <sjoerd@acm.org>  Tue, 04 Jan 2011 15:44:10 +0100

