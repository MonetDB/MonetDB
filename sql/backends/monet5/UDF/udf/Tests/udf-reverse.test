statement ok
set optimizer = 'sequential_pipe'

statement ok
create table udf_reverse ( x string )

statement ok
insert into udf_reverse values ('MonetDB')

statement ok
insert into udf_reverse values ('Database Architecture')

statement ok
insert into udf_reverse values ('Information Systems')

statement ok
insert into udf_reverse values ('Centrum Wiskunde & Informatica')

query T rowsort
select * from udf_reverse
----
Centrum Wiskunde & Informatica
Database Architecture
Information Systems
MonetDB

statement ok
create procedure profiler.starttrace() external name profiler."starttrace"

statement ok
create procedure profiler.stoptrace() external name profiler.stoptrace

statement ok
call profiler."starttrace"()

query T rowsort
select reverse('MonetDB')
----
BDtenoM

statement ok
call profiler.stoptrace()

query I rowsort
select count(*) from sys.tracelog() where stmt like '% batudf.reverse%'
----
0

query I rowsort
select count(*) from sys.tracelog() where stmt like '% udf.reverse%'
----
1

query T rowsort
select reverse('MonetDB')
----
BDtenoM

statement ok
call profiler."starttrace"()

query T rowsort
select reverse(x) from udf_reverse
----
BDtenoM
acitamrofnI & ednuksiW murtneC
erutcetihcrA esabataD
smetsyS noitamrofnI

statement ok
call profiler.stoptrace()

query I rowsort
select count(*) from sys.tracelog() where stmt like '% batudf.reverse%'
----
1

query I rowsort
select count(*) from sys.tracelog() where stmt like '% udf.reverse%'
----
0

query T rowsort
select reverse(x) from udf_reverse
----
BDtenoM
acitamrofnI & ednuksiW murtneC
erutcetihcrA esabataD
smetsyS noitamrofnI

statement ok
drop procedure profiler.starttrace()

statement ok
drop procedure profiler.stoptrace()

statement ok
drop table udf_reverse

statement ok
set optimizer = 'default_pipe'

