stdout of test 'pyapi3_24` in directory 'sql/backends/monet5/UDF/pyapi3` itself:


# 15:58:33 >  
# 15:58:33 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33123" "--set" "mapi_usock=/var/tmp/mtest-17490/.s.monetdb.33123" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch2/raasveld/build/var/MonetDB/mTests_sql_backends_monet5" "--set" "mal_listing=0" "--set" "embedded_r=true" "--set" "embedded_py=true"
# 15:58:33 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_sql_backends_monet5', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://lyon.ins.cwi.nl:33123/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17490/.s.monetdb.33123
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/Python module loaded
# MonetDB/R   module loaded


# 18:20:21 >  
# 18:20:21 >  "./pyapi3_24.SQL.sh" "pyapi3_24"
# 18:20:21 >  


# 18:20:21 >  
# 18:20:21 >  Mtimeout -timeout 60 mclient -lsql -ftest -Eutf-8 -i -e --host=/var/tmp/mtest-56217 --port=35996 < /Users/myth/Programs/MonetDB/sql/backends/monet5/UDF/pyapi3/../../Tests/pyapi24.sql
# 18:20:21 >  

#START TRANSACTION;
#CREATE FUNCTION pyapi24(*) RETURNS integer LANGUAGE PYTHON
#{
#    sum = 0
#    for key in _columns.keys():
#        sum += numpy.sum(_columns[key])
#    return sum
#};
#CREATE TABLE pyapi24table(i INTEGER, j INTEGER, k INTEGER, l INTEGER, m INTEGER);
#INSERT INTO pyapi24table VALUES (1, 2, 3, 4, 5), (1, 2, 3, 4, 5), (1, 2, 3, 4, 5), (1, 2, 3, 4, 5), (1, 2, 3, 4, 5);
[ 5	]
#SELECT pyapi24(i) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 1 # length
[ 5	]
#SELECT pyapi24(i,j) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 2 # length
[ 15	]
#SELECT pyapi24(i,j,k) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 2 # length
[ 30	]
#SELECT pyapi24(i,j,k,l) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 2 # length
[ 50	]
#SELECT pyapi24(i,j,k,l,m) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 2 # length
[ 75	]
#SELECT pyapi24(i,i,i,i,i) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 2 # length
[ 25	]
#SELECT pyapi24(i,i,i,i,i,i,i,i,i,i) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 2 # length
[ 50	]
#SELECT pyapi24(i,i,i,i,i,i,i,i,i,i,i,i,i,i,i) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 2 # length
[ 75	]
#SELECT pyapi24(i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 3 # length
[ 100	]
#SELECT pyapi24(i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 3 # length
[ 125	]
#SELECT pyapi24(i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i) FROM pyapi24table;
% sys.%1 # table_name
% %1 # name
% int # type
% 3 # length
[ 500	]
#DROP FUNCTION pyapi24;
#DROP TABLE pyapi24table;
#CREATE FUNCTION pyapi24(*) RETURNS DOUBLE LANGUAGE PYTHON
#{
#    sum = 0
#    for key in _columns.keys():
#        if _column_types[key] != 'STRING':
#            sum += numpy.sum(_columns[key])
#        else: 
#            sum += 10000 * len(_columns[key]) # strings are worth more points
#    return sum
#};
#CREATE TABLE pyapi24table(i BOOLEAN, j TINYINT, k INTEGER, l DOUBLE, m STRING);
#INSERT INTO pyapi24table VALUES (True, 10, 1000, 100.1, 'Hello'), (True, 10, 1000, 100.1, 'Hello'), (True, 10, 1000, 100.1, 'Hello'), (True, 10, 1000, 100.1, 'Hello'), (True, 10, 1000, 100.1, 'Hello');
[ 5	]
#SELECT pyapi24(i,j,k,l,m) FROM pyapi24table; #55555.5
% sys.%1 # table_name
% %1 # name
% double # type
% 24 # length
[ 55555.5	]
#ROLLBACK;

# 15:58:34 >  
# 15:58:34 >  "Done."
# 15:58:34 >  

