statement ok
START TRANSACTION

statement ok
CREATE FUNCTION pyapi13_random_table_nulls(entries integer) returns table (i integer, j integer)
language P
{
    numpy.random.seed(123)
    res = {'i': numpy.random.randint(0, 100, entries), 'j': numpy.random.randint(0, 100, entries)}
    return {'i': numpy.ma.masked_array(res['i'], mask=res['i'] < 50), 'j': numpy.ma.masked_array(res['j'], mask=res['j'] < 50)}
}

statement ok
CREATE FUNCTION pyapi13_mult(i integer,j integer) returns integer
language PYTHON_MAP
{
    return(i*j)
}

query I rowsort
SELECT COUNT(pyapi13_mult(i,j)) FROM pyapi13_random_table_nulls(5000)
----
1257

statement ok
DROP FUNCTION pyapi13_mult

statement ok
CREATE FUNCTION pyapi13_mult(i integer,j integer) returns integer
language PYTHON_MAP { return(i*j)
}

query I rowsort
SELECT COUNT(pyapi13_mult(i,j)) FROM pyapi13_random_table_nulls(5000)
----
1257

statement ok
DROP FUNCTION pyapi13_mult

statement ok
CREATE FUNCTION pyapi13_mult(i integer,j integer) returns integer language PYTHON_MAP { return(i*j) }

query I rowsort
SELECT COUNT(pyapi13_mult(i,j)) FROM pyapi13_random_table_nulls(5000)
----
1257

statement ok
DROP FUNCTION pyapi13_mult

statement ok
CREATE FUNCTION pyapi13_mult(i integer,j integer) returns integer
language PYTHON_MAP
{
x = "test\n\ntesttest\n"
print(x)
return(i*j)
}

query I rowsort
SELECT COUNT(pyapi13_mult(i,j)) FROM pyapi13_random_table_nulls(5000)
----
1257

statement ok
DROP FUNCTION pyapi13_mult

statement ok
CREATE FUNCTION pyapi13_mult(i integer,j integer) returns integer
language PYTHON_MAP
{
x = """test123
testtest
""test2""
hello world
"""
print(x)
if len(x) > 10:
	return(i*j)
else:
	return(i+j)
}

query I rowsort
SELECT COUNT(pyapi13_mult(i,j)) FROM pyapi13_random_table_nulls(5000)
----
1257

statement ok
DROP FUNCTION pyapi13_mult

statement ok
CREATE FUNCTION pyapi13_mult(i integer,j integer) returns integer
language PYTHON_MAP
{
	x = 5
    y = 4
    z = x + y
	if z > x:
     print("y is not negative!")
    else:
     print("y is negative!")
    if x + y == z:
    	print("Addition in python is not inconsistent!")
    	return(i + j)
    else:
    								return(i*j)
}

query I rowsort
SELECT COUNT(pyapi13_mult(i,j)) FROM pyapi13_random_table_nulls(5000)
----
1257

statement ok
DROP FUNCTION pyapi13_mult

statement ok
DROP FUNCTION pyapi13_random_table_nulls

statement ok
ROLLBACK

