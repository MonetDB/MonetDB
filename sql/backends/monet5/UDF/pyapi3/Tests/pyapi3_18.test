statement ok
START TRANSACTION

statement ok
CREATE TABLE date_table(d DATE)

statement ok
INSERT INTO date_table VALUES (cast('2000-10-10' AS DATE))

statement ok
CREATE FUNCTION pyapi_date(d DATE) RETURNS STRING LANGUAGE PYTHON { return d; }

query T rowsort
SELECT pyapi_date(d) FROM date_table
----
2000-10-10

statement ok
CREATE TABLE time_table(d TIME)

statement ok
INSERT INTO time_table VALUES (cast('12:00:00' AS TIME))

statement ok
CREATE FUNCTION pyapi_time(d TIME) RETURNS STRING LANGUAGE PYTHON { return d; }

query T rowsort
SELECT pyapi_time(d) FROM time_table
----
12:00:00.000000

statement ok
CREATE TABLE timestamp_table(d TIMESTAMP)

statement ok
INSERT INTO timestamp_table VALUES (cast('2000-1-1 12:00:00' AS TIMESTAMP))

statement ok
CREATE FUNCTION pyapi_timestamp(d TIMESTAMP) RETURNS STRING LANGUAGE PYTHON { return d; }

query T rowsort
SELECT pyapi_timestamp(d) FROM timestamp_table
----
2000-01-01 12:00:00.000000

statement ok
CREATE TABLE decimal_table(d DECIMAL(10, 3))

statement ok
INSERT INTO decimal_table VALUES (123.4567)

statement ok
CREATE FUNCTION pyapi_decimal(d DECIMAL) RETURNS DOUBLE LANGUAGE PYTHON { return d; }

query R rowsort
SELECT pyapi_decimal(d) FROM decimal_table
----
123.457

statement ok
CREATE FUNCTION pyapi_ret_date() RETURNS TABLE(d DATE)
LANGUAGE PYTHON
{
    result = dict()
    result['d'] = '2000-10-10'
    return result
}

query T rowsort
SELECT * FROM pyapi_ret_date()
----
2000-10-10

statement ok
CREATE FUNCTION pyapi_ret_time() RETURNS TABLE(d TIME)
LANGUAGE PYTHON
{
    result = dict()
    result['d'] = '12:00:00'
    return result
}

query T rowsort
SELECT * FROM pyapi_ret_time()
----
12:00:00

statement ok
CREATE FUNCTION pyapi_ret_timestamp() RETURNS TABLE(d TIMESTAMP)
LANGUAGE PYTHON
{
    result = dict()
    result['d'] = '2000-1-1 12:00:00'
    return result
}

query T rowsort
SELECT * FROM pyapi_ret_timestamp()
----
2000-01-01 12:00:00

statement ok
CREATE FUNCTION pyapi_ret_decimal() RETURNS TABLE(d DECIMAL)
LANGUAGE PYTHON
{
    result = dict()
    result['d'] = 100.33
    return result
}

query R rowsort
SELECT * FROM pyapi_ret_decimal()
----
100.330

statement ok
DROP FUNCTION pyapi_ret_date

statement ok
DROP FUNCTION pyapi_ret_time

statement ok
DROP FUNCTION pyapi_ret_timestamp

statement ok
DROP FUNCTION pyapi_ret_decimal

statement ok
CREATE FUNCTION pyapi_ret_decimal() RETURNS TABLE(d DECIMAL)
LANGUAGE PYTHON
{
    return numpy.arange(100001)
}

statement ok
CREATE FUNCTION pyapi_inp_decimal(d DECIMAL) RETURNS DOUBLE
LANGUAGE PYTHON
{
    return numpy.mean(d)
}

query R rowsort
SELECT pyapi_inp_decimal(d) FROM pyapi_ret_decimal()
----
50000.000

statement ok
CREATE TABLE uuid_tbl(d UUID)

statement ok
INSERT INTO uuid_tbl VALUES ('54771a16-b4ad-4f1a-a9b7-4d8e8ca6fb7c')

statement ok
CREATE FUNCTION pyapi_interval(d UUID) RETURNS STRING LANGUAGE PYTHON { return d; }

query T rowsort
SELECT pyapi_interval(d) FROM uuid_tbl
----
54771a16-b4ad-4f1a-a9b7-4d8e8ca6fb7c

statement ok
ROLLBACK

