stdout of test 'pyapi3_05` in directory 'sql/backends/monet5/UDF/pyapi3` itself:


# 22:42:27 >  
# 22:42:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35079" "--set" "mapi_usock=/var/tmp/mtest-8933/.s.monetdb.35079" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/mytherin/opt/var/mTests_sql_backends_monet5" "--set" "mal_listing=0" "--set" "embedded_r=true" "--set" "embedded_py=true"
# 22:42:27 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_backends_monet5', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.684 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://mytherin-N750JV:35079/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8933/.s.monetdb.35079
# MonetDB/SQL module loaded
# MonetDB/Python module loaded
# MonetDB/R   module loaded


# 22:42:28 >  
# 22:42:28 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8933" "--port=35079"
# 22:42:28 >  

#START TRANSACTION;
#CREATE TABLE xdata (x float);
#INSERT INTO xdata values (-0.389410695032248),(0.628726838993798),(0.137964349185122),(0.547052722115739),(-0.285410070922731),(-0.202390786128771),(-0.259905641264271),(0.00971359683446567),(-0.521267150089632),(0.0159231195505075),(0.577474725871033),(0.223287062631593),(-0.066875141140296),(-0.0170753669716841),(0.117185399554633),(-0.0480598509921151),(-0.129129967553087),(-0.0466626051014605),(0.0263456359193208),(-0.0974973754556838),(-0.180056213888209),(-0.157380108227166),(0.635775033790671),(0.238406429376603),(0.100439668088313),(-0.169065320099862),(-0.0400168536365489),(0.513426164708468),(0.335535283793148),(-0.220402896984814),(0.476485240842118),(-0.667662669259098),(-0.0890368732815401),(-0.113422216797009),(0.00984741405585595),(-0.0151482347446424),(0.167896344184941),(0.43904811714262),(-0.0422320586227086),(-0.028208969761727),(-0.4275301298165),(0.0467051407589069),(0.365019153825165),(-0.0516634038370302),(0.0454306083669088),(-0.000386971871032756),(0.057675101204374),(-0.231344619590922),(0.341647364709072),(-0.302169977160809),(0.542151765040462),(0.696867682165396),(0.901450330200742),(0.978171631034533),(1.44036576988475),(0.609289102868709),(1.26871684262261),(0.980333871102418),(1.00101773810314),(0.798393099666261),(1.15328842276957),(1.04034614204703),(1.15458504793287),(1.36791086766857),(1.37203985601059),(0.561889675743039),(0.598007204844274),(0.716169894705479),(1.16185329547318),(1.18976831107129),(1.58237642589276),(0.982777404364492),(1.11837075656137),(1.06781420935443),(0.62643874002307),(1.25846521365276),(0.649477963200452),(0.601579222384029),(1.26267984342523),(1.12136426149563),(1.24966942688189),(0.959032873478579),(0.706955531509477),(1.04035944412593),(0.649697044302177),(0.932638070087457),(1.04885840822282),(1.05823112508253),(0.926464738239801),(0.940499054329297),(0.664395876769679),(0.793561721876957),(0.646756224513572),(1.03361950221238),(1.05333016469207),(0.80407222796769),(0.740844349514946),(0.80553988011549),(1.10095022809124),(0.98036424370252);
[ 100	]
#CREATE FUNCTION kmeans(data float, ncluster integer) returns integer 
#language P 
#{
#	import scipy.cluster.vq as vq
#	whitened = vq.whiten(data)
#	kmeans = (vq.kmeans(whitened,ncluster))[0]
#	groups = numpy.zeros(whitened.size)
#	for i in range(0,whitened.size):
#		min = 999999999
#		grp = -1
#		for j in range(0,kmeans.size):
#			dist = abs(whitened[i] - kmeans[j])
#			if dist < min:
#				min = dist
#				grp = j + 1
#		groups[i] = grp
#	return(groups)
#};
#SELECT cluster FROM (SELECT MIN(x) AS minx, MAX(x) AS maxx, kmeans(x,5) AS cluster FROM xdata 
#	GROUP BY cluster) as cdata ORDER BY cluster;
% sys.cdata # table_name
% cluster # name
% int # type
% 1 # length
[ 1	]
[ 2	]
[ 3	]
[ 4	]
[ 5	]
#DROP FUNCTION kmeans;
#DROP TABLE xdata;
#ROLLBACK;

# 22:42:28 >  
# 22:42:28 >  "Done."
# 22:42:28 >  

