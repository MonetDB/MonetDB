# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.monetdb.org/Legal/MonetDBLicense
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2020 MonetDB B.V.
# All Rights Reserved.

module cquery;

pattern cycles(alias:str,cnt:int)
address CQcycles
comment "Limit number of petrinet steps for a single continuous query";

pattern cycles(cnt:int)
address CQcycles
comment "Limit number of petrinet steps for all continuous queries";

pattern beginat(alias:str,unixtime:lng)
address CQbeginAt
comment "Delay beginning of a continuous query, where unixtime is an UNIX timestamp with microsecond precision";

pattern beginat(unixtime:lng)
address CQbeginAt
comment "Delay beginning of all continuous queries, where unixtime is an UNIX timestamp with microsecond precision";

# scheduler heart beat for each CQ
pattern heartbeat(alias:str,cnt:lng)
address CQheartbeat
comment "Awake the query after cnt milliseconds";

pattern heartbeat(cnt:lng)
address CQheartbeat
comment "Awake all queries after cnt milliseconds";

# continuous query status analysis
pattern status() (tick:bat[:timestamp],alias:bat[:str],state:bat[:str],error:bat[:str])
address CQstatus
comment "Status of all registered continuous queries";

pattern log() (tick:bat[:timestamp],alias:bat[:str],time:bat[:lng],error:bat[:str])
address CQlog
comment "The log of all CQ executions";

pattern show(alias:str)
address CQshow
comment "Debug a single continuous query";

command dump()
address CQdump
comment "Show the status of the query scheduler";

# initializer code
command prelude() :void
address CQprelude;
cquery.prelude();
