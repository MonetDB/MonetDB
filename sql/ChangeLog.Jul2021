# ChangeLog file for sql
# This file is updated with Maddlog

* Wed Jul 21 2021 Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com>
- Fix a warning emitted by some implementations of the tar(1) command
  when unpacking hot snapshot files.
- support reading the concatenation of compressed files as a single
  compressed file.
- COPY BINARY overhaul.  Allow control over binary endianness using
  COPY [ (BIG | LITTLE | NATIVE) ENDIAN] BINARY syntax.  Defaults to
  NATIVE.  Strings are now \0 terminated rather than \n.  Support for
  BOOL, TINYINT, SMALLINT, INT, LARGEINT, HUGEINT, with their
  respective "INTMIN" values as the NULL representation; 32 and 64 bit
  FLOAT/REAL, with NaN as the NULL representation; VARCHAR/TEXT, JSON
  and URL with \x80 as the NULL representation; UUID as fixed width 16
  byte binary values, with (by default) all zeroes as the NULL
  representation; temporal type structs as defined in copybinary.h
  with any invalid value as the NULL representation.

* Tue Jul 20 2021 Niels Nes <niels@cwi.nl>
- In the Jul2021 release the storage and transaction layers have
  undergone major changes.  The goal of these changes is robust
  performance under inserts/updates and deletes and lowering the
  transaction startup costs, allowing faster (small) queries.  Where
  the old transaction layer duplicated a lot of data structures during
  startup, the new layer shares the same tree.  Using object
  timestamps the isolation of object is guaranteed.  On the storage
  side the timestamps indicate whether a row is visible (deleted or
  valid), to a transaction as well.  The changes also give some slight
  changes on the perceived transactional behavior.  The new
  implementation uses shared structures among all transactions, which
  do not allow multiple changes of the same object.  And we then
  follow the principle of the first writer wins, i.e., if a
  transaction creates a table with name 'table_name', and concurrently
  one other transaction does the same the later of the two will fail
  with a concurrency conflict error message (even if the first writer
  never commits).  We expect most users not to notice this change, as
  such schema changes aren't usually done concurrently.

* Tue May 11 2021 Sjoerd Mullender <sjoerd@acm.org>
- There is now a function sys.current_sessionid() to return the session
  ID of the current session.  This ID corresponds with the sessionid in
  the sys.queue() result.

* Wed Apr 28 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>
- Merge statements could not produce correct results on complex join
  conditions, so a renovation was made. As a consequence, subqueries
  now have to be disabled on merge join conditions.

* Thu Apr 15 2021 svetlin <svetlin.stalinov@monetdbsolutions.com>
- preserve in-query comments

* Tue Mar 16 2021 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>
- Use of CTEs inside UPDATE and DELETE statements are now more
  restrict. Previously they could be used without any extra specification
  in the query (eg. with "v1"("c1") as (...) delete from "t"
  where "t"."c1" = "v1"."c1"), however this was not conformant with the
  SQL standard. In order to use them, they must be specified in the FROM
  clause in UPDATE statements or inside a subquery.

* Mon Nov 30 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>
- Added 'schema path' property to user, specifying a list of schemas
  to be searched on to find SQL objects such as tables and
  functions. The scoping rules have been updated to support this feature
  and it now finds SQL objects in the following order:
   1. On occasions with multiple tables (e.g. add foreign key constraint,
      add table to a merge table), the child will be searched on the
      parent's schema.
   2. For tables only, declared tables on the stack.
   3. 'tmp' schema if not listed on the 'schema path'.
   4. Session's current schema.
   5. Each schema from the 'schema path' in order.
   6. 'sys' schema if not listed on the 'schema path'.
  Whenever the full path is specified, ie "schema"."object", no search will
  be made besides on the explicit schema.
- To update the schema path ALTER USER x SCHEMA PATH y; statement was added.
  [SCHEMA PATH string] syntax was added to the CREATE USER statement.
  The schema path must be a single string where each schema must be between
  double quotes and separated with a single comma, e.g. '"sch1","sch2"'
  For every created user, if the schema path is not given, '"sys"' will be
  the default schema path.
- Changes in the schema path won't be reflected on currently connected users,
  therefore they have to re-connect to see the change. Non existent schemas
  on the path will be ignored.

* Fri Oct 30 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com>
- Leftover STREAM table definition from Datacell extension was removed
  from the parser. They had no effect anymore.

