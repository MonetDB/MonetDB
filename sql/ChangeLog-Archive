# DO NOT EDIT THIS FILE -- MAINTAINED AUTOMATICALLY
# This file contains past ChangeLog entries

* Thu Dec 10 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.39.9-20210111
- CREATE [OR REPLACE] TRIGGER schema_name.trigger_name is now disallowed,
  because the trigger will be stored on the same schema as the table it
  refers to. Use a schema-qualified on the table reference (ie ON clause)
  when necessary.

* Thu Apr  2 2020 Martin Kersten <mk@cwi.nl> - 11.39.1-20201006
- Extended the system monitor with a table-returning function
  user_statistics() which keeps some statistics for each SQL user, e.g. the
  user's query count, total time spent, and maximal query seen.

* Tue Jun  2 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.39.1-20201006
- Removed '@' syntax used to refer into a variable in a query. It
  was a non-standard method, which was replaced by a schema addition to
  variables. Variables in the global scope now have schema. All default
  global variables are set under schema "sys". However variables
  inside PSM don't have a schema, because there are no transaction
  semantics inside PSM at the moment.
- Removed declared variables and tables from the global scope. They were
  transaction agnostic and incompatible with the SQL standard, i.e. they
  are valid exclusively under PSM (e.g. functions, procedures and 
  triggers).
- Scoping semantics were added for both variables and tables. Variables
  with the same name at a query are now resolved under the following
  precedence rules:
    1. Tables, Views and CTEs at the FROM clause.
    2. Variable declared in the body of function/procedure, i.e. local
       variable.
    3. Function/procedure parameter.
    4. Variable from the global scope.
  Tables with the same name now have the following precedence rules at a
  SQL query: 
    1. Table declared in the body of function/procedure, ie local table.
    2. Temporary table.
    3. Table from the current session schema.
  This means the query: SELECT * FROM "keys"; will list keys from
  temporary tables instead of persisted ones, because "keys" table
  is available for both "sys" and "tmp" schemas.
- The table returning function "var" was extended with more details
  about globally declared variables, namely their schema, type and
  current value.

* Mon Jun 15 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.39.1-20201006
- Removed obsolete sys.getContent(url) function.

* Tue Jun 16 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.39.1-20201006
- Removed obsolete json.output(json) function.

* Tue Jun 30 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.39.1-20201006
- Removed compatibility between interval types and other numeric types in
  favor for a more strict SQL standard compliance. This means operations
  between temporal types and other numeric types such as INT and 
  DECIMAL are no longer possible, instead use interval types.
  e.g. SELECT date '2020-01-01' + 1; now gives the error. Instead do:
  SELECT date '2020-01-01' + interval '1' day; if 1 was meant to be a
  day interval.
  Setting an interval variable such as the session's current timezone
  with a number e.g. SET current_timezone = 1; is no longer possible.
  Instead do SET current_timezone = interval '1' hour;
  Casting between interval and other numeric types is no longer possible
  as well, because they are not compatible.
- Because of incompatibilities this change may create, if a user intends
  to convert a numeric value to an interval, the multiplication function
  can be used in the form: <numeric value> * interval '1' <interval length>
  e.g. 10 * interval '1' second = interval '10' second.
  As for the other way around, the 'EPOCH' option was added to the extract
  syntax. This option returns the number of milliseconds since the UNIX
  epoch 1970-01-01 00:00:00 UTC for date, timestamp and time values (it
  can be negative). Meanwhile, for day and second intervals, it returns the
  total number of milliseconds in the interval. As a side note, the 'EPOCH'
  option is not available for month intervals, because this conversion is
  not transparent for this type.

* Mon Aug 31 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.39.1-20201006
- Made general logarithm function log(x,base) compliant with the SQL 
  standard, by swapping the input parameters.
  Instead of log(x,base), now is log(base,x).

* Thu Apr 23 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.37.1-20200511
- Updating the value of a sequence now requires privilege on its own
  schema.

* Thu Apr 16 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- The sys.querylog_enable(threshold integer) now actually enables the
  querylog and uses a threshold in milliseconds.

* Wed Apr 15 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.37.1-20200511
- Removed UNION JOIN statements. They were dropped by the SQL:2003
  standard, plus MonetDB implementation was not fully compliant.

* Wed Apr  1 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- The OFFSET value in the COPY INTO query now counts uninterpreted
  newlines.  Before it counted "unquoted record separators" which meant
  that if you had a single quote on a line that you want to skip, you
  could not use the feature.

* Fri Mar 27 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.37.1-20200511
- Added support for FROM RANGE MINVALUE TO RANGE MAXVALUE and FROM RANGE
  MINVALUE TO RANGE MAXVALUE WITH NULL VALUES cases in partitioned tables
  by range (before they weren't).

* Wed Jan 29 2020 Sjoerd Mullender <sjoerd@acm.org> - 11.37.1-20200511
- Removed support for Python 2.  Python 2 itself is no longer
  supported.  Use Python 3 instead.  Functions that were declared as
  LANGUAGE PYTHON2 or LANGUAGE PYTHON2_MAP are changed to LANGUAGE
  PYTHON and LANGUAGE PYTHON_MAP respectively (without changing the
  Python code).

* Wed Jan 29 2020 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.37.1-20200511
- Implemented 'covar_pop' and 'covar_samp' aggregate functions, as well
  as their window function counterparts. Implemented 'stddev_samp',
  'stddev_pop', 'var_samp', 'var_pop', 'corr' and 'group_concat'
  window function correspondents.
- Extended SQL catalog with CREATE WINDOW syntax for user-defined
  SQL:2003 window functions. At the moment, window functions must be
  defined on the backend engine, i.e. on this case MAL. In the current
  implementation, the backend code generation creates two additional
  columns of type lng with the start and end offsets for each row.

* Tue Dec 17 2019 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.37.1-20200511
- Added prepared_statements_args view, which details the arguments for
  the prepared statements created in the current session.

* Fri Dec 13 2019 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.37.1-20200511
- Added sys.prepared_statements view, which lists the available prepared
  statements in the current session.
- Added deallocate statements with the syntax 'DEALLOCATE [PREPARE]
  { number | ALL }', to close an existing prepared statement or all,
  through the SQL layer. Previously this feature was available via MAPI
  exclusively with the "release" command.

* Fri Nov 29 2019 Panagiotis Koutsourakis <kutsurak@monetdbsolutions.com> - 11.37.1-20200511
- Added support for raw strings using the syntax r'' or R''. This means
  that C-like escapes will remain uninterpreted within those strings. For
  instance SELECT r'\"' returns a string of length two. The user needs
  to escape single quotes by doubling them: SELECT r''''.

* Wed Nov 27 2019 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.37.1-20200511
- Implemented ROLLUP, CUBE and GROUPING SETS from SQL:1999. They
  define grouping subsets used with the GROUP BY clause in order to
  compute partial groupings. Also, the GROUPING aggregate was
  added. This aggregate is a bitmask identifying the grouping columns
  not present in the generated grouping row when used with the
  operators described above.

* Tue Nov 19 2019 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.37.1-20200511
- Updated user session procedures by adding the possibility to set properties
  based on a session identifier.
  Optimizer pipeline: sys.setoptimizer(int, string)
  Number of worker threads: sys.setworkerlimit(int, int)
  Memory limits (in MB): sys.setmemorylimit(int, int)
  Query timeout (in ms): sys.setquerytimeout(int, int)
  Session timeout (in ms): sys.setsessiontimeout(int, int)
  The first argument corresponds to the id of the session to modify, and
  these procedures are bound to the monetdb user exclusively.
  The versions of the mentioned procedures with just the second argument were
  added as well, where the changes are reflected in the current user session,
  and therefore every user can call them.
- The procedures sys.settimeout(bigint), sys.settimeout(bigint,bigint)
  and sys.session(bigint) are now deprecated. Instead use sys.setquerytimeout
  and sys.setsessiontimeout mentioned above.

* Fri Oct 25 2019 Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com> - 11.37.1-20200511
- Added SQL procedure sys.hot_snapshot() which can be used to write
  a snapshot of the database to a tar file. For example,
  sys.hot_snapshot('/tmp/snapshot.tar'). If compression support is
  compiled in, snapshots can also be compressed ('/tmp/snapshot.tar.gz').
  The tar file expands to a single directory with the same name as the
  database that was snapshotted. This directory can be passed directly
  as the --dbpath argument of mserver5 or it can be copied into an
  existing dbfarm and started from monetdbd.

* Mon Nov  4 2019 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.35.1-20191118
- Removed functions json.text(string) returns string and json.text(int)
  returns string. Their MAL implementation didn't exist, so they were
  meaningless.

* Mon Sep 23 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.35.1-20191118
- There are new aggregate functions sys.median_avg and sys.quantile_avg
  that return the interpolated value if the median/quantile doesn't fall
  exactly on a particular row.  These functions always return a value
  of type DOUBLE and only work for numeric types (various width integers
  and floating point).

* Fri Jul 12 2019 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.35.1-20191118
- Added sys.deltas ("schema" string, "table" string, "column" string)
  returns table ("values" bigint) system function which returns a single
  column with 6 values: a flag indicating if the column's upper table is
  cleared or not, the count of the RDONLY, RD_INS and RD_UPD_ID deltas
  of the column itself, the number of deleted values of the column's
  table, as well as the level of the current transaction in the
  transaction level tree. It should be used for debugging purposes only.

* Mon May  6 2019 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.35.1-20191118
- Added "VALUES row_list" statement as a top SQL projection statement.

* Mon Feb 18 2019 Aris Koning <aris.koning@monetdbsolutions.com> - 11.35.1-20191118
- The implementation of in-expression now follows a join-based approach
  instead of using iterative union/selects. This greatly improves
  performance for large in-value-lists. Furthermore the old approach has
  large in-value-lists generate large MAL plans. This is now no longer
  the case.

* Wed Sep 25 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.35.1-20191118
- Strings are now limited to 1GB, double-quoted tokens are limited to 2kB.
  These sizes are bytes of (UTF-8 encoded) input data.

* Tue Aug 20 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.33.9-20190820
- Many fixes for using the server in a highly concurrent setting with
  many clients doing read-only queries mixed with clients doing updating
  queries.

* Fri Jun  7 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.33.5-20190801
- Changed the internal representation of RANGE MINVALUE and RANGE MAXVALUE
  in MERGE TABLE partitions.  Before, the limits were represented by
  the smallest and largest value of the domain of the column, now these
  are represented by a NULL value.  This has the added benefit that if
  you use TO RANGE MAXVALUE, the largest value of the domain is included
  in the partition (before it wasn't).  Also, these new limits now work
  for any ordered type, so including VARCHAR.

* Mon Jan 28 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Implemented two-argument least/greatest functions.  If one argument
  is NULL, the functions return the other value, otherwise they return
  the least/greatest of the two arguments.

* Thu Jan 24 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Implemented SQL2003 natural logarithm function: ln(num_expr).

* Wed Jan 23 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Function octet_length now also accepts a BLOB argument and returns
  the length of the BLOB (i.e. the same as length when called with a
  BLOB argument).

* Tue Jan 22 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Implemented length(blob) and comparison between blobs.
- Implemented a two argument function log which calculates the logarithm
  of the first argument using the second argument as base.
- Next to the functions log (natural logarithm) and log10 (base 10
  logarithm), there is now also log2 (base 2 logarithm).

* Fri Jan 18 2019 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Removed unused global SQL variable "history".

* Thu Dec 20 2018 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.33.1-20190405
- Allow usage of custom expressions in GROUP BY and PARTITION BY
  clauses. The same expressions can be used in the projection phase as
  long as it is exactly the same used in the grouping clause (textual
  lookup is performed). As an example the query:
  SELECT col1*2 FROM t1 GROUP BY col1*2; is correct, while
  SELECT sin(col1+5) FROM t1 GROUP BY col1*2; is wrong.
- Allow usage of WITH clauses in insert, update, delete and merge
  statements.

* Mon Dec 17 2018 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.33.1-20190405
- Implemented merge statements from SQL:2003 standard. Using a source
  relation R, a target table T is updating depending on the result of
  the merge. In case of a match, the table T's row is either updated
  or deleted with R's row. In a non-match case, R's row is inserted
  into T. The grammar is the follows:
  > MERGE INTO target [ [AS] ident ] USING source ON search_condition
  { WHEN MATCHED [ AND search_condition ] THEN
    { UPDATE SET assignment_list | DELETE } } |
  { WHEN NOT MATCHED [ AND search_condition ] THEN
    INSERT [ column_list ] [ { DEFAULT VALUES | VALUES row_values } ] }
- Added possibility to change the schema of a table with the syntax:
  > ALTER TABLE [ IF EXISTS ] qname SET SCHEMA ident
- Added optional alias option for target table in update and delete
  statements: (e.g. UPDATE target AS alias SET col1=1 WHERE alias.col2 < 5)

* Thu Nov 29 2018 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.33.1-20190405
- Improved and extended storagemodel functionality. Changes include:
- Added views sys."tablestorage" and sys."schemastorage" for easy and
  quick assesment of aggregated storage usage per table or per schema.
- Excluded listing system tables in views sys."storage", sys."tablestorage"
  and sys."schemastorage". You can still use sys."storage"() to query
  storage of system tables and columns.
- In procedure sys.storagemodelinit() when populating table
  sys.storagemodelinput it now excludes system tables as system tables are
  not useful to be modeled for storagesize by application users.
  It now also computes and populates the atomwidth column more correctly
  for variable size data types (strings, blobs) when the table has
  representative data in those columns.
- System function sys.columnsize() has been corrected for types: tinyint,
  real, date, time, timetz, sec_interval, month_interval, decimal, uuid,
  mbr, char, clob, json, url, blob, geometry and geometrya.
  For variable size data types (varchar, char, clob, json, url, blob,
  geometry, geometrya) it now returns the columnsize excluding the
  variable heapsize. The heapsize is retrievable via sys.heapsize().
- System function sys.heapsize() has been corrected for all variable size
  data types: varchar, char, clob, json, url, blob, geometry and geometrya.
- System function sys.imprintsize() has been corrected. The imprintsize
  depends on the width (1 or 2 or 4 or 8 or 16 bytes) of the data type.
  Also instead of 12% it now uses 20%, which is a better estimate.
- System function sys.storagemodel() has been removed as it outputs the
  same data as view sys.storagemodel. Use view sys.storagemodel instead.
- Corrected views sys.storagemodel and sys.tablestoragemodel by returning
  a computed orderidxsize when the count has been changed in the
  sys.storagemodelinput table.  Also the views now return data ordered
  by schema, table and column names.
- Extended view sys.tablestoragemodel with column: "storages". Besides
  columns also keys (primary, foreign and unique keys) and indexes
  (ordered, imprints) use storage, so the "storages" count can be higher
  than the number of columns per table.
- Corrected the data type of columns "schema", "table", "column", "type",
  "mode" and location in table sys.storagemodelinput and functions
  sys."storage"(), sys."storage"(sname), sys."storage"(sname, tname)
  and sys."storage"(sname, tname, cname) from string into varchar(1024).
  Consequently also the views based on the table or functions will be
  reporting varchar(1024) as column meta data instead of clob for those
  columns.  This allows faster querying and reporting by generic SQL
  programs which treat clob querying different from varchar columns.

* Mon Nov 26 2018 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.33.1-20190405
- Extended windowing functions catalog with SQL standard semantics.
  Standard aggregation functions can now be used in windowing
  functions: (avg,max,min,sum,prod,count). Other windowing specific
  functions were also implemented: (percent_rank,cume_dist,ntile,
  lag,lead,first_value,last_value,nth_value).
- The standard frame specification was implemented for aggregation
  functions as well as first_value, last_value and nth_value
  functions. The available frames are rows, range and groups.
  Bounds can be unbounded (partition limit), the current row, a fixed
  number of rows (constant), or variable (column as input).
  (e.g SELECT COUNT(col1) OVER (PARTITION BY col2 ORDER BY col3 RANGE
  BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t1;).
- Added WINDOW keyword which is optionally provided after the FROM
  clause, with window specifications used in the projection
  (e.g SELECT SUM(col1) OVER w1, LAST_VALUE(col2) OVER w2 FROM t1
  WINDOW w1 AS (ROWS BETWEEN 5 PRECEDING AND 0 FOLLOWING),
  w2 AS (w1);).
- Our previous partitioning implementation didn’t impose order in the
  input. With this reexamination, partitioning now imposes ascending
  order by default, thus pairing with the industry standard
  implementation.

* Fri Nov 23 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Implemented X'...' style binary string literals.
- Implemented U&'...' Unicode character string literals and
  U&"..." Unicode delimited identifiers, including UESCAPE.  For the
  string literals, you can have U&'...' '...' '...' UESCAPE '...' where
  the escape must be as single character and the other '...' strings
  are also Unicode character string literals.  For now, these latter
  strings also undergo C-style backslash interpretation.
- Implemented PostgreSQL-like E'...' strings.  The strings can contain
  C-style backslash escapes.  The old format strings '...' currently
  still also accept C-style escapes, but that feature will be removed
  in a future release.

* Thu Nov  8 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Implemented the NULLS FIRST and NULLS LAST option to ORDER BY.  The
  default is NULLS FIRST for ASC(ending) and NULLS LAST for DESC(ending).

* Thu Oct 18 2018 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.33.1-20190405
- Added possibility to rename SQL schemas, tables and columns with ALTER
  statements:
  > ALTER SCHEMA [ IF EXISTS ] ident RENAME TO ident
  > ALTER TABLE [ IF EXISTS ] qname RENAME TO ident
  > ALTER TABLE [ IF EXISTS ] qname RENAME [ COLUMN ] ident TO ident
  Also added optional IF EXISTS clause to other existing ALTER TABLE
  statements.

* Tue Oct  9 2018 Aris Koning <aris.koning@monetdbsolutions.com> - 11.33.1-20190405
- The sql SAMPLE syntax is extended to include an optional integral SEED
  parameter that sets the seed for the internal random number generator
  in the sample algorithm.  When the seed is set, the user can obtain
  a reproducible sample set from a static dataset with the same sample
  query. The new syntax is
  SELECT ... FROM ... WHERE ... SAMPLE <expr> [SEED <integer>]

* Tue Sep 25 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- Implemented a version of COPY INTO that reads/writes files from/to
  the client instead of doing it in the server.  This has the
  advantage that COPY INTO is then no longer restricted to only the
  "super user" monetdb, nor only to absolute file names.  The syntax
  to have the server communicate with the client for file content is
  COPY INTO table FROM file ON CLIENT ...; and COPY query INTO file ON
  CLIENT ...;.  This also works for COPY BINARY INTO.  There is also
  the possibility to specify that files are to be read/written by the
  server by using ON SERVER.  This is also the default when ON CLIENT
  or ON SERVER is not specified.

* Fri Aug 10 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.33.1-20190405
- The sys.functions table now has an extra column called "system" of
  type BOOLEAN whose value is TRUE for system functions (i.e. functions
  that should not be dumped).  The table sys.systemfunctions has been
  changed to a view and is now officially deprecated.

* Fri Aug  3 2018 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.33.1-20190405
- Extended merge tables with partitioning using a predicate:
  > CREATE MERGE TABLE [ IF NOT EXISTS ] table_name (... columns ...)
  [ PARTITION BY { RANGE | VALUES }
  { ON '(' column_name ')' | USING '(' expression ')' } ]
  The partitioning can occur by range or list of values using one of
  the table's columns or an expression. The domain of the partitioning
  scheme will be covered by each child table added with alter statements
  depending if the table is partitioned by range or list of values:
  > ALTER TABLE merge_table_name { ADD | SET } TABLE child_table_name
  AS PARTITION IN '(' expression [ ',' ... ] ')' [ WITH NULL ]
  > ALTER TABLE merge_table_name { ADD | SET } TABLE child_table_name
  AS PARTITION BETWEEN { RANGE MINVALUE | expression } AND
  { RANGE MAXVALUE | expression } [ WITH NULL ]
  > ALTER TABLE merge_table_name { ADD | SET } TABLE child_table_name
  AS PARTITION WITH NULL
  When updating a single partition range/list of values, the SET
  keyword should be used instead of ADD.
  INSERT, UPDATE and DELETE statements are possible on partitioned
  tables with corresponding validation on each partition domain.
  The system tables sys.table_partitions, sys.range_partitions and
  sys.value_partitions were added to store meta-information about
  each existing partition.

* Tue Oct 30 2018 Sjoerd Mullender <sjoerd@acm.org> - 11.31.13-20190104
- Disabled function sys.getcontent(url).

* Thu Jun  7 2018 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.31.1-20180815
- Removed deprecated table producing system functions:
  sys.dependencies_columns_on_functions()
  sys.dependencies_columns_on_indexes()
  sys.dependencies_columns_on_keys()
  sys.dependencies_columns_on_triggers()
  sys.dependencies_columns_on_views()
  sys.dependencies_functions_on_functions()
  sys.dependencies_functions_on_triggers()
  sys.dependencies_keys_on_foreignkeys()
  sys.dependencies_owners_on_schemas()
  sys.dependencies_schemas_on_users()
  sys.dependencies_tables_on_foreignkeys()
  sys.dependencies_tables_on_functions()
  sys.dependencies_tables_on_indexes()
  sys.dependencies_tables_on_triggers()
  sys.dependencies_tables_on_views()
  sys.dependencies_views_on_functions()
  sys.dependencies_views_on_triggers()
  They are replaced by new system dependency_* views:
  sys.dependency_args_on_types
  sys.dependency_columns_on_functions
  sys.dependency_columns_on_indexes
  sys.dependency_columns_on_keys
  sys.dependency_columns_on_procedures
  sys.dependency_columns_on_triggers
  sys.dependency_columns_on_types
  sys.dependency_columns_on_views
  sys.dependency_functions_on_functions
  sys.dependency_functions_on_procedures
  sys.dependency_functions_on_triggers
  sys.dependency_functions_on_types
  sys.dependency_functions_on_views
  sys.dependency_keys_on_foreignkeys
  sys.dependency_owners_on_schemas
  sys.dependency_schemas_on_users
  sys.dependency_tables_on_foreignkeys
  sys.dependency_tables_on_functions
  sys.dependency_tables_on_indexes
  sys.dependency_tables_on_procedures
  sys.dependency_tables_on_triggers
  sys.dependency_tables_on_views
  sys.dependency_views_on_functions
  sys.dependency_views_on_procedures
  sys.dependency_views_on_views

* Tue Mar 13 2018 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.31.1-20180815
- Implemented group_concat(X,Y) aggregate function which also
  concatenates a column of strings X, but using a supplied string Y as
  the separator. This function is also a SQL extension.

* Fri Mar  9 2018 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.31.1-20180815
- Implemented group_concat(X) aggregate function which concatenates a
  column of strings using a comma as a separator. This function is not
  featured in the SQL standard.

* Thu May 17 2018 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.29.5-20180525
- Corrected the definition of view: sys.ids.

* Tue Nov 28 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.29.3-20180327
- Extended support to use CREATE ORDERED INDEX on columns of type: char,
  varchar, clob, blob, url, json, inet and uuid.

* Thu Feb  1 2018 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.29.1-20180315
- Added new system view: sys.ids which contains all database objects
  ids which can be used in sys.dependencies table.
- Added new system view: sys.dependencies_vw which shows all data of
  sys.dependencies including names on objects, object types and dependency types.
- Added 25 new system views for finding out dependencies between database objects.
  These new dependency views improve, extend and replace the 17
  sys.dependencies_X_on_Y() functions as previously defined in
  21_dependency_functions.sql. Those sys.dependencies_X_on_Y() functions
  are now marked as deprecated.
- Added new system view: sys.roles which contains all defined roles.
- Added new system view: sys.var_values which shows the values for
  system variables.

* Fri Jan 12 2018 Joeri van Ruth <joeri.van.ruth@monetdbsolutions.com> - 11.29.1-20180315
- Added support for COMMENT ON statements using SQL syntax:
   COMMENT ON { SCHEMA | TABLE | VIEW | COLUMN | INDEX | SEQUENCE |
              FUNCTION | PROCEDURE | AGGREGATE | FILTER FUNCTION | LOADER }
        qname IS { 'my description text' | NULL | '' } ;
  For COLUMN the qname can be "table_name"."column_name" or fully qualified
  as in: "schema_name"."table_name"."column_name".
  For FUNCTION, PROCEDURE, AGGREGATE, FILTER FUNCTION and LOADER the qname
  may need to include the signature (argument types) to be able to
  differentiate between multiple overloaded functions which have the same name
  and schema.
  By specifying IS NULL or IS '' you remove the comment for the database object.
  If a database object is dropped, the associated comment is also removed.
  Note: it is not allowed or possible to add comments for temporary tables or
        objects in schema "tmp".
  The sql catalog has been extended with system table: sys.comments.
  The keyword 'COMMENT' has now become a reserved keyword.

* Thu Dec  7 2017 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.29.1-20180315
- Removed system function sys.environment(). It was a duplicate of system
  function sys.env().

* Thu Nov  9 2017 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.29.1-20180315
- Implemented behavior for DROP SCHEMA my_schema RESTRICT command.
  Previously the RESTRICT keyword was accepted but not obeyed. It would
  always do a CASCADE operation.  Also the default behavior of DROP SCHEMA
  my_schema command is now changed into RESTRICT behavior (was CASCADE).

* Tue Nov  7 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.29.1-20180315
- The internal NULL representation of the REAL (FLOAT) and DOUBLE
  types was changed from the smallest representable finite value to NaN
  (not-a-number).

* Wed Aug 30 2017 Pedro Ferreira <pedro.ferreira@monetdbsolutions.com> - 11.29.1-20180315
- A column default value can be used in a UPDATE statement: UPDATE tname
  SET cname = DEFAULT, and INSERT statements: INSERT INTO tname VALUES
  (..., DEFAULT, ...)
- Added support for TRUNCATE statements conforming to the SQL:2008 standard:
   TRUNCATE [ TABLE ] qname [ CONTINUE IDENTITY | RESTART IDENTITY ]
            [ RESTRICT | CASCADE ]
  In a TRUNCATE statement a 'CONTINUE IDENTITY' or 'RESTART IDENTITY'
  clause can be passed to restart or not, being the former the default one.
  The 'CASCADE' option instructs to truncate referencing table(s) also if
  the referencing table(s) have foreign key references to this table.
  The default behavior is 'RESTRICT'.
  Note: it is possible to use TRUNCATE statements in a transaction and
  thus to rollback the effects of a truncate.
  The keywords 'TRUNCATE' and 'CONTINUE' have now become reserved keywords.
- Added possibility to GRANT or REVOKE a TRUNCATE privilege to a user or role.
- Added possibility to define a TRIGGER on a TRUNCATE event.
- Added possibility to specify 'OR REPLACE' in following CREATE commands:
   CREATE [ OR REPLACE ] VIEW qname ...
   CREATE [ OR REPLACE ] TRIGGER qname ...
- Added possibility to specify 'IF EXIST' in following DROP commands:
   DROP AGGREGATE [ IF EXISTS ] qname ...
   DROP FUNCTION [ IF EXISTS ] qname ...
   DROP FILTER FUNCTION [ IF EXISTS ] qname ...
   DROP LOADER [ IF EXISTS ] qname ...
   DROP PROCEDURE [ IF EXISTS ] qname ...
   DROP TRIGGER [ IF EXISTS ] qname ...

* Tue Aug  1 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.29.1-20180315
- Lots of changes to streamline the internal error handling.
  In principle, all errors should now include a SQLSTATE error code
  (see the SQL standard).

* Thu Jul 20 2017 Martin van Dinther <martin.van.dinther@monetdbsolutions.com> - 11.29.1-20180315
- Added support for extracting the quarter (number between 1 and 4)
  of a date or a timestamp or a timestamp with timezone in SQL:
   EXTRACT ( QUARTER FROM my_date_expr ).
  Added support for extracting the week (number between 1 and 53)
  of a date or a timestamp or a timestamp with timezone in SQL:
   EXTRACT ( WEEK FROM my_date_expr ).
  Added support for scalar functions: quarter(date_expr),
  quarter(timestamp_expr) and quarter(timestamptz_expr).

* Thu Mar  2 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- Made the operator precedence of % equal to those of * and /.  All three
  are evaluated from left to right.

* Mon Feb  6 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.27.1-20170705
- Removed table sys.connections.  It was a remnant of an experimental
  change that had already been removed in 2012.

* Tue Nov  8 2016 Martin Kersten <mk@cwi.nl> - 11.27.1-20170705
- Protect against runaway profiler events If you hit a barrier block
  during profiling, the JSON event log may quickly become unwieldy. Event
  production is protected using a high water mark, which ensures that
  never within the single execution of MAL block the instruction causes
  excessive event records.

* Tue Apr 18 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.25.19-20170418
- Some memory leaks were plugged.

* Tue Apr 11 2017 Sjoerd Mullender <sjoerd@acm.org> - 11.25.17-20170411
- Upgrade code was added for an old change in the sys.settimeout function.
- A bug was fixed with the automatic "vacuum" operation on system tables.

* Wed Aug  3 2016 Sjoerd Mullender <sjoerd@acm.org> - 11.25.1-20161214
- Removed functions sys.zorder_encode, sys.zorder_decode_x, and
  sys.zorder_decode_y.

* Mon Jul 18 2016 Martin Kersten <mk@cwi.nl> - 11.25.1-20161214
- The experimental recycler code is moved to the attic.

* Wed Jul  6 2016 Martin Kersten <mk@cwi.nl> - 11.25.1-20161214
- The syntax of bat.new(:oid,:any) has been changed by dropping the
  superflous :oid.  All BATs are now binary associations between a void
  column and a materialized value column.  (except for the internal
  :bat[:void,:void] representation of simple oid ranged tails.)

* Mon Oct 19 2015 Jennie Zhang <y.zhang@cwi.nl> - 11.23.1-20160601
- Disallow GRANT <some-user> TO <role-or-use>.  Only explicitly
  created roles can be granted.

* Sun Oct 18 2015 Jennie Zhang <y.zhang@cwi.nl> - 11.23.1-20160601
- Extended grantable schema privileges: when a user is granted the
  "sysadmin" role, the user now hcan not only create schemas, but
  also drop schemas.
- Introduced COPY INTO/ COPY FROM global privileges. These privileges
  allows other users than 'monetdb' to be granted the privileges
  to use the MonetDB bulk data loading/exporting features, i.e.,
  COPY FROM <file> and COPY INTO <file>.

* Tue Aug 18 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.21.3-20150818
- Differences between time, timestamp, and date values now return properly
  typed interval types (second or month intervals) instead of integers.

* Tue Jul 28 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.21.1-20150807
- Added support for 128-bit integers (called HUGEINT) on platforms that
  support this.

* Wed Feb 18 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.21.1-20150807
- Removed support for the mseed library.

* Tue Feb 17 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.21.1-20150807
- Removed support for RDF.
- Removed DataCell.  It was experimental code that was never enabled.

* Mon Jan 19 2015 Sjoerd Mullender <sjoerd@acm.org> - 11.19.9-20150123
- Fixed a typo in a column name of the sys.tablestoragemodel view
  (auxillary changed to auxiliary).

* Thu Nov 20 2014 Sjoerd Mullender <sjoerd@acm.org> - 11.19.5-20141120
- Fixed sys.queue() implementation to report on other queries being
  executed.

* Fri Nov 14 2014 Sjoerd Mullender <sjoerd@acm.org> - 11.19.5-20141120
- A number of bugs were fixed in the code to upgrade a database from
  previous releases.  This version should fix the upgrade of a database
  that had been upgraded to the Oct2014 release, but also properly
  upgrade directly from Jan2014 and Feb2013 releases.

* Wed Apr  9 2014 Jennie Zhang <y.zhang@cwi.nl> - 11.19.1-20141024
- Added PostgreSQL compatible string TRIM, LTRIM, RTRIM, LPAD and RPAD
  functions

* Fri Dec 13 2013 Sjoerd Mullender <sjoerd@acm.org> - 11.19.1-20141024
- Stop support for upgrading directly from a database created with a
  server from the Oct2012 release or older.  You can upgrade via the
  Feb2013 or Jan2014 release.

* Tue Nov 19 2013 Sjoerd Mullender <sjoerd@acm.org> - 11.15.19-20131120
- Fixed a bug where the server at some point stopped saving compiled
  queries in the SQL query cache.

* Sat Apr 13 2013 Niels Nes <niels@cwi.nl> - 11.15.7-20130426
- Added TEMPORARY to the non-reserved keywords, ie no need for double
  quotes when used as identifier.

* Wed Nov 21 2012 Fabian Groffen <fabian@monetdb.org> - 11.13.7-20121212
- Fixed crash when performing an INSERT on a table with string-like column
  defaulting to NULL and omitting that column from VALUES, bug #3168

* Fri Jun 29 2012 Fabian Groffen <fabian@cwi.nl> - 11.11.1-20120706
- COPY INTO now accepts optional parenthesis for file argument.
  Binary COPY INTO now requires 'COPY BINARY INTO'.

* Tue May 15 2012 Sjoerd Mullender <sjoerd@acm.org> - 11.9.5-20120516
- Databases that were upgraded from the Aug2011 release have an error
  in the catalog for SQL procedures.  This is now fixed.

* Fri Feb 17 2012 Sjoerd Mullender <sjoerd@acm.org> - 11.7.7-20120224
- Fixed a crash that happened at the end of a database upgrade to the
  Dec2011 database scheme.  The crash happened during cleanup after the
  database was upgraded, so it was merely inconvenient.

* Wed Feb 15 2012 Sjoerd Mullender <sjoerd@acm.org> - 11.7.7-20120224
- Stripped off implementation-specific parts from error messages before
  they get presented to the user.

* Thu Nov  3 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.7.1-20120111
- mclient: The csv output format can now also be of the form csv=c and
  csv+c where c is the column separator.  The form with csv+ produces
  a single header line with column names.

* Wed Nov  2 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.7.1-20120111
- Changed a bug where the sign() function returned the same type as its
  argument instead of always an INTEGER.

* Wed Oct 26 2011 Fabian Groffen <fabian@cwi.nl> - 11.5.9-20111115
- Added a fix for bug #2834, which caused weird (failing) behaviour
  with PreparedStatements.

* Wed Sep 21 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.5.3-20110925
- Fixed a bug when using default values for interval columns.  Bug 2877.

* Fri Sep 16 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.5.3-20110925
- A bug was fixed where deleted rows weren't properly accounted for in
  all operations.  This was bug 2882.
- A bug was fixed which caused an update to an internal table to
  happen too soon.  The bug could be observed on a multicore system
  with a query INSERT INTO t (SELECT * FROM t) when the table t is
  "large enough".  This was bug 2883.

* Tue Jul 19 2011 Fabian Groffen <fabian@cwi.nl> - 11.3.5-20110720
- Fixed regression where the superuser password could no longer be
  changed, bug #2844

* Wed Jun 29 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.3.5-20110720
- Fixed incorrect insert counts.
- Fixed bug 2823: MAL exeption on SQL query with subquery in the where
  part.
- Redirect error from create scripts back to the first client.  This
  fixes bug 2813.
- Added joinidx based semijoin; push join through union (using
  joinidx).
- Fixed pushing select down.

* Thu Apr 14 2011 Sjoerd Mullender <sjoerd@acm.org> - 11.3.1-20110414
- Some names in the SQL catalog were changed.  This means that the
  database in the Apr2011 release is not compatible with pre-Apr2011
  databases.  The database is converted automatically when opened the
  first time.  This database can then no longer be read by an older
  release.

* Mon Jan 24 2011 Fabian Groffen <fabian@cwi.nl> - 11.1.1-20110317
- Fix bug #2648, do not allow restarting a sequence with NULL via the
  result of a sub-query.

* Wed Dec 15 2010 Niels Nes <niels@cwi.nl> - 11.1.1-20110317
- Allow clients to release prepared handles using Xrelease commands

* Mon Dec 13 2010 Fabian Groffen <fabian@cwi.nl> - 2.40.3-20101215
- Security related fixes to the COPY INTO commands: 1) binary COPY INTO
  is disallowed for non-administrator users, 2) COPY INTO using a path
  both for reading and writing is disallowed for non-administrator users,
  3) paths used with COPY INTO may not be relative, and 4) COPY INTO a
  file may only be writing to a non-existing file

* Mon Oct 18 2010 Sjoerd Mullender <sjoerd@acm.org> - 2.40.1-20101029
- Fixed bug 2695: crash when starting mserver in readonly mode on a
  new database.

* Wed Sep 22 2010 Fabian Groffen <fabian@cwi.nl> - 2.40.1-20101029
- Improved uuid detection, to solve problems like bug #2675

* Wed Jun 23 2010 Niels Nes <niels@cwi.nl> - 2.40.1-20101029
- make it possible to use '?' in offset and limit

* Fri Sep 17 2010 Sjoerd Mullender <sjoerd@acm.org> - 2.40.1-20101029
- Fixed a bug where the server silently ignored the last record in a
  COPY INTO if it was incomplete (e.g. missing a quote).

* Mon Aug 30 2010 Sjoerd Mullender <sjoerd@acm.org> - 2.40.1-20101029
- Fixed a crash of the server when an extremely complex query is
  attempted.  This is the latest incarnation of bug 104.

* Fri Aug 20 2010 Sjoerd Mullender <sjoerd@acm.org> - 2.38.5-20100823
- Fixed a case where the optimizer incorrectly removed an expression.
  This fixes bug 2602.
- Fix a crash in prepared statements when a parameter is on the left-hand
  side of a binary operator.  This fixes bug 2599.
- Fixed reporting of a violated foreign key constraint.  This fixes
  bug 2598.
- Certain schema altering queries didn't report success, even though
  they did succeed.  This fixes bug 2589.
- Fixed a crash when a non-existing table was used in an IN clause.
  Fixes bug 2604.
- Fixed bug 2633.  Adding a LIMIT clause could, in certain conditions,
  cause a crash.

* Thu Aug 19 2010 Sjoerd Mullender <sjoerd@acm.org> - 2.38.5-20100823
- A bug was fixed where updates were missing in large transaction.
  This fixes bug 2543.
- A memory leak was fixed which caused the server to grow when loading
  and emptying a table.  This was bug 2539.

* Fri Aug 13 2010 Niels Nes <niels@cwi.nl> - 2.38.5-20100823
- Fixed bug 2643 added more defensive code, when an aggregation function
  doesn't exist
- Fixed bug 2651 properly handle dead code elimination with
  op_semi/op_anti and references

* Thu Aug 12 2010 Niels Nes <niels@cwi.nl> - 2.38.5-20100823
- Fixed bug 2652. Correctly list all columns of a 'IN' query with 'EXCEPT'
- Fixed bug 2353. The relational optimizer didn't handle range join
  expressions properly.
- fixed bug 2354. Improved function resolution.

* Mon Aug  9 2010 Jennie Zhang <y.zhang@cwi.nl> - 2.38.5-20100823
- Fixed bug 2645: mat.pack+algebra.slice should be replaced by mat.slice
  for 'limit 1' (when the default_pipe is used)

* Fri Aug  6 2010 Fabian Groffen <fabian@cwi.nl> - 2.38.5-20100823
- Fixed bug #2641,  The SQL server now handles Unicode BOM sequences
  occurring in any place.  Previously an "unexpected character (U+FEFF)"
  error would be returned.

* Fri Jul 30 2010 Niels Nes <niels@cwi.nl> - 2.38.5-20100823
- Fix Bug 2611. Fixed check for multiple functions without parameters.
- Fixed bug 2569 (except/union/intersect right after
  insert/delete/update. We now correctly fallback to the more general
  subquery case (not only simple selects (SQL_SELECT)).

* Thu Jul 29 2010 Niels Nes <niels@cwi.nl> - 2.38.5-20100823
- Fixed ORDER BY over UNION etc. (bug 2606) by
  automatically adding select * around select x union select y order by z.

* Thu Jul 29 2010 Niels Nes <niels@cwi.nl> - 2.38.5-20100823
- Fixed bug in handling 'WITH' and row_number()  (Bug 2631).
  The cardinality of the row_number expression was incorrect.

* Tue Jul 20 2010 Sjoerd Mullender <sjoerd@acm.org> - 2.38.5-20100823
- Fixed bug 2624: function returning decimal returned result that was
  scaled incorrectly.

* Sun Jul 18 2010 Stefan Manegold <Stefan.Manegold@cwi.nl> - 2.38.5-20100823
- fixed bug 2622 "LIMIT & OFFSET ignored on 64-bit big-endian when
  combined with GROUP BY"

* Mon Jul 12 2010 Stefan Manegold <Stefan.Manegold@cwi.nl> - 2.38.3-20100712
- Make queries like (SELECT ...) UNION ALL (SELECT ...) ORDER BY ...;
  work, again, that were broken since Jun 22 2010 triggering errors
  like "ORDER BY: missing select operator"

* Fri Jul  9 2010 Fabian Groffen <fabian@cwi.nl> - 2.38.3-20100712
- Removed false connection warning about missing SQL script ("could
  not read createdb.sql") received by the client upon first connect on
  a newly created database.  Bug #2591

* Thu Jul  8 2010 Fabian Groffen <fabian@cwi.nl> - 2.38.3-20100709
- Improved error message for certain type-related problems by
  including the affected column name.

* Wed Jul  7 2010 Fabian Groffen <fabian@cwi.nl> - 2.38.3-20100709
- Make TEXT a separate keyword, separating it from CLOB, such that we
  can sloppily allow TEXT to appear as a column name, since it seems
  not to be in the standard as reserved keyword.

* Wed Jul  7 2010 Niels Nes <niels@cwi.nl> - 2.38.3-20100709
- Fixed bug 2581. Completed the implementation of handling Boolean
  types in prepare statements.
- Fix bug 2582. Statements with 'constant in ( )' are now handled
  properly.
- Fixed bug 2583 + added test. The assert was incorrect.

* Mon Jul  5 2010 Niels Nes <niels@cwi.nl> - 2.38.3-20100706
- Fixed bug in zero_or_one
- Fixed bug in dead code elimination for projections with distinct
- Fixed bug handling join with constant values on both sides (like
  group results and constants)
- fixed bug in UPDATE TABLE when updating multiple rows

* Wed Jun 30 2010 Stefan Manegold <Stefan.Manegold@cwi.nl> - 2.38.3-20100706
- fixed bug 2564: in case group by column is not found as alias in
  projection list, fall back to check plain input columns in order to
  find the underlying BAT and check its sortedness

* Thu Jun 24 2010 Niels Nes <niels@cwi.nl> - 2.38.1-20100625
- make it possible to use '?' in offset and limit

* Fri Jun 18 2010 Sjoerd Mullender <sjoerd@acm.org> - 2.38.1-20100622
- Added include and .lib files to Windows installers that are needed
  to compile client programs.

* Mon May 31 2010 Sjoerd Mullender <sjoerd@acm.org> - 2.38.1-20100618
- Updated Vendor information.

* Tue May 11 2010 Fabian Groffen <fabian@cwi.nl>
- Prepared statement and function calls now report which argument is
  of the wrong type, bug #2533.

* Sun Apr 25 2010 Niels Nes <niels@cwi.nl>
- Fixed a bug when loading data from CSV files when separators occur
  in quoted fields.  (SourceForge bug #2991400).

* Tue Apr 20 2010 Stefan Manegold <manegold@cwi.nl> - 2.38.1-20100618
- Made compilation of "testing" (and "java") independent of MonetDB.
  This is mainly for Windows, but also on other systems, "testing" can
  now be built independently of (and hence before) "MonetDB".  Files
  that mimic configure functionality on Windows were moved from
  "MonetDB" to "buildtools"; hence, this affects all packages on
  Windows, requiring a complete rebuild from scratch on Windows.
  getopt() support in testing has changed; hence, (most probably)
  requiring a rebuild from scratch of testing on other systems.

* Tue Apr 20 2010 Stefan Manegold <manegold@cwi.nl> - 2.38.1-20100618
- Implemented build directory support for Windows, i.e., like on
  Unix/Linux also on Windows we can now build in a separate build
  directory as alternative to ...\<package>\NT, and thus keep the latter
  clean from files generated during the build.  On Windows, the build
  directory must be a sibling of ...\<package>\NT .

* Thu Apr  8 2010 Stefan Manegold <manegold@cwi.nl> - 2.36.5-20100420
- fixed bug #2983773 "SQL: minimal optimizer pipe unstable"

