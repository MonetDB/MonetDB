stdout of test 'MapiClient-dump.SF-905851` in directory 'sql/test/BugDay_2005-10-06_2.8` itself:


# 16:00:07 >  
# 16:00:07 >   mserver5 "--config=/ufs/niels/scratch/monetdb/Linux-x86_64-gcc/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/niels/scratch/monetdb/Linux-x86_64-gcc/lib/MonetDB5:/ufs/niels/scratch/monetdb/Linux-x86_64-gcc/lib/MonetDB5/lib:/ufs/niels/scratch/monetdb/Linux-x86_64-gcc/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/monetdb/Linux-x86_64-gcc/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/niels/scratch/monetdb/Linux-x86_64-gcc/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=35465 --set xrpc_port=40937 --set monet_prompt= --trace  "--dbname=mTests_src_test_BugDay_2005-10-06_2.8" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 16:00:07 >  

# MonetDB server v5.5.0, based on kernel v1.23.0
# Serving database 'mTests_src_test_BugDay_2005-10-06_2.8'
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-2008 CWI, all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://koala.ins.cwi.nl:35465/
# MonetDB/SQL module v2.23.0 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 16:44:38 >  
# 16:44:38 >  /usr/bin/python MapiClient-dump.SF-905851.SQL.py MapiClient-dump.SF-905851 
# 16:44:38 >  

#START TRANSACTION;
#CREATE TABLE allnewtriples (
#	id integer NOT NULL,
#	subject integer NOT NULL,
#	predicate integer NOT NULL,
#	object integer NOT NULL,
#	explicit boolean NOT NULL,
#	PRIMARY KEY(id),
#	CONSTRAINT unique_key UNIQUE(subject, predicate, object)
#);
#CREATE INDEX allnewtriples_subject_idx ON allnewtriples (subject);
#CREATE INDEX allnewtriples_predicate_idx ON allnewtriples (predicate);
#CREATE INDEX allnewtriples_object_idx ON allnewtriples (object);
#CREATE TABLE "foreign" (
#	id integer NOT NULL,
#	subject integer NOT NULL,
#	predicate integer NOT NULL,
#	object integer NOT NULL,
#	FOREIGN KEY (id) REFERENCES allnewtriples (id),
#	FOREIGN KEY (subject, predicate, object) REFERENCES allnewtriples (subject, predicate, object)
#);
#CREATE TABLE "triples" (
#	"id"        int NOT NULL,
#	"subject"   int NOT NULL,
#	"predicate" int NOT NULL,
#	"object"    int NOT NULL,
#	"explicit"  boolean     NOT NULL,
#	CONSTRAINT "triples_subject_predicate_object_unique" UNIQUE ("subject", "predicate", "object")
#);
#CREATE INDEX "triples_object_idx" ON "triples" ("object");
#CREATE INDEX "triples_predicate_idx" ON "triples" ("predicate");
#CREATE INDEX "triples_predicate_object_idx" ON "triples" ("predicate", "object");
#CREATE INDEX "triples_subject_idx" ON "triples" ("subject");
#CREATE INDEX "triples_subject_object_idx" ON "triples" ("subject", "object");
#CREATE INDEX "triples_subject_predicate_idx" ON "triples" ("subject", "predicate");
#COMMIT;
#START TRANSACTION;
#INSERT INTO allnewtriples VALUES(1, 1, 1, 1, false);
[ 1	]
#INSERT INTO allnewtriples VALUES(2, 1, 1, 2, false);
[ 1	]
#INSERT INTO allnewtriples VALUES(3, 1, 2, 1, false);
[ 1	]
#INSERT INTO allnewtriples VALUES(4, 2, 1, 1, false);
[ 1	]
#INSERT INTO allnewtriples VALUES(5, 1, 2, 2, false);
[ 1	]
#INSERT INTO allnewtriples VALUES(6, 2, 2, 1, false);
[ 1	]
#INSERT INTO allnewtriples VALUES(7, 2, 2, 2, false);
[ 1	]
#INSERT INTO "foreign" VALUES(1, 1, 1, 1);
[ 1	]
#INSERT INTO "foreign" VALUES(2, 2, 2, 2);
[ 1	]
#INSERT INTO "foreign" VALUES(3, 1, 2, 2);
[ 1	]
#INSERT INTO "foreign" VALUES(4, 2, 2, 1);
[ 1	]
[ 1	]
[ 1	]
[ 1	]
% sys.allnewtriples,	sys.allnewtriples,	sys.allnewtriples,	sys.allnewtriples,	sys.allnewtriples # table_name
% id,	subject,	predicate,	object,	explicit # name
% int,	int,	int,	int,	boolean # type
% 1,	1,	1,	1,	5 # length
[ 1,	1,	1,	1,	false	]
[ 2,	1,	1,	2,	false	]
[ 3,	1,	2,	1,	false	]
[ 4,	2,	1,	1,	false	]
[ 5,	1,	2,	2,	false	]
[ 6,	2,	2,	1,	false	]
[ 7,	2,	2,	2,	false	]
% sys.foreign,	sys.foreign,	sys.foreign,	sys.foreign # table_name
% id,	subject,	predicate,	object # name
% int,	int,	int,	int # type
% 1,	1,	1,	1 # length
[ 1,	1,	1,	1	]
[ 2,	2,	2,	2	]
[ 3,	1,	2,	2	]
[ 4,	2,	2,	1	]
[ 5,	2,	1,	1	]
[ 6,	1,	2,	1	]
[ 7,	1,	1,	2	]

# 14:58:14 >  
# 14:58:14 >  Mtimeout -timeout 60 msqldump -umonetdb -Pmonetdb --host=localhost --port=33326
# 14:58:14 >  

START TRANSACTION;
SET SCHEMA "sys";
CREATE TABLE "sys"."allnewtriples" (
	"id" INTEGER NOT NULL,
	"subject" INTEGER NOT NULL,
	"predicate" INTEGER NOT NULL,
	"object" INTEGER NOT NULL,
	"explicit" BOOLEAN NOT NULL,
	CONSTRAINT "allnewtriples_id_pkey" PRIMARY KEY ("id"),
	CONSTRAINT "unique_key" UNIQUE ("subject", "predicate", "object")
);
CREATE INDEX "allnewtriples_object_idx" ON "sys"."allnewtriples" ("object");
CREATE INDEX "allnewtriples_predicate_idx" ON "sys"."allnewtriples" ("predicate");
CREATE INDEX "allnewtriples_subject_idx" ON "sys"."allnewtriples" ("subject");
COPY 7 RECORDS INTO "sys"."allnewtriples" FROM stdin USING DELIMITERS E'\t',E'\n','"';
1	1	1	1	false
2	1	1	2	false
3	1	2	1	false
4	2	1	1	false
5	1	2	2	false
6	2	2	1	false
7	2	2	2	false
CREATE TABLE "sys"."foreign" (
	"id" INTEGER NOT NULL,
	"subject" INTEGER NOT NULL,
	"predicate" INTEGER NOT NULL,
	"object" INTEGER NOT NULL
);
COPY 7 RECORDS INTO "sys"."foreign" FROM stdin USING DELIMITERS E'\t',E'\n','"';
1	1	1	1
2	2	2	2
3	1	2	2
4	2	2	1
5	2	1	1
6	1	2	1
7	1	1	2
CREATE TABLE "sys"."triples" (
	"id" INTEGER NOT NULL,
	"subject" INTEGER NOT NULL,
	"predicate" INTEGER NOT NULL,
	"object" INTEGER NOT NULL,
	"explicit" BOOLEAN NOT NULL,
	CONSTRAINT "triples_subject_predicate_object_unique" UNIQUE ("subject", "predicate", "object")
);
CREATE INDEX "triples_object_idx" ON "sys"."triples" ("object");
CREATE INDEX "triples_predicate_idx" ON "sys"."triples" ("predicate");
CREATE INDEX "triples_predicate_object_idx" ON "sys"."triples" ("predicate", "object");
CREATE INDEX "triples_subject_idx" ON "sys"."triples" ("subject");
CREATE INDEX "triples_subject_object_idx" ON "sys"."triples" ("subject", "object");
CREATE INDEX "triples_subject_predicate_idx" ON "sys"."triples" ("subject", "predicate");
ALTER TABLE "sys"."foreign" ADD CONSTRAINT "foreign_id_fkey" FOREIGN KEY ("id") REFERENCES "sys"."allnewtriples" ("id");
ALTER TABLE "sys"."foreign" ADD CONSTRAINT "foreign_subject_predicate_object_fkey" FOREIGN KEY ("subject", "predicate", "object") REFERENCES "sys"."allnewtriples" ("subject", "predicate", "object");
COMMIT;

# 15:55:38 >  
# 15:55:38 >  Done.
# 15:55:38 >  

