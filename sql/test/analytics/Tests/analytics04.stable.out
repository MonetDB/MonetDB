stdout of test 'analytics04` in directory 'sql/test/analytics` itself:


# 14:06:27 >  
# 14:06:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30029" "--set" "mapi_usock=/var/tmp/mtest-31905/.s.monetdb.30029" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-analytics/BUILD/var/MonetDB/mTests_sql_test_analytics" "--set" "embedded_c=true"
# 14:06:27 >  

# MonetDB 5 server v11.32.0
# This is an unreleased version
# Serving database 'mTests_sql_test_analytics', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.492 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2018 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://wired-142.cwi.nl:30029/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-31905/.s.monetdb.30029
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_views.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded


# 14:06:28 >  
# 14:06:28 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-31905" "--port=30029"
# 14:06:28 >  

#create table analytics (aa int, bb int, cc bigint);
#start transaction;
#insert into analytics values (15, 3, 15), (3, 1, 3), (2, 1, 2), (5, 3, 5), (NULL, 2, NULL), (3, 2, 3), (4, 1, 4), (6, 3, 6), (8, 2, 8), (NULL, 4, NULL);
[ 10	]
#select count(*) over (rows between 3 preceding and 2 preceding),
#       count(*) over (rows between 2 following and 3 following),
#       count(*) over (rows between 3 preceding and 3 preceding),
#       count(*) over (rows between 3 preceding and 9 preceding),
#       count(*) over (rows between current row and current row),
#       count(*) over (rows between 0 following and 0 following),
#       count(*) over (rows between 0 preceding and 0 preceding) from analytics;
% sys.%10,	sys.%11,	sys.%12,	sys.%13,	sys.%14,	sys.%15,	sys.%16 # table_name
% %10,	%11,	%12,	%13,	%14,	%15,	%16 # name
% bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 1,	1,	1,	1,	1,	1,	1 # length
[ 0,	2,	0,	0,	1,	1,	1	]
[ 0,	2,	0,	0,	1,	1,	1	]
[ 1,	2,	0,	0,	1,	1,	1	]
[ 2,	2,	1,	0,	1,	1,	1	]
[ 2,	2,	1,	0,	1,	1,	1	]
[ 2,	2,	1,	0,	1,	1,	1	]
[ 2,	2,	1,	0,	1,	1,	1	]
[ 2,	1,	1,	0,	1,	1,	1	]
[ 2,	0,	1,	0,	1,	1,	1	]
[ 2,	0,	1,	0,	1,	1,	1	]
#select count(aa) over (partition by bb order by bb rows between 3 preceding and 2 preceding),
#       count(aa) over (partition by bb order by bb rows between 2 following and 3 following),
#       count(aa) over (partition by bb order by bb rows between 3 preceding and 3 preceding),
#       count(aa) over (partition by bb order by bb rows between 3 preceding and 9 preceding),
#       count(aa) over (partition by bb order by bb rows between current row and current row),
#       count(aa) over (partition by bb order by bb rows between 0 following and 0 following),
% sys.%3,	sys.%6,	sys.%11,	sys.%14,	sys.%17,	sys.%22,	sys.%25 # table_name
% %3,	%6,	%11,	%14,	%17,	%22,	%25 # name
% bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 1,	1,	1,	1,	1,	1,	1 # length
[ 0,	1,	0,	0,	1,	1,	1	]
[ 0,	0,	0,	0,	1,	1,	1	]
[ 1,	0,	0,	0,	1,	1,	1	]
[ 0,	1,	0,	0,	0,	0,	0	]
[ 0,	0,	0,	0,	1,	1,	1	]
[ 0,	0,	0,	0,	1,	1,	1	]
[ 0,	1,	0,	0,	1,	1,	1	]
[ 0,	0,	0,	0,	1,	1,	1	]
[ 1,	0,	0,	0,	1,	1,	1	]
[ 0,	0,	0,	0,	0,	0,	0	]
#select cast(sum(aa) over (rows between 3 preceding and 2 preceding) as bigint),
#       cast(sum(aa) over (rows between 2 following and 3 following) as bigint),
#       cast(sum(aa) over (rows between 3 preceding and 3 preceding) as bigint),
#       cast(sum(aa) over (rows between 3 preceding and 9 preceding) as bigint),
#       cast(sum(aa) over (rows between current row and current row) as bigint),
#       cast(sum(aa) over (rows between 0 following and 0 following) as bigint),
#       cast(sum(aa) over (rows between 0 preceding and 0 preceding) as bigint) from analytics;
% sys.%1,	sys.%2,	sys.%3,	sys.%4,	sys.%5,	sys.%6,	sys.%7 # table_name
% %1,	%2,	%3,	%4,	%5,	%6,	%7 # name
% bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 2,	2,	2,	1,	2,	2,	2 # length
[ NULL,	7,	NULL,	NULL,	15,	15,	15	]
[ NULL,	5,	NULL,	NULL,	3,	3,	3	]
[ 15,	3,	NULL,	NULL,	2,	2,	2	]
[ 18,	7,	15,	NULL,	5,	5,	5	]
[ 5,	10,	3,	NULL,	NULL,	NULL,	NULL	]
[ 7,	14,	2,	NULL,	3,	3,	3	]
[ 5,	8,	5,	NULL,	4,	4,	4	]
[ 3,	NULL,	NULL,	NULL,	6,	6,	6	]
[ 7,	NULL,	3,	NULL,	8,	8,	8	]
[ 10,	NULL,	4,	NULL,	NULL,	NULL,	NULL	]
#select cast(sum(aa) over (partition by bb order by bb rows between 3 preceding and 2 preceding) as bigint),
#       cast(sum(aa) over (partition by bb order by bb rows between 2 following and 3 following) as bigint),
#       cast(sum(aa) over (partition by bb order by bb rows between 3 preceding and 3 preceding) as bigint),
#       cast(sum(aa) over (partition by bb order by bb rows between 3 preceding and 9 preceding) as bigint),
#       cast(sum(aa) over (partition by bb order by bb rows between current row and current row) as bigint),
% sys.%1,	sys.%2,	sys.%3,	sys.%4,	sys.%5,	sys.%6,	sys.%7 # table_name
% %1,	%2,	%3,	%4,	%5,	%6,	%7 # name
% bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 2,	1,	1,	1,	2,	2,	2 # length
[ NULL,	4,	NULL,	NULL,	3,	3,	3	]
[ NULL,	NULL,	NULL,	NULL,	2,	2,	2	]
[ 3,	NULL,	NULL,	NULL,	4,	4,	4	]
[ NULL,	8,	NULL,	NULL,	NULL,	NULL,	NULL	]
[ NULL,	NULL,	NULL,	NULL,	3,	3,	3	]
[ NULL,	NULL,	NULL,	NULL,	8,	8,	8	]
[ NULL,	6,	NULL,	NULL,	15,	15,	15	]
[ NULL,	NULL,	NULL,	NULL,	5,	5,	5	]
[ 15,	NULL,	NULL,	NULL,	6,	6,	6	]
[ NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL	]
#rollback;
#drop table analytics;

# 14:06:28 >  
# 14:06:28 >  "Done."
# 14:06:28 >  

