statement ok
create table testing (aa int, bb int, cc bigint)

statement ok
insert into testing values (15, 3, 15), (3, 1, 3), (2, 1, 2), (5, 3, 5), (NULL, 0, NULL), (3, 0, 3), (4, 1, 4), (6, 3, 6), (8, 0, 8), (NULL, 4, NULL)

statement ok
start transaction

query II rowsort
select count(aa) over (partition by bb), cast(75 + count(aa) over (partition by bb) as bigint) from testing where bb <> 1
----
0
75
2
77
2
77
2
77
3
78
3
78
3
78

query IIIIII rowsort
with relation as (select row_number() over () as dd, aa, bb from testing where bb <> 1)
select aa, bb, dd,
       count(aa) over (partition by bb rows between dd preceding and current row),
       count(aa) over (partition by bb rows between dd preceding and dd following),
       count(aa) over (partition by bb rows between dd + 1 preceding and dd preceding) from relation
----
15
3
1
1
2
0
3
0
4
1
2
0
5
3
2
2
3
0
6
3
5
3
3
0
8
0
6
2
2
0
NULL
0
3
0
2
0
NULL
4
7
0
0
0

query II rowsort
select first_value(aa) over (partition by bb rows between 2 preceding and 1 following),
       last_value(aa) over (partition by bb rows between 1 preceding and 1 following) from testing
----
15
5
15
6
15
6
3
2
3
4
3
4
NULL
3
NULL
8
NULL
8
NULL
NULL

statement ok
rollback

statement error
select max(aa) over (partition by bb rows 'something' preceding) from testing

statement error
select max(distinct aa) over (partition by bb) from testing

statement error
select count(cc * cc) over (partition by cc * cc rows between cc * cc preceding and cc * cc preceding) from testing

statement ok
delete from testing where cc is null

query I rowsort
select count(cc * cc) over (partition by cc * cc rows between cc * cc preceding and cc * cc preceding) from testing
----
0
0
0
0
0
0
0
0

statement ok
insert into testing values (-1,-1,-1)

statement error
select count(aa) over (partition by bb rows between cc - 500 preceding and cc - 500 preceding) from testing

statement ok
drop table testing

