statement ok
create table rowsvsrangevsgroups (aa int, bb int, cc real)

statement ok
start transaction

statement ok
insert into rowsvsrangevsgroups values (1,1,1), (2,1,2), (3,1,3), (1,2,1), (1,2,1), (1,2,1), (2,2,2), (3,2,3), (4,2,4), (2,2,2)

query IIIIIIII rowsort
select cast(sum(aa) over (rows unbounded preceding) as bigint),
       cast(sum(aa) over (range unbounded preceding) as bigint),
       cast(sum(aa) over (order by aa rows unbounded preceding) as bigint),
       cast(sum(aa) over (order by aa range unbounded preceding) as bigint),
       cast(sum(aa) over (order by aa groups unbounded preceding) as bigint),
       cast(sum(aa) over (partition by bb order by bb rows unbounded preceding) as bigint),
       cast(sum(aa) over (partition by bb order by bb range unbounded preceding) as bigint),
       cast(sum(aa) over (partition by bb order by bb groups unbounded preceding) as bigint) from rowsvsrangevsgroups
----
1
20
1
4
4
1
6
6
11
20
8
10
10
5
14
14
13
20
10
10
10
7
14
14
16
20
16
16
16
10
14
14
20
20
20
20
20
14
14
14
3
20
6
10
10
3
6
6
6
20
13
16
16
6
6
6
7
20
2
4
4
1
14
14
8
20
3
4
4
2
14
14
9
20
4
4
4
3
14
14

query IIIIIIRR rowsort
select cast(sum(aa) over (order by aa range between unbounded preceding and current row) as bigint),
       cast(sum(cc) over (order by aa range between unbounded preceding and current row) as bigint),
       count(*) over (order by aa range between unbounded preceding and current row),
       count(aa) over (order by aa range between unbounded preceding and current row),
       min(aa) over (order by aa range between unbounded preceding and current row),
       max(aa) over (order by aa range between unbounded preceding and current row),
       avg(aa) over (order by aa range between unbounded preceding and current row),
       avg(cc) over (order by aa range between unbounded preceding and current row) from rowsvsrangevsgroups
----
10
10
7
7
1
2
1.429
1.429
10
10
7
7
1
2
1.429
1.429
10
10
7
7
1
2
1.429
1.429
16
16
9
9
1
3
1.778
1.778
16
16
9
9
1
3
1.778
1.778
20
20
10
10
1
4
2.000
2.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000

query IIIIIIRR rowsort
select cast(sum(aa) over (order by aa groups between unbounded preceding and current row) as bigint),
       cast(sum(cc) over (order by aa groups between unbounded preceding and current row) as bigint),
       count(*) over (order by aa groups between unbounded preceding and current row),
       count(aa) over (order by aa groups between unbounded preceding and current row),
       min(aa) over (order by aa groups between unbounded preceding and current row),
       max(aa) over (order by aa groups between unbounded preceding and current row),
       avg(aa) over (order by aa groups between unbounded preceding and current row),
       avg(cc) over (order by aa groups between unbounded preceding and current row) from rowsvsrangevsgroups
----
10
10
7
7
1
2
1.429
1.429
10
10
7
7
1
2
1.429
1.429
10
10
7
7
1
2
1.429
1.429
16
16
9
9
1
3
1.778
1.778
16
16
9
9
1
3
1.778
1.778
20
20
10
10
1
4
2.000
2.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000

query IR rowsort
select cast(sum(aa) over (order by aa groups between 1 preceding and current row) as bigint),
       avg(cc) over (order by aa groups between 1 preceding and current row) from rowsvsrangevsgroups
----
10
1.429
10
1.429
10
1.429
10
3.333
12
2.400
12
2.400
4
1.000
4
1.000
4
1.000
4
1.000

statement ok
delete from rowsvsrangevsgroups where aa = 2

query IIIIIIRR rowsort
select cast(sum(aa) over (order by aa range between unbounded preceding and current row) as bigint),
       cast(sum(cc) over (order by aa range between unbounded preceding and current row) as bigint),
       count(*) over (order by aa range between unbounded preceding and current row),
       count(aa) over (order by aa range between unbounded preceding and current row),
       min(aa) over (order by aa range between unbounded preceding and current row),
       max(aa) over (order by aa range between unbounded preceding and current row),
       avg(aa) over (order by aa range between unbounded preceding and current row),
       avg(cc) over (order by aa range between unbounded preceding and current row) from rowsvsrangevsgroups
----
10
10
6
6
1
3
1.667
1.667
10
10
6
6
1
3
1.667
1.667
14
14
7
7
1
4
2.000
2.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000

query IIIIIIRR rowsort
select cast(sum(aa) over (order by aa groups between unbounded preceding and current row) as bigint),
       cast(sum(cc) over (order by aa groups between unbounded preceding and current row) as bigint),
       count(*) over (order by aa groups between unbounded preceding and current row),
       count(aa) over (order by aa groups between unbounded preceding and current row),
       min(aa) over (order by aa groups between unbounded preceding and current row),
       max(aa) over (order by aa groups between unbounded preceding and current row),
       avg(aa) over (order by aa groups between unbounded preceding and current row),
       avg(cc) over (order by aa groups between unbounded preceding and current row) from rowsvsrangevsgroups
----
10
10
6
6
1
3
1.667
1.667
10
10
6
6
1
3
1.667
1.667
14
14
7
7
1
4
2.000
2.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000
4
4
4
4
1
1
1.000
1.000

query IR rowsort
select cast(sum(aa) over (order by aa groups between 1 preceding and current row) as bigint),
       avg(cc) over (order by aa groups between 1 preceding and current row) from rowsvsrangevsgroups
----
10
1.667
10
1.667
10
3.333
4
1.000
4
1.000
4
1.000
4
1.000

statement ok
create table stressme (aa varchar(64), bb int)

statement ok
insert into stressme values ('one', 1), ('another', 1), ('stress', 1), (NULL, 2), ('ok', 2), ('check', 3), ('me', 3), ('please', 3), (NULL, 4)

query IIIIIIII rowsort
select count(aa) over (rows between current row and unbounded following),
       count(aa) over (range between current row and unbounded following),
       count(aa) over (order by bb rows between current row and unbounded following),
       count(aa) over (order by bb range between current row and unbounded following),
       count(aa) over (order by bb groups between current row and unbounded following),
       count(aa) over (partition by bb order by bb rows unbounded preceding),
       count(aa) over (partition by bb order by bb range unbounded preceding),
       count(aa) over (partition by bb order by bb groups unbounded preceding) from stressme
----
0
7
0
0
0
0
0
0
1
7
1
3
3
3
3
3
2
7
2
3
3
2
3
3
3
7
3
3
3
1
3
3
4
7
4
4
4
0
1
1
4
7
4
4
4
1
1
1
5
7
5
7
7
3
3
3
6
7
6
7
7
2
3
3
7
7
7
7
7
1
3
3

query TTTTTTTT rowsort
select min(aa) over (rows between current row and unbounded following),
       min(aa) over (range between current row and unbounded following),
       min(aa) over (order by bb rows between current row and unbounded following),
       min(aa) over (order by bb range between current row and unbounded following),
       min(aa) over (order by bb groups between current row and unbounded following),
       min(aa) over (partition by bb order by bb rows unbounded preceding),
       min(aa) over (partition by bb order by bb range unbounded preceding),
       min(aa) over (partition by bb order by bb groups unbounded preceding) from stressme
----
NULL
another
NULL
NULL
NULL
NULL
NULL
NULL
another
another
another
another
another
another
another
another
another
another
another
another
another
one
another
another
check
another
check
another
another
another
another
another
check
another
check
check
check
NULL
ok
ok
check
another
check
check
check
check
check
check
check
another
check
check
check
ok
ok
ok
me
another
me
check
check
check
check
check
please
another
please
check
check
check
check
check

query TTTTTTTT rowsort
select max(aa) over (rows between current row and unbounded following),
       max(aa) over (range between current row and unbounded following),
       max(aa) over (order by bb rows between current row and unbounded following),
       max(aa) over (order by bb range between current row and unbounded following),
       max(aa) over (order by bb groups between current row and unbounded following),
       max(aa) over (partition by bb order by bb rows unbounded preceding),
       max(aa) over (partition by bb order by bb range unbounded preceding),
       max(aa) over (partition by bb order by bb groups unbounded preceding) from stressme
----
NULL
stress
NULL
NULL
NULL
NULL
NULL
NULL
please
stress
please
please
please
NULL
ok
ok
please
stress
please
please
please
check
please
please
please
stress
please
please
please
me
please
please
please
stress
please
please
please
ok
ok
ok
please
stress
please
please
please
please
please
please
stress
stress
stress
stress
stress
one
stress
stress
stress
stress
stress
stress
stress
one
stress
stress
stress
stress
stress
stress
stress
stress
stress
stress

query TI rowsort
select max(aa) over (order by bb groups between 1 preceding and current row),
       count(aa) over (order by bb groups between 1 preceding and current row) from stressme
----
please
3
please
4
please
4
please
4
stress
3
stress
3
stress
3
stress
4
stress
4

statement ok
delete from stressme where bb = 2

query TI rowsort
select max(aa) over (order by bb groups between 1 preceding and current row),
       count(aa) over (order by bb groups between 1 preceding and current row) from stressme
----
please
3
stress
3
stress
3
stress
3
stress
6
stress
6
stress
6

statement ok
create table overflowme (aa int, bb int)

statement ok
insert into overflowme values (2147483644, 1), (2147483645, 2), (2147483646, 1), (2147483644, 2), (2147483645, 1), (2147483646, 2)

query RRRRRR rowsort
select floor(avg(aa) over (rows between current row and unbounded following)),
       floor(avg(aa) over (range between current row and unbounded following)),
       floor(avg(aa) over (order by bb rows between current row and unbounded following)),
       floor(avg(aa) over (order by bb range between current row and unbounded following)),
       floor(avg(aa) over (partition by bb order by bb rows unbounded preceding)),
       floor(avg(aa) over (partition by bb order by bb range unbounded preceding)) from overflowme
----
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483644.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483644.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483645.000
2147483646.000
2147483645.000
2147483646.000
2147483645.000
2147483645.000
2147483645.000

statement ok
rollback

statement error
select count(*) over (rows between NULL preceding and unbounded following) from rowsvsrangevsgroups

statement error
select count(*) over (rows between unbounded preceding and -1 following) from rowsvsrangevsgroups

statement error
select count(*) over (range between 1 preceding and unbounded following) from rowsvsrangevsgroups

statement error
select count(*) over (range between unbounded preceding and 1 following) from rowsvsrangevsgroups

statement error
select count(*) over (groups between 1 preceding and 1 following) from rowsvsrangevsgroups

statement error
select count(*) over (groups between current row and unbounded following) from rowsvsrangevsgroups

query I rowsort
select min(1) over (partition by 1 order by 1 range between 1 preceding and 1 following)
----
1

query T rowsort
select min('a') over (partition by 1 order by 1 range between 1 preceding and 1 following)
----
a

query T rowsort
select min(time '10:10:00') over (partition by 1 order by 1 range between 1 preceding and 1 following)
----
10:10:00

statement ok
drop table rowsvsrangevsgroups

