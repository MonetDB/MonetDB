statement ok
start transaction

statement ok
create table analytics (aa int, bb int, cc bigint)

statement ok
insert into analytics values (15, 3, 15), (3, 1, 3), (2, 1, 2), (5, 3, 5), (NULL, 2, NULL), (3, 2, 3), (4, 1, 4), (6, 3, 6), (8, 2, 8), (NULL, 4, NULL)

query I rowsort
select min(aa) over (partition by bb) from analytics
----
2
2
2
3
3
3
5
5
5
NULL

query I rowsort
select min(aa) over (partition by bb order by bb asc) from analytics
----
2
2
2
3
3
3
5
5
5
NULL

query I rowsort
select min(aa) over (partition by bb order by bb desc) from analytics
----
2
2
2
3
3
3
5
5
5
NULL

query I rowsort
select min(aa) over (order by bb desc) from analytics
----
2
2
2
3
3
3
5
5
5
NULL

query I rowsort
select max(aa) over (partition by bb) from analytics
----
15
15
15
4
4
4
8
8
8
NULL

query I rowsort
select max(aa) over (partition by bb order by bb asc) from analytics
----
15
15
15
4
4
4
8
8
8
NULL

query I rowsort
select max(aa) over (partition by bb order by bb desc) from analytics
----
15
15
15
4
4
4
8
8
8
NULL

query I rowsort
select max(aa) over (order by bb desc) from analytics
----
15
15
15
15
15
15
15
15
15
NULL

query I rowsort
select cast(sum(aa) over (partition by bb) as bigint) from analytics
----
11
11
11
26
26
26
9
9
9
NULL

query I rowsort
select cast(sum(aa) over (partition by bb order by bb asc) as bigint) from analytics
----
11
11
11
26
26
26
9
9
9
NULL

query I rowsort
select cast(sum(aa) over (partition by bb order by bb desc) as bigint) from analytics
----
11
11
11
26
26
26
9
9
9
NULL

query I rowsort
select cast(sum(aa) over (order by bb desc) as bigint) from analytics
----
26
26
26
37
37
37
46
46
46
NULL

query I rowsort
select cast(prod(aa) over (partition by bb) as bigint) from analytics
----
24
24
24
24
24
24
450
450
450
NULL

query I rowsort
select cast(prod(aa) over (partition by bb order by bb asc) as bigint) from analytics
----
24
24
24
24
24
24
450
450
450
NULL

query I rowsort
select cast(prod(aa) over (partition by bb order by bb desc) as bigint) from analytics
----
24
24
24
24
24
24
450
450
450
NULL

query I rowsort
select cast(prod(aa) over (order by bb desc) as bigint) from analytics
----
10800
10800
10800
259200
259200
259200
450
450
450
NULL

query R rowsort
select avg(aa) over (partition by bb) from analytics
----
3.000
3.000
3.000
5.500
5.500
5.500
8.667
8.667
8.667
NULL

query R rowsort
select avg(aa) over (partition by bb order by bb asc) from analytics
----
3.000
3.000
3.000
5.500
5.500
5.500
8.667
8.667
8.667
NULL

query R rowsort
select avg(aa) over (partition by bb order by bb desc) from analytics
----
3.000
3.000
3.000
5.500
5.500
5.500
8.667
8.667
8.667
NULL

query R rowsort
select avg(aa) over (order by bb desc) from analytics
----
5.750
5.750
5.750
7.400
7.400
7.400
8.667
8.667
8.667
NULL

query I rowsort
select count(aa) over (partition by bb) from analytics
----
0
2
2
2
3
3
3
3
3
3

query I rowsort
select count(aa) over (partition by bb order by bb asc) from analytics
----
0
2
2
2
3
3
3
3
3
3

query I rowsort
select count(aa) over (partition by bb order by bb desc) from analytics
----
0
2
2
2
3
3
3
3
3
3

query I rowsort
select count(aa) over (order by bb desc) from analytics
----
0
3
3
3
5
5
5
8
8
8

query I rowsort
select min(cc) over (partition by bb) from analytics
----
2
2
2
3
3
3
5
5
5
NULL

query I rowsort
select min(cc) over (partition by bb order by bb asc) from analytics
----
2
2
2
3
3
3
5
5
5
NULL

query I rowsort
select min(cc) over (partition by bb order by bb desc) from analytics
----
2
2
2
3
3
3
5
5
5
NULL

query I rowsort
select min(cc) over (order by bb desc) from analytics
----
2
2
2
3
3
3
5
5
5
NULL

query I rowsort
select max(cc) over (partition by bb) from analytics
----
15
15
15
4
4
4
8
8
8
NULL

query I rowsort
select max(cc) over (partition by bb order by bb asc) from analytics
----
15
15
15
4
4
4
8
8
8
NULL

query I rowsort
select max(cc) over (partition by bb order by bb desc) from analytics
----
15
15
15
4
4
4
8
8
8
NULL

query I rowsort
select max(cc) over (order by bb desc) from analytics
----
15
15
15
15
15
15
15
15
15
NULL

query I rowsort
select cast(sum(cc) over (partition by bb) as bigint) from analytics
----
11
11
11
26
26
26
9
9
9
NULL

query I rowsort
select cast(sum(cc) over (partition by bb order by bb asc) as bigint) from analytics
----
11
11
11
26
26
26
9
9
9
NULL

query I rowsort
select cast(sum(cc) over (partition by bb order by bb desc) as bigint) from analytics
----
11
11
11
26
26
26
9
9
9
NULL

query I rowsort
select cast(sum(cc) over (order by bb desc) as bigint) from analytics
----
26
26
26
37
37
37
46
46
46
NULL

query I rowsort
select cast(prod(cc) over (partition by bb) as bigint) from analytics
----
24
24
24
24
24
24
450
450
450
NULL

query I rowsort
select cast(prod(cc) over (partition by bb order by bb asc) as bigint) from analytics
----
24
24
24
24
24
24
450
450
450
NULL

query I rowsort
select cast(prod(cc) over (partition by bb order by bb desc) as bigint) from analytics
----
24
24
24
24
24
24
450
450
450
NULL

query R rowsort
select avg(cc) over (partition by bb) from analytics
----
3.000
3.000
3.000
5.500
5.500
5.500
8.667
8.667
8.667
NULL

query R rowsort
select avg(cc) over (partition by bb order by bb asc) from analytics
----
3.000
3.000
3.000
5.500
5.500
5.500
8.667
8.667
8.667
NULL

query R rowsort
select avg(cc) over (partition by bb order by bb desc) from analytics
----
3.000
3.000
3.000
5.500
5.500
5.500
8.667
8.667
8.667
NULL

query R rowsort
select avg(cc) over (order by bb desc) from analytics
----
5.750
5.750
5.750
7.400
7.400
7.400
8.667
8.667
8.667
NULL

query I rowsort
select count(cc) over (partition by bb) from analytics
----
0
2
2
2
3
3
3
3
3
3

query I rowsort
select count(cc) over (partition by bb order by bb asc) from analytics
----
0
2
2
2
3
3
3
3
3
3

query I rowsort
select count(cc) over (partition by bb order by bb desc) from analytics
----
0
2
2
2
3
3
3
3
3
3

query I rowsort
select count(cc) over (order by bb desc) from analytics
----
0
3
3
3
5
5
5
8
8
8

query I rowsort
select count(*) over (partition by bb) from analytics
----
1
3
3
3
3
3
3
3
3
3

query I rowsort
select count(*) over (partition by bb order by bb asc) from analytics
----
1
3
3
3
3
3
3
3
3
3

query I rowsort
select count(*) over (partition by bb order by bb desc) from analytics
----
1
3
3
3
3
3
3
3
3
3

query I rowsort
select count(*) over (order by bb desc) from analytics
----
1
10
10
10
4
4
4
7
7
7

query I rowsort
select min(aa) over () from analytics
----
2
2
2
2
2
2
2
2
2
2

query I rowsort
select max(aa) over () from analytics
----
15
15
15
15
15
15
15
15
15
15

query I rowsort
select cast(sum(aa) over () as bigint) from analytics
----
46
46
46
46
46
46
46
46
46
46

query I rowsort
select cast(prod(aa) over () as bigint) from analytics
----
259200
259200
259200
259200
259200
259200
259200
259200
259200
259200

query R rowsort
select avg(aa) over () from analytics
----
5.750
5.750
5.750
5.750
5.750
5.750
5.750
5.750
5.750
5.750

query I rowsort
select count(aa) over () from analytics
----
8
8
8
8
8
8
8
8
8
8

query I rowsort
select count(*) over () from analytics
----
10
10
10
10
10
10
10
10
10
10

query I rowsort
select count(*) over ()
----
1

query I rowsort
select min(null) over () from analytics
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

query I rowsort
select max(null) over () from analytics
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

query I rowsort
select cast(sum(null) over () as bigint) from analytics
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

query I rowsort
select cast(prod(null) over () as bigint) from analytics
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

query R rowsort
select avg(null) over () from analytics
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

query I rowsort
select count(null) over () from analytics
----
0
0
0
0
0
0
0
0
0
0

query I rowsort
select min(2) over () from analytics
----
2
2
2
2
2
2
2
2
2
2

query I rowsort
select max(100) over () from analytics
----
100
100
100
100
100
100
100
100
100
100

query I rowsort
select cast(sum(2) over () as bigint) from analytics
----
20
20
20
20
20
20
20
20
20
20

query I rowsort
select cast(prod(4 + 0) over () as bigint) from analytics
----
1048576
1048576
1048576
1048576
1048576
1048576
1048576
1048576
1048576
1048576

query R rowsort
select avg(4) over () from analytics
----
4.000
4.000
4.000
4.000
4.000
4.000
4.000
4.000
4.000
4.000

query I rowsort
select count(4) over () from analytics
----
10
10
10
10
10
10
10
10
10
10

statement ok
create table stressme (aa varchar(64), bb int)

statement ok
insert into stressme values ('one', 1), ('another', 1), ('stress', 1), (NULL, 2), ('ok', 2), ('check', 3), ('me', 3), ('please', 3), (NULL, 4)

query T rowsort
select min(aa) over (partition by bb) from stressme
----
NULL
another
another
another
check
check
check
ok
ok

query T rowsort
select min(aa) over (partition by bb order by bb asc) from stressme
----
NULL
another
another
another
check
check
check
ok
ok

query T rowsort
select min(aa) over (partition by bb order by bb desc) from stressme
----
NULL
another
another
another
check
check
check
ok
ok

query T rowsort
select min(aa) over (order by bb desc) from stressme
----
NULL
another
another
another
check
check
check
check
check

query T rowsort
select max(aa) over (partition by bb) from stressme
----
NULL
ok
ok
please
please
please
stress
stress
stress

query T rowsort
select max(aa) over (partition by bb order by bb asc) from stressme
----
NULL
ok
ok
please
please
please
stress
stress
stress

query T rowsort
select max(aa) over (partition by bb order by bb desc) from stressme
----
NULL
ok
ok
please
please
please
stress
stress
stress

query T rowsort
select max(aa) over (order by bb desc) from stressme
----
NULL
please
please
please
please
please
stress
stress
stress

query I rowsort
select count(aa) over (partition by bb) from stressme
----
0
1
1
3
3
3
3
3
3

query I rowsort
select count(aa) over (partition by bb order by bb asc) from stressme
----
0
1
1
3
3
3
3
3
3

query I rowsort
select count(aa) over (partition by bb order by bb desc) from stressme
----
0
1
1
3
3
3
3
3
3

query I rowsort
select count(aa) over (order by bb desc) from stressme
----
0
3
3
3
4
4
7
7
7

query I rowsort
select count(*) over (partition by bb) from stressme
----
1
2
2
3
3
3
3
3
3

query I rowsort
select count(*) over (partition by bb order by bb asc) from stressme
----
1
2
2
3
3
3
3
3
3

query I rowsort
select count(*) over (partition by bb order by bb desc) from stressme
----
1
2
2
3
3
3
3
3
3

query I rowsort
select count(*) over (order by bb desc) from stressme
----
1
4
4
4
6
6
9
9
9

query I rowsort
select min(bb) over (partition by aa) from stressme
----
1
1
1
2
2
2
3
3
3

query I rowsort
select min(bb) over (partition by aa order by aa asc) from stressme
----
1
1
1
2
2
2
3
3
3

query I rowsort
select min(bb) over (partition by aa order by aa desc) from stressme
----
1
1
1
2
2
2
3
3
3

query I rowsort
select min(bb) over (order by aa desc) from stressme
----
1
1
1
1
1
1
1
1
1

query I rowsort
select max(bb) over (partition by aa) from stressme
----
1
1
1
2
3
3
3
4
4

query I rowsort
select max(bb) over (partition by aa order by aa asc) from stressme
----
1
1
1
2
3
3
3
4
4

query I rowsort
select max(bb) over (partition by aa order by aa desc) from stressme
----
1
1
1
2
3
3
3
4
4

query I rowsort
select max(bb) over (order by aa desc) from stressme
----
1
3
3
3
3
3
3
4
4

query I rowsort
select cast(sum(bb) over (partition by aa) as bigint) from stressme
----
1
1
1
2
3
3
3
6
6

query I rowsort
select cast(sum(bb) over (partition by aa order by aa asc) as bigint) from stressme
----
1
1
1
2
3
3
3
6
6

query I rowsort
select cast(sum(bb) over (partition by aa order by aa desc) as bigint) from stressme
----
1
1
1
2
3
3
3
6
6

query I rowsort
select cast(sum(bb) over (order by aa desc) as bigint) from stressme
----
1
10
13
14
20
20
4
5
7

query I rowsort
select cast(prod(bb) over (partition by aa) as bigint) from stressme
----
1
1
1
2
3
3
3
8
8

query I rowsort
select cast(prod(bb) over (partition by aa order by aa asc) as bigint) from stressme
----
1
1
1
2
3
3
3
8
8

query I rowsort
select cast(prod(bb) over (partition by aa order by aa desc) as bigint) from stressme
----
1
1
1
2
3
3
3
8
8

query I rowsort
select cast(prod(bb) over (order by aa desc) as bigint) from stressme
----
1
18
3
3
432
432
54
54
6

query R rowsort
select avg(bb) over (partition by aa) from stressme
----
1.000
1.000
1.000
2.000
3.000
3.000
3.000
3.000
3.000

query R rowsort
select avg(bb) over (partition by aa order by aa asc) from stressme
----
1.000
1.000
1.000
2.000
3.000
3.000
3.000
3.000
3.000

query R rowsort
select avg(bb) over (partition by aa order by aa desc) from stressme
----
1.000
1.000
1.000
2.000
3.000
3.000
3.000
3.000
3.000

query R rowsort
select avg(bb) over (order by aa desc) from stressme
----
1.000
1.667
1.750
2.000
2.000
2.000
2.167
2.222
2.222

query I rowsort
select count(bb) over (partition by aa) from stressme
----
1
1
1
1
1
1
1
2
2

query I rowsort
select count(bb) over (partition by aa order by aa asc) from stressme
----
1
1
1
1
1
1
1
2
2

query I rowsort
select count(bb) over (partition by aa order by aa desc) from stressme
----
1
1
1
1
1
1
1
2
2

query I rowsort
select count(bb) over (order by aa desc) from stressme
----
1
2
3
4
5
6
7
9
9

query I rowsort
select count(*) over (partition by aa) from stressme
----
1
1
1
1
1
1
1
2
2

query I rowsort
select count(*) over (partition by aa order by aa asc) from stressme
----
1
1
1
1
1
1
1
2
2

query I rowsort
select count(*) over (partition by aa order by aa desc) from stressme
----
1
1
1
1
1
1
1
2
2

query I rowsort
select count(*) over (order by aa desc) from stressme
----
1
2
3
4
5
6
7
9
9

query I rowsort
select min(2) over (partition by aa) from stressme
----
2
2
2
2
2
2
2
2
2

query I rowsort
select max(100) over (partition by bb) from stressme
----
100
100
100
100
100
100
100
100
100

query I rowsort
select cast(sum(8 / (- 2)) over (partition by aa order by aa asc) as bigint) from stressme
----
-4
-4
-4
-4
-4
-4
-4
-8
-8

query I rowsort
select cast(prod(4 + 0) over (partition by bb order by bb asc) as bigint) from stressme
----
16
16
4
64
64
64
64
64
64

query R rowsort
select avg(4 + null) over (partition by bb order by bb asc) from stressme
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

query I rowsort
select count(case when 4 = 4 then 4 else 0 end) over (partition by aa order by aa asc) from stressme
----
1
1
1
1
1
1
1
2
2

statement ok
create table debugme (aa real, bb int)

statement ok
insert into debugme values (15, 3), (3, 1), (2, 1), (5, 3), (NULL, 2), (3, 2), (4, 1), (6, 3), (8, 2), (NULL, 4)

query T rowsort
select sum(aa) over (partition by bb) from debugme
----
11.0
11.0
11.0
26.0
26.0
26.0
9.0
9.0
9.0
NULL

query T rowsort
select sum(aa) over (partition by bb order by bb asc) from debugme
----
11.0
11.0
11.0
26.0
26.0
26.0
9.0
9.0
9.0
NULL

query T rowsort
select sum(aa) over (partition by bb order by bb desc) from debugme
----
11.0
11.0
11.0
26.0
26.0
26.0
9.0
9.0
9.0
NULL

query T rowsort
select sum(aa) over (order by bb desc) from debugme
----
26.0
26.0
26.0
37.0
37.0
37.0
46.0
46.0
46.0
NULL

query T rowsort
select prod(aa) over (partition by bb) from debugme
----
24.0
24.0
24.0
24.0
24.0
24.0
450.0
450.0
450.0
NULL

query T rowsort
select prod(aa) over (partition by bb order by bb asc) from debugme
----
24.0
24.0
24.0
24.0
24.0
24.0
450.0
450.0
450.0
NULL

query T rowsort
select prod(aa) over (partition by bb order by bb desc) from debugme
----
24.0
24.0
24.0
24.0
24.0
24.0
450.0
450.0
450.0
NULL

query T rowsort
select prod(aa) over (order by bb desc) from debugme
----
10800.0
10800.0
10800.0
259200.0
259200.0
259200.0
450.0
450.0
450.0
NULL

query R rowsort
select avg(aa) over (partition by bb) from debugme
----
3.000
3.000
3.000
5.500
5.500
5.500
8.667
8.667
8.667
NULL

query R rowsort
select avg(aa) over (partition by bb order by bb asc) from debugme
----
3.000
3.000
3.000
5.500
5.500
5.500
8.667
8.667
8.667
NULL

query R rowsort
select avg(aa) over (partition by bb order by bb desc) from debugme
----
3.000
3.000
3.000
5.500
5.500
5.500
8.667
8.667
8.667
NULL

query R rowsort
select avg(aa) over (order by bb desc) from debugme
----
5.750
5.750
5.750
7.400
7.400
7.400
8.667
8.667
8.667
NULL

statement ok
create table overflowme (a int)

statement ok
insert into overflowme values (2147483644), (2147483645), (2147483646)

query R rowsort
select floor(avg(a) over ()) from overflowme
----
2147483645.000
2147483645.000
2147483645.000

statement ok
CREATE TABLE myorders (
O_ORDERKEY       INTEGER NOT NULL,
O_CUSTKEY        INTEGER NOT NULL,
O_ORDERSTATUS    CHAR(1) NOT NULL,
O_TOTALPRICE     DECIMAL(15,2) NOT NULL,
O_ORDERDATE      DATE NOT NULL,
O_ORDERPRIORITY  CHAR(15) NOT NULL,
O_CLERK          CHAR(15) NOT NULL,
O_SHIPPRIORITY   INTEGER NOT NULL,
O_COMMENT        VARCHAR(79) NOT NULL)

statement ok
insert into myorders values (1, 1, '1', 1, date '2010-01-01', '1', '1', 1, '1'), (2, 2, '2', 2, date '2010-01-02', '2', '2', 2, '2')

query IIR rowsort
SELECT o_custkey, EXTRACT(MONTH FROM o_orderdate) AS purchase_month,
       CAST(SUM(o_totalprice) OVER (PARTITION BY o_custkey  ORDER BY EXTRACT(MONTH FROM o_orderdate) ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS DECIMAL(15,2))
FROM myorders
----
1
1
1.000
2
1
2.000

query T nosort
PLAN SELECT MIN(o_totalprice) OVER (PARTITION BY o_custkey ORDER BY EXTRACT(MONTH FROM o_orderdate) ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM myorders
----
project (
| project (
| | project (
| | | project (
| | | | table("sys"."myorders") [ "myorders"."o_custkey" NOT NULL, "myorders"."o_totalprice" NOT NULL, "myorders"."o_orderdate" NOT NULL ] COUNT 
| | | ) [ "myorders"."o_custkey" NOT NULL, "myorders"."o_totalprice" NOT NULL, "sys"."month"("myorders"."o_orderdate" NOT NULL) NOT NULL as "%1"."%1" ]
| | ) [ "myorders"."o_custkey" NOT NULL, "myorders"."o_totalprice" NOT NULL, "%1"."%1" NOT NULL ] [ "myorders"."o_custkey" ASC NOT NULL, "%1"."%1" ASC NOT NULL ]
| ) [ "%1"."%1" NOT NULL, "sys"."diff"("myorders"."o_custkey" NOT NULL) as "%2"."%2", "sys"."diff"("%1"."%1" NOT NULL) as "%3"."%3", "sys"."min"("myorders"."o_totalprice" NOT NULL, "%2"."%2", "sys"."diff"("%1"."%1" NOT NULL) as "%3"."%3", int "0", "sys"."window_bound"("%2"."%2", "%3"."%3", int "0", int "0", int "0", bigint "9223372036854775807"), "sys"."window_bound"("%2"."%2", "%3"."%3", int "0", int "5", int "0", bigint "0")) as "%4"."%4" ]
) [ "%4"."%4" ]

query R rowsort
SELECT MIN(o_totalprice) OVER (PARTITION BY o_custkey ORDER BY EXTRACT(MONTH FROM o_orderdate) ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM myorders
----
1.000
2.000

query T nosort
PLAN SELECT MAX(o_totalprice) OVER (ORDER BY EXTRACT(DAY FROM o_orderdate) RANGE BETWEEN 2 PRECEDING AND CURRENT ROW) FROM myorders
----
project (
| project (
| | project (
| | | project (
| | | | table("sys"."myorders") [ "myorders"."o_totalprice" NOT NULL, "myorders"."o_orderdate" NOT NULL ] COUNT 
| | | ) [ "myorders"."o_totalprice" NOT NULL, "sys"."day"("myorders"."o_orderdate" NOT NULL) NOT NULL as "%1"."%1" ]
| | ) [ "myorders"."o_totalprice" NOT NULL, "%1"."%1" NOT NULL ] [ "%1"."%1" ASC NOT NULL ]
| ) [ "%1"."%1" NOT NULL, boolean "false" as "%2"."%2", "sys"."max"("myorders"."o_totalprice" NOT NULL, "%2"."%2" NOT NULL, "sys"."diff"("%1"."%1" NOT NULL), int "1", "sys"."window_bound"("%1"."%1" ASC NOT NULL, int "1", int "0", int "0", int "2"), "sys"."window_bound"("%1"."%1" ASC NOT NULL, int "1", int "5", int "0", int "0")) as "%3"."%3" ]
) [ "%3"."%3" ]

query R rowsort
SELECT MAX(o_totalprice) OVER (ORDER BY EXTRACT(DAY FROM o_orderdate) RANGE BETWEEN 2 PRECEDING AND CURRENT ROW) FROM myorders
----
1.000
2.000

query T nosort
PLAN SELECT COUNT(o_totalprice) OVER (ORDER BY EXTRACT(YEAR FROM o_orderdate) GROUPS BETWEEN 2 PRECEDING AND UNBOUNDED FOLLOWING) FROM myorders
----
project (
| project (
| | project (
| | | project (
| | | | table("sys"."myorders") [ "myorders"."o_totalprice" NOT NULL, "myorders"."o_orderdate" NOT NULL ] COUNT 
| | | ) [ "myorders"."o_totalprice" NOT NULL, "sys"."year"("myorders"."o_orderdate" NOT NULL) NOT NULL as "%1"."%1" ]
| | ) [ "myorders"."o_totalprice" NOT NULL, "%1"."%1" NOT NULL ] [ "%1"."%1" ASC NOT NULL ]
| ) [ "%1"."%1" NOT NULL, boolean "false" as "%2"."%2", "sys"."diff"("%1"."%1" NOT NULL) as "%3"."%3", "sys"."count"("myorders"."o_totalprice" NOT NULL, boolean "true", "%2"."%2" NOT NULL, "sys"."diff"("%1"."%1" NOT NULL) as "%3"."%3", int "2", "sys"."window_bound"("%3"."%3", int "2", int "0", int "0", tinyint "2"), "sys"."window_bound"("%3"."%3", int "2", int "3", int "0", bigint "9223372036854775807")) as "%4"."%4" ]
) [ "%4"."%4" ]

query I rowsort
SELECT COUNT(o_totalprice) OVER (ORDER BY EXTRACT(YEAR FROM o_orderdate) GROUPS BETWEEN 2 PRECEDING AND UNBOUNDED FOLLOWING) FROM myorders
----
2
2

statement ok
rollback

