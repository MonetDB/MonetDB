stdout of test 'bulk_rotate_xor_hash-error.Bug-2734` in directory 'sql/test/BugTracker-2011` itself:


# 11:34:34 >  
# 11:34:34 >   mserver5  --debug=10 --set gdk_nr_threads=0  --set "gdk_dbfarm=/ufs/sjoerd/Monet-stable/var/MonetDB" --set mapi_open=true --set mapi_port=38431 --set monet_prompt= --trace --forcemito --set mal_listing=2  "--dbname=mTests_test_BugTracker-2011" --set mal_listing=0 ; echo ; echo Over..
# 11:34:34 >  

# MonetDB 5 server v11.3.4
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2011', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.749 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://ottar.ins.cwi.nl:38431/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# SQL catalog created, loading sql scripts once


# 11:34:34 >  
# 11:34:34 >  mclient -lsql -ftest -i -e --host=ottar --port=38431 
# 11:34:34 >  

#CREATE TABLE t_bug2734 (a INT);
#INSERT INTO t_bug2734 VALUES (1);
[ 1	]
#SELECT * FROM (SELECT a, 1 AS n FROM t_bug2734 UNION SELECT a, 2 AS n FROM t_bug2734) AS abc INNER JOIN (SELECT a, 1 AS n FROM t_bug2734 UNION SELECT a, 2 AS n FROM t_bug2734) AS cba ON abc.a = cba.a AND abc.n = cba.n;
% .abc,	.abc,	.cba,	.cba # table_name
% a,	n,	a,	n # name
% int,	tinyint,	int,	tinyint # type
% 1,	1,	1,	1 # length
[ 1,	1,	1,	1	]
[ 1,	2,	1,	2	]
#DROP TABLE t_bug2734;
#CREATE TABLE foo2734(row int not null, col int not null, val int not null, primary key (row, col));
#INSERT INTO foo2734(row, col, val) VALUES (1,1,1), (1,2,2), (2,1,3), (2,2,4);
[ 4	]
#WITH
#-- binding due to rownum operator
#t0000 (iter4_nat, iter5_nat) AS
#  (SELECT a0000.iter4_nat, ROW_NUMBER () OVER () AS iter5_nat
#     FROM (VALUES (1)) AS a0000(iter4_nat)),
#
#-- binding due to rownum operator
#t0001 (iter4_nat, iter5_nat, item1_int, item2_int, item3_int,
#  iter23_nat) AS
#  (SELECT a0001.iter4_nat, a0001.iter5_nat, a0002.col AS item1_int,
#          a0002.row AS item2_int, a0002.val AS item3_int,
#          ROW_NUMBER () OVER
#          (ORDER BY a0001.iter5_nat ASC, a0002.row ASC, a0002.col ASC) AS
% .,	sys. # table_name
% iter20_nat,	item8_int # name
% tinyint,	int # type
% 1,	1 # length
[ 1,	2	]
#DROP TABLE foo2734;

# 14:59:41 >  
# 14:59:41 >  Done.
# 14:59:41 >  

