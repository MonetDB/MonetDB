statement ok
create table test_base (item varchar(10))

statement ok
create procedure test_populate()
begin
  declare rowmax bigint;
  set rowmax = 100000;
  declare rowindex bigint;
  set rowindex = 0;
  while rowindex < rowmax do
    insert into test_base (item) values (cast(10 * rowmax + rowindex as varchar(10)));
    insert into test_base (item) values (cast(11 * rowmax + rowindex as varchar(10)));
    insert into test_base (item) values (cast(12 * rowmax + rowindex as varchar(10)));
    insert into test_base (item) values (cast(13 * rowmax + rowindex as varchar(10)));
    insert into test_base (item) values (cast(14 * rowmax + rowindex as varchar(10)));
    insert into test_base (item) values (cast(15 * rowmax + rowindex as varchar(10)));
    insert into test_base (item) values (cast(16 * rowmax + rowindex as varchar(10)));
    insert into test_base (item) values (cast(17 * rowmax + rowindex as varchar(10)));
    insert into test_base (item) values (cast(18 * rowmax + rowindex as varchar(10)));
    insert into test_base (item) values (cast(19 * rowmax + rowindex as varchar(10)));
    set rowindex = rowindex + 1;
  end while;
end

statement ok
call test_populate()

query T python .plan.filter
explain select count(*) from test_base  where item is null or not(item in ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'))
----
project (
| group by (
| | select (
| | | table("sys"."test_base") [ "test_base"."item" ]
| | ) [ (("test_base"."item") ! in (varchar(10) "a", varchar(10) "b", varchar(10) "c", varchar(10) "d", varchar(10) "e", varchar(10) "f", varchar(10) "g", varchar(10) "h", varchar(10) "i", varchar(10) "j", varchar(10) "k", varchar(10) "l", varchar(10) "m", varchar(10) "n", varchar(10) "o", varchar(10) "p", varchar(10) "q", varchar(10) "r", varchar(10) "s", varchar(10) "t", varchar(10) "u", varchar(10) "v", varchar(10) "w", varchar(10) "x", varchar(10) "y", varchar(10) "z")) = (boolean(1) "true") ]
| ) [  ] [ "sys"."count"() as "%2"."%2" ]
) [ "%2"."%2" ]

