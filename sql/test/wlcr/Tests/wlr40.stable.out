stdout of test 'wlr40` in directory 'sql/test/wlcr` itself:


# 13:02:55 >  
# 13:02:55 >  "/usr/bin/python2" "wlr40.py" "wlr40"
# 13:02:55 >  

# MonetDB 5 server v11.26.0 (hg id: cbfc9f47e58c)
# This is an unreleased version
# Serving database 'mTests_sql_test_wlcr-clone', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2017 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:49945/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-24794/.s.monetdb.49945
# MonetDB/GIS module loaded
#replay log file:/export/scratch1/mk/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr-clone/../mTests_sql_test_wlcr/master/mTests_sql_test_wlcr_000000000014
#replay log file:/export/scratch1/mk/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr-clone/../mTests_sql_test_wlcr/master/mTests_sql_test_wlcr_000000000015
#replay log file:/export/scratch1/mk/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr-clone/../mTests_sql_test_wlcr/master/mTests_sql_test_wlcr_000000000016
# MonetDB/SQL module loaded
#select * from tmp;
% sys.tmp,	sys.tmp # table_name
% i,	s # name
% int,	clob # type
% 1,	4 # length
[ 4,	"blah"	]
[ 5,	"blah"	]
[ 6,	"blah"	]
#LISTING OF THE LOG FILES
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc.config
#logs=/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/
#tag=10
#write=2019-10-04T11:24:01.000
#state=1
#batches=10
#beat=0
#
#LISTING OF THE LOG FILES
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000000
#    wlr.transaction(0:lng, "2019-10-04T11:23:48.000":str, "monetdb":str);
#    wlr.catalog("create table tmp0(i int, s string);":str);
#    wlr.commit();
#
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000001
#    wlr.transaction(1:lng, "2019-10-04T11:23:48.000":str, "monetdb":str);
#    wlr.action("insert into tmp0 values(1,\\'gaap\\'), (2,\\'sleep\\');":str);
#    wlr.append("sys":str, "tmp0":str, "i":str, 1:int, 2:int);
#    wlr.append("sys":str, "tmp0":str, "s":str, "gaap":str, "sleep":str);
#    wlr.commit();
#
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000002
#    wlr.transaction(2:lng, "2019-10-04T11:23:48.000":str, "monetdb":str);
#    wlr.catalog("drop table tmp0;":str);
#    wlr.commit();
#
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000003
#    wlr.transaction(3:lng, "2019-10-04T11:23:48.000":str, "monetdb":str);
#    wlr.catalog("create table tmp(i int, s string);":str);
#    wlr.commit();
#
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000004
#    wlr.transaction(4:lng, "2019-10-04T11:23:48.000":str, "monetdb":str);
#    wlr.action("insert into tmp values(1,\\'hello\\'), (2,\\'world\\');":str);
#    wlr.append("sys":str, "tmp":str, "i":str, 1:int, 2:int);
#    wlr.append("sys":str, "tmp":str, "s":str, "hello":str, "world":str);
#    wlr.commit();
#
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000005
#    wlr.transaction(5:lng, "2019-10-04T11:23:50.000":str, "monetdb":str);
#    wlr.action("insert into tmp values(3,\\'blah\\'),(4,\\'bloh\\');":str);
#    wlr.append("sys":str, "tmp":str, "i":str, 3:int, 4:int);
#    wlr.append("sys":str, "tmp":str, "s":str, "blah":str, "bloh":str);
#    wlr.commit();
#
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000006
#    wlr.transaction(6:lng, "2019-10-04T11:23:52.000":str, "monetdb":str);
#    wlr.action("insert into tmp values(5,\\'red\\'),(6,\\'fox\\');":str);
#    wlr.append("sys":str, "tmp":str, "i":str, 5:int, 6:int);
#    wlr.append("sys":str, "tmp":str, "s":str, "red":str, "fox":str);
#    wlr.commit();
#
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000007
#    wlr.transaction(7:lng, "2019-10-04T11:23:54.000":str, "monetdb":str);
#    wlr.action("update tmp set i = 3 where i = 1;":str);
#    wlr.update("sys":str, "tmp":str, "i":str, 0@0:oid, 3:int);
#    wlr.commit();
#
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000008
#    wlr.transaction(8:lng, "2019-10-04T11:23:54.000":str, "monetdb":str);
#    wlr.action("update tmp set s = \\'blah\\';":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 0@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 1@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 2@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 3@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 4@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 5@0:oid, "blah":str);
#    wlr.commit();
#
#/export/scratch1/mk/branches/wlcr//Linux/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000009
#    wlr.transaction(9:lng, "2019-10-04T11:24:01.000":str, "monetdb":str);
#    wlr.action("delete from tmp where i < 4;":str);
#    wlr.delete("sys":str, "tmp":str, 0@0:oid, 0@0:oid, 0@0:oid);
#    wlr.commit();
#

# 13:02:55 >  
# 13:02:55 >  "Done."
# 13:02:55 >  

