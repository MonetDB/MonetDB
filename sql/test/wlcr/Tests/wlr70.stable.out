stdout of test 'wlr70` in directory 'sql/test/wlcr` itself:


# 13:16:46 >  
# 13:16:46 >  "/bin/python2" "wlr70.py" "wlr70"
# 13:16:46 >  

# MonetDB 5 server v11.28.0
# This is an unreleased version
# Serving database 'mTests_sql_test_wlcr-clone', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.520 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2017 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://zarquon.zarniwoop.org:52305/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-22068/.s.monetdb.52305
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
#select * from tmp70;
% sys.tmp70,	sys.tmp70 # table_name
% i,	s # name
% int,	clob # type
% 1,	5 # length
[ 1,	"hello"	]
[ 2,	"world"	]
#LISTING OF THE WLR LOG FILE
#/export/scratch1/mk/branches/tracer//Linux/var/MonetDB/mTests_sql_test_wlcrclone/wlr.config
#master=mTests_sql_test_wlcr
#batches=13
#beat=0
#
#LISTING OF THE LOG FILES
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000000
#    wlr.transaction(0:lng, "2019-10-07T10:19:27.000":str, "monetdb":str);
#    wlr.catalog("create table tmp0(i int, s string);":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000001
#    wlr.transaction(1:lng, "2019-10-07T10:19:27.000":str, "monetdb":str);
#    wlr.action("insert into tmp0 values(1,\\'gaap\\'), (2,\\'sleep\\');":str);
#    wlr.append("sys":str, "tmp0":str, "i":str, 1:int, 2:int);
#    wlr.append("sys":str, "tmp0":str, "s":str, "gaap":str, "sleep":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000002
#    wlr.transaction(2:lng, "2019-10-07T10:19:27.000":str, "monetdb":str);
#    wlr.catalog("drop table tmp0;":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000003
#    wlr.transaction(3:lng, "2019-10-07T10:19:28.000":str, "monetdb":str);
#    wlr.catalog("create table tmp(i int, s string);":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000004
#    wlr.transaction(4:lng, "2019-10-07T10:19:28.000":str, "monetdb":str);
#    wlr.action("insert into tmp values(1,\\'hello\\'), (2,\\'world\\');":str);
#    wlr.append("sys":str, "tmp":str, "i":str, 1:int, 2:int);
#    wlr.append("sys":str, "tmp":str, "s":str, "hello":str, "world":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000005
#    wlr.transaction(5:lng, "2019-10-07T10:19:31.000":str, "monetdb":str);
#    wlr.action("insert into tmp values(3,\\'blah\\'),(4,\\'bloh\\');":str);
#    wlr.append("sys":str, "tmp":str, "i":str, 3:int, 4:int);
#    wlr.append("sys":str, "tmp":str, "s":str, "blah":str, "bloh":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000006
#    wlr.transaction(6:lng, "2019-10-07T10:19:32.000":str, "monetdb":str);
#    wlr.action("insert into tmp values(5,\\'red\\'),(6,\\'fox\\');":str);
#    wlr.append("sys":str, "tmp":str, "i":str, 5:int, 6:int);
#    wlr.append("sys":str, "tmp":str, "s":str, "red":str, "fox":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000007
#    wlr.transaction(7:lng, "2019-10-07T10:19:35.000":str, "monetdb":str);
#    wlr.action("update tmp set i = 3 where i = 1;":str);
#    wlr.update("sys":str, "tmp":str, "i":str, 0@0:oid, 3:int);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000008
#    wlr.transaction(8:lng, "2019-10-07T10:19:35.000":str, "monetdb":str);
#    wlr.action("update tmp set s = \\'blah\\';":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 0@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 1@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 2@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 3@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 4@0:oid, "blah":str);
#    wlr.update("sys":str, "tmp":str, "s":str, 5@0:oid, "blah":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000009
#    wlr.transaction(9:lng, "2019-10-07T10:19:37.000":str, "monetdb":str);
#    wlr.action("delete from tmp where i < 4;":str);
#    wlr.delete("sys":str, "tmp":str, 0@0:oid, 0@0:oid, 0@0:oid);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000010
#    wlr.transaction(10:lng, "2019-10-07T10:19:39.000":str, "monetdb":str);
#    wlr.action("delete from tmp;":str);
#    wlr.clear_table("sys":str, "tmp":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000011
#    wlr.transaction(11:lng, "2019-10-07T10:19:41.000":str, "monetdb":str);
#    wlr.catalog("create table tmp70(i int, s string);":str);
#    wlr.commit();
#
#/ufs/sjoerd/@Monet-testing/var/MonetDB/mTests_sql_test_wlcr/wlc_logs/mTests_sql_test_wlcr_000000000012
#    wlr.transaction(12:lng, "2019-10-07T10:19:41.000":str, "monetdb":str);
#    wlr.action("insert into tmp70 values(1,\\'hello\\'), (2,\\'world\\');":str);
#    wlr.append("sys":str, "tmp70":str, "i":str, 1:int, 2:int);
#    wlr.append("sys":str, "tmp70":str, "s":str, "hello":str, "world":str);
#    wlr.commit();
#

# 13:16:48 >  
# 13:16:48 >  "Done."
# 13:16:48 >  

