@connection(id=1, username=monetdb, password=monetdb)
statement ok
create table test (id bigint)

@connection(id=1)
statement ok
insert into test values (1)

@connection(id=1)
statement ok
start transaction

@connection(id=2, username=monetdb, password=monetdb)
statement ok
start transaction

@connection(id=1)
statement ok
alter table test add column data int

@connection(id=2)
statement ok
insert into test values (2)

@connection(id=1)
statement ok
commit

@connection(id=2)
statement error 40001!COMMIT: transaction is aborted because of concurrency conflicts, will ROLLBACK instead
commit

@connection(id=1)
query II nosort
select * from test
----
1
NULL

@connection(id=2)
query II nosort
select * from test
----
1
NULL

@connection(id=1)
statement ok
start transaction

@connection(id=2)
statement ok
start transaction

@connection(id=1)
statement ok
alter table test drop column data

@connection(id=2)
statement ok
insert into test values (3,4)

@connection(id=1)
statement ok
commit

@connection(id=2)
statement error 40001!COMMIT: transaction is aborted because of concurrency conflicts, will ROLLBACK instead
commit

@connection(id=1)
query I nosort
select * from test
----
1

@connection(id=2)
query I nosort
select * from test
----
1

