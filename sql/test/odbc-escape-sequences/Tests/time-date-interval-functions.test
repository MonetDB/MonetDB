# ref: https://learn.microsoft.com/en-us/sql/odbc/reference/appendixes/time-date-and-interval-functions

query I rowsort
select { fn current_date() } > date'2023-01-02'
----
1

query I rowsort
select { fn current_date() } > {d'2023-01-02'}
----
1

query I rowsort
select length((select { fn current_date() })) > 0
----
1

query I rowsort
select length((select { fn curdate() })) > 0
----
1

query I rowsort
select { fn current_time() } >= time'00:00:00'
----
1

query I rowsort
select { fn CURRENT_TIME() } >= {t'00:00:00'}
----
1

# test CURRENT_TIME( time-precision )
statement error 42000!syntax error...
select { fn current_time(6) } >= {t'00:00:00.000000001'}
# ----
# 1

query I rowsort
select length(cast((select { fn current_time() }) as varchar(100))) > 0
----
1

query I rowsort
select length(cast((select { fn curtime() }) as varchar(100))) > 0
----
1

query I rowsort
select { fn current_timestamp() } > timestamp'2023-01-02 00:00:00'
----
1

query I rowsort
select { fn CURRENT_TIMESTAMP() } > {ts'2023-01-02 00:00:00'}
----
1

# test CURRENT_TIMESTAMP( timestamp-precision )
statement error 42000!syntax error...
select { fn current_timestamp(9) } >= {ts'2002-01-02 00:00:00.000000001'}
# ----
# 1

query I rowsort
select length(cast((select { fn current_timestamp() }) as varchar(100))) > 0
----
1

query T rowsort
select { fn dayname(date'2022-11-11') }
----
Friday

query I rowsort
select { fn dayofmonth(date'2022-11-11') }
----
11

query I rowsort
select { fn dayofweek(date'2022-11-11') }
----
5

query I rowsort
select { fn dayofyear(date'2022-01-31') }
----
31

query I rowsort
select { fn extract(day from date'2022-01-02') }
----
2

query I rowsort
select { fn extract(month from date'2022-07-02') }
----
7

query I rowsort
select { fn extract(year from date'2023-01-02') }
----
2023

query I rowsort
select { fn extract(week from date'2023-10-02') }
----
40

query I rowsort
select { fn extract(quarter from date'2023-07-02') }
----
3

query I rowsort
select { fn extract(hour from time'15:45:59') }
----
15

query I rowsort
select { fn extract(minute from time'15:45:59') }
----
45

query I rowsort
select { fn extract(second from time'15:45:59') }
----
59

query I rowsort
select { fn extract(day from timestamp'2022-01-02 15:45:59') }
----
2

query I rowsort
select { fn extract(month from timestamp'2022-07-02 15:45:59') }
----
7

query I rowsort
select { fn extract(year from timestamp'2022-01-02 15:45:59') }
----
2022

query I rowsort
select { fn extract(week from timestamp'2023-10-02') }
----
40

query I rowsort
select { fn extract(quarter from timestamp'2022-12-02 15:45:59') }
----
4

query I rowsort
select { fn extract(hour from timestamp'2022-01-02 15:45:59') }
----
15

query I rowsort
select { fn extract(minute from timestamp'2022-01-02 15:45:59') }
----
45

query I rowsort
select { fn extract(second from timestamp'2022-01-02 15:45:59') }
----
59

query T rowsort
select { fn hour(time'12:00:00') }
----
12

query T rowsort
select { fn hour(timestamp'2022-01-02 15:45:59') }
----
15

query I rowsort
select { fn minute(time'12:15:00') }
----
15

query I rowsort
select { fn minute(timestamp'2022-01-02 15:45:59') }
----
45

query I rowsort
select { fn month(date'2022-11-14') }
----
11

query T rowsort
select { fn monthname(date'2022-11-14') }
----
November

query I rowsort
select {fn now()} > timestamp'2022-01-02 15:45:59'
----
1

query I rowsort
select length(cast((select { fn now() }) as varchar(100))) > 0
----
1

query I rowsort
select { fn quarter(date'2022-11-14') }
----
4

query I rowsort
select { fn quarter(timestamp'2022-06-02 15:45:59') }
----
2

query I rowsort
select { fn second(time'12:30:33') }
----
33

query I rowsort
select { fn second(timestamp'2022-01-02 15:45:59') }
----
59

query I rowsort
select { fn second(timestamp'2022-11-14 12:30:34') }
----
34

query I rowsort
select { fn week(date'2022-11-14') }
----
46

query I rowsort
select { fn week(timestamp'2022-11-14 12:30:34') }
----
46

query I rowsort
select { fn year(date'2022-11-14') }
----
2022

query I rowsort
select { fn year(timestamp'2222-11-14 12:30:34') }
----
2222

# TIMESTAMPADD(interval, integer_exp, time_exp) tests
# Timestamp calculated by adding integer_exp intervals of type interval to time_exp.
# interval can be one of the following values: SQL_TSI_FRAC_SECOND, SQL_TSI_SECOND, SQL_TSI_MINUTE, SQL_TSI_HOUR, SQL_TSI_DAY, SQL_TSI_WEEK, SQL_TSI_MONTH, SQL_TSI_QUARTER, SQL_TSI_YEAR
# Fractional seconds are expressed in billionths of a second.

query T rowsort
select {fn timestampadd(SQL_TSI_HOUR, 10, {ts '2022-11-14 14:13:12.654321'}) }
----
2022-11-15 00:13:12.654321

# corner cases
query T rowsort
select sql_sub({fn timestampadd(SQL_TSI_HOUR, 1, time'12:12:12')}, timestampadd(time'12:12:12', interval '1' hour))
----
0:00:00

query T rowsort
select sql_sub({fn timestampadd(SQL_TSI_HOUR, 1, date'2022-12-12')}, timestampadd(date'2022-12-12', interval '1' hour))
----
0:00:00

query T rowsort
select { fn timestampadd(SQL_TSI_FRAC_SECOND, 123, timestamp'2022-11-14 14:13:12') }
----
2022-11-14 14:13:12.123000

query T rowsort
select { fn timestampadd(SQL_TSI_SECOND, 11, timestamp'2022-11-14 14:13:12') }
----
2022-11-14 14:13:23

query T rowsort
select { fn timestampadd(SQL_TSI_SECOND, 11.234, timestamp'2022-11-14 14:13:12') }
----
2022-11-14 14:13:23.234000

query T rowsort
select { fn timestampadd(SQL_TSI_SECOND, 15*60, timestamp'2022-11-14 14:13:12') }
----
2022-11-14 14:28:12

query T rowsort
select { fn timestampadd(SQL_TSI_MINUTE, 12, timestamp'2022-11-14 14:13:12') }
----
2022-11-14 14:25:12

query T rowsort
select { fn timestampadd(SQL_TSI_HOUR, 13, timestamp'2022-11-14 14:13:12') }
----
2022-11-15 03:13:12

query T rowsort
select { fn timestampadd(SQL_TSI_DAY, 14, timestamp'2022-11-14 14:13:12') }
----
2022-11-28 14:13:12

query T rowsort
select { fn timestampadd(SQL_TSI_DAY, 14, { fn timestampadd(SQL_TSI_DAY, 14, timestamp'2022-11-14 14:13:12') }) }
----
2022-12-12 14:13:12

query T rowsort
select { fn timestampadd(SQL_TSI_DAY, 4*7, timestamp'2022-11-14 14:13:12') }
----
2022-12-12 14:13:12

query T rowsort
select { fn timestampadd(SQL_TSI_WEEK, 4, timestamp'2022-11-14 14:13:12') }
----
2022-12-12 14:13:12

query T rowsort
select { fn timestampadd(SQL_TSI_MONTH, 3, timestamp'2022-11-14 14:13:12') }
----
2023-02-14 14:13:12

query T rowsort
select { fn timestampadd(SQL_TSI_QUARTER, 5, timestamp'2022-11-14 14:13:12') }
----
2024-02-14 14:13:12

query T rowsort
select { fn timestampadd(SQL_TSI_YEAR, 5, timestamp'2022-11-14 14:13:12') }
----
2027-11-14 14:13:12


# TIMESTAMPDIFF(interval, time_exp1, time_exp2) tests
# Integer number of intervals of type interval by which time_exp2 is greater than time_exp1.
# interval has the same value as TIMESTAMPADD.
# Fractional seconds are expressed in billionths of a second.

query T rowsort
select cast ({ fn timestampdiff(SQL_TSI_FRAC_SECOND, { ts '2022-12-12 12:00:00.123456'}, {ts'2022-12-12 12:00:30.654321' }) } as varchar(20))
----
30.531

query I rowsort
select { fn timestampdiff(SQL_TSI_SECOND, timestamp'2022-12-12 12:00:00', timestamp'2022-12-12 12:00:30') }
----
30

query I rowsort
select { fn timestampdiff(SQL_TSI_SECOND, {ts'2022-12-12 12:00:00'}, {ts'2022-12-12 12:00:30'}) }
----
30

query I rowsort
select { fn timestampdiff(SQL_TSI_SECOND, date'2022-12-12', timestamp'2022-12-12 00:00:30') }
----
30

query I rowsort
select { fn timestampdiff(SQL_TSI_SECOND, timestamp'2022-12-11 23:59:30', date'2022-12-12') }
----
30

query I rowsort
select { fn timestampdiff(SQL_TSI_MINUTE, timestamp'2022-12-12 12:00:00', timestamp'2022-12-12 12:01:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_MINUTE, date'2022-12-12', timestamp'2022-12-12 00:01:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_MINUTE, timestamp'2022-12-11 23:59:00', date'2022-12-12') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_HOUR, timestamp'2022-12-12 12:00:00', timestamp'2022-12-12 13:00:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_HOUR, date'2022-12-12', timestamp'2022-12-12 01:00:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_HOUR, timestamp'2022-12-11 23:00:00', date'2022-12-12') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_DAY, timestamp'2022-12-11 22:00:00', timestamp'2022-12-12 00:00:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_DAY, time'22:00:00', (select current_date)) }
----
0

query I rowsort
select { fn timestampdiff(SQL_TSI_DAY, (select current_date), time'22:00:00') }
----
0

query I rowsort
select { fn timestampdiff(SQL_TSI_WEEK, timestamp'2022-12-02 22:00:00', timestamp'2022-12-12 00:00:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_WEEK, time'22:00:00', (select now + (interval '1' day)*7)) }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_WEEK, time'22:00:00', (select now + (interval '1' day)*7)) }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_MONTH, timestamp'2022-11-02 22:00:00', timestamp'2022-12-12 00:00:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_MONTH, timestamp'2021-12-02 22:00:00', timestamp'2022-12-12 00:00:00') }
----
12

query I rowsort
select { fn timestampdiff(SQL_TSI_MONTH, time'22:00:00', (select now + interval '1' month)) }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_MONTH, (select now - interval '1' month), time'10:00:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_QUARTER, timestamp'2022-08-02 22:00:00', timestamp'2022-12-12 00:00:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_QUARTER, timestamp'2021-08-02 22:00:00', timestamp'2022-12-12 00:00:00') }
----
5

query I rowsort
select { fn timestampdiff(SQL_TSI_QUARTER, time'22:00:00', (select now + interval '1' year)) }
----
4

query I rowsort
select { fn timestampdiff(SQL_TSI_QUARTER, (select now - interval '1' year), time'22:00:00') }
----
4

query I rowsort
select { fn timestampdiff(SQL_TSI_YEAR, timestamp'2021-08-02 22:00:00', timestamp'2022-12-12 00:00:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_YEAR, (select now - interval '1' year), time'22:00:00') }
----
1

query I rowsort
select { fn timestampdiff(SQL_TSI_YEAR, time'22:00:00', (select now + interval '1' year)) }
----
1
