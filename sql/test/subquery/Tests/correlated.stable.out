stdout of test 'correlated` in directory 'sql/test/subquery` itself:


# 20:30:33 >  
# 20:30:33 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37437" "--set" "mapi_usock=/var/tmp/mtest-8372/.s.monetdb.37437" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_subquery" "--set" "embedded_c=true"
# 20:30:33 >  

# MonetDB 5 server v11.34.0 (hg id: 9b9d1f1578b1+)
# This is an unreleased version
# Serving database 'mTests_sql_test_subquery', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:37437/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8372/.s.monetdb.37437
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 20:30:33 >  
# 20:30:33 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8372" "--port=37437"
# 20:30:33 >  

#CREATE TABLE integers(i INTEGER);
#INSERT INTO integers VALUES (1), (2), (3), (NULL);
[ 4	]
#CREATE TABLE test (a INTEGER, b INTEGER, str VARCHAR(32));
#INSERT INTO test VALUES (11, 1, 'a'), (12, 2, 'b'), (13, 3, 'c');
[ 3	]
#CREATE TABLE test2 (a INTEGER, c INTEGER, str2 VARCHAR(32));
#INSERT INTO test2 VALUES (11, 1, 'a'), (12, 1, 'b'), (13, 4, 'b');
[ 3	]
#CREATE TABLE strings(v VARCHAR(32));
#INSERT INTO strings VALUES ('hello'), ('world'), (NULL);
[ 3	]
#SELECT i, (SELECT 42+i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	43	]
[ 2,	44	]
[ 3,	45	]
#SELECT i FROM integers i1 ORDER BY (SELECT 100-i1.i); -- NULL, 3, 2, 1
% sys.i1 # table_name
% i # name
% int # type
% 1 # length
[ NULL	]
[ 3	]
[ 2	]
[ 1	]
#SELECT i, (SELECT i FROM integers WHERE 1=0 AND i1.i=i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	NULL	]
[ 3,	NULL	]
#SELECT i, EXISTS(SELECT i FROM integers WHERE 1=0 AND i1.i=i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	false	]
[ 1,	false	]
[ 2,	false	]
[ 3,	false	]
#SELECT i, i=ANY(SELECT i FROM integers WHERE 1=0 AND i1.i=i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	false	]
[ 1,	false	]
[ 2,	false	]
[ 3,	false	]
#SELECT i, (SELECT 42 WHERE i1.i>2) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	tinyint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	NULL	]
[ 3,	42	]
#SELECT i, (SELECT 42 WHERE i1.i IS NULL) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	tinyint # type
% 1,	2 # length
[ NULL,	42	]
[ 1,	NULL	]
[ 2,	NULL	]
[ 3,	NULL	]
#SELECT i, (SELECT i+i1.i FROM integers WHERE i=1) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	3	]
[ 3,	4	]
#SELECT i, (SELECT i FROM integers WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, (SELECT i+1 FROM integers WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	3	]
[ 3,	4	]
#SELECT i, (SELECT 42 FROM integers WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	tinyint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	42	]
[ 2,	42	]
[ 3,	42	]
#SELECT i, (SELECT MIN(i)+i1.i FROM integers) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%2 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	3	]
[ 3,	4	]
#SELECT i, (SELECT MIN(i+2*i1.i) FROM integers) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	3	]
[ 2,	5	]
[ 3,	7	]
#SELECT i, CAST(SUM(i) AS BIGINT), CAST((SELECT SUM(i)+SUM(i1.i) FROM integers) AS BIGINT) FROM integers i1 GROUP BY i ORDER BY i;
% .i1,	.%1,	. # table_name
% i,	%1,	%4 # name
% int,	bigint,	bigint # type
% 1,	1,	1 # length
[ NULL,	NULL,	NULL	]
[ 1,	1,	7	]
[ 2,	2,	8	]
[ 3,	3,	9	]
#SELECT i, CAST(SUM(i) AS BIGINT), CAST((SELECT SUM(i)+COUNT(i1.i) FROM integers) AS BIGINT) FROM integers i1 GROUP BY i ORDER BY i;
% .i1,	.%1,	. # table_name
% i,	%1,	%4 # name
% int,	bigint,	bigint # type
% 1,	1,	1 # length
[ NULL,	NULL,	6	]
[ 1,	1,	7	]
[ 2,	2,	7	]
[ 3,	3,	7	]
#SELECT i, (SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	0	]
[ 1,	2	]
[ 2,	1	]
[ 3,	0	]
#SELECT i, (SELECT MIN(i+2*i1.i) FROM integers) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	3	]
[ 2,	5	]
[ 3,	7	]
#SELECT CAST((SELECT SUM(i1.i)) AS BIGINT) FROM integers i1; -- 6
% .%1 # table_name
% %1 # name
% bigint # type
% 1 # length
[ 6	]
#SELECT MIN(i), CAST((SELECT SUM(i1.i)) AS BIGINT) FROM integers i1; -- 1, 6
% .%1,	.%2 # table_name
% %1,	%2 # name
% int,	bigint # type
% 1,	1 # length
[ 1,	6	]
#SELECT MIN(i), CAST((SELECT SUM(i1.i)) AS BIGINT) FROM integers i1; -- 1, 6
% .%1,	.%2 # table_name
% %1,	%2 # name
% int,	bigint # type
% 1,	1 # length
[ 1,	6	]
#SELECT CAST((SELECT SUM(i1.i)) AS BIGINT), CAST((SELECT SUM(i1.i)) AS BIGINT) FROM integers i1; -- 6, 6
% .%1,	.%2 # table_name
% %1,	%2 # name
% bigint,	bigint # type
% 1,	1 # length
[ 6,	6	]
#SELECT CAST(SUM(i) AS BIGINT), CAST(SUM((SELECT i FROM integers WHERE i=i1.i)) AS BIGINT) FROM integers i1; -- 6, 6
% .%1,	.%4 # table_name
% %1,	%4 # name
% bigint,	bigint # type
% 1,	1 # length
[ 6,	6	]
#SELECT CAST(SUM(i) AS BIGINT), CAST((SELECT SUM(i) FROM integers WHERE i>SUM(i1.i)) AS BIGINT) FROM integers i1; -- 6, NULL
% .%1,	.%3 # table_name
% %1,	%3 # name
% bigint,	bigint # type
% 1,	1 # length
[ 6,	NULL	]
#SELECT CAST((SELECT SUM(i) FROM integers WHERE i>SUM(i1.i)) AS BIGINT) FROM integers i1; -- NULL
% .%2 # table_name
% %2 # name
% bigint # type
% 1 # length
[ NULL  ]
#SELECT i, (SELECT MIN(i) FROM integers WHERE i>i1.i) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%1 # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	3	]
[ 3,	NULL	]
#SELECT i, (SELECT MIN(i)+i1.i FROM integers WHERE i>i1.i) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%2 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	3	]
[ 2,	5	]
[ 3,	NULL	]
#SELECT i, (SELECT MIN(i) FROM integers GROUP BY i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	1	]
[ 1,	1	]
[ 2,	1	]
[ 3,	1	]
#SELECT i, (SELECT i FROM integers GROUP BY i HAVING i=i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i1.i, CAST(SUM(i) AS BIGINT) FROM integers i1 GROUP BY i1.i HAVING SUM(i)=(SELECT MIN(i) FROM integers WHERE i<>i1.i+1) ORDER BY 1;
% sys.i1,	sys.%1 # table_name
% i,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ 1,	1	]
#SELECT i % 2 AS j, CAST(SUM(i) AS BIGINT) FROM integers i1 GROUP BY j HAVING SUM(i)=(SELECT SUM(i) FROM integers WHERE i<>j+1) ORDER BY 1;
% sys.,	sys.%1 # table_name
% j,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ 1,	4	]
#SELECT CAST((SELECT SUM(i)+SUM(i1.i) FROM integers) AS BIGINT) FROM integers i1 ORDER BY 1;
% . # table_name
% %3 # name
% bigint # type
% 2 # length
[ 12	]
#SELECT CAST((SELECT SUM(i)+SUM((CASE WHEN i IS NOT NULL THEN i*0 ELSE 0 END)+i1.i) FROM integers) AS BIGINT) FROM integers i1 ORDER BY 1;
% . # table_name
% %3 # name
% bigint # type
% 2 # length
[ NULL	]
[ 10	]
[ 14	]
[ 18	]
#SELECT i, CAST((SELECT i+SUM(i1.i) FROM integers WHERE i=1) AS BIGINT) FROM integers i1 GROUP BY i ORDER BY i;
% .i1,	. # table_name
% i,	%3 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	3	]
[ 3,	4	]
#SELECT CAST(SUM((SELECT i+i1.i FROM integers WHERE i=1)) AS BIGINT) FROM integers i1;
% .%5 # table_name
% %5 # name
% bigint # type
% 1 # length
[ 9	]
#SELECT i1.i AS j, CAST((SELECT SUM(j+i) FROM integers) AS BIGINT) AS k FROM integers i1 GROUP BY j ORDER BY j;
% .,	. # table_name
% j,	k # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	9	]
[ 2,	12	]
[ 3,	15	]
#SELECT CAST((SELECT SUM(i1.i*i) FROM integers) AS BIGINT) FROM integers i1 ORDER BY i;
% . # table_name
% %1 # name
% bigint # type
% 2 # length
[ NULL	]
[ 6	]
[ 12	]
[ 18	]
#SELECT i, CAST((SELECT SUM(i1.i)) AS BIGINT) AS k, CAST((SELECT SUM(i1.i)) AS BIGINT) AS l FROM integers i1 GROUP BY i ORDER BY i;
% .i1,	.,	. # table_name
% i,	k,	l # name
% int,	bigint,	bigint # type
% 1,	1,	1 # length
[ NULL,	NULL,	NULL	]
[ 1,	1,	1	]
[ 2,	2,	2	]
[ 3,	3,	3	]
#SELECT i, CAST((SELECT SUM(i1.i)*SUM(i) FROM integers) AS BIGINT) AS k FROM integers i1 GROUP BY i ORDER BY i;
% .i1,	. # table_name
% i,	k # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	6	]
[ 2,	12	]
[ 3,	18	]
#SELECT i AS j, CAST((SELECT j*SUM(i) FROM integers) AS BIGINT) AS k FROM integers i1 GROUP BY j ORDER BY j;
% .,	. # table_name
% j,	k # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	6	]
[ 2,	12	]
[ 3,	18	]
#SELECT i AS j, CAST((SELECT i1.i*SUM(i) FROM integers) AS BIGINT) AS k FROM integers i1 GROUP BY j ORDER BY j;
% .,	. # table_name
% j,	k # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	6	]
[ 2,	12	]
[ 3,	18	]
#SELECT i, CAST(SUM((SELECT SUM(i)*i1.i FROM integers)) AS BIGINT) AS k FROM integers i1 GROUP BY i ORDER BY i;
% .i1,	. # table_name
% i,	k # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	6	]
[ 2,	12	]
[ 3,	18	]
#SELECT CAST((SELECT SUM(i1.i)) AS BIGINT) FROM integers i1;
% .%1 # table_name
% %1 # name
% bigint # type
% 1 # length
[ 6	]
#SELECT i AS j, (SELECT MIN(i1.i) FROM integers GROUP BY i HAVING i=j) FROM integers i1 GROUP BY j ORDER BY j;
% .,	. # table_name
% j,	%2 # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT (SELECT i+i1.i FROM integers WHERE i=1) AS k, CAST(SUM(i) AS BIGINT) AS j FROM integers i1 GROUP BY k ORDER BY 1;
% .,	. # table_name
% k,	j # name
% bigint,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 2,	1	]
[ 3,	2	]
[ 4,	3	]
#SELECT CAST(SUM(i) AS BIGINT) FROM integers i1 WHERE i>(SELECT (i+i1.i)/2 FROM integers WHERE i=1);
% sys.%3 # table_name
% %3 # name
% bigint # type
% 1 # length
[ 5	]
#SELECT CAST(SUM(i) AS BIGINT) FROM integers i1 WHERE i>(SELECT (SUM(i)+i1.i)/2 FROM integers WHERE i=1);
% sys.%3 # table_name
% %3 # name
% bigint # type
% 1 # length
[ 5	]
#SELECT i, (SELECT MIN(i) FROM integers WHERE i=i1.i) >= ALL(SELECT i FROM integers WHERE i IS NOT NULL) FROM integers i1 ORDER BY i;
% .i1,	.%4 # table_name
% i,	%4 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	NULL	]
[ 1,	false	]
[ 2,	false	]
[ 3,	true	]
#SELECT i, (SELECT MIN(i) FROM integers WHERE i<>i1.i) > ANY(SELECT i FROM integers WHERE i IS NOT NULL) FROM integers i1 ORDER BY i;
% .i1,	.%4 # table_name
% i,	%4 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	NULL	]
[ 1,	true	]
[ 2,	false	]
[ 3,	false	]
#SELECT i, NOT((SELECT MIN(i) FROM integers WHERE i<>i1.i) > ANY(SELECT i FROM integers WHERE i IS NOT NULL)) FROM integers i1 ORDER BY i;
% .i1,	.%4 # table_name
% i,	%4 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	NULL	]
[ 1,	false	]
[ 2,	true	]
[ 3,	true	]
#SELECT i, (SELECT i FROM integers i2 WHERE i=(SELECT SUM(i) FROM integers i2 WHERE i2.i>i1.i)) FROM integers i1 ORDER BY 1;
% .i1,	. # table_name
% i,	%3 # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	3	]
[ 3,	NULL	]
#SELECT i, CAST((SELECT SUM(i) IS NULL FROM integers i2 WHERE i2.i>i1.i) AS BIGINT) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%2 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	1	]
[ 1,	0	]
[ 2,	0	]
[ 3,	1	]
#SELECT i, (SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	0	]
[ 1,	2	]
[ 2,	1	]
[ 3,	0	]
#SELECT i, (SELECT COUNT(i) FROM integers i2 WHERE i2.i>i1.i OR i2.i IS NULL) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	0	]
[ 1,	2	]
[ 2,	1	]
[ 3,	0	]
#SELECT i, (SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i OR i2.i IS NULL) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	1	]
[ 1,	3	]
[ 2,	2	]
[ 3,	1	]
#SELECT i, (SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i OR (i1.i IS NULL AND i2.i IS NULL)) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	1	]
[ 1,	2	]
[ 2,	1	]
[ 3,	0	]
#SELECT i FROM integers i1 WHERE (SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i)=0 ORDER BY i;
% .i1 # table_name
% i # name
% int # type
% 1 # length
[ NULL	]
[ 3	]
#SELECT i, (SELECT i FROM integers i2 WHERE i-2=(SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i)) FROM integers i1 ORDER BY 1;
% .i1,	. # table_name
% i,	%3 # name
% int,	int # type
% 1,	1 # length
[ NULL,	2	]
[ 1,	NULL	]
[ 2,	3	]
[ 3,	2	]
#SELECT i, (SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i GROUP BY i1.i) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%2 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	1	]
[ 3,	NULL	]
#SELECT i, (SELECT CASE WHEN (SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i)=0 THEN 1 ELSE 0 END) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%2 # name
% int,	tinyint # type
% 1,	1 # length
[ NULL,	1	]
[ 1,	0	]
[ 2,	0	]
[ 3,	1	]
#SELECT i, (SELECT COUNT(*) FROM integers i2 WHERE i2.i>i1.i) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%1 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	0	]
[ 1,	2	]
[ 2,	1	]
[ 3,	0	]
#SELECT a, CAST(SUM(a) AS BIGINT), CAST((SELECT SUM(a)+SUM(t1.b) FROM test) AS BIGINT) FROM test t1 GROUP BY a ORDER BY a;
% .t1,	.%1,	. # table_name
% a,	%1,	%4 # name
% int,	bigint,	bigint # type
% 2,	2,	2 # length
[ 11,	11,	37	]
[ 12,	12,	38	]
[ 13,	13,	39	]
#SELECT CAST((SELECT test.a+test.b+SUM(test2.a) FROM test2 WHERE "str"=str2) AS BIGINT) FROM test ORDER BY 1;
% . # table_name
% %2 # name
% bigint # type
% 2 # length
[ NULL	]
[ 23	]
[ 39	]
#SELECT * FROM test WHERE EXISTS(SELECT * FROM test2 WHERE test.a=test2.a AND test.b<>test2.c);
% sys.test,	sys.test,	sys.test # table_name
% a,	b,	str # name
% int,	int,	varchar # type
% 2,	1,	1 # length
[ 12,	2,	"b"	]
[ 13,	3,	"c"	]
#SELECT a, a>=ANY(SELECT test2.a+c-b FROM test2 WHERE c>=b AND "str"=str2) FROM test ORDER BY 1;
% .test,	.%3 # table_name
% a,	%3 # name
% int,	boolean # type
% 2,	5 # length
[ 11,	true	]
[ 12,	false	]
[ 13,	false	]
#SELECT "str", "str"=ANY(SELECT str2 FROM test2) FROM test;
% .test,	.%12 # table_name
% str,	%12 # name
% varchar,	boolean # type
% 1,	5 # length
[ "a",	true	]
[ "b",	true	]
[ "c",	false	]
#SELECT "str", "str"=ANY(SELECT str2 FROM test2 WHERE test.a<>test2.a) FROM test;
% .test,	.%14 # table_name
% str,	%14 # name
% varchar,	boolean # type
% 1,	5 # length
[ "a",	false	]
[ "b",	true	]
[ "c",	false	]
#SELECT i, (SELECT s1.i FROM (SELECT * FROM integers WHERE i=i1.i) s1) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, (SELECT s1.i FROM (SELECT i FROM integers WHERE i=i1.i) s1 INNER JOIN (SELECT i FROM integers WHERE i=4-i1.i) s2 ON s1.i>s2.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	NULL	]
[ 3,	3	]
#SELECT i, (SELECT s1.i FROM integers s1, integers s2 WHERE s1.i=s2.i AND s1.i=4-i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	3	]
[ 2,	2	]
[ 3,	1	]
#SELECT i, (SELECT s1.i FROM integers s1 INNER JOIN integers s2 ON s1.i=s2.i AND s1.i=4-i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	3	]
[ 2,	2	]
[ 3,	1	]
#SELECT * FROM integers s1 INNER JOIN integers s2 ON (SELECT 2*SUM(i)*s1.i FROM integers)=(SELECT SUM(i)*s2.i FROM integers) ORDER BY s1.i;
% sys.s1,	sys.s2 # table_name
% i,	i # name
% int,	int # type
% 1,	1 # length
[ 1,	2	]
#SELECT * FROM integers s1 INNER JOIN integers s2 ON (SELECT s1.i=s2.i) ORDER BY s1.i;
% .s1,	.s2 # table_name
% i,	i # name
% int,	int # type
% 1,	1 # length
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT * FROM integers s1 INNER JOIN integers s2 ON (SELECT s1.i=i FROM integers WHERE s2.i=i) ORDER BY s1.i;
% .s1,	.s2 # table_name
% i,	i # name
% int,	int # type
% 1,	1 # length
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT * FROM integers s1 LEFT OUTER JOIN integers s2 ON (SELECT 2*SUM(i)*s1.i FROM integers)=(SELECT SUM(i)*s2.i FROM integers) ORDER BY s1.i;
% .s1,	.s2 # table_name
% i,	i # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	2	]
[ 2,	NULL	]
[ 3,	NULL	]
#SELECT i, CAST((SELECT SUM(s1.i) FROM integers s1 LEFT OUTER JOIN integers s2 ON s1.i=s2.i OR s1.i=i1.i-1) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	6	]
[ 1,	6	]
[ 2,	9	]
[ 3,	12	]
#SELECT i, CAST((SELECT SUM(s1.i) FROM integers s1 FULL OUTER JOIN integers s2 ON s1.i=s2.i OR s1.i=i1.i-1) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	6	]
[ 1,	6	]
[ 2,	9	]
[ 3,	12	]
#SELECT i, (SELECT row_number() OVER (ORDER BY i)) FROM integers i1 ORDER BY i; --Should we support correlated expressions inside PARTITION BY and ORDER BY on Window functions?
% .i1,	. # table_name
% i,	%4 # name
% int,	int # type
% 1,	1 # length
[ NULL,	1	]
[ 1,	1	]
[ 2,	1	]
[ 3,	1	]
#SELECT i, (SELECT i FROM integers WHERE i=i1.i UNION SELECT i FROM integers WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, (SELECT i FROM integers WHERE i IS NOT NULL EXCEPT SELECT i FROM integers WHERE i<>i1.i) AS j FROM integers i1 WHERE i IS NOT NULL ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, (SELECT i FROM integers WHERE i=i1.i INTERSECT SELECT i FROM integers WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, (SELECT i FROM integers WHERE i=i1.i UNION SELECT i FROM integers WHERE i<>i1.i EXCEPT SELECT i FROM integers WHERE i<>i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT (SELECT SUM(i) FROM integers)+42+i1.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	49	]
[ 2,	50	]
[ 3,	51	]
#SELECT i, (SELECT row_number() OVER (ORDER BY i) FROM integers WHERE i1.i=i) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%5 # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	1	]
[ 3,	1	]
#SELECT i1.i, (SELECT rank() OVER (ORDER BY i) FROM integers WHERE i1.i=i) FROM integers i1, integers i2 ORDER BY i1.i;
% .i1,	. # table_name
% i,	%5 # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ NULL,	NULL	]
[ NULL,	NULL	]
[ NULL,	NULL	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 2,	1	]
[ 2,	1	]
[ 2,	1	]
[ 2,	1	]
[ 3,	1	]
[ 3,	1	]
[ 3,	1	]
[ 3,	1	]
#SELECT i1.i, (SELECT row_number() OVER (ORDER BY i) FROM integers WHERE i1.i=i) FROM integers i1, integers i2 ORDER BY i1.i;
% .i1,	. # table_name
% i,	%5 # name
% int,	int # type
% 1,	1 # length
[ NULL,	NULL	]
[ NULL,	NULL	]
[ NULL,	NULL	]
[ NULL,	NULL	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 2,	1	]
[ 2,	1	]
[ 2,	1	]
[ 2,	1	]
[ 3,	1	]
[ 3,	1	]
[ 3,	1	]
[ 3,	1	]
#SELECT i, CAST((SELECT SUM(i) OVER (ORDER BY i) FROM integers WHERE i1.i=i) AS BIGINT) FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	%10 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT (SELECT 42+i1.i)+42+i1.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	86	]
[ 2,	88	]
[ 3,	90	]
#SELECT i, CAST((SELECT (SELECT (SELECT (SELECT 42+i1.i)++i1.i)+42+i1.i)+42+i1.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	3 # length
[ NULL,	NULL	]
[ 1,	130	]
[ 2,	134	]
[ 3,	138	]
#SELECT i, CAST((SELECT (SELECT i1.i+SUM(i2.i)) FROM integers i2) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	7	]
[ 2,	8	]
[ 3,	9	]
#SELECT i, CAST((SELECT (SELECT (SELECT (SELECT i1.i+i1.i+i1.i+i1.i+i1.i)))) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	5	]
[ 2,	10	]
[ 3,	15	]
#SELECT i, CAST((SELECT SUM(i)+(SELECT 42+i1.i) FROM integers) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	49	]
[ 2,	50	]
[ 3,	51	]
#SELECT i, CAST((SELECT ((SELECT ((SELECT ((SELECT SUM(i)+SUM(i4.i)+SUM(i3.i)+SUM(i2.i)+SUM(i1.i) FROM integers i5)) FROM integers i4)) FROM integers i3)) FROM integers i2) AS BIGINT) AS j FROM integers i1 GROUP BY i ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	25	]
[ 2,	26	]
[ 3,	27	]
#SELECT i, CAST((SELECT (SELECT (SELECT (SELECT i1.i+i1.i+i1.i+i1.i+i1.i+i2.i) FROM integers i2 WHERE i2.i=i1.i))) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	NULL	]
[ 1,	6	]
[ 2,	12	]
[ 3,	18	]
#SELECT i, CAST((SELECT SUM(s1.i) FROM integers s1 INNER JOIN integers s2 ON (SELECT i1.i+s1.i)=(SELECT i1.i+s2.i)) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	6	]
[ 2,	6	]
[ 3,	6	]
#SELECT i, CAST(SUM(i) AS BIGINT), CAST((SELECT (SELECT SUM(i)+SUM(i1.i)+SUM(i2.i) FROM integers) FROM integers i2) AS BIGINT) FROM integers i1 GROUP BY i ORDER BY i;
% .i1,	.%1,	. # table_name
% i,	%1,	%6 # name
% int,	bigint,	bigint # type
% 1,	1,	2 # length
[ NULL,	NULL,	NULL	]
[ 1,	1,	13	]
[ 2,	2,	14	]
[ 3,	3,	15	]
#SELECT i, CAST((SELECT SUM(ss1.i) FROM (SELECT i FROM integers s1 WHERE i>ANY(SELECT i FROM integers WHERE i<>s1.i)) ss1) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	5	]
[ 1,	5	]
[ 2,	5	]
[ 3,	5	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i=i1.i AND i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(s1.i) FROM integers s1 LEFT OUTER JOIN integers s2 ON (SELECT i1.i+s1.i)=(SELECT i1.i+s2.i)) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	6	]
[ 1,	6	]
[ 2,	6	]
[ 3,	6	]
#SELECT i, CAST((SELECT SUM(ss1.i)+SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i>ANY(SELECT i FROM integers WHERE i<>s1.i)) ss1 LEFT OUTER JOIN (SELECT i FROM integers s1 WHERE i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2 ON ss1.i=ss2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	2 # length
[ NULL,	10	]
[ 1,	10	]
[ 2,	10	]
[ 3,	10	]
#SELECT i, CAST((SELECT SUM(s1.i) FROM (SELECT i FROM integers WHERE i=i1.i) s1 LEFT OUTER JOIN integers s2 ON s1.i=s2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(s1.i) FROM (SELECT i FROM integers WHERE i<>i1.i) s1 LEFT OUTER JOIN integers s2 ON s1.i=s2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	5	]
[ 2,	4	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(s2.i) FROM integers s1 LEFT OUTER JOIN (SELECT i FROM integers WHERE i=i1.i) s2 ON s1.i=s2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(s2.i) FROM integers s1 LEFT OUTER JOIN (SELECT i FROM integers WHERE i<>i1.i) s2 ON s1.i=s2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	5	]
[ 2,	4	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(s2.i) FROM integers s1 LEFT OUTER JOIN (SELECT i FROM integers WHERE i=i1.i) s2 ON s1.i=s2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(s2.i) FROM integers s1 LEFT OUTER JOIN (SELECT i FROM integers WHERE i<>i1.i) s2 ON s1.i=s2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	5	]
[ 2,	4	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE CASE WHEN (i=i1.i AND i=ANY(SELECT i FROM integers WHERE i=s1.i)) THEN true ELSE false END) ss2) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i=i1.i AND i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i=i1.i) ss2) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	6	]
[ 1,	6	]
[ 2,	6	]
[ 3,	6	]
#SELECT i, (SELECT i=ANY(SELECT i FROM integers WHERE i=s1.i) FROM integers s1 WHERE i=i1.i) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	NULL	]
[ 1,	true	]
[ 2,	true	]
[ 3,	true	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i=i1.i OR i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	6	]
[ 1,	6	]
[ 2,	6	]
[ 3,	6	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE CASE WHEN (i=i1.i AND i=ANY(SELECT i FROM integers WHERE i=s1.i)) THEN true ELSE false END) ss2) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i=i1.i AND EXISTS(SELECT i FROM integers WHERE i=s1.i)) ss2) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	1	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(ss1.i) FROM (SELECT i FROM integers s1 WHERE i>ANY(SELECT i FROM integers WHERE i<>s1.i)) ss1) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	5	]
[ 1,	5	]
[ 2,	5	]
[ 3,	5	]
#SELECT i, CAST((SELECT SUM(ss1.i) FROM (SELECT i FROM integers s1 WHERE i>ANY(SELECT i FROM integers WHERE i<>s1.i)) ss1 LEFT OUTER JOIN (SELECT i FROM integers s1 
#	WHERE i=i1.i AND i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2 ON ss1.i=ss2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	5	]
[ 1,	5	]
[ 2,	5	]
[ 3,	5	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i>ANY(SELECT i FROM integers WHERE i<>s1.i)) ss1 LEFT OUTER JOIN 
#	(SELECT i FROM integers s1 WHERE i=i1.i AND i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2 ON ss1.i=ss2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i>ANY(SELECT i FROM integers WHERE i<>s1.i)) ss1 LEFT OUTER JOIN
#	(SELECT i FROM integers s1 WHERE i=i1.i AND i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2 ON ss1.i=ss2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	2	]
[ 3,	3	]
#SELECT i, CAST((SELECT SUM(ss1.i)+SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i>ANY(SELECT i FROM integers WHERE i<>s1.i)) ss1 LEFT OUTER JOIN
#	(SELECT i FROM integers s1 WHERE i=i1.i AND i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2 ON ss1.i=ss2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	7	]
[ 3,	8	]
#SELECT i, CAST((SELECT SUM(ss1.i)+SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i=i1.i AND i>ANY(SELECT i FROM integers WHERE i<>s1.i)) ss1 LEFT OUTER JOIN
#	(SELECT i FROM integers s1 WHERE i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2 ON ss1.i=ss2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	4	]
[ 3,	6	]
#SELECT i, CAST((SELECT SUM(ss1.i)+SUM(ss2.i) FROM (SELECT i FROM integers s1 WHERE i=i1.i AND i>ANY(SELECT i FROM integers WHERE i<>s1.i)) ss1 LEFT OUTER JOIN
#	(SELECT i FROM integers s1 WHERE i<>i1.i OR i=ANY(SELECT i FROM integers WHERE i=s1.i)) ss2 ON ss1.i=ss2.i) AS BIGINT) AS j FROM integers i1 ORDER BY i;
% .i1,	. # table_name
% i,	j # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	NULL	]
[ 1,	NULL	]
[ 2,	4	]
[ 3,	6	]
#SELECT NULL IN (SELECT * FROM strings WHERE v=s1.v) FROM strings s1 ORDER BY v;
% .%5 # table_name
% %5 # name
% boolean # type
% 5 # length
[ false	]
[ NULL	]
[ NULL	]
#SELECT 'hello' IN (SELECT * FROM strings WHERE v=s1.v) FROM strings s1 ORDER BY v;
% .%5 # table_name
% %5 # name
% boolean # type
% 5 # length
[ false	]
[ true	]
[ false	]
#SELECT 'hello' IN (SELECT * FROM strings WHERE v=s1.v or v IS NULL) FROM strings s1 ORDER BY v;
% .%5 # table_name
% %5 # name
% boolean # type
% 5 # length
[ NULL	]
[ true	]
[ NULL	]
#SELECT 'bla' IN (SELECT * FROM strings WHERE v=s1.v or v IS NULL) FROM strings s1 ORDER BY v;
% .%5 # table_name
% %5 # name
% boolean # type
% 5 # length
[ NULL	]
[ NULL	]
[ NULL	]
#SELECT * FROM strings WHERE EXISTS(SELECT NULL, v) ORDER BY v;
% sys.strings # table_name
% v # name
% varchar # type
% 5 # length
[ NULL	]
[ "hello"	]
[ "world"	]
#SELECT * FROM strings s1 WHERE EXISTS(SELECT v FROM strings WHERE v=s1.v OR v IS NULL) ORDER BY v;
% sys.s1 # table_name
% v # name
% varchar # type
% 5 # length
[ NULL	]
[ "hello"	]
[ "world"	]
#SELECT * FROM strings s1 WHERE EXISTS(SELECT v FROM strings WHERE v=s1.v) ORDER BY v;
% sys.s1 # table_name
% v # name
% varchar # type
% 5 # length
[ "hello"	]
[ "world"	]
#SELECT (SELECT v FROM strings WHERE v=s1.v) FROM strings s1 ORDER BY v;
% . # table_name
% %2 # name
% varchar # type
% 5 # length
[ NULL	]
[ "hello"	]
[ "world"	]
#SELECT (SELECT v FROM strings WHERE v=s1.v OR (v='hello' AND s1.v IS NULL)) FROM strings s1 ORDER BY v;
% . # table_name
% %2 # name
% varchar # type
% 5 # length
[ "hello"	]
[ "hello"	]
[ "world"	]
#DROP TABLE integers;
#DROP TABLE test;
#DROP TABLE test2;
#DROP TABLE strings;

# 20:30:33 >  
# 20:30:33 >  "Done."
# 20:30:33 >  

