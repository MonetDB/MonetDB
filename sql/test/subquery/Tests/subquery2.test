statement ok
CREATE TABLE students(id INTEGER, name VARCHAR(128), major VARCHAR(128), "year" INTEGER)

statement ok
CREATE TABLE exams(sid INTEGER, course VARCHAR(128), curriculum VARCHAR(128), grade INTEGER, "year" INTEGER)

statement ok
INSERT INTO students VALUES (1, 'Mark', 'CS', 2017)

statement ok
INSERT INTO students VALUES (2, 'Dirk', 'CS', 2017)

statement ok
INSERT INTO exams VALUES (1, 'Database Systems', 'CS', 10, 2015)

statement ok
INSERT INTO exams VALUES (1, 'Graphics', 'CS', 9, 2016)

statement ok
INSERT INTO exams VALUES (2, 'Database Systems', 'CS', 7, 2015)

statement ok
INSERT INTO exams VALUES (2, 'Graphics', 'CS', 7, 2016)

query TTI rowsort
SELECT s.name, e.course, e.grade FROM students s, exams e WHERE s.id=e.sid AND e.grade=(SELECT MAX(e2.grade) FROM exams e2 WHERE s.id=e2.sid) ORDER BY name, course
----
Dirk
Database Systems
7
Dirk
Graphics
7
Mark
Database Systems
10

query TTI rowsort
SELECT s.name, e.course, e.grade FROM students s, exams e WHERE s.id=e.sid AND (s.major = 'CS' OR s.major = 'Games Eng') AND e.grade <= (SELECT AVG(e2.grade) - 1 FROM exams e2 WHERE s.id=e2.sid OR (e2.curriculum=s.major AND s."year">=e2."year")) ORDER BY name, course
----
Dirk
Database Systems
7
Dirk
Graphics
7

query TT rowsort
SELECT name, major FROM students s WHERE EXISTS(SELECT * FROM exams e WHERE e.sid=s.id AND grade=10) OR s.name='Dirk' ORDER BY name
----
Dirk
CS
Mark
CS

statement ok
drop table students

statement ok
drop table exams

query II rowsort
SELECT 1 IN (1, (SELECT 2)), 1 NOT IN (1, (SELECT 2))
----
1
0

statement ok
CREATE TABLE tbl_ProductSales (ColID int, Product_Category  varchar(64), Product_Name  varchar(64), TotalSales int)

statement ok
INSERT INTO tbl_ProductSales VALUES (1,'Game','Mobo Game',200),(2,'Game','PKO Game',400),(3,'Fashion','Shirt',500),(4,'Fashion','Shorts',100)

statement ok
CREATE TABLE another_T (col1 INT, col2 INT, col3 INT, col4 INT, col5 INT, col6 INT, col7 INT, col8 INT)

statement ok
INSERT INTO another_T VALUES (1,2,3,4,5,6,7,8), (11,22,33,44,55,66,77,88), (111,222,333,444,555,666,777,888), (1111,2222,3333,4444,5555,6666,7777,8888)

query I rowsort
SELECT col1 IN (SELECT ColID + col1 FROM tbl_ProductSales) FROM another_T GROUP BY col1
----
0
0
0
0

query I rowsort
SELECT col1 IN (SELECT SUM(ColID + col1) FROM tbl_ProductSales) FROM another_T GROUP BY col1
----
0
0
0
0

query I rowsort
SELECT (SELECT col2 FROM tbl_ProductSales WHERE tbl_ProductSales.ColID = another_T.col1) FROM another_T GROUP BY col1, col2
----
2
NULL
NULL
NULL

query I rowsort
SELECT
	EXISTS (SELECT col2 FROM tbl_ProductSales WHERE tbl_ProductSales.ColID = another_T.col1)
FROM another_T GROUP BY col1, col2, col5, col8
----
0
0
0
1

statement error
SELECT
	EXISTS (SELECT col2 FROM tbl_ProductSales WHERE tbl_ProductSales.ColID = another_T.col1),
	(SELECT ColID FROM tbl_ProductSales) * DENSE_RANK() OVER (PARTITION BY AVG(DISTINCT col5))
FROM another_T GROUP BY col1, col2, col5, col8

query II rowsort
SELECT
	-col1 IN (SELECT ColID FROM tbl_ProductSales),
	col5 = ALL (SELECT 1 FROM tbl_ProductSales HAVING MIN(col8) IS NULL)
FROM another_T GROUP BY col1, col2, col5, col8
----
0
1
0
1
0
1
0
1

query III rowsort
SELECT
	col1 + col5 = (SELECT MIN(ColID) FROM tbl_ProductSales),
	CAST(SUM(DISTINCT CASE WHEN col5 - col8 = (SELECT MIN(ColID / col2) FROM tbl_ProductSales) THEN col2 - 5 ELSE ABS(col1) END) AS BIGINT),
	CAST((SELECT MAX(ColID + col2) FROM tbl_ProductSales) * DENSE_RANK() OVER (PARTITION BY AVG(DISTINCT col5)) AS BIGINT)
FROM another_T
GROUP BY col1, col2, col5, col8
----
0
1
6
0
11
26
0
111
226
0
1111
2226

query II rowsort
SELECT
	col1 + col5 = (SELECT MIN(ColID) FROM tbl_ProductSales),
	MIN(col8) OVER (PARTITION BY col5 ORDER BY col1 ROWS UNBOUNDED PRECEDING)
FROM another_T
GROUP BY col1, col2, col5, col8
----
0
8
0
88
0
888
0
8888

query II rowsort
SELECT
	EXISTS (SELECT 1 FROM tbl_ProductSales),
	NOT EXISTS (SELECT 1 FROM tbl_ProductSales)
FROM another_T
GROUP BY col1
----
1
0
1
0
1
0
1
0

query I rowsort
SELECT NOT col2 <> ANY (SELECT 20 FROM tbl_ProductSales GROUP BY ColID HAVING NOT MAX(col1) <> col1 * AVG(col1 + ColID) * ColID) FROM another_T GROUP BY col1, col2, col5, col8
----
1
1
1
1

query IIII rowsort
SELECT
	NOT -SUM(col2) NOT IN (SELECT ColID FROM tbl_ProductSales GROUP BY ColID HAVING SUM(ColID - col8) <> col5),
	NOT col5 = ALL (SELECT 1 FROM tbl_ProductSales HAVING MAX(col8) > 2 AND MIN(col8) IS NOT NULL),
	NOT col2 <> ANY (SELECT 20 FROM tbl_ProductSales GROUP BY ColID HAVING NOT MAX(col1) <> col1 * AVG(col1 + ColID) * ColID),
	NOT EXISTS (SELECT ColID - 12 FROM tbl_ProductSales GROUP BY ColID HAVING MAX(col2) IS NULL OR NOT col8 <> 2 / col1)
FROM another_T
GROUP BY col1, col2, col5, col8
----
0
1
1
1
0
1
1
1
0
1
1
1
0
1
1
1

query IIII rowsort
SELECT
	DISTINCT
	NOT col1 * col5 = ALL (SELECT 1 FROM tbl_ProductSales HAVING MAX(col2) > 2),
	NOT AVG(col2) * col1 <> ANY (SELECT 20 FROM tbl_ProductSales HAVING MAX(col1) IS NOT NULL OR MIN(col1) < MIN(col2)),
	CAST (NOT col1 IN (SELECT col2 FROM another_T GROUP BY col2) AS INTEGER) | CAST (col2 IN (SELECT col2 FROM another_T GROUP BY col2) AS INTEGER),
	CAST (EXISTS (SELECT MAX(col5) * MAX(col4) FROM another_T GROUP BY col5, col4) AS INTEGER) & CAST (AVG(col1) IN (SELECT DISTINCT col2 FROM another_T GROUP BY col2) AS INTEGER)
FROM another_T
GROUP BY col1, col2, col5
----
0
0
1
0
1
0
1
0

query I rowsort
SELECT
	SUM(col1) IN (SELECT DISTINCT col2 FROM another_T GROUP BY col2)
FROM another_T
GROUP BY col4
----
0
0
0
0

query I rowsort
SELECT
	(SELECT MIN(ColID) FROM tbl_ProductSales INNER JOIN another_T t2 ON t1.col5 = t2.col1)
FROM another_T t1
----
NULL
NULL
NULL
NULL

query I rowsort
SELECT
	t1.col1 = ALL (SELECT col4 + SUM(t1.col5) FROM another_T INNER JOIN tbl_ProductSales ON another_T.col1 = tbl_ProductSales.ColID)
FROM another_T t1
GROUP BY t1.col1
----
0
0
0
0

query IIII rowsort
SELECT
	SUM(t1.col6) NOT IN (SELECT t1.col7),
	t1.col6 NOT IN (SELECT t1.col7),
	t1.col6 IN (SELECT SUM(t1.col7)),
	t1.col6 IN (SELECT SUM(t1.col7) FROM tbl_ProductSales)
FROM another_T t1
GROUP BY t1.col6, t1.col7
----
1
1
0
0
1
1
0
0
1
1
0
0
1
1
0
0

statement error
SELECT
	(SELECT MAX(col6) FROM tbl_ProductSales) IN (SELECT MIN(col3) FROM another_T)
FROM another_T
GROUP BY col1

query I rowsort
SELECT
	CAST(SUM(col3 + col2) AS BIGINT)
FROM another_T
GROUP BY col1
HAVING NOT col1 = ANY (SELECT 0 FROM tbl_ProductSales GROUP BY ColID HAVING NOT MAX(col1) <> AVG(col1))
----
5
55
555
5555

query I rowsort
SELECT
	CAST(SUM(col3) * col1 AS BIGINT)
FROM another_T
GROUP BY col1
HAVING NOT col1 <> ANY (SELECT 0 FROM tbl_ProductSales GROUP BY ColID HAVING NOT MAX(col1) <> col1 * AVG(col1 + ColID) * ColID)
----
3
363
36963
3702963

query I rowsort
SELECT
	CAST(SUM(CAST(t1.col1 IN (SELECT t1.col1 FROM another_T) AS INTEGER)) AS BIGINT)
FROM another_T t1
GROUP BY t1.col2
----
1
1
1
1

query I rowsort
SELECT
    (SELECT MIN(ColID) FROM tbl_ProductSales INNER JOIN another_T t2 ON t1.col7 <> SOME(SELECT MAX(t1.col1 + t3.col4) FROM another_T t3))
FROM another_T t1
----
1
1
1
1

query I rowsort
SELECT
	CASE WHEN 1 IN (SELECT (SELECT MAX(col7)) UNION ALL (SELECT MIN(ColID) FROM tbl_ProductSales INNER JOIN another_T t2 ON t2.col5 = t2.col1)) THEN 2 ELSE NULL END
FROM another_T t1
----
NULL

query I rowsort
SELECT
	CASE WHEN 1 IN (SELECT MAX(col7) UNION ALL (SELECT MIN(ColID) FROM tbl_ProductSales INNER JOIN another_T t2 ON t2.col5 = t2.col1)) THEN 2 ELSE NULL END
FROM another_T t1
----
NULL

query I rowsort
SELECT
	CASE WHEN 1 IN (SELECT (SELECT MAX(col7))) THEN 2 ELSE NULL END
FROM another_T t1
----
NULL

query I rowsort
SELECT
	CASE WHEN 1 IN (SELECT (SELECT MIN(ColID) FROM tbl_ProductSales INNER JOIN another_T t2 ON t2.col5 = t2.col1) UNION ALL (SELECT MAX(col7))) THEN 2 ELSE NULL END
FROM another_T t1
----
NULL

query I rowsort
SELECT
	CASE WHEN NOT col1 NOT IN (SELECT (SELECT MAX(col7)) UNION (SELECT MIN(ColID) FROM tbl_ProductSales LEFT JOIN another_T t2 ON t2.col5 = t1.col1)) THEN 1 ELSE 2 END
FROM another_T t1
GROUP BY col1
----
1
2
2
2

query I rowsort
SELECT
	t1.col1 IN (SELECT ColID FROM tbl_ProductSales GROUP BY t1.col1, tbl_ProductSales.ColID)
FROM another_T t1
GROUP BY col1
----
0
0
0
1

query I rowsort
SELECT t1.col1 FROM another_T t1 WHERE t1.col1 >= ANY(SELECT t1.col1 + t2.col1 FROM another_T t2)
----

statement ok
INSERT INTO tbl_ProductSales VALUES (0, 'a', 'b', 0)

query I rowsort
SELECT col1 IN (SELECT ColID + col1 FROM tbl_ProductSales) FROM another_T GROUP BY col1
----
1
1
1
1

query I rowsort
SELECT col1 IN (SELECT col1 * SUM(ColID + col1) FROM tbl_ProductSales) FROM another_T GROUP BY col1
----
0
0
0
0

statement ok
DROP TABLE tbl_ProductSales

statement ok
DROP TABLE another_T

