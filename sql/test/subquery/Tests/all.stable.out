stdout of test 'all` in directory 'sql/test/subquery` itself:


# 11:10:05 >  
# 11:10:05 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38335" "--set" "mapi_usock=/var/tmp/mtest-11162/.s.monetdb.38335" "--set" "monet_prompt=" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_subquery" "--set" "embedded_c=true"
# 11:10:05 >  

# MonetDB 5 server v11.34.0 (hg id: 6ab80b58ef92+)
# This is an unreleased version
# Serving database 'mTests_sql_test_subquery', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:38335/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-11162/.s.monetdb.38335
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 11:10:05 >  
# 11:10:05 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-11162" "--port=38335"
# 11:10:05 >  

#CREATE TABLE integers(i INTEGER);
#INSERT INTO integers VALUES (1), (2), (3), (NULL);
[ 4	]
#SELECT i FROM integers WHERE i >= ALL(SELECT i FROM integers); -- empty
% sys.integers # table_name
% i # name
% int # type
% 1 # length
#SELECT i, i >= ALL(SELECT i FROM integers) FROM integers ORDER BY i;
% .integers,	.%3 # table_name
% i,	%3 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	NULL	]
[ 1,	false	]
[ 2,	false	]
[ 3,	NULL	]
#SELECT i FROM integers WHERE i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL); -- 3
% sys.integers # table_name
% i # name
% int # type
% 1 # length
[ 3	]
#SELECT i, i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL) FROM integers ORDER BY i;
% .integers,	.%3 # table_name
% i,	%3 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	NULL	]
[ 1,	false	]
[ 2,	false	]
[ 3,	true	]
#SELECT i FROM integers WHERE i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL); -- 3
% sys.integers # table_name
% i # name
% int # type
% 1 # length
[ 3	]
#SELECT i FROM integers WHERE i > ALL(SELECT MIN(i) FROM integers); -- 2, 3
% sys.integers # table_name
% i # name
% int # type
% 1 # length
[ 2	]
[ 3	]
#SELECT i FROM integers WHERE i < ALL(SELECT MAX(i) FROM integers); -- 1, 2
% sys.integers # table_name
% i # name
% int # type
% 1 # length
[ 1	]
[ 2	]
#SELECT i FROM integers WHERE i <= ALL(SELECT i FROM integers); -- empty
% sys.integers # table_name
% i # name
% int # type
% 1 # length
#SELECT i FROM integers WHERE i <= ALL(SELECT i FROM integers WHERE i IS NOT NULL); -- 1
% sys.integers # table_name
% i # name
% int # type
% 1 # length
[ 1	]
#SELECT i FROM integers WHERE i = ALL(SELECT i FROM integers WHERE i=1); -- 1
% .integers # table_name
% i # name
% int # type
% 1 # length
[ 1	]
#SELECT i FROM integers WHERE i <> ALL(SELECT i FROM integers WHERE i=1); -- 2, 3
% sys.integers # table_name
% i # name
% int # type
% 1 # length
[ 2	]
[ 3	]
#SELECT i FROM integers WHERE i = ALL(SELECT i FROM integers WHERE i IS NOT NULL); -- empty
% .integers # table_name
% i # name
% int # type
% 1 # length
#SELECT i FROM integers WHERE i <> ALL(SELECT i FROM integers WHERE i IS NOT NULL); -- empty
% sys.integers # table_name
% i # name
% int # type
% 1 # length
#SELECT i FROM integers WHERE i <> ALL(SELECT i FROM integers WHERE i>10) ORDER BY i; -- null, 1, 2, 3
% sys.integers # table_name
% i # name
% int # type
% 1 # length
[ NULL	]
[ 1	]
[ 2	]
[ 3	]
#SELECT i, i <> ALL(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i; 
% .integers,	.%5 # table_name
% i,	%5 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	true	]
[ 1,	true	]
[ 2,	true	]
[ 3,	true	]
#SELECT i, i > ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;  
% .integers,	.%3 # table_name
% i,	%3 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	false	]
[ 1,	false	]
[ 2,	false	]
[ 3,	false	]
#SELECT i, i = ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
% .integers,	.%5 # table_name
% i,	%5 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	false	]
[ 1,	false	]
[ 2,	false	]
[ 3,	false	]
#SELECT i, i >= ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
% .integers,	.%3 # table_name
% i,	%3 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	false	]
[ 1,	false	]
[ 2,	false	]
[ 3,	false	]
#SELECT i, i <= ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
% .integers,	.%3 # table_name
% i,	%3 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	false	]
[ 1,	false	]
[ 2,	false	]
[ 3,	false	]
#SELECT i, i < ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
% .integers,	.%3 # table_name
% i,	%3 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	false	]
[ 1,	false	]
[ 2,	false	]
[ 3,	false	]
#SELECT i, i <> ANY(SELECT i FROM integers WHERE i>10) FROM integers ORDER BY i;
% .integers,	.%3 # table_name
% i,	%3 # name
% int,	boolean # type
% 1,	5 # length
[ NULL,	false	]
[ 1,	false	]
[ 2,	false	]
[ 3,	false	]
#SELECT i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL) AS k, CAST(SUM(i) AS BIGINT) FROM integers GROUP BY k ORDER BY k;
% .,	.%2 # table_name
% k,	%2 # name
% boolean,	bigint # type
% 5,	1 # length
[ NULL,	NULL	]
[ false,	3	]
[ true,	3	]
#SELECT CAST(SUM(i) AS BIGINT) FROM integers GROUP BY (i >= ALL(SELECT i FROM integers WHERE i IS NOT NULL)) ORDER BY 1; -- NULL, 3, 3
% .%3 # table_name
% %3 # name
% bigint # type
% 1 # length
[ NULL	]
[ 3	]
[ 3	]
#SELECT i >= ALL(SELECT MIN(i) FROM integers WHERE i IS NOT NULL) AS k, CAST(SUM(i) AS BIGINT) FROM integers GROUP BY k ORDER BY k;
% .,	.%2 # table_name
% k,	%2 # name
% boolean,	bigint # type
% 5,	1 # length
[ NULL,	NULL	]
[ true,	6	]
#SELECT i, CAST(SUM(CASE WHEN (i >= ALL(SELECT i FROM integers WHERE i=2)) THEN 1 ELSE 0 END) AS BIGINT) FROM integers GROUP BY i ORDER BY i;
% .integers,	.%2 # table_name
% i,	%2 # name
% int,	bigint # type
% 1,	1 # length
[ NULL,	0	]
[ 1,	0	]
[ 2,	1	]
[ 3,	1	]
#DROP TABLE integers;

# 11:10:05 >  
# 11:10:05 >  "Done."
# 11:10:05 >  

