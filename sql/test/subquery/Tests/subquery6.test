statement ok
CREATE TABLE tbl_ProductSales (ColID int, Product_Category  varchar(64), Product_Name  varchar(64), TotalSales int)

statement ok
INSERT INTO tbl_ProductSales VALUES (1,'Game','Mobo Game',200),(2,'Game','PKO Game',400),(3,'Fashion','Shirt',500),(4,'Fashion','Shorts',100)

statement ok
CREATE TABLE another_T (col1 INT, col2 INT, col3 INT, col4 INT, col5 INT, col6 INT, col7 INT, col8 INT)

statement ok
INSERT INTO another_T VALUES (1,2,3,4,5,6,7,8), (11,22,33,44,55,66,77,88), (111,222,333,444,555,666,777,888), (1111,2222,3333,4444,5555,6666,7777,8888)

statement ok
CREATE TABLE integers(i INTEGER)

statement ok
INSERT INTO integers VALUES (1), (2), (3), (NULL)

statement error
DELETE FROM another_t WHERE (SELECT 1 UNION SELECT 2) > 1

statement error
DELETE FROM another_t WHERE (SELECT 1 UNION SELECT 2) > 1

statement error
UPDATE another_T SET col1 = 1 WHERE (SELECT 1 UNION SELECT 2) > 1

statement error
MERGE INTO another_t USING (SELECT col1 FROM another_t) sub ON (SELECT 1 UNION SELECT 2) > 1 WHEN MATCHED THEN DELETE WHEN NOT MATCHED THEN INSERT

statement error
MERGE INTO another_t USING (SELECT (SELECT 1 UNION SELECT 2) FROM another_t) sub ON TRUE WHEN MATCHED THEN DELETE WHEN NOT MATCHED THEN INSERT

query I rowsort
WITH customer_total_return AS
  (SELECT 1 AS ctr_customer_sk,
          1 AS ctr_state,
          1 AS ctr_total_return)
SELECT 1
FROM customer_total_return ctr1,
     another_T,
     tbl_ProductSales
WHERE ctr1.ctr_total_return >
    (SELECT avg(ctr_total_return)*1.2
     FROM customer_total_return ctr2
     WHERE ctr1.ctr_state = ctr2.ctr_state)
  AND col1 = ColID
  AND ctr1.ctr_customer_sk = TotalSales
----

statement error
SELECT i FROM integers i1 WHERE (SELECT CASE WHEN i1.i IS NULL THEN (SELECT FALSE FROM integers i2) ELSE TRUE END)

query T rowsort
SELECT (SELECT (SELECT SUM(col1)) IN (MAX(col2))) FROM another_t
----
False

statement error
SELECT 1 IN (col4, MIN(col2)) FROM another_t

statement error
SELECT (SELECT col1) IN ('not a number') FROM another_t

query T rowsort
SELECT (SELECT (SELECT SUM(col1)) IN (MAX(col2), '12')) FROM another_t
----
False

query I rowsort
SELECT CASE WHEN ColID IS NULL THEN CAST(Product_Category AS INT) ELSE TotalSales END FROM tbl_ProductSales
----
100
200
400
500

query I rowsort
SELECT ColID FROM tbl_ProductSales WHERE CASE WHEN ColID IS NULL THEN CAST(Product_Category AS INT) ELSE TotalSales END
----
1
2
3
4

query I rowsort
SELECT COALESCE(ColID, CAST(Product_Category AS INT)) FROM tbl_ProductSales
----
1
2
3
4

query I rowsort
SELECT CAST(SUM((SELECT col1)) AS BIGINT) FROM another_t
----
1234

query I rowsort
SELECT CAST(SUM((SELECT col1 + col2)) AS BIGINT) FROM another_t
----
3702

query I rowsort
SELECT CAST(SUM((SELECT CAST(EXISTS(SELECT col1) AS INT))) AS BIGINT) FROM another_t
----
4

query I rowsort
SELECT CAST(SUM((SELECT (SELECT col1 + col2))) AS BIGINT) FROM another_t
----
3702

query I rowsort
SELECT CAST((SELECT SUM((SELECT col1))) AS BIGINT) FROM another_t
----
1234

query I rowsort
SELECT CAST((SELECT SUM((SELECT col1 + col2))) AS BIGINT) FROM another_t
----
3702

query I rowsort
SELECT (SELECT 1 FROM another_t t1 WHERE 'aa' LIKE t2.product_category) FROM tbl_ProductSales t2
----
NULL
NULL
NULL
NULL

query I rowsort
SELECT t1.colid FROM tbl_productsales t1 INNER JOIN tbl_productsales t2 ON t1.product_category NOT LIKE t2.product_category ORDER BY t1.colid
----
1
1
2
2
3
3
4
4

query I rowsort
SELECT t1.colid FROM tbl_productsales t1 INNER JOIN tbl_productsales t2 ON t1.product_category NOT LIKE t2.product_name ORDER BY t1.colid
----
1
1
1
1
2
2
2
2
3
3
3
3
4
4
4
4

query I rowsort
SELECT (SELECT 1 FROM another_t t1 WHERE t2.product_category LIKE CAST(t1.col1 AS VARCHAR(32))) FROM tbl_ProductSales t2
----
NULL
NULL
NULL
NULL

query I rowsort
SELECT (SELECT t2.col2 FROM another_t t2 WHERE t1.col1 BETWEEN t2.col1 AND t2.col2) FROM another_t t1
----
2
22
222
2222

statement error
SELECT (SELECT t2.col2 FROM another_t t2 WHERE t2.col1 BETWEEN t1.col1 AND t2.col2) FROM another_t t1

statement error
SELECT (SELECT t2.col2 FROM another_t t2 WHERE t2.col1 BETWEEN t2.col1 AND t1.col2) FROM another_t t1

statement error
SELECT 1 > (SELECT 2 FROM integers)

query T rowsort
SELECT (SELECT 1) > ANY(SELECT 1)
----
False

statement ok
CREATE FUNCTION debugme() RETURNS INT
BEGIN
	DECLARE res INT;
	SET res = 1 > (select 9 from integers);
	RETURN res;
END

statement error
SELECT debugme()

statement ok
DROP FUNCTION debugme

query TTT rowsort
SELECT i = ALL(i), i < ANY(i), i = ANY(NULL) FROM integers
----
NULL
NULL
NULL
True
False
NULL
True
False
NULL
True
False
NULL

query I rowsort
SELECT i FROM integers WHERE i = ANY(NULL)
----

statement ok
CREATE FUNCTION debugme2() RETURNS INT
BEGIN
	DECLARE n INT;
	WHILE (1 > (select 9 from integers)) do
		SET n = n -1;
	END WHILE;
	RETURN n;
END

statement error
SELECT debugme2()

statement ok
DROP FUNCTION debugme2

statement ok
CREATE FUNCTION debugme3() RETURNS INT
BEGIN
	DECLARE n INT;
	WHILE (1 > ALL(select 1)) do
		SET n = n -1;
	END WHILE;
	RETURN n;
END

query I rowsort
SELECT debugme3()
----
NULL

statement ok
DROP FUNCTION debugme3

statement ok
CREATE FUNCTION debugme4() RETURNS BOOLEAN
BEGIN
	DECLARE n BOOLEAN;
	SET n = (select true union all select false);
	RETURN n;
END

statement error
SELECT debugme4()

statement ok
DROP FUNCTION debugme4

statement ok
CREATE FUNCTION debugme5() RETURNS BOOLEAN
BEGIN
	DECLARE n BOOLEAN;
	SET n = (select 1 where null);
	RETURN n;
END

statement error
SELECT debugme5()

statement ok
DROP FUNCTION debugme5

statement ok
CREATE FUNCTION debugme6() RETURNS INT
BEGIN
	DECLARE n INT;
	WHILE ((SELECT 0) = ANY(SELECT 1)) do
		SET n = 10;
	END WHILE;
	RETURN n;
END

query I rowsort
SELECT debugme6()
----
NULL

statement ok
DROP FUNCTION debugme6

query II rowsort
select rank() over (), min(TotalSales) from tbl_ProductSales
----
1
100

query IT rowsort
select count(*) over (), max(Product_Name) from tbl_ProductSales
----
1
Shorts

query RR rowsort
select corr(1,1), corr(1,1) over () from tbl_ProductSales
----
NULL
NULL

query IT rowsort
select min(colid), group_concat(null) over () from tbl_ProductSales where null
----
NULL
NULL

query IT rowsort
select min(colid), group_concat(null, null) over () from tbl_ProductSales where null
----
NULL
NULL

query IT rowsort
select max(colid), group_concat('a', null) over () from tbl_ProductSales where null
----
NULL
a

query I rowsort
select ntile(1) over ()
----
1

query II rowsort
select ntile(11) over (), min(TotalSales) from tbl_ProductSales
----
1
100

query T rowsort
select nth_value('bug', '1') over ()
----
bug

query T rowsort
select nth_value('bug', 1) over ()
----
bug

query TI rowsort
select nth_value('bug', 1) over (), max(TotalSales) from tbl_ProductSales
----
bug
500

query TTTTT rowsort
select lag('bug') over (), lag('bug', 1) over (), lag('bug', 0) over (), lag('bug', 1, 'oth') over (), lag('bug', 0, 'oth') over ()
----
NULL
NULL
bug
oth
bug

query TTTTTI rowsort
select lead('bug') over (), lead('bug', 1) over (), lead('bug', 0) over (), lead('bug', 1, 'oth') over (), lead('bug', 0, 'oth') over (), max(TotalSales) from tbl_ProductSales
----
NULL
NULL
bug
oth
bug
500

statement error
select 1 = any(ColID), max(totalsales) from tbl_ProductSales

statement error
select 1 in (ColID), max(totalsales) from tbl_ProductSales

statement error
select 1 in (ColID, (select 1)), max(totalsales) from tbl_ProductSales

statement error
select (select (i1.i, i2.i) in (select i2.i, i1.i) from integers i2) from integers i1

statement error
select min(i) as myx from integers group by myx

statement error
select ntile(i) over (), count(*) from integers

statement error
select (select i2.i in (select sum(i1.i + i2.i)) from integers i2) from integers i1

statement error
select (select i2.i in (select sum(i1.i + i2.i)) from integers i2) from integers i1 group by i1.i

statement error
select (select i2.i in (select sum(i1.i + i2.i)) from integers i2 group by i2.i) from integers i1

statement error
select (select i2.i in (select sum(i1.i + i2.i)) from integers i2 group by i2.i) from integers i1 group by i1.i

statement error
select (select sum(i2.i) in (select sum(i1.i + i2.i)) from integers i2 group by i2.i) from integers i1 group by i1.i

statement error
select (select sum(i1.i + i2.i) in (select sum(i1.i + i2.i)) from integers i2 group by i2.i) from integers i1 group by i1.i

query T rowsort
select (select sum(i1.i + i2.i) in (select sum(i1.i + i2.i)) from integers i2) from integers i1
----
NULL
True
True
True

query T rowsort
select (select sum(i1.i + i2.i) > (select sum(i1.i + i2.i)) from integers i2) from integers i1
----
False
False
False
NULL

statement error
select (select sum(i1.i) > (select sum(i1.i + i2.i)) from integers i2) from integers i1

query T rowsort
select (select sum(i2.i) > (select sum(i1.i + i2.i)) from integers i2) from integers i1
----
False
False
False
NULL

query T rowsort
select (select sum(i1.i) > (select sum(i1.i + i2.i)) from integers i2) from integers i1 group by i1.i
----
False
False
False
NULL

query T rowsort
select (select sum(i1.i) < (select sum(sum(i1.i) + i2.i)) from integers i2) from integers i1
----
True

query T rowsort
select (select exists (select sum(i1.i + i2.i)) from integers i2) from integers i1
----
True
True
True
True

query T rowsort
select (select not exists (select sum(i1.i + i2.i)) from integers i2) from integers i1 group by i1.i
----
False
False
False
False

statement error
select 1 where (select 1 union all select 2) in (1)

statement error
select (select 1 union all select 2) in (1)

statement ok
DROP TABLE tbl_ProductSales

statement ok
DROP TABLE another_T

statement ok
DROP TABLE integers


