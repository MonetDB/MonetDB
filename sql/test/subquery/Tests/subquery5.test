statement ok
CREATE TABLE tbl_ProductSales (ColID int, Product_Category  varchar(64), Product_Name  varchar(64), TotalSales int)

statement ok
INSERT INTO tbl_ProductSales VALUES (1,'Game','Mobo Game',200),(2,'Game','PKO Game',400),(3,'Fashion','Shirt',500),(4,'Fashion','Shorts',100)

statement ok
CREATE TABLE another_T (col1 INT, col2 INT, col3 INT, col4 INT, col5 INT, col6 INT, col7 INT, col8 INT)

statement ok
INSERT INTO another_T VALUES (1,2,3,4,5,6,7,8), (11,22,33,44,55,66,77,88), (111,222,333,444,555,666,777,888), (1111,2222,3333,4444,5555,6666,7777,8888)

statement ok
CREATE TABLE integers(i INTEGER)

statement ok
INSERT INTO integers VALUES (1), (2), (3), (NULL)

statement error
SELECT
    (SELECT MIN(col1) GROUP BY col2)
FROM another_T

query II rowsort
SELECT
    (SELECT MIN(col1) WHERE SUM(col2) > 1),
    CAST(SUM((SELECT col1 FROM tbl_ProductSales GROUP BY col2)) AS BIGINT)
FROM another_T GROUP BY col2
----
1
1
11
11
111
111
1111
1111

statement error
SELECT
    (SELECT MIN(col1) WHERE SUM(SUM(col2)) > 1),
    CAST(SUM((SELECT col1 FROM tbl_ProductSales GROUP BY col2)) AS BIGINT)
FROM another_T GROUP BY col2

query II rowsort
SELECT
    CAST(SUM((SELECT col1 FROM tbl_ProductSales GROUP BY col2)) OVER () AS BIGINT),
    CAST(SUM((SELECT SUM(ColID) FROM tbl_ProductSales GROUP BY col2)) OVER () AS BIGINT)
FROM another_T
----
1234
40
1234
40
1234
40
1234
40

statement error
CREATE OR REPLACE FUNCTION evilfunction(input INT) RETURNS TABLE (outt INT) BEGIN RETURN SELECT 1,2; END

statement error
CREATE OR REPLACE FUNCTION evilfunction(input INT) RETURNS INT BEGIN RETURN TABLE(SELECT input, 2); END

statement error
CREATE OR REPLACE FUNCTION evilfunction(input INT) RETURNS INT BEGIN RETURN SELECT input, 2; END

statement ok
CREATE OR REPLACE FUNCTION evilfunction(input INT) RETURNS INT BEGIN RETURN SELECT input WHERE FALSE; END

query I rowsort
SELECT evilfunction(1)
----
NULL

query I rowsort
SELECT evilfunction(1)
----
NULL

query II rowsort
SELECT evilfunction(1), 1
----
NULL
1

statement ok
CREATE OR REPLACE FUNCTION evilfunction(input INT) RETURNS INT
BEGIN
	RETURN SELECT input UNION ALL SELECT input;
END

statement error
SELECT evilfunction(1)

statement error
SELECT evilfunction(1)

statement error
SELECT evilfunction(1), 1

statement error
SELECT 1 FROM another_t t1 HAVING 1 = ANY (SELECT col1)

statement error
SELECT 1 FROM another_t t1 HAVING 1 = ANY (SELECT t1.col1)

statement error
SELECT 1 FROM another_t t1 HAVING 1 = ANY (SELECT 1 WHERE col1)

statement error
SELECT 1 FROM another_t t1 HAVING 1 = ANY (SELECT 1 WHERE t1.col1)

query I rowsort
SELECT col1 FROM another_t t1 GROUP BY col1 HAVING 1 = ANY (SELECT col1)
----
1

query I rowsort
SELECT (SELECT i = ANY(VALUES(1), (i))) FROM integers
----
1
1
1
NULL

statement error
SELECT (SELECT i1.i IN (SELECT SUM(i1.i))) FROM integers i1

query R rowsort
SELECT corr(i1.i, i2.i) FROM integers i1, integers i2
----
0.000

query R rowsort
SELECT corr(i1.i, i2.i) OVER () FROM integers i1, integers i2
----
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000
0.000

statement error
SELECT (SELECT SUM(i1.i) IN (SELECT CORR(i1.i, i2.i) FROM integers i2)) FROM integers i1

statement error
SELECT (SELECT corr(SUM(col1), SUM(col2))) FROM another_t

statement error
SELECT (SELECT corr(col1, SUM(col2))) FROM another_t

statement error
SELECT (SELECT corr(col1, SUM(col2))) FROM another_t GROUP BY col1

statement error
SELECT (SELECT corr(col1, SUM(col2))) FROM another_t GROUP BY col2

statement error
SELECT (SELECT corr(col1, col2) WHERE corr(col3, SUM(col4)) > 0) FROM another_t GROUP BY col5

query I rowsort
SELECT (SELECT 1 GROUP BY SUM(col2 + 1)) FROM another_t
----
1

query I rowsort
SELECT (SELECT 1 WHERE SUM(col2 + 1) > 0) FROM another_t
----
1

statement error
SELECT (SELECT col1 HAVING SUM(col2 + col1) > 0) FROM another_t

statement error
SELECT (SELECT col1 FROM another_t t1, another_t t2) FROM another_t t3

statement error
SELECT (SELECT SUM(SUM(col2) + 1)) FROM another_t

statement error
SELECT (SELECT MIN(t1.col5 - col2) FROM another_T t2) FROM another_T t1 GROUP BY col6

statement error
SELECT (SELECT SUM(SUM(1))) FROM another_t

statement error
SELECT (SELECT SUM(SUM(t2.col1)) FROM another_t t2) FROM another_t t1

query I rowsort
SELECT (SELECT CAST(SUM(col2 - 1) AS BIGINT) GROUP BY SUM(col2 + 1)) FROM another_t
----
2464

query I rowsort
SELECT (SELECT CAST(SUM(col2 + 1) AS BIGINT) GROUP BY SUM(col2 + 1)) FROM another_t
----
2472

query I rowsort
SELECT (WITH a AS (SELECT col1) SELECT a.col1 FROM a) FROM another_t
----
1
11
111
1111

query I rowsort
SELECT (VALUES(col1)) FROM another_t
----
1
11
111
1111

query I rowsort
SELECT CAST((VALUES(SUM(col1 + col2))) AS BIGINT) FROM another_t
----
3702

statement error
SELECT (VALUES(col1, col2)) FROM another_t

statement error
SELECT (VALUES(col1), (col2)) FROM another_t

statement error
SELECT integers.i FROM (VALUES(4),(5),(6),(8)) AS integers(i), integers

statement error
SELECT integers.i FROM integers, (VALUES(4)) AS myt(i), (SELECT 1) AS integers(i)

statement error
SELECT 1 FROM integers CROSS JOIN integers

query II rowsort
SELECT * FROM integers i1 LEFT OUTER JOIN integers i2 ON i2.i = ANY(SELECT SUM(i2.i + i3.i) FROM integers i3) = NOT EXISTS(SELECT MIN(i1.i) OVER ())
----
1
1
1
2
1
3
2
1
2
2
2
3
3
1
3
2
3
3
NULL
1
NULL
2
NULL
3

query II rowsort
SELECT * FROM integers i1 RIGHT OUTER JOIN integers i2 ON i2.i = ANY(SELECT SUM(i2.i + i3.i) FROM integers i3) = NOT EXISTS(SELECT MIN(i1.i) OVER ())
----
1
1
1
2
1
3
2
1
2
2
2
3
3
1
3
2
3
3
NULL
1
NULL
2
NULL
3
NULL
NULL

query II rowsort
SELECT * FROM integers i1 FULL OUTER JOIN integers i2 ON i2.i = ANY(SELECT SUM(i2.i + i3.i) FROM integers i3) = NOT EXISTS(SELECT MIN(i1.i) OVER ())
----
1
1
1
2
1
3
2
1
2
2
2
3
3
1
3
2
3
3
NULL
1
NULL
2
NULL
3
NULL
NULL

query I rowsort
SELECT 1 FROM integers i1 RIGHT OUTER JOIN integers i2 ON NOT EXISTS(SELECT 1)
----
1
1
1
1

statement error
SELECT (SELECT 1 FROM integers i2 INNER JOIN integers i3 ON i1.i = 1) = (SELECT 1 FROM integers i2 INNER JOIN integers i3 ON MIN(i1.i) = 1) FROM integers i1

statement error
SELECT (SELECT i1.i) = (SELECT SUM(i1.i)) FROM integers i1

statement error
SELECT (VALUES(col1)), (VALUES(MAX(col2))) FROM another_t

statement error
SELECT (SELECT CORR(MIN(i1.i), 1) FROM integers i2) FROM integers i1

query I rowsort
SELECT (SELECT 1) IN (SELECT 2 UNION SELECT 3) FROM integers i1
----
0
0
0
0

statement error
SELECT (SELECT 1 UNION SELECT 2) IN (SELECT 1) FROM integers i1

query I rowsort
SELECT (SELECT 1 FROM integers i2 INNER JOIN integers i3 ON MAX(i1.i) = 1) IN (SELECT 1 FROM integers i2 INNER JOIN integers i3 ON MIN(i1.i) = 1) FROM integers i1
----
NULL

statement error
SELECT (SELECT MAX(i1.i + i2.i) FROM integers i2) IN (SELECT MIN(i1.i)) FROM integers i1

statement error
SELECT (SELECT COVAR_SAMP(i1.i, i2.i) FROM integers i2) IN (SELECT MIN(i1.i)) FROM integers i1

query I rowsort
SELECT (SELECT COVAR_POP(i1.i, 1)) IN (SELECT SUM(i1.i)) FROM integers i1
----
0

statement error
SELECT (SELECT MAX(i1.i + i2.i) FROM integers i2) = MIN(i1.i) FROM integers i1

statement error
SELECT (SELECT i2.i FROM integers i2) IN (SELECT MIN(i1.i)) FROM integers i1

query I rowsort
SELECT (SELECT 5) NOT IN (SELECT MIN(i1.i)) FROM integers i1
----
1

query I rowsort
SELECT (SELECT 1) IN (SELECT i1.i) FROM integers i1
----
0
0
1
NULL

query I rowsort
SELECT SUM((SELECT MAX(i1.i + i2.i) FROM integers i2)) FROM integers i1
----
15

statement error
SELECT CORR((SELECT i1.i FROM integers i2), (SELECT SUM(i1.i + i2.i) FROM integers i2)) FROM integers i1

query I rowsort
SELECT i1.i FROM integers i1 WHERE (SELECT TRUE EXCEPT SELECT i1.i > 0)
----
NULL

query I rowsort
SELECT (((SELECT MIN(i2.i + i1.i) FROM integers i2) IN (SELECT i1.i)) = EXISTS(SELECT i1.i)) = ANY(SELECT MIN(i1.i) = 1) FROM integers i1 GROUP BY i1.i
----
0
1
1
NULL

query I rowsort
SELECT (((SELECT MIN(i2.i + i1.i) FROM integers i2) IN (SELECT i1.i)) = EXISTS(SELECT i1.i)) = ANY(SELECT MIN(i1.i) = 1) FROM integers i1 GROUP BY i1.i
HAVING (((SELECT MIN(i2.i + i1.i) FROM integers i2) IN (SELECT i1.i)) = EXISTS(SELECT i1.i)) = ANY(SELECT MIN(i1.i) = 1)
----
1
1

query R rowsort
SELECT (VALUES (SUM(i1.i)),(AVG(i1.i)) INTERSECT VALUES(AVG(i1.i))) FROM integers i1
----
2.000

query I rowsort
SELECT CAST(SUM(i1.i) AS BIGINT) FROM integers i1 HAVING (VALUES(SUM(i1.i)),(AVG(i1.i)) INTERSECT VALUES(AVG(i1.i))) > 0
----
6

query I rowsort
SELECT MAX(i1.i) FROM integers i1 HAVING (VALUES((AVG(i1.i))) EXCEPT VALUES(AVG(i1.i))) <> 0
----

statement error
SELECT (VALUES(SUM(i1.i)) UNION VALUES(AVG(i1.i))) FROM integers i1

statement error
SELECT ((SELECT SUM(i1.i)) UNION ALL (SELECT AVG(i1.i))) FROM integers i1

statement error
SELECT ((SELECT i1.i NOT IN (SELECT i1.i)) UNION (SELECT SUM(i1.i) IN (SELECT i1.i))) FROM integers i1

query I rowsort
SELECT (SELECT 6 EXCEPT (SELECT SUM(i1.i))) IN (SELECT 1) FROM integers i1
----
NULL

query I rowsort
SELECT (SELECT col1) IN (col2) FROM another_T
----
0
0
0
0

query I rowsort
SELECT (col2) IN ((SELECT col2), MIN(col3)) FROM another_T GROUP BY col2
----
1
1
1
1

query I rowsort
SELECT (SELECT CASE WHEN MIN(i1.i) IS NULL THEN (SELECT i2.i FROM integers i2) ELSE MAX(i1.i) END) FROM integers i1
----
3

statement ok
DROP FUNCTION evilfunction(INT)

statement ok
DROP TABLE tbl_ProductSales

statement ok
DROP TABLE another_T

statement ok
DROP TABLE integers

