stdout of test 'except-union-intersect-bug-sf-1146079` in directory 'sql/test/bugs` itself:


# 08:04:12 >  
# 08:04:12 >   mserver5 "--config=/ufs/niels/scratch/rc/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB5/dbfarm"    --set mapi_open=true --set xrpc_open=true --set mapi_port=30729 --set xrpc_port=48326 --set monet_prompt= --trace  "--dbname=mTests_src_test_bugs" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 08:04:12 >  

# MonetDB server v5.12.0, based on kernel v1.30.0
# Serving database 'mTests_src_test_bugs', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2009 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:30729/
# MonetDB/SQL module v2.30.0 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 08:04:13 >  
# 08:04:13 >  ./except-union-intersect-bug-sf-1146079.SQL.sh except-union-intersect-bug-sf-1146079 
# 08:04:13 >  


# 08:04:13 >  
# 08:04:13 >  Mtimeout -timeout 60  java nl.cwi.monetdb.client.JdbcClient -h alf -p 30729 -d mTests_src_test_bugs -e -f "../../../../../../../../scratch1/niels/rc/sql/src/test/bugs/Tests/../except-union-intersect-bug-sf-1146079.sql"
# 08:04:13 >  

START TRANSACTION;
Operation successful


CREATE TABLE "a" (
	"property" int	NOT NULL,
	"class"    int	NOT NULL,
	CONSTRAINT "a_property_class_pkey" PRIMARY KEY ("class", "property")
);
Operation successful


INSERT INTO "a" VALUES (1, 17);
1 affected row

INSERT INTO "a" VALUES (21, 17);
1 affected row

INSERT INTO "a" VALUES (22, 17);
1 affected row

INSERT INTO "a" VALUES (20, 2);
1 affected row

INSERT INTO "a" VALUES (19, 17);
1 affected row

INSERT INTO "a" VALUES (4, 16);
1 affected row

INSERT INTO "a" VALUES (5, 16);
1 affected row

INSERT INTO "a" VALUES (6, 16);
1 affected row

INSERT INTO "a" VALUES (29, 16);
1 affected row

INSERT INTO "a" VALUES (12, 16);
1 affected row

INSERT INTO "a" VALUES (13, 11);
1 affected row

INSERT INTO "a" VALUES (26, 16);
1 affected row

INSERT INTO "a" VALUES (25, 16);
1 affected row

INSERT INTO "a" VALUES (23, 18);
1 affected row

INSERT INTO "a" VALUES (24, 18);
1 affected row

INSERT INTO "a" VALUES (15, 16);
1 affected row



-- table b differs from a that 50% of the values are decreased by 1 (last part)
CREATE TABLE "b" (
	"property" int	NOT NULL,
	"class"    int	NOT NULL,
	CONSTRAINT "b_property_class_pkey" PRIMARY KEY ("class", "property")
);
Operation successful


INSERT INTO "b" VALUES (1, 17);
1 affected row

INSERT INTO "b" VALUES (21, 17);
1 affected row

INSERT INTO "b" VALUES (22, 17);
1 affected row

INSERT INTO "b" VALUES (20, 2);
1 affected row

INSERT INTO "b" VALUES (19, 17);
1 affected row

INSERT INTO "b" VALUES (4, 16);
1 affected row

INSERT INTO "b" VALUES (5, 16);
1 affected row

INSERT INTO "b" VALUES (6, 16);
1 affected row

INSERT INTO "b" VALUES (28, 15);
1 affected row

INSERT INTO "b" VALUES (11, 15);
1 affected row

INSERT INTO "b" VALUES (12, 10);
1 affected row

INSERT INTO "b" VALUES (25, 15);
1 affected row

INSERT INTO "b" VALUES (24, 15);
1 affected row

INSERT INTO "b" VALUES (23, 17);
1 affected row

INSERT INTO "b" VALUES (14, 15);
1 affected row


-- make it permanent
COMMIT;
Operation successful


-- simple check whether everything is there
START TRANSACTION;
Operation successful

SELECT * FROM a;
+----------+-------+
| property | class |
+==========+=======+
|        1 |    17 |
|       21 |    17 |
|       22 |    17 |
|       20 |     2 |
|       19 |    17 |
|        4 |    16 |
|        5 |    16 |
|        6 |    16 |
|       29 |    16 |
|       12 |    16 |
|       13 |    11 |
|       26 |    16 |
|       25 |    16 |
|       23 |    18 |
|       24 |    18 |
|       15 |    16 |
+----------+-------+
16 rows
SELECT * FROM b;
+----------+-------+
| property | class |
+==========+=======+
|        1 |    17 |
|       21 |    17 |
|       22 |    17 |
|       20 |     2 |
|       19 |    17 |
|        4 |    16 |
|        5 |    16 |
|        6 |    16 |
|       28 |    15 |
|       11 |    15 |
|       12 |    10 |
|       25 |    15 |
|       24 |    15 |
|       23 |    17 |
|       14 |    15 |
+----------+-------+
15 rows
ROLLBACK;
Operation successful


-- require an upcast from sht to int
START TRANSACTION;
Operation successful

SELECT class FROM a EXCEPT SELECT 16 ORDER BY class; -- all but 16
+-------+
| class |
+=======+
|     2 |
|    11 |
|    17 |
|    18 |
+-------+
4 rows
SELECT class FROM a UNION SELECT 16 ORDER BY class; -- all with 16 (distinct so invisible)
+-------+
| class  |
+=======+
|      2 |
|     11 |
|     16 |
|     17 |
|     18 |
+-------+
5 rows
SELECT class FROM a INTERSECT SELECT 16 ORDER BY class; -- just 16
+-------+
| class |
+=======+
|    16 |
+-------+
1 row
ROLLBACK;
Operation successful


-- do the same with a real table
START TRANSACTION;
Operation successful

SELECT * FROM a EXCEPT SELECT * FROM b ORDER BY class, property; -- should be last 50% of a
+----------+-------+
| property | class |
+==========+=======+
|       13 |    11 |
|       12 |    16 |
|       15 |    16 |
|       25 |    16 |
|       26 |    16 |
|       29 |    16 |
|       23 |    18 |
|       24 |    18 |
+----------+-------+
8 rows
SELECT * FROM a UNION SELECT * FROM b ORDER BY class, property; -- should be a + last 50% of b
+----------+-------+
| property | class  |
+==========+=======+
|       20 |      2 |
|       12 |     10 |
|       13 |     11 |
|       11 |     15 |
|       14 |     15 |
|       24 |     15 |
|       25 |     15 |
|       28 |     15 |
|        4 |     16 |
|        5 |     16 |
|        6 |     16 |
|       12 |     16 |
|       15 |     16 |
|       25 |     16 |
|       26 |     16 |
|       29 |     16 |
|        1 |     17 |
|       19 |     17 |
|       21 |     17 |
|       22 |     17 |
|       23 |     17 |
|       23 |     18 |
|       24 |     18 |
+----------+-------+
23 rows
SELECT * FROM a INTERSECT SELECT * FROM b ORDER BY class, property; -- should be first 50% of a
+----------+-------+
| property | class |
+==========+=======+
|       20 |     2 |
|        4 |    16 |
|        5 |    16 |
|        6 |    16 |
|        1 |    17 |
|       19 |    17 |
|       21 |    17 |
|       22 |    17 |
+----------+-------+
8 rows
ROLLBACK;
Operation successful


-- now check the non-duplicate removing versions
-- (they are very tricky, so be on your marks!)
START TRANSACTION;
Operation successful

SELECT class FROM a EXCEPT ALL SELECT 16 ORDER BY class; -- all but one 16 (will have 16 in output!)
+-------+
| class |
+=======+
|     2 |
|    11 |
|    16 |
|    16 |
|    16 |
|    16 |
|    16 |
|    16 |
|    16 |
|    17 |
|    17 |
|    17 |
|    17 |
|    18 |
|    18 |
+-------+
15 rows
SELECT class FROM a UNION ALL SELECT 16 ORDER BY class; -- all plus 16
+-------+
| class  |
+=======+
|      2 |
|     11 |
|     16 |
|     16 |
|     16 |
|     16 |
|     16 |
|     16 |
|     16 |
|     16 |
|     16 |
|     17 |
|     17 |
|     17 |
|     17 |
|     18 |
|     18 |
+-------+
17 rows
SELECT class FROM a INTERSECT ALL SELECT 16 ORDER BY class; -- just one 16 (!)
+-------+
| class |
+=======+
|    16 |
+-------+
1 row
ROLLBACK;
Operation successful


-- do the same with a real table (because our tables have a key on both
-- columns we also use only the first column here, as otherwise the ALL
-- would never be tested for tables)
START TRANSACTION;
Operation successful

SELECT * FROM a EXCEPT ALL SELECT * FROM b ORDER BY class, property; -- last 50% of a
+----------+-------+
| property | class |
+==========+=======+
|       13 |    11 |
|       12 |    16 |
|       15 |    16 |
|       25 |    16 |
|       26 |    16 |
|       29 |    16 |
|       23 |    18 |
|       24 |    18 |
+----------+-------+
8 rows
SELECT class FROM a EXCEPT ALL SELECT class FROM b ORDER BY class; -- a minus the elements from b that are in a (if count(x) in a > count(x) in b, x will appear in output)
+-------+
| class |
+=======+
|    11 |
|    16 |
|    16 |
|    16 |
|    16 |
|    16 |
|    18 |
|    18 |
+-------+
8 rows
SELECT * FROM a UNION ALL SELECT * FROM b ORDER BY class, property; -- a + b
+----------+-------+
| property | class  |
+==========+=======+
|       20 |      2 |
|       20 |      2 |
|       12 |     10 |
|       13 |     11 |
|       11 |     15 |
|       14 |     15 |
|       24 |     15 |
|       25 |     15 |
|       28 |     15 |
|        4 |     16 |
|        4 |     16 |
|        5 |     16 |
|        5 |     16 |
|        6 |     16 |
|        6 |     16 |
|       12 |     16 |
|       15 |     16 |
|       25 |     16 |
|       26 |     16 |
|       29 |     16 |
|        1 |     17 |
|        1 |     17 |
|       19 |     17 |
|       19 |     17 |
|       21 |     17 |
|       21 |     17 |
|       22 |     17 |
|       22 |     17 |
|       23 |     17 |
|       23 |     18 |
|       24 |     18 |
+----------+-------+
31 rows
SELECT * FROM a INTERSECT ALL SELECT * FROM b ORDER BY class, property; -- first 50% of a
+----------+-------+
| property | class |
+==========+=======+
|       20 |     2 |
|        4 |    16 |
|        5 |    16 |
|        6 |    16 |
|        1 |    17 |
|       19 |    17 |
|       21 |    17 |
|       22 |    17 |
+----------+-------+
8 rows
SELECT class FROM a INTERSECT ALL SELECT class FROM b ORDER BY class; -- only those that are both in a and b (min(count(a, x), count(b, x)) !!!
+-------+
| class |
+=======+
|     2 |
|    16 |
|    16 |
|    16 |
|    17 |
|    17 |
|    17 |
|    17 |
+-------+
8 rows
ROLLBACK;
Operation successful


-- cleanup! (also should cascade into dropping the index)
START TRANSACTION;
Operation successful

DROP TABLE "a";
Operation successful

DROP TABLE "b";
Operation successful

COMMIT;
Operation successful


# 08:04:13 >  
# 08:04:13 >  Done.
# 08:04:13 >  

