stdout of test 'subselect_multiple_unionall_where_1=1-bug-sf-1005596` in directory 'sql/test/bugs` itself:


# 19:40:37 >  
# 19:40:37 >   mserver5 "--config=/ufs/niels/scratch/monetdb/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=4 --set "monet_mod_path=/ufs/niels/scratch/monetdb/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/monetdb/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/monetdb/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/monetdb/Linux-x86_64/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/niels/scratch/monetdb/Linux-x86_64/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=31946 --set xrpc_port=44499 --set monet_prompt= --trace  "--dbname=mTests_src_test_bugs" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 19:40:37 >  

# MonetDB server v5.9.0, based on kernel v1.27.0
# Serving database 'mTests_src_test_bugs', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:31946/
# MonetDB/SQL module v2.27.0 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 11:55:40 >  
# 11:55:40 >  Mtimeout -timeout 60 MapiClient -lsql -umonetdb -Pmonetdb --host=localhost --port=35185  < subselect_multiple_unionall_where_1=1-bug-sf-1005596.sql
# 11:55:40 >  

#SELECT 1 AS number;
% . # table_name
% number # name
% tinyint # type
% 1 # length
[ 1	]
#SELECT * FROM (
# 	SELECT 'demo' AS "TABLE_CAT",
#		"schemas"."name" AS "TABLE_SCHEM",
#		"tables"."name" AS "TABLE_NAME",
#		'SYSTEM TABLE' AS "TABLE_TYPE",
#		'' AS "REMARKS",
#		null AS "TYPE_CAT",
#		null AS "TYPE_SCHEM",
#		null AS "TYPE_NAME",
#		'rowid' AS "SELF_REFERENCING_COL_NAME",
#		'SYSTEM' AS "REF_GENERATION"
#	FROM "tables", "schemas"
#	WHERE "tables"."schema_id" = "schemas"."id"
#		AND "tables"."system" = true
#		AND "tables"."type" = 0
#) AS "tables"
#WHERE 1 = 1
#	AND ("TABLE_TYPE" LIKE 'TABLE' OR "TABLE_T
% .tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables # table_name
% TABLE_CAT,	TABLE_SCHEM,	TABLE_NAME,	TABLE_TYPE,	REMARKS,	TYPE_CAT,	TYPE_SCHEM,	TYPE_NAME,	SELF_REFERENCING_COL_NAME,	REF_GENERATION # name
% char,	varchar,	varchar,	char,	char,	char,	char,	char,	char,	char # type
% 4,	0,	0,	12,	0,	0,	0,	0,	5,	6 # length
#SELECT 2 AS number;
% . # table_name
% number # name
% tinyint # type
% 1 # length
[ 2	]
% .tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables # table_name
% TABLE_CAT,	TABLE_SCHEM,	TABLE_NAME,	TABLE_TYPE,	REMARKS,	TYPE_CAT,	TYPE_SCHEM,	TYPE_NAME,	SELF_REFERENCING_COL_NAME,	REF_GENERATION # name
% char,	varchar,	varchar,	clob,	char,	char,	char,	char,	char,	char # type
% 4,	0,	0,	0,	0,	0,	0,	0,	5,	6 # length
#SELECT 3 AS number;
% . # table_name
% number # name
% tinyint # type
% 1 # length
[ 3	]
% .tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables # table_name
% TABLE_CAT,	TABLE_SCHEM,	TABLE_NAME,	TABLE_TYPE,	REMARKS,	TYPE_CAT,	TYPE_SCHEM,	TYPE_NAME,	SELF_REFERENCING_COL_NAME,	REF_GENERATION # name
% char,	varchar,	varchar,	clob,	char,	char,	char,	char,	char,	char # type
% 4,	3,	11,	5,	0,	0,	0,	0,	5,	6 # length
[ "demo",	"sys",	"test_update",	"TABLE",	"",	NULL,	NULL,	NULL,	"rowid",	"SYSTEM"	]

# 12:52:40 >  
# 12:52:40 >  Done.
# 12:52:40 >  

