statement ok
start transaction

statement ok
create table testme (a int, b clob, c int)

statement ok
insert into testme values (1, 'another', 1), (5, '', 20), (5, 'if', 20), (2, 'two', 2), (4, 'a singleton', 10), (5, 'else', 20)

query IT rowsort
select a, group_concat(b) from testme where c > 3 group by a
----
4
a singleton
5
,if,else

query T rowsort
select group_concat(a) from testme
----
1,5,5,2,4,5

query T rowsort
select '[' || group_concat(a) || ']' from testme
----
[1,5,5,2,4,5]

query T rowsort
select group_concat(c) from testme where c < 3
----
1,2

statement ok
insert into testme values (6, '', 12), (7, '', 323), (4, 'not a singleton anymore', 7), (7, NULL, 323)

query IT rowsort
select a, group_concat(b) from testme where c > 3 group by a
----
4
a singleton,not a singleton anymore
5
,if,else
6
(empty)
7
(empty)

query T rowsort
select group_concat(a) from testme
----
1,5,5,2,4,5,6,7,4,7

query T rowsort
select '[' || group_concat(a) || ']' from testme
----
[1,5,5,2,4,5,6,7,4,7]

query T rowsort
select group_concat(c) from testme where c < 3
----
1,2

statement ok
create table othertest (a int, b clob)

statement ok
insert into othertest values (1, E'\\t a\t'), (1, E'\n\\n,'), (1, ',,,')

query IT rowsort
select a, group_concat(b) from othertest group by a
----
1
\t a@,@\n,,,,,

query T rowsort
select group_concat(b) from othertest
----
\t a@,@\n,,,,,

statement ok
insert into othertest values (2, E'\n'), (2, E'\n'), (1, '')

query IT rowsort
select a, group_concat(b) from othertest group by a
----
1
\t a@,@\n,,,,,,
2
@,@

query T rowsort
select group_concat(b) from othertest
----
\t a@,@\n,,,,,,@,@,

statement ok
rollback

