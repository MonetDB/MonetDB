statement ok
start transaction

statement ok
create table testme (a int, b clob)

statement ok
insert into testme values (1, 'another'), (1, 'testing'), (1, 'todo')

query IT rowsort
select a, group_concat(b) from testme group by a
----
1
another,testing,todo

statement ok
insert into testme values (2, 'lets'), (2, 'get'), (2, 'harder')

query IT rowsort
select a, group_concat(b) from testme group by a
----
1
another,testing,todo
2
lets,get,harder

statement ok
insert into testme values (3, 'even'), (2, 'more'), (1, 'serious')

query IT rowsort
select a, group_concat(b) from testme group by a
----
1
another,testing,todo,serious
2
lets,get,harder,more
3
even

statement ok
insert into testme values (3, ''), (3, 'more'), (3, ''), (3, 'stress'), (4, NULL)

query IT rowsort
select a, group_concat(b) from testme group by a
----
1
another,testing,todo,serious
2
lets,get,harder,more
3
even,,more,,stress
4
NULL

statement ok
insert into testme values (3, NULL), (4, NULL)

query IT rowsort
select a, group_concat(b) from testme group by a
----
1
another,testing,todo,serious
2
lets,get,harder,more
3
even,,more,,stress
4
NULL

statement ok
insert into testme values (5, ''), (4, 'nothing'), (5, ''), (3, '')

query IT rowsort
select a, group_concat(b) from testme group by a
----
1
another,testing,todo,serious
2
lets,get,harder,more
3
even,,more,,stress,
4
nothing
5
,

query IT rowsort
select a, group_concat(a) from testme group by a
----
1
1,1,1,1
2
2,2,2,2
3
3,3,3,3,3,3,3
4
4,4,4
5
5,5

statement ok
rollback

