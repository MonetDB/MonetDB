stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.main():void;
    X_1:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and t
barrier X_1247:bit := language.dataflow();
    X_43:bat[:str] := bat.new(nil:str);
    X_56:bat[:timestamp] := algebra.project(X_43:bat[:str], nil:timestamp);
    X_45:bat[:timestamp] := bat.new(nil:timestamp);
    X_51:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    C_58:bat[:oid] := algebra.thetaselect(X_51:bat[:bit], true:bit, "==":str);
    X_61:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -28800000:lng);
    X_64:bat[:timestamp] := algebra.projection(C_58:bat[:oid], X_61:bat[:timestamp]);
    X_65:bat[:timestamp] := bat.replace(X_56:bat[:timestamp], C_58:bat[:oid], X_64:bat[:timestamp], true:bit);
    X_66:bat[:bit] := batcalc.not(X_51:bat[:bit]);
    X_69:bat[:bit] := batcalc.isnil(X_66:bat[:bit]);
    X_71:bat[:bit] := batcalc.or(X_66:bat[:bit], X_69:bat[:bit]);
    X_76:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_78:bat[:bit] := batcalc.and(X_71:bat[:bit], X_76:bat[:bit]);
    C_81:bat[:oid] := algebra.thetaselect(X_78:bat[:bit], true:bit, "==":str);
    X_85:bat[:timestamp] := batmtime.timestamp_add_msec_interval(X_45:bat[:timestamp], -25200000:lng);
    X_86:bat[:timestamp] := algebra.projection(C_81:bat[:oid], X_85:bat[:timestamp]);
    X_87:bat[:timestamp] := bat.replace(X_65:bat[:timestamp], C_81:bat[:oid], X_86:bat[:timestamp], true:bit);
    X_88:bat[:bit] := batcalc.not(X_76:bat[:bit]);
    X_89:bat[:bit] := batcalc.isnil(X_88:bat[:bit]);
    X_90:bat[:bit] := batcalc.or(X_88:bat[:bit], X_89:bat[:bit]);
    X_91:bat[:bit] := batcalc.and(X_71:bat[:bit], X_90:bat[:bit]);
    X_96:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_99:bat[:bit] := batcalc.and(X_91:bat[:bit], X_96:bat[:bit]);
    C_102:bat[:oid] := algebra.thetaselect(X_99:bat[:bit], true:bit, "==":str);
    X_108:bat[:timestamp] := algebra.projection(C_102:bat[:oid], X_61:bat[:timestamp]);
    X_109:bat[:timestamp] := bat.replace(X_87:bat[:timestamp], C_102:bat[:oid], X_108:bat[:timestamp], true:bit);
    X_111:bat[:bit] := batcalc.not(X_96:bat[:bit]);
    X_113:bat[:bit] := batcalc.isnil(X_111:bat[:bit]);
    X_115:bat[:bit] := batcalc.or(X_111:bat[:bit], X_113:bat[:bit]);
    X_117:bat[:bit] := batcalc.and(X_91:bat[:bit], X_115:bat[:bit]);
    X_122:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_123:bat[:bit] := batcalc.and(X_117:bat[:bit], X_122:bat[:bit]);
    C_125:bat[:oid] := algebra.thetaselect(X_123:bat[:bit], true:bit, "==":str);
    X_130:bat[:timestamp] := algebra.projection(C_125:bat[:oid], X_85:bat[:timestamp]);
    X_131:bat[:timestamp] := bat.replace(X_109:bat[:timestamp], C_125:bat[:oid], X_130:bat[:timestamp], true:bit);
    X_132:bat[:bit] := batcalc.not(X_122:bat[:bit]);
    X_134:bat[:bit] := batcalc.isnil(X_132:bat[:bit]);
    X_135:bat[:bit] := batcalc.or(X_132:bat[:bit], X_134:bat[:bit]);
    X_136:bat[:bit] := batcalc.and(X_117:bat[:bit], X_135:bat[:bit]);
    X_141:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_144:bat[:bit] := batcalc.and(X_136:bat[:bit], X_141:bat[:bit]);
    C_146:bat[:oid] := algebra.thetaselect(X_144:bat[:bit], true:bit, "==":str);
    X_152:bat[:timestamp] := algebra.projection(C_146:bat[:oid], X_61:bat[:timestamp]);
    X_153:bat[:timestamp] := bat.replace(X_131:bat[:timestamp], C_146:bat[:oid], X_152:bat[:timestamp], true:bit);
    X_154:bat[:bit] := batcalc.not(X_141:bat[:bit]);
    X_156:bat[:bit] := batcalc.isnil(X_154:bat[:bit]);
    X_158:bat[:bit] := batcalc.or(X_154:bat[:bit], X_156:bat[:bit]);
    X_160:bat[:bit] := batcalc.and(X_136:bat[:bit], X_158:bat[:bit]);
    X_165:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_166:bat[:bit] := batcalc.and(X_160:bat[:bit], X_165:bat[:bit]);
    C_169:bat[:oid] := algebra.thetaselect(X_166:bat[:bit], true:bit, "==":str);
    X_174:bat[:timestamp] := algebra.projection(C_169:bat[:oid], X_85:bat[:timestamp]);
    X_175:bat[:timestamp] := bat.replace(X_153:bat[:timestamp], C_169:bat[:oid], X_174:bat[:timestamp], true:bit);
    X_177:bat[:bit] := batcalc.not(X_165:bat[:bit]);
    X_178:bat[:bit] := batcalc.isnil(X_177:bat[:bit]);
    X_179:bat[:bit] := batcalc.or(X_177:bat[:bit], X_178:bat[:bit]);
    X_180:bat[:bit] := batcalc.and(X_160:bat[:bit], X_179:bat[:bit]);
    X_185:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_188:bat[:bit] := batcalc.and(X_180:bat[:bit], X_185:bat[:bit]);
    C_190:bat[:oid] := algebra.thetaselect(X_188:bat[:bit], true:bit, "==":str);
    X_196:bat[:timestamp] := algebra.projection(C_190:bat[:oid], X_61:bat[:timestamp]);
    X_197:bat[:timestamp] := bat.replace(X_175:bat[:timestamp], C_190:bat[:oid], X_196:bat[:timestamp], true:bit);
    X_198:bat[:bit] := batcalc.not(X_185:bat[:bit]);
    X_200:bat[:bit] := batcalc.isnil(X_198:bat[:bit]);
    X_203:bat[:bit] := batcalc.or(X_198:bat[:bit], X_200:bat[:bit]);
    X_205:bat[:bit] := batcalc.and(X_180:bat[:bit], X_203:bat[:bit]);
    X_210:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_212:bat[:bit] := batcalc.and(X_205:bat[:bit], X_210:bat[:bit]);
    C_214:bat[:oid] := algebra.thetaselect(X_212:bat[:bit], true:bit, "==":str);
    X_219:bat[:timestamp] := algebra.projection(C_214:bat[:oid], X_85:bat[:timestamp]);
    X_220:bat[:timestamp] := bat.replace(X_197:bat[:timestamp], C_214:bat[:oid], X_219:bat[:timestamp], true:bit);
    X_221:bat[:bit] := batcalc.not(X_210:bat[:bit]);
    X_222:bat[:bit] := batcalc.isnil(X_221:bat[:bit]);
    X_223:bat[:bit] := batcalc.or(X_221:bat[:bit], X_222:bat[:bit]);
    X_224:bat[:bit] := batcalc.and(X_205:bat[:bit], X_223:bat[:bit]);
    X_229:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_232:bat[:bit] := batcalc.and(X_224:bat[:bit], X_229:bat[:bit]);
    C_234:bat[:oid] := algebra.thetaselect(X_232:bat[:bit], true:bit, "==":str);
    X_240:bat[:timestamp] := algebra.projection(C_234:bat[:oid], X_61:bat[:timestamp]);
    X_241:bat[:timestamp] := bat.replace(X_220:bat[:timestamp], C_234:bat[:oid], X_240:bat[:timestamp], true:bit);
    X_242:bat[:bit] := batcalc.not(X_229:bat[:bit]);
    X_245:bat[:bit] := batcalc.isnil(X_242:bat[:bit]);
    X_247:bat[:bit] := batcalc.or(X_242:bat[:bit], X_245:bat[:bit]);
    X_249:bat[:bit] := batcalc.and(X_224:bat[:bit], X_247:bat[:bit]);
    X_254:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_256:bat[:bit] := batcalc.and(X_249:bat[:bit], X_254:bat[:bit]);
    C_258:bat[:oid] := algebra.thetaselect(X_256:bat[:bit], true:bit, "==":str);
    X_263:bat[:timestamp] := algebra.projection(C_258:bat[:oid], X_85:bat[:timestamp]);
    X_264:bat[:timestamp] := bat.replace(X_241:bat[:timestamp], C_258:bat[:oid], X_263:bat[:timestamp], true:bit);
    X_265:bat[:bit] := batcalc.not(X_254:bat[:bit]);
    X_266:bat[:bit] := batcalc.isnil(X_265:bat[:bit]);
    X_267:bat[:bit] := batcalc.or(X_265:bat[:bit], X_266:bat[:bit]);
    X_268:bat[:bit] := batcalc.and(X_249:bat[:bit], X_267:bat[:bit]);
    X_273:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_276:bat[:bit] := batcalc.and(X_268:bat[:bit], X_273:bat[:bit]);
    C_279:bat[:oid] := algebra.thetaselect(X_276:bat[:bit], true:bit, "==":str);
    X_285:bat[:timestamp] := algebra.projection(C_279:bat[:oid], X_61:bat[:timestamp]);
    X_286:bat[:timestamp] := bat.replace(X_264:bat[:timestamp], C_279:bat[:oid], X_285:bat[:timestamp], true:bit);
    X_287:bat[:bit] := batcalc.not(X_273:bat[:bit]);
    X_289:bat[:bit] := batcalc.isnil(X_287:bat[:bit]);
    X_291:bat[:bit] := batcalc.or(X_287:bat[:bit], X_289:bat[:bit]);
    X_293:bat[:bit] := batcalc.and(X_268:bat[:bit], X_291:bat[:bit]);
    X_298:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_300:bat[:bit] := batcalc.and(X_293:bat[:bit], X_298:bat[:bit]);
    C_302:bat[:oid] := algebra.thetaselect(X_300:bat[:bit], true:bit, "==":str);
    X_307:bat[:timestamp] := algebra.projection(C_302:bat[:oid], X_85:bat[:timestamp]);
    X_308:bat[:timestamp] := bat.replace(X_286:bat[:timestamp], C_302:bat[:oid], X_307:bat[:timestamp], true:bit);
    X_309:bat[:bit] := batcalc.not(X_298:bat[:bit]);
    X_311:bat[:bit] := batcalc.isnil(X_309:bat[:bit]);
    X_312:bat[:bit] := batcalc.or(X_309:bat[:bit], X_311:bat[:bit]);
    X_313:bat[:bit] := batcalc.and(X_293:bat[:bit], X_312:bat[:bit]);
    X_318:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_321:bat[:bit] := batcalc.and(X_313:bat[:bit], X_318:bat[:bit]);
    C_323:bat[:oid] := algebra.thetaselect(X_321:bat[:bit], true:bit, "==":str);
    X_329:bat[:timestamp] := algebra.projection(C_323:bat[:oid], X_61:bat[:timestamp]);
    X_330:bat[:timestamp] := bat.replace(X_308:bat[:timestamp], C_323:bat[:oid], X_329:bat[:timestamp], true:bit);
    X_331:bat[:bit] := batcalc.not(X_318:bat[:bit]);
    X_333:bat[:bit] := batcalc.isnil(X_331:bat[:bit]);
    X_335:bat[:bit] := batcalc.or(X_331:bat[:bit], X_333:bat[:bit]);
    X_337:bat[:bit] := batcalc.and(X_313:bat[:bit], X_335:bat[:bit]);
    X_342:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_344:bat[:bit] := batcalc.and(X_337:bat[:bit], X_342:bat[:bit]);
    C_347:bat[:oid] := algebra.thetaselect(X_344:bat[:bit], true:bit, "==":str);
    X_352:bat[:timestamp] := algebra.projection(C_347:bat[:oid], X_85:bat[:timestamp]);
    X_353:bat[:timestamp] := bat.replace(X_330:bat[:timestamp], C_347:bat[:oid], X_352:bat[:timestamp], true:bit);
    X_354:bat[:bit] := batcalc.not(X_342:bat[:bit]);
    X_355:bat[:bit] := batcalc.isnil(X_354:bat[:bit]);
    X_356:bat[:bit] := batcalc.or(X_354:bat[:bit], X_355:bat[:bit]);
    X_357:bat[:bit] := batcalc.and(X_337:bat[:bit], X_356:bat[:bit]);
    X_362:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_365:bat[:bit] := batcalc.and(X_357:bat[:bit], X_362:bat[:bit]);
    C_367:bat[:oid] := algebra.thetaselect(X_365:bat[:bit], true:bit, "==":str);
    X_373:bat[:timestamp] := algebra.projection(C_367:bat[:oid], X_61:bat[:timestamp]);
    X_374:bat[:timestamp] := bat.replace(X_353:bat[:timestamp], C_367:bat[:oid], X_373:bat[:timestamp], true:bit);
    X_375:bat[:bit] := batcalc.not(X_362:bat[:bit]);
    X_377:bat[:bit] := batcalc.isnil(X_375:bat[:bit]);
    X_380:bat[:bit] := batcalc.or(X_375:bat[:bit], X_377:bat[:bit]);
    X_382:bat[:bit] := batcalc.and(X_357:bat[:bit], X_380:bat[:bit]);
    X_387:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_389:bat[:bit] := batcalc.and(X_382:bat[:bit], X_387:bat[:bit]);
    C_391:bat[:oid] := algebra.thetaselect(X_389:bat[:bit], true:bit, "==":str);
    X_396:bat[:timestamp] := algebra.projection(C_391:bat[:oid], X_85:bat[:timestamp]);
    X_397:bat[:timestamp] := bat.replace(X_374:bat[:timestamp], C_391:bat[:oid], X_396:bat[:timestamp], true:bit);
    X_398:bat[:bit] := batcalc.not(X_387:bat[:bit]);
    X_399:bat[:bit] := batcalc.isnil(X_398:bat[:bit]);
    X_400:bat[:bit] := batcalc.or(X_398:bat[:bit], X_399:bat[:bit]);
    X_401:bat[:bit] := batcalc.and(X_382:bat[:bit], X_400:bat[:bit]);
    X_406:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_409:bat[:bit] := batcalc.and(X_401:bat[:bit], X_406:bat[:bit]);
    C_411:bat[:oid] := algebra.thetaselect(X_409:bat[:bit], true:bit, "==":str);
    X_417:bat[:timestamp] := algebra.projection(C_411:bat[:oid], X_61:bat[:timestamp]);
    X_418:bat[:timestamp] := bat.replace(X_397:bat[:timestamp], C_411:bat[:oid], X_417:bat[:timestamp], true:bit);
    X_419:bat[:bit] := batcalc.not(X_406:bat[:bit]);
    X_422:bat[:bit] := batcalc.isnil(X_419:bat[:bit]);
    X_424:bat[:bit] := batcalc.or(X_419:bat[:bit], X_422:bat[:bit]);
    X_426:bat[:bit] := batcalc.and(X_401:bat[:bit], X_424:bat[:bit]);
    X_431:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_433:bat[:bit] := batcalc.and(X_426:bat[:bit], X_431:bat[:bit]);
    C_435:bat[:oid] := algebra.thetaselect(X_433:bat[:bit], true:bit, "==":str);
    X_440:bat[:timestamp] := algebra.projection(C_435:bat[:oid], X_85:bat[:timestamp]);
    X_441:bat[:timestamp] := bat.replace(X_418:bat[:timestamp], C_435:bat[:oid], X_440:bat[:timestamp], true:bit);
    X_442:bat[:bit] := batcalc.not(X_431:bat[:bit]);
    X_443:bat[:bit] := batcalc.isnil(X_442:bat[:bit]);
    X_444:bat[:bit] := batcalc.or(X_442:bat[:bit], X_443:bat[:bit]);
    X_445:bat[:bit] := batcalc.and(X_426:bat[:bit], X_444:bat[:bit]);
    X_450:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_453:bat[:bit] := batcalc.and(X_445:bat[:bit], X_450:bat[:bit]);
    C_456:bat[:oid] := algebra.thetaselect(X_453:bat[:bit], true:bit, "==":str);
    X_462:bat[:timestamp] := algebra.projection(C_456:bat[:oid], X_61:bat[:timestamp]);
    X_463:bat[:timestamp] := bat.replace(X_441:bat[:timestamp], C_456:bat[:oid], X_462:bat[:timestamp], true:bit);
    X_464:bat[:bit] := batcalc.not(X_450:bat[:bit]);
    X_466:bat[:bit] := batcalc.isnil(X_464:bat[:bit]);
    X_468:bat[:bit] := batcalc.or(X_464:bat[:bit], X_466:bat[:bit]);
    X_470:bat[:bit] := batcalc.and(X_445:bat[:bit], X_468:bat[:bit]);
    X_475:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_477:bat[:bit] := batcalc.and(X_470:bat[:bit], X_475:bat[:bit]);
    C_479:bat[:oid] := algebra.thetaselect(X_477:bat[:bit], true:bit, "==":str);
    X_484:bat[:timestamp] := algebra.projection(C_479:bat[:oid], X_85:bat[:timestamp]);
    X_485:bat[:timestamp] := bat.replace(X_463:bat[:timestamp], C_479:bat[:oid], X_484:bat[:timestamp], true:bit);
    X_486:bat[:bit] := batcalc.not(X_475:bat[:bit]);
    X_488:bat[:bit] := batcalc.isnil(X_486:bat[:bit]);
    X_489:bat[:bit] := batcalc.or(X_486:bat[:bit], X_488:bat[:bit]);
    X_490:bat[:bit] := batcalc.and(X_470:bat[:bit], X_489:bat[:bit]);
    X_495:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_498:bat[:bit] := batcalc.and(X_490:bat[:bit], X_495:bat[:bit]);
    C_500:bat[:oid] := algebra.thetaselect(X_498:bat[:bit], true:bit, "==":str);
    X_506:bat[:timestamp] := algebra.projection(C_500:bat[:oid], X_61:bat[:timestamp]);
    X_507:bat[:timestamp] := bat.replace(X_485:bat[:timestamp], C_500:bat[:oid], X_506:bat[:timestamp], true:bit);
    X_508:bat[:bit] := batcalc.not(X_495:bat[:bit]);
    X_510:bat[:bit] := batcalc.isnil(X_508:bat[:bit]);
    X_512:bat[:bit] := batcalc.or(X_508:bat[:bit], X_510:bat[:bit]);
    X_514:bat[:bit] := batcalc.and(X_490:bat[:bit], X_512:bat[:bit]);
    X_519:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_521:bat[:bit] := batcalc.and(X_514:bat[:bit], X_519:bat[:bit]);
    C_524:bat[:oid] := algebra.thetaselect(X_521:bat[:bit], true:bit, "==":str);
    X_529:bat[:timestamp] := algebra.projection(C_524:bat[:oid], X_85:bat[:timestamp]);
    X_530:bat[:timestamp] := bat.replace(X_507:bat[:timestamp], C_524:bat[:oid], X_529:bat[:timestamp], true:bit);
    X_531:bat[:bit] := batcalc.not(X_519:bat[:bit]);
    X_532:bat[:bit] := batcalc.isnil(X_531:bat[:bit]);
    X_533:bat[:bit] := batcalc.or(X_531:bat[:bit], X_532:bat[:bit]);
    X_534:bat[:bit] := batcalc.and(X_514:bat[:bit], X_533:bat[:bit]);
    X_539:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_542:bat[:bit] := batcalc.and(X_534:bat[:bit], X_539:bat[:bit]);
    C_544:bat[:oid] := algebra.thetaselect(X_542:bat[:bit], true:bit, "==":str);
    X_550:bat[:timestamp] := algebra.projection(C_544:bat[:oid], X_61:bat[:timestamp]);
    X_551:bat[:timestamp] := bat.replace(X_530:bat[:timestamp], C_544:bat[:oid], X_550:bat[:timestamp], true:bit);
    X_552:bat[:bit] := batcalc.not(X_539:bat[:bit]);
    X_554:bat[:bit] := batcalc.isnil(X_552:bat[:bit]);
    X_557:bat[:bit] := batcalc.or(X_552:bat[:bit], X_554:bat[:bit]);
    X_559:bat[:bit] := batcalc.and(X_534:bat[:bit], X_557:bat[:bit]);
    X_564:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_566:bat[:bit] := batcalc.and(X_559:bat[:bit], X_564:bat[:bit]);
    C_568:bat[:oid] := algebra.thetaselect(X_566:bat[:bit], true:bit, "==":str);
    X_573:bat[:timestamp] := algebra.projection(C_568:bat[:oid], X_85:bat[:timestamp]);
    X_574:bat[:timestamp] := bat.replace(X_551:bat[:timestamp], C_568:bat[:oid], X_573:bat[:timestamp], true:bit);
    X_575:bat[:bit] := batcalc.not(X_564:bat[:bit]);
    X_576:bat[:bit] := batcalc.isnil(X_575:bat[:bit]);
    X_577:bat[:bit] := batcalc.or(X_575:bat[:bit], X_576:bat[:bit]);
    X_578:bat[:bit] := batcalc.and(X_559:bat[:bit], X_577:bat[:bit]);
    X_583:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_586:bat[:bit] := batcalc.and(X_578:bat[:bit], X_583:bat[:bit]);
    C_588:bat[:oid] := algebra.thetaselect(X_586:bat[:bit], true:bit, "==":str);
    X_594:bat[:timestamp] := algebra.projection(C_588:bat[:oid], X_61:bat[:timestamp]);
    X_595:bat[:timestamp] := bat.replace(X_574:bat[:timestamp], C_588:bat[:oid], X_594:bat[:timestamp], true:bit);
    X_596:bat[:bit] := batcalc.not(X_583:bat[:bit]);
    X_599:bat[:bit] := batcalc.isnil(X_596:bat[:bit]);
    X_601:bat[:bit] := batcalc.or(X_596:bat[:bit], X_599:bat[:bit]);
    X_603:bat[:bit] := batcalc.and(X_578:bat[:bit], X_601:bat[:bit]);
    X_608:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_610:bat[:bit] := batcalc.and(X_603:bat[:bit], X_608:bat[:bit]);
    C_612:bat[:oid] := algebra.thetaselect(X_610:bat[:bit], true:bit, "==":str);
    X_617:bat[:timestamp] := algebra.projection(C_612:bat[:oid], X_85:bat[:timestamp]);
    X_618:bat[:timestamp] := bat.replace(X_595:bat[:timestamp], C_612:bat[:oid], X_617:bat[:timestamp], true:bit);
    X_619:bat[:bit] := batcalc.not(X_608:bat[:bit]);
    X_620:bat[:bit] := batcalc.isnil(X_619:bat[:bit]);
    X_621:bat[:bit] := batcalc.or(X_619:bat[:bit], X_620:bat[:bit]);
    X_622:bat[:bit] := batcalc.and(X_603:bat[:bit], X_621:bat[:bit]);
    X_627:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_630:bat[:bit] := batcalc.and(X_622:bat[:bit], X_627:bat[:bit]);
    C_633:bat[:oid] := algebra.thetaselect(X_630:bat[:bit], true:bit, "==":str);
    X_639:bat[:timestamp] := algebra.projection(C_633:bat[:oid], X_61:bat[:timestamp]);
    X_640:bat[:timestamp] := bat.replace(X_618:bat[:timestamp], C_633:bat[:oid], X_639:bat[:timestamp], true:bit);
    X_641:bat[:bit] := batcalc.not(X_627:bat[:bit]);
    X_643:bat[:bit] := batcalc.isnil(X_641:bat[:bit]);
    X_645:bat[:bit] := batcalc.or(X_641:bat[:bit], X_643:bat[:bit]);
    X_647:bat[:bit] := batcalc.and(X_622:bat[:bit], X_645:bat[:bit]);
    X_652:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_654:bat[:bit] := batcalc.and(X_647:bat[:bit], X_652:bat[:bit]);
    C_656:bat[:oid] := algebra.thetaselect(X_654:bat[:bit], true:bit, "==":str);
    X_661:bat[:timestamp] := algebra.projection(C_656:bat[:oid], X_85:bat[:timestamp]);
    X_662:bat[:timestamp] := bat.replace(X_640:bat[:timestamp], C_656:bat[:oid], X_661:bat[:timestamp], true:bit);
    X_663:bat[:bit] := batcalc.not(X_652:bat[:bit]);
    X_665:bat[:bit] := batcalc.isnil(X_663:bat[:bit]);
    X_666:bat[:bit] := batcalc.or(X_663:bat[:bit], X_665:bat[:bit]);
    X_667:bat[:bit] := batcalc.and(X_647:bat[:bit], X_666:bat[:bit]);
    X_672:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_675:bat[:bit] := batcalc.and(X_667:bat[:bit], X_672:bat[:bit]);
    C_677:bat[:oid] := algebra.thetaselect(X_675:bat[:bit], true:bit, "==":str);
    X_683:bat[:timestamp] := algebra.projection(C_677:bat[:oid], X_61:bat[:timestamp]);
    X_684:bat[:timestamp] := bat.replace(X_662:bat[:timestamp], C_677:bat[:oid], X_683:bat[:timestamp], true:bit);
    X_685:bat[:bit] := batcalc.not(X_672:bat[:bit]);
    X_687:bat[:bit] := batcalc.isnil(X_685:bat[:bit]);
    X_689:bat[:bit] := batcalc.or(X_685:bat[:bit], X_687:bat[:bit]);
    X_691:bat[:bit] := batcalc.and(X_667:bat[:bit], X_689:bat[:bit]);
    X_696:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_698:bat[:bit] := batcalc.and(X_691:bat[:bit], X_696:bat[:bit]);
    C_701:bat[:oid] := algebra.thetaselect(X_698:bat[:bit], true:bit, "==":str);
    X_706:bat[:timestamp] := algebra.projection(C_701:bat[:oid], X_85:bat[:timestamp]);
    X_707:bat[:timestamp] := bat.replace(X_684:bat[:timestamp], C_701:bat[:oid], X_706:bat[:timestamp], true:bit);
    X_708:bat[:bit] := batcalc.not(X_696:bat[:bit]);
    X_709:bat[:bit] := batcalc.isnil(X_708:bat[:bit]);
    X_710:bat[:bit] := batcalc.or(X_708:bat[:bit], X_709:bat[:bit]);
    X_711:bat[:bit] := batcalc.and(X_691:bat[:bit], X_710:bat[:bit]);
    X_716:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_719:bat[:bit] := batcalc.and(X_711:bat[:bit], X_716:bat[:bit]);
    C_721:bat[:oid] := algebra.thetaselect(X_719:bat[:bit], true:bit, "==":str);
    X_727:bat[:timestamp] := algebra.projection(C_721:bat[:oid], X_61:bat[:timestamp]);
    X_728:bat[:timestamp] := bat.replace(X_707:bat[:timestamp], C_721:bat[:oid], X_727:bat[:timestamp], true:bit);
    X_729:bat[:bit] := batcalc.not(X_716:bat[:bit]);
    X_731:bat[:bit] := batcalc.isnil(X_729:bat[:bit]);
    X_734:bat[:bit] := batcalc.or(X_729:bat[:bit], X_731:bat[:bit]);
    X_736:bat[:bit] := batcalc.and(X_711:bat[:bit], X_734:bat[:bit]);
    X_741:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_743:bat[:bit] := batcalc.and(X_736:bat[:bit], X_741:bat[:bit]);
    C_745:bat[:oid] := algebra.thetaselect(X_743:bat[:bit], true:bit, "==":str);
    X_750:bat[:timestamp] := algebra.projection(C_745:bat[:oid], X_85:bat[:timestamp]);
    X_751:bat[:timestamp] := bat.replace(X_728:bat[:timestamp], C_745:bat[:oid], X_750:bat[:timestamp], true:bit);
    X_752:bat[:bit] := batcalc.not(X_741:bat[:bit]);
    X_753:bat[:bit] := batcalc.isnil(X_752:bat[:bit]);
    X_754:bat[:bit] := batcalc.or(X_752:bat[:bit], X_753:bat[:bit]);
    X_755:bat[:bit] := batcalc.and(X_736:bat[:bit], X_754:bat[:bit]);
    X_760:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_763:bat[:bit] := batcalc.and(X_755:bat[:bit], X_760:bat[:bit]);
    C_765:bat[:oid] := algebra.thetaselect(X_763:bat[:bit], true:bit, "==":str);
    X_771:bat[:timestamp] := algebra.projection(C_765:bat[:oid], X_61:bat[:timestamp]);
    X_772:bat[:timestamp] := bat.replace(X_751:bat[:timestamp], C_765:bat[:oid], X_771:bat[:timestamp], true:bit);
    X_773:bat[:bit] := batcalc.not(X_760:bat[:bit]);
    X_776:bat[:bit] := batcalc.isnil(X_773:bat[:bit]);
    X_778:bat[:bit] := batcalc.or(X_773:bat[:bit], X_776:bat[:bit]);
    X_780:bat[:bit] := batcalc.and(X_755:bat[:bit], X_778:bat[:bit]);
    X_785:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_787:bat[:bit] := batcalc.and(X_780:bat[:bit], X_785:bat[:bit]);
    C_789:bat[:oid] := algebra.thetaselect(X_787:bat[:bit], true:bit, "==":str);
    X_794:bat[:timestamp] := algebra.projection(C_789:bat[:oid], X_85:bat[:timestamp]);
    X_795:bat[:timestamp] := bat.replace(X_772:bat[:timestamp], C_789:bat[:oid], X_794:bat[:timestamp], true:bit);
    X_796:bat[:bit] := batcalc.not(X_785:bat[:bit]);
    X_797:bat[:bit] := batcalc.isnil(X_796:bat[:bit]);
    X_798:bat[:bit] := batcalc.or(X_796:bat[:bit], X_797:bat[:bit]);
    X_799:bat[:bit] := batcalc.and(X_780:bat[:bit], X_798:bat[:bit]);
    X_804:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_807:bat[:bit] := batcalc.and(X_799:bat[:bit], X_804:bat[:bit]);
    C_810:bat[:oid] := algebra.thetaselect(X_807:bat[:bit], true:bit, "==":str);
    X_816:bat[:timestamp] := algebra.projection(C_810:bat[:oid], X_61:bat[:timestamp]);
    X_817:bat[:timestamp] := bat.replace(X_795:bat[:timestamp], C_810:bat[:oid], X_816:bat[:timestamp], true:bit);
    X_818:bat[:bit] := batcalc.not(X_804:bat[:bit]);
    X_820:bat[:bit] := batcalc.isnil(X_818:bat[:bit]);
    X_822:bat[:bit] := batcalc.or(X_818:bat[:bit], X_820:bat[:bit]);
    X_824:bat[:bit] := batcalc.and(X_799:bat[:bit], X_822:bat[:bit]);
    X_829:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_831:bat[:bit] := batcalc.and(X_824:bat[:bit], X_829:bat[:bit]);
    C_833:bat[:oid] := algebra.thetaselect(X_831:bat[:bit], true:bit, "==":str);
    X_838:bat[:timestamp] := algebra.projection(C_833:bat[:oid], X_85:bat[:timestamp]);
    X_839:bat[:timestamp] := bat.replace(X_817:bat[:timestamp], C_833:bat[:oid], X_838:bat[:timestamp], true:bit);
    X_840:bat[:bit] := batcalc.not(X_829:bat[:bit]);
    X_842:bat[:bit] := batcalc.isnil(X_840:bat[:bit]);
    X_843:bat[:bit] := batcalc.or(X_840:bat[:bit], X_842:bat[:bit]);
    X_844:bat[:bit] := batcalc.and(X_824:bat[:bit], X_843:bat[:bit]);
    X_849:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_852:bat[:bit] := batcalc.and(X_844:bat[:bit], X_849:bat[:bit]);
    C_854:bat[:oid] := algebra.thetaselect(X_852:bat[:bit], true:bit, "==":str);
    X_860:bat[:timestamp] := algebra.projection(C_854:bat[:oid], X_61:bat[:timestamp]);
    X_861:bat[:timestamp] := bat.replace(X_839:bat[:timestamp], C_854:bat[:oid], X_860:bat[:timestamp], true:bit);
    X_862:bat[:bit] := batcalc.not(X_849:bat[:bit]);
    X_864:bat[:bit] := batcalc.isnil(X_862:bat[:bit]);
    X_866:bat[:bit] := batcalc.or(X_862:bat[:bit], X_864:bat[:bit]);
    X_868:bat[:bit] := batcalc.and(X_844:bat[:bit], X_866:bat[:bit]);
    X_873:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_875:bat[:bit] := batcalc.and(X_868:bat[:bit], X_873:bat[:bit]);
    C_878:bat[:oid] := algebra.thetaselect(X_875:bat[:bit], true:bit, "==":str);
    X_883:bat[:timestamp] := algebra.projection(C_878:bat[:oid], X_85:bat[:timestamp]);
    X_884:bat[:timestamp] := bat.replace(X_861:bat[:timestamp], C_878:bat[:oid], X_883:bat[:timestamp], true:bit);
    X_885:bat[:bit] := batcalc.not(X_873:bat[:bit]);
    X_886:bat[:bit] := batcalc.isnil(X_885:bat[:bit]);
    X_887:bat[:bit] := batcalc.or(X_885:bat[:bit], X_886:bat[:bit]);
    X_888:bat[:bit] := batcalc.and(X_868:bat[:bit], X_887:bat[:bit]);
    X_893:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_896:bat[:bit] := batcalc.and(X_888:bat[:bit], X_893:bat[:bit]);
    C_898:bat[:oid] := algebra.thetaselect(X_896:bat[:bit], true:bit, "==":str);
    X_904:bat[:timestamp] := algebra.projection(C_898:bat[:oid], X_61:bat[:timestamp]);
    X_905:bat[:timestamp] := bat.replace(X_884:bat[:timestamp], C_898:bat[:oid], X_904:bat[:timestamp], true:bit);
    X_906:bat[:bit] := batcalc.not(X_893:bat[:bit]);
    X_908:bat[:bit] := batcalc.isnil(X_906:bat[:bit]);
    X_911:bat[:bit] := batcalc.or(X_906:bat[:bit], X_908:bat[:bit]);
    X_913:bat[:bit] := batcalc.and(X_888:bat[:bit], X_911:bat[:bit]);
    X_918:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_920:bat[:bit] := batcalc.and(X_913:bat[:bit], X_918:bat[:bit]);
    C_922:bat[:oid] := algebra.thetaselect(X_920:bat[:bit], true:bit, "==":str);
    X_927:bat[:timestamp] := algebra.projection(C_922:bat[:oid], X_85:bat[:timestamp]);
    X_928:bat[:timestamp] := bat.replace(X_905:bat[:timestamp], C_922:bat[:oid], X_927:bat[:timestamp], true:bit);
    X_929:bat[:bit] := batcalc.not(X_918:bat[:bit]);
    X_930:bat[:bit] := batcalc.isnil(X_929:bat[:bit]);
    X_931:bat[:bit] := batcalc.or(X_929:bat[:bit], X_930:bat[:bit]);
    X_932:bat[:bit] := batcalc.and(X_913:bat[:bit], X_931:bat[:bit]);
    X_937:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_940:bat[:bit] := batcalc.and(X_932:bat[:bit], X_937:bat[:bit]);
    C_942:bat[:oid] := algebra.thetaselect(X_940:bat[:bit], true:bit, "==":str);
    X_948:bat[:timestamp] := algebra.projection(C_942:bat[:oid], X_61:bat[:timestamp]);
    X_949:bat[:timestamp] := bat.replace(X_928:bat[:timestamp], C_942:bat[:oid], X_948:bat[:timestamp], true:bit);
    X_950:bat[:bit] := batcalc.not(X_937:bat[:bit]);
    X_953:bat[:bit] := batcalc.isnil(X_950:bat[:bit]);
    X_955:bat[:bit] := batcalc.or(X_950:bat[:bit], X_953:bat[:bit]);
    X_957:bat[:bit] := batcalc.and(X_932:bat[:bit], X_955:bat[:bit]);
    X_962:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_964:bat[:bit] := batcalc.and(X_957:bat[:bit], X_962:bat[:bit]);
    C_966:bat[:oid] := algebra.thetaselect(X_964:bat[:bit], true:bit, "==":str);
    X_971:bat[:timestamp] := algebra.projection(C_966:bat[:oid], X_85:bat[:timestamp]);
    X_972:bat[:timestamp] := bat.replace(X_949:bat[:timestamp], C_966:bat[:oid], X_971:bat[:timestamp], true:bit);
    X_973:bat[:bit] := batcalc.not(X_962:bat[:bit]);
    X_974:bat[:bit] := batcalc.isnil(X_973:bat[:bit]);
    X_975:bat[:bit] := batcalc.or(X_973:bat[:bit], X_974:bat[:bit]);
    X_976:bat[:bit] := batcalc.and(X_957:bat[:bit], X_975:bat[:bit]);
    X_981:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_984:bat[:bit] := batcalc.and(X_976:bat[:bit], X_981:bat[:bit]);
    C_987:bat[:oid] := algebra.thetaselect(X_984:bat[:bit], true:bit, "==":str);
    X_993:bat[:timestamp] := algebra.projection(C_987:bat[:oid], X_61:bat[:timestamp]);
    X_994:bat[:timestamp] := bat.replace(X_972:bat[:timestamp], C_987:bat[:oid], X_993:bat[:timestamp], true:bit);
    X_995:bat[:bit] := batcalc.not(X_981:bat[:bit]);
    X_997:bat[:bit] := batcalc.isnil(X_995:bat[:bit]);
    X_999:bat[:bit] := batcalc.or(X_995:bat[:bit], X_997:bat[:bit]);
    X_1001:bat[:bit] := batcalc.and(X_976:bat[:bit], X_999:bat[:bit]);
    X_1006:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1008:bat[:bit] := batcalc.and(X_1001:bat[:bit], X_1006:bat[:bit]);
    C_1010:bat[:oid] := algebra.thetaselect(X_1008:bat[:bit], true:bit, "==":str);
    X_1015:bat[:timestamp] := algebra.projection(C_1010:bat[:oid], X_85:bat[:timestamp]);
    X_1016:bat[:timestamp] := bat.replace(X_994:bat[:timestamp], C_1010:bat[:oid], X_1015:bat[:timestamp], true:bit);
    X_1017:bat[:bit] := batcalc.not(X_1006:bat[:bit]);
    X_1019:bat[:bit] := batcalc.isnil(X_1017:bat[:bit]);
    X_1020:bat[:bit] := batcalc.or(X_1017:bat[:bit], X_1019:bat[:bit]);
    X_1021:bat[:bit] := batcalc.and(X_1001:bat[:bit], X_1020:bat[:bit]);
    X_1026:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1029:bat[:bit] := batcalc.and(X_1021:bat[:bit], X_1026:bat[:bit]);
    C_1031:bat[:oid] := algebra.thetaselect(X_1029:bat[:bit], true:bit, "==":str);
    X_1037:bat[:timestamp] := algebra.projection(C_1031:bat[:oid], X_61:bat[:timestamp]);
    X_1038:bat[:timestamp] := bat.replace(X_1016:bat[:timestamp], C_1031:bat[:oid], X_1037:bat[:timestamp], true:bit);
    X_1039:bat[:bit] := batcalc.not(X_1026:bat[:bit]);
    X_1041:bat[:bit] := batcalc.isnil(X_1039:bat[:bit]);
    X_1043:bat[:bit] := batcalc.or(X_1039:bat[:bit], X_1041:bat[:bit]);
    X_1045:bat[:bit] := batcalc.and(X_1021:bat[:bit], X_1043:bat[:bit]);
    X_1050:bat[:bit] := batcalc.between(X_45:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1052:bat[:bit] := batcalc.and(X_1045:bat[:bit], X_1050:bat[:bit]);
    C_1055:bat[:oid] := algebra.thetaselect(X_1052:bat[:bit], true:bit, "==":str);
    X_1060:bat[:timestamp] := algebra.projection(C_1055:bat[:oid], X_85:bat[:timestamp]);
    X_1061:bat[:timestamp] := bat.replace(X_1038:bat[:timestamp], C_1055:bat[:oid], X_1060:bat[:timestamp], true:bit);
    X_1062:bat[:bit] := batcalc.not(X_1050:bat[:bit]);
    X_1063:bat[:bit] := batcalc.isnil(X_1062:bat[:bit]);
    X_1064:bat[:bit] := batcalc.or(X_1062:bat[:bit], X_1063:bat[:bit]);
    X_1065:bat[:bit] := batcalc.and(X_1045:bat[:bit], X_1064:bat[:bit]);
    C_1067:bat[:oid] := algebra.thetaselect(X_1065:bat[:bit], true:bit, "==":str);
    X_1073:bat[:timestamp] := algebra.projection(C_1067:bat[:oid], X_61:bat[:timestamp]);
    X_1074:bat[:timestamp] := bat.replace(X_1061:bat[:timestamp], C_1067:bat[:oid], X_1073:bat[:timestamp], true:bit);
    X_1091:bat[:str] := bat.pack(".":str);
    X_1092:bat[:str] := bat.pack("yearref":str);
    X_1093:bat[:str] := bat.pack("clob":str);
    X_1094:bat[:int] := bat.pack(0:int);
    X_1083:bat[:timestamp] := batcalc.timestamp(X_1074:bat[:timestamp], 7:int);
    X_1088:bat[:str] := batmtime.timestamp_to_str(X_1083:bat[:timestamp], "%Y":str);
    language.pass(C_58:bat[:oid]);
    language.pass(X_51:bat[:bit]);
    language.pass(X_66:bat[:bit]);
    language.pass(C_81:bat[:oid]);
    language.pass(X_76:bat[:bit]);
    language.pass(X_88:bat[:bit]);
    language.pass(X_71:bat[:bit]);
    language.pass(C_102:bat[:oid]);
    language.pass(X_96:bat[:bit]);
    language.pass(X_111:bat[:bit]);
    language.pass(X_91:bat[:bit]);
    language.pass(C_125:bat[:oid]);
    language.pass(X_122:bat[:bit]);
    language.pass(X_132:bat[:bit]);
    language.pass(X_117:bat[:bit]);
    language.pass(C_146:bat[:oid]);
    language.pass(X_141:bat[:bit]);
    language.pass(X_154:bat[:bit]);
    language.pass(X_136:bat[:bit]);
    language.pass(C_169:bat[:oid]);
    language.pass(X_165:bat[:bit]);
    language.pass(X_177:bat[:bit]);
    language.pass(X_160:bat[:bit]);
    language.pass(C_190:bat[:oid]);
    language.pass(X_185:bat[:bit]);
    language.pass(X_198:bat[:bit]);
    language.pass(X_180:bat[:bit]);
    language.pass(C_214:bat[:oid]);
    language.pass(X_210:bat[:bit]);
    language.pass(X_221:bat[:bit]);
    language.pass(X_205:bat[:bit]);
    language.pass(C_234:bat[:oid]);
    language.pass(X_229:bat[:bit]);
    language.pass(X_242:bat[:bit]);
    language.pass(X_224:bat[:bit]);
    language.pass(C_258:bat[:oid]);
    language.pass(X_254:bat[:bit]);
    language.pass(X_265:bat[:bit]);
    language.pass(X_249:bat[:bit]);
    language.pass(C_279:bat[:oid]);
    language.pass(X_273:bat[:bit]);
    language.pass(X_287:bat[:bit]);
    language.pass(X_268:bat[:bit]);
    language.pass(C_302:bat[:oid]);
    language.pass(X_298:bat[:bit]);
    language.pass(X_309:bat[:bit]);
    language.pass(X_293:bat[:bit]);
    language.pass(C_323:bat[:oid]);
    language.pass(X_318:bat[:bit]);
    language.pass(X_331:bat[:bit]);
    language.pass(X_313:bat[:bit]);
    language.pass(C_347:bat[:oid]);
    language.pass(X_342:bat[:bit]);
    language.pass(X_354:bat[:bit]);
    language.pass(X_337:bat[:bit]);
    language.pass(C_367:bat[:oid]);
    language.pass(X_362:bat[:bit]);
    language.pass(X_375:bat[:bit]);
    language.pass(X_357:bat[:bit]);
    language.pass(C_391:bat[:oid]);
    language.pass(X_387:bat[:bit]);
    language.pass(X_398:bat[:bit]);
    language.pass(X_382:bat[:bit]);
    language.pass(C_411:bat[:oid]);
    language.pass(X_406:bat[:bit]);
    language.pass(X_419:bat[:bit]);
    language.pass(X_401:bat[:bit]);
    language.pass(C_435:bat[:oid]);
    language.pass(X_431:bat[:bit]);
    language.pass(X_442:bat[:bit]);
    language.pass(X_426:bat[:bit]);
    language.pass(C_456:bat[:oid]);
    language.pass(X_450:bat[:bit]);
    language.pass(X_464:bat[:bit]);
    language.pass(X_445:bat[:bit]);
    language.pass(C_479:bat[:oid]);
    language.pass(X_475:bat[:bit]);
    language.pass(X_486:bat[:bit]);
    language.pass(X_470:bat[:bit]);
    language.pass(C_500:bat[:oid]);
    language.pass(X_495:bat[:bit]);
    language.pass(X_508:bat[:bit]);
    language.pass(X_490:bat[:bit]);
    language.pass(C_524:bat[:oid]);
    language.pass(X_519:bat[:bit]);
    language.pass(X_531:bat[:bit]);
    language.pass(X_514:bat[:bit]);
    language.pass(C_544:bat[:oid]);
    language.pass(X_539:bat[:bit]);
    language.pass(X_552:bat[:bit]);
    language.pass(X_534:bat[:bit]);
    language.pass(C_568:bat[:oid]);
    language.pass(X_564:bat[:bit]);
    language.pass(X_575:bat[:bit]);
    language.pass(X_559:bat[:bit]);
    language.pass(C_588:bat[:oid]);
    language.pass(X_583:bat[:bit]);
    language.pass(X_596:bat[:bit]);
    language.pass(X_578:bat[:bit]);
    language.pass(C_612:bat[:oid]);
    language.pass(X_608:bat[:bit]);
    language.pass(X_619:bat[:bit]);
    language.pass(X_603:bat[:bit]);
    language.pass(C_633:bat[:oid]);
    language.pass(X_627:bat[:bit]);
    language.pass(X_641:bat[:bit]);
    language.pass(X_622:bat[:bit]);
    language.pass(C_656:bat[:oid]);
    language.pass(X_652:bat[:bit]);
    language.pass(X_663:bat[:bit]);
    language.pass(X_647:bat[:bit]);
    language.pass(C_677:bat[:oid]);
    language.pass(X_672:bat[:bit]);
    language.pass(X_685:bat[:bit]);
    language.pass(X_667:bat[:bit]);
    language.pass(C_701:bat[:oid]);
    language.pass(X_696:bat[:bit]);
    language.pass(X_708:bat[:bit]);
    language.pass(X_691:bat[:bit]);
    language.pass(C_721:bat[:oid]);
    language.pass(X_716:bat[:bit]);
    language.pass(X_729:bat[:bit]);
    language.pass(X_711:bat[:bit]);
    language.pass(C_745:bat[:oid]);
    language.pass(X_741:bat[:bit]);
    language.pass(X_752:bat[:bit]);
    language.pass(X_736:bat[:bit]);
    language.pass(C_765:bat[:oid]);
    language.pass(X_760:bat[:bit]);
    language.pass(X_773:bat[:bit]);
    language.pass(X_755:bat[:bit]);
    language.pass(C_789:bat[:oid]);
    language.pass(X_785:bat[:bit]);
    language.pass(X_796:bat[:bit]);
    language.pass(X_780:bat[:bit]);
    language.pass(C_810:bat[:oid]);
    language.pass(X_804:bat[:bit]);
    language.pass(X_818:bat[:bit]);
    language.pass(X_799:bat[:bit]);
    language.pass(C_833:bat[:oid]);
    language.pass(X_829:bat[:bit]);
    language.pass(X_840:bat[:bit]);
    language.pass(X_824:bat[:bit]);
    language.pass(C_854:bat[:oid]);
    language.pass(X_849:bat[:bit]);
    language.pass(X_862:bat[:bit]);
    language.pass(X_844:bat[:bit]);
    language.pass(C_878:bat[:oid]);
    language.pass(X_873:bat[:bit]);
    language.pass(X_885:bat[:bit]);
    language.pass(X_868:bat[:bit]);
    language.pass(C_898:bat[:oid]);
    language.pass(X_893:bat[:bit]);
    language.pass(X_906:bat[:bit]);
    language.pass(X_888:bat[:bit]);
    language.pass(C_922:bat[:oid]);
    language.pass(X_918:bat[:bit]);
    language.pass(X_929:bat[:bit]);
    language.pass(X_913:bat[:bit]);
    language.pass(C_942:bat[:oid]);
    language.pass(X_937:bat[:bit]);
    language.pass(X_950:bat[:bit]);
    language.pass(X_932:bat[:bit]);
    language.pass(C_966:bat[:oid]);
    language.pass(X_962:bat[:bit]);
    language.pass(X_973:bat[:bit]);
    language.pass(X_957:bat[:bit]);
    language.pass(C_987:bat[:oid]);
    language.pass(X_981:bat[:bit]);
    language.pass(X_995:bat[:bit]);
    language.pass(X_976:bat[:bit]);
    language.pass(C_1010:bat[:oid]);
    language.pass(X_1006:bat[:bit]);
    language.pass(X_1017:bat[:bit]);
    language.pass(X_1001:bat[:bit]);
    language.pass(C_1031:bat[:oid]);
    language.pass(X_1026:bat[:bit]);
    language.pass(X_1039:bat[:bit]);
    language.pass(X_1021:bat[:bit]);
    language.pass(X_45:bat[:timestamp]);
    language.pass(X_85:bat[:timestamp]);
    language.pass(C_1055:bat[:oid]);
    language.pass(X_1050:bat[:bit]);
    language.pass(X_1062:bat[:bit]);
    language.pass(X_1045:bat[:bit]);
    language.pass(X_61:bat[:timestamp]);
    language.pass(C_1067:bat[:oid]);
exit X_1247:bit;
    sql.resultSet(X_1091:bat[:str], X_1092:bat[:str], X_1093:bat[:str], X_1094:bat[:int], X_1094:bat[:int], X_1088:bat[:str]);
end user.main;
# optimizer.mitosis()
# optimizer.dataflow()
#inline               actions= 0 time=36 usec 
#remap                actions=368 time=710 usec 
#costmodel            actions= 1 time=12 usec 
#coercion             actions=416 time=78 usec 
#aliases              actions=649 time=118 usec 
#evaluate             actions=185 time=356 usec 
#emptybind            actions=11 time=51 usec 
#pushselect           actions= 0 time=18 usec 
#aliases              actions=188 time=68 usec 
#mergetable           actions= 0 time=164 usec 
#deadcode             actions=18 time=48 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

