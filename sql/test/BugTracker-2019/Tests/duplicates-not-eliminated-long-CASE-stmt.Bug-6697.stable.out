stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.s4_0():void;
    X_142:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and
    X_1614:bat[:str] := bat.pack("sys.":str);
    X_1615:bat[:str] := bat.pack("yearref":str);
    X_1616:bat[:str] := bat.pack("clob":str);
    X_1617:bat[:int] := bat.pack(0:int);
    X_191:bat[:timestamp] := bat.new(nil:timestamp);
    X_203:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_206:bat[:bit] := batcalc.isnil(X_203:bat[:bit]);
    X_220:bat[:bit] := batcalc.ifthenelse(X_206:bat[:bit], false:bit, X_203:bat[:bit]);
    X_1457:bat[:timestamp] := mal.manifold("mtime":str, "timestamp_add_msec_interval":str, X_191:bat[:timestamp], -28800000:lng);
    X_232:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_233:bat[:bit] := batcalc.isnil(X_232:bat[:bit]);
    X_248:bat[:bit] := batcalc.ifthenelse(X_233:bat[:bit], false:bit, X_232:bat[:bit]);
    X_1461:bat[:timestamp] := mal.manifold("mtime":str, "timestamp_add_msec_interval":str, X_191:bat[:timestamp], -25200000:lng);
    X_259:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_260:bat[:bit] := batcalc.isnil(X_259:bat[:bit]);
    X_274:bat[:bit] := batcalc.ifthenelse(X_260:bat[:bit], false:bit, X_259:bat[:bit]);
    X_286:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_289:bat[:bit] := batcalc.isnil(X_286:bat[:bit]);
    X_303:bat[:bit] := batcalc.ifthenelse(X_289:bat[:bit], false:bit, X_286:bat[:bit]);
    X_313:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_314:bat[:bit] := batcalc.isnil(X_313:bat[:bit]);
    X_330:bat[:bit] := batcalc.ifthenelse(X_314:bat[:bit], false:bit, X_313:bat[:bit]);
    X_343:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_344:bat[:bit] := batcalc.isnil(X_343:bat[:bit]);
    X_356:bat[:bit] := batcalc.ifthenelse(X_344:bat[:bit], false:bit, X_343:bat[:bit]);
    X_367:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_370:bat[:bit] := batcalc.isnil(X_367:bat[:bit]);
    X_385:bat[:bit] := batcalc.ifthenelse(X_370:bat[:bit], false:bit, X_367:bat[:bit]);
    X_396:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_397:bat[:bit] := batcalc.isnil(X_396:bat[:bit]);
    X_413:bat[:bit] := batcalc.ifthenelse(X_397:bat[:bit], false:bit, X_396:bat[:bit]);
    X_424:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_425:bat[:bit] := batcalc.isnil(X_424:bat[:bit]);
    X_438:bat[:bit] := batcalc.ifthenelse(X_425:bat[:bit], false:bit, X_424:bat[:bit]);
    X_451:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_454:bat[:bit] := batcalc.isnil(X_451:bat[:bit]);
    X_467:bat[:bit] := batcalc.ifthenelse(X_454:bat[:bit], false:bit, X_451:bat[:bit]);
    X_477:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_478:bat[:bit] := batcalc.isnil(X_477:bat[:bit]);
    X_495:bat[:bit] := batcalc.ifthenelse(X_478:bat[:bit], false:bit, X_477:bat[:bit]);
    X_507:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_508:bat[:bit] := batcalc.isnil(X_507:bat[:bit]);
    X_521:bat[:bit] := batcalc.ifthenelse(X_508:bat[:bit], false:bit, X_507:bat[:bit]);
    X_532:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_535:bat[:bit] := batcalc.isnil(X_532:bat[:bit]);
    X_550:bat[:bit] := batcalc.ifthenelse(X_535:bat[:bit], false:bit, X_532:bat[:bit]);
    X_561:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_562:bat[:bit] := batcalc.isnil(X_561:bat[:bit]);
    X_577:bat[:bit] := batcalc.ifthenelse(X_562:bat[:bit], false:bit, X_561:bat[:bit]);
    X_589:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_590:bat[:bit] := batcalc.isnil(X_589:bat[:bit]);
    X_603:bat[:bit] := batcalc.ifthenelse(X_590:bat[:bit], false:bit, X_589:bat[:bit]);
    X_615:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_618:bat[:bit] := batcalc.isnil(X_615:bat[:bit]);
    X_632:bat[:bit] := batcalc.ifthenelse(X_618:bat[:bit], false:bit, X_615:bat[:bit]);
    X_642:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_643:bat[:bit] := batcalc.isnil(X_642:bat[:bit]);
    X_660:bat[:bit] := batcalc.ifthenelse(X_643:bat[:bit], false:bit, X_642:bat[:bit]);
    X_672:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_673:bat[:bit] := batcalc.isnil(X_672:bat[:bit]);
    X_685:bat[:bit] := batcalc.ifthenelse(X_673:bat[:bit], false:bit, X_672:bat[:bit]);
    X_697:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_700:bat[:bit] := batcalc.isnil(X_697:bat[:bit]);
    X_714:bat[:bit] := batcalc.ifthenelse(X_700:bat[:bit], false:bit, X_697:bat[:bit]);
    X_726:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_727:bat[:bit] := batcalc.isnil(X_726:bat[:bit]);
    X_742:bat[:bit] := batcalc.ifthenelse(X_727:bat[:bit], false:bit, X_726:bat[:bit]);
    X_753:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_754:bat[:bit] := batcalc.isnil(X_753:bat[:bit]);
    X_768:bat[:bit] := batcalc.ifthenelse(X_754:bat[:bit], false:bit, X_753:bat[:bit]);
    X_780:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_783:bat[:bit] := batcalc.isnil(X_780:bat[:bit]);
    X_797:bat[:bit] := batcalc.ifthenelse(X_783:bat[:bit], false:bit, X_780:bat[:bit]);
    X_807:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_808:bat[:bit] := batcalc.isnil(X_807:bat[:bit]);
    X_824:bat[:bit] := batcalc.ifthenelse(X_808:bat[:bit], false:bit, X_807:bat[:bit]);
    X_837:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_838:bat[:bit] := batcalc.isnil(X_837:bat[:bit]);
    X_850:bat[:bit] := batcalc.ifthenelse(X_838:bat[:bit], false:bit, X_837:bat[:bit]);
    X_861:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_864:bat[:bit] := batcalc.isnil(X_861:bat[:bit]);
    X_879:bat[:bit] := batcalc.ifthenelse(X_864:bat[:bit], false:bit, X_861:bat[:bit]);
    X_890:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_891:bat[:bit] := batcalc.isnil(X_890:bat[:bit]);
    X_907:bat[:bit] := batcalc.ifthenelse(X_891:bat[:bit], false:bit, X_890:bat[:bit]);
    X_918:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_919:bat[:bit] := batcalc.isnil(X_918:bat[:bit]);
    X_932:bat[:bit] := batcalc.ifthenelse(X_919:bat[:bit], false:bit, X_918:bat[:bit]);
    X_945:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_948:bat[:bit] := batcalc.isnil(X_945:bat[:bit]);
    X_961:bat[:bit] := batcalc.ifthenelse(X_948:bat[:bit], false:bit, X_945:bat[:bit]);
    X_971:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_972:bat[:bit] := batcalc.isnil(X_971:bat[:bit]);
    X_989:bat[:bit] := batcalc.ifthenelse(X_972:bat[:bit], false:bit, X_971:bat[:bit]);
    X_1001:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1002:bat[:bit] := batcalc.isnil(X_1001:bat[:bit]);
    X_1015:bat[:bit] := batcalc.ifthenelse(X_1002:bat[:bit], false:bit, X_1001:bat[:bit]);
    X_1026:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1029:bat[:bit] := batcalc.isnil(X_1026:bat[:bit]);
    X_1044:bat[:bit] := batcalc.ifthenelse(X_1029:bat[:bit], false:bit, X_1026:bat[:bit]);
    X_1055:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1056:bat[:bit] := batcalc.isnil(X_1055:bat[:bit]);
    X_1071:bat[:bit] := batcalc.ifthenelse(X_1056:bat[:bit], false:bit, X_1055:bat[:bit]);
    X_1083:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1084:bat[:bit] := batcalc.isnil(X_1083:bat[:bit]);
    X_1097:bat[:bit] := batcalc.ifthenelse(X_1084:bat[:bit], false:bit, X_1083:bat[:bit]);
    X_1109:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1112:bat[:bit] := batcalc.isnil(X_1109:bat[:bit]);
    X_1126:bat[:bit] := batcalc.ifthenelse(X_1112:bat[:bit], false:bit, X_1109:bat[:bit]);
    X_1136:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1137:bat[:bit] := batcalc.isnil(X_1136:bat[:bit]);
    X_1154:bat[:bit] := batcalc.ifthenelse(X_1137:bat[:bit], false:bit, X_1136:bat[:bit]);
    X_1166:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1167:bat[:bit] := batcalc.isnil(X_1166:bat[:bit]);
    X_1179:bat[:bit] := batcalc.ifthenelse(X_1167:bat[:bit], false:bit, X_1166:bat[:bit]);
    X_1191:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1194:bat[:bit] := batcalc.isnil(X_1191:bat[:bit]);
    X_1208:bat[:bit] := batcalc.ifthenelse(X_1194:bat[:bit], false:bit, X_1191:bat[:bit]);
    X_1220:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1221:bat[:bit] := batcalc.isnil(X_1220:bat[:bit]);
    X_1236:bat[:bit] := batcalc.ifthenelse(X_1221:bat[:bit], false:bit, X_1220:bat[:bit]);
    X_1247:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1248:bat[:bit] := batcalc.isnil(X_1247:bat[:bit]);
    X_1262:bat[:bit] := batcalc.ifthenelse(X_1248:bat[:bit], false:bit, X_1247:bat[:bit]);
    X_1274:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1277:bat[:bit] := batcalc.isnil(X_1274:bat[:bit]);
    X_1291:bat[:bit] := batcalc.ifthenelse(X_1277:bat[:bit], false:bit, X_1274:bat[:bit]);
    X_1301:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1302:bat[:bit] := batcalc.isnil(X_1301:bat[:bit]);
    X_1318:bat[:bit] := batcalc.ifthenelse(X_1302:bat[:bit], false:bit, X_1301:bat[:bit]);
    X_1331:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1332:bat[:bit] := batcalc.isnil(X_1331:bat[:bit]);
    X_1344:bat[:bit] := batcalc.ifthenelse(X_1332:bat[:bit], false:bit, X_1331:bat[:bit]);
    X_1355:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1358:bat[:bit] := batcalc.isnil(X_1355:bat[:bit]);
    X_1373:bat[:bit] := batcalc.ifthenelse(X_1358:bat[:bit], false:bit, X_1355:bat[:bit]);
    X_1384:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1385:bat[:bit] := batcalc.isnil(X_1384:bat[:bit]);
    X_1401:bat[:bit] := batcalc.ifthenelse(X_1385:bat[:bit], false:bit, X_1384:bat[:bit]);
    X_1412:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1413:bat[:bit] := batcalc.isnil(X_1412:bat[:bit]);
    X_1426:bat[:bit] := batcalc.ifthenelse(X_1413:bat[:bit], false:bit, X_1412:bat[:bit]);
    X_1439:bat[:bit] := batcalc.between(X_191:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1442:bat[:bit] := batcalc.isnil(X_1439:bat[:bit]);
    X_1455:bat[:bit] := batcalc.ifthenelse(X_1442:bat[:bit], false:bit, X_1439:bat[:bit]);
    X_1556:bat[:timestamp] := batcalc.ifthenelse(X_1455:bat[:bit], X_1461:bat[:timestamp], X_1457:bat[:timestamp]);
    X_1559:bat[:timestamp] := batcalc.ifthenelse(X_1426:bat[:bit], X_1457:bat[:timestamp], X_1556:bat[:timestamp]);
    X_1560:bat[:timestamp] := batcalc.ifthenelse(X_1401:bat[:bit], X_1461:bat[:timestamp], X_1559:bat[:timestamp]);
    X_1561:bat[:timestamp] := batcalc.ifthenelse(X_1373:bat[:bit], X_1457:bat[:timestamp], X_1560:bat[:timestamp]);
    X_1562:bat[:timestamp] := batcalc.ifthenelse(X_1344:bat[:bit], X_1461:bat[:timestamp], X_1561:bat[:timestamp]);
    X_1563:bat[:timestamp] := batcalc.ifthenelse(X_1318:bat[:bit], X_1457:bat[:timestamp], X_1562:bat[:timestamp]);
    X_1564:bat[:timestamp] := batcalc.ifthenelse(X_1291:bat[:bit], X_1461:bat[:timestamp], X_1563:bat[:timestamp]);
    X_1565:bat[:timestamp] := batcalc.ifthenelse(X_1262:bat[:bit], X_1457:bat[:timestamp], X_1564:bat[:timestamp]);
    X_1566:bat[:timestamp] := batcalc.ifthenelse(X_1236:bat[:bit], X_1461:bat[:timestamp], X_1565:bat[:timestamp]);
    X_1567:bat[:timestamp] := batcalc.ifthenelse(X_1208:bat[:bit], X_1457:bat[:timestamp], X_1566:bat[:timestamp]);
    X_1568:bat[:timestamp] := batcalc.ifthenelse(X_1179:bat[:bit], X_1461:bat[:timestamp], X_1567:bat[:timestamp]);
    X_1569:bat[:timestamp] := batcalc.ifthenelse(X_1154:bat[:bit], X_1457:bat[:timestamp], X_1568:bat[:timestamp]);
    X_1570:bat[:timestamp] := batcalc.ifthenelse(X_1126:bat[:bit], X_1461:bat[:timestamp], X_1569:bat[:timestamp]);
    X_1571:bat[:timestamp] := batcalc.ifthenelse(X_1097:bat[:bit], X_1457:bat[:timestamp], X_1570:bat[:timestamp]);
    X_1572:bat[:timestamp] := batcalc.ifthenelse(X_1071:bat[:bit], X_1461:bat[:timestamp], X_1571:bat[:timestamp]);
    X_1573:bat[:timestamp] := batcalc.ifthenelse(X_1044:bat[:bit], X_1457:bat[:timestamp], X_1572:bat[:timestamp]);
    X_1574:bat[:timestamp] := batcalc.ifthenelse(X_1015:bat[:bit], X_1461:bat[:timestamp], X_1573:bat[:timestamp]);
    X_1575:bat[:timestamp] := batcalc.ifthenelse(X_989:bat[:bit], X_1457:bat[:timestamp], X_1574:bat[:timestamp]);
    X_1576:bat[:timestamp] := batcalc.ifthenelse(X_961:bat[:bit], X_1461:bat[:timestamp], X_1575:bat[:timestamp]);
    X_1577:bat[:timestamp] := batcalc.ifthenelse(X_932:bat[:bit], X_1457:bat[:timestamp], X_1576:bat[:timestamp]);
    X_1578:bat[:timestamp] := batcalc.ifthenelse(X_907:bat[:bit], X_1461:bat[:timestamp], X_1577:bat[:timestamp]);
    X_1579:bat[:timestamp] := batcalc.ifthenelse(X_879:bat[:bit], X_1457:bat[:timestamp], X_1578:bat[:timestamp]);
    X_1580:bat[:timestamp] := batcalc.ifthenelse(X_850:bat[:bit], X_1461:bat[:timestamp], X_1579:bat[:timestamp]);
    X_1581:bat[:timestamp] := batcalc.ifthenelse(X_824:bat[:bit], X_1457:bat[:timestamp], X_1580:bat[:timestamp]);
    X_1582:bat[:timestamp] := batcalc.ifthenelse(X_797:bat[:bit], X_1461:bat[:timestamp], X_1581:bat[:timestamp]);
    X_1583:bat[:timestamp] := batcalc.ifthenelse(X_768:bat[:bit], X_1457:bat[:timestamp], X_1582:bat[:timestamp]);
    X_1584:bat[:timestamp] := batcalc.ifthenelse(X_742:bat[:bit], X_1461:bat[:timestamp], X_1583:bat[:timestamp]);
    X_1585:bat[:timestamp] := batcalc.ifthenelse(X_714:bat[:bit], X_1457:bat[:timestamp], X_1584:bat[:timestamp]);
    X_1586:bat[:timestamp] := batcalc.ifthenelse(X_685:bat[:bit], X_1461:bat[:timestamp], X_1585:bat[:timestamp]);
    X_1587:bat[:timestamp] := batcalc.ifthenelse(X_660:bat[:bit], X_1457:bat[:timestamp], X_1586:bat[:timestamp]);
    X_1588:bat[:timestamp] := batcalc.ifthenelse(X_632:bat[:bit], X_1461:bat[:timestamp], X_1587:bat[:timestamp]);
    X_1589:bat[:timestamp] := batcalc.ifthenelse(X_603:bat[:bit], X_1457:bat[:timestamp], X_1588:bat[:timestamp]);
    X_1592:bat[:timestamp] := batcalc.ifthenelse(X_577:bat[:bit], X_1461:bat[:timestamp], X_1589:bat[:timestamp]);
    X_1593:bat[:timestamp] := batcalc.ifthenelse(X_550:bat[:bit], X_1457:bat[:timestamp], X_1592:bat[:timestamp]);
    X_1594:bat[:timestamp] := batcalc.ifthenelse(X_521:bat[:bit], X_1461:bat[:timestamp], X_1593:bat[:timestamp]);
    X_1595:bat[:timestamp] := batcalc.ifthenelse(X_495:bat[:bit], X_1457:bat[:timestamp], X_1594:bat[:timestamp]);
    X_1596:bat[:timestamp] := batcalc.ifthenelse(X_467:bat[:bit], X_1461:bat[:timestamp], X_1595:bat[:timestamp]);
    X_1597:bat[:timestamp] := batcalc.ifthenelse(X_438:bat[:bit], X_1457:bat[:timestamp], X_1596:bat[:timestamp]);
    X_1598:bat[:timestamp] := batcalc.ifthenelse(X_413:bat[:bit], X_1461:bat[:timestamp], X_1597:bat[:timestamp]);
    X_1599:bat[:timestamp] := batcalc.ifthenelse(X_385:bat[:bit], X_1457:bat[:timestamp], X_1598:bat[:timestamp]);
    X_1600:bat[:timestamp] := batcalc.ifthenelse(X_356:bat[:bit], X_1461:bat[:timestamp], X_1599:bat[:timestamp]);
    X_1601:bat[:timestamp] := batcalc.ifthenelse(X_330:bat[:bit], X_1457:bat[:timestamp], X_1600:bat[:timestamp]);
    X_1602:bat[:timestamp] := batcalc.ifthenelse(X_303:bat[:bit], X_1461:bat[:timestamp], X_1601:bat[:timestamp]);
    X_1603:bat[:timestamp] := batcalc.ifthenelse(X_274:bat[:bit], X_1457:bat[:timestamp], X_1602:bat[:timestamp]);
    X_1604:bat[:timestamp] := batcalc.ifthenelse(X_248:bat[:bit], X_1461:bat[:timestamp], X_1603:bat[:timestamp]);
    X_1605:bat[:timestamp] := batcalc.ifthenelse(X_220:bat[:bit], X_1457:bat[:timestamp], X_1604:bat[:timestamp]);
    X_1606:bat[:timestamp] := batcalc.timestamp(X_1605:bat[:timestamp], 7:int);
    X_1610:bat[:str] := mal.manifold("mtime":str, "timestamp_to_str":str, X_1606:bat[:timestamp], "%Y":str);
    sql.resultSet(X_1614:bat[:str], X_1615:bat[:str], X_1616:bat[:str], X_1617:bat[:int], X_1617:bat[:int], X_1610:bat[:str]);
end user.s4_0;
#inline               actions= 0 time=24 usec 
#remap                actions=230 time=419 usec 
#costmodel            actions= 1 time=12 usec 
#coercion             actions=416 time=78 usec 
#aliases              actions=649 time=118 usec 
#evaluate             actions=185 time=356 usec 
#emptybind            actions=11 time=51 usec 
#pushselect           actions= 0 time=18 usec 
#aliases              actions=188 time=68 usec 
#mergetable           actions= 0 time=164 usec 
#deadcode             actions=18 time=48 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

