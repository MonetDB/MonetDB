stdout of test 'next-get-value-bulk.Bug-6766` in directory 'sql/test/BugTracker-2019` itself:


# 09:54:58 >  
# 09:54:58 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=39869" "--set" "mapi_usock=/var/tmp/mtest-12664/.s.monetdb.39869" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-Apr2019/BUILD/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "embedded_c=true"
# 09:54:58 >  

# MonetDB 5 server v11.33.12 (hg id: e994c3289040)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.527 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:39869/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-12664/.s.monetdb.39869
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_views.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_lidar.sql
# loading sql script: 75_shp.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded

# 14:05:52 >  
# 14:05:52 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-23154" "--port=30076"
# 14:05:52 >  

#start transaction;
#create sequence myseq as int;
#create sequence myotherseq as int;
#select 'sys', seq.name, next_value_for('sys', seq.name) from sys.sequences seq, sys.schemas s where s.id = seq.schema_id order by s.name, seq.name;
% .%2,	sys.seq,	.%3 # table_name
% %2,	name,	%3 # name
% char,	varchar,	bigint # type
% 3,	10,	1 # length
[ "sys",	"myotherseq",	1	]
[ "sys",	"myseq",	1	]
#select s.name, 'myseq', next_value_for(s.name, 'myseq') from sys.sequences seq, sys.schemas s where s.id = seq.schema_id order by s.name, seq.name;
% sys.s,	.%2,	sys.%3 # table_name
% name,	%2,	%3 # name
% varchar,	char,	bigint # type
% 3,	5,	1 # length
[ "sys",	"myseq",	3	]
[ "sys",	"myseq",	2	]
#select s.name, seq.name, next_value_for(s.name, seq.name) from sys.sequences seq, sys.schemas s where s.id = seq.schema_id order by s.name, seq.name;
% sys.s,	sys.seq,	sys.%2 # table_name
% name,	name,	%2 # name
% varchar,	varchar,	bigint # type
% 3,	10,	1 # length
[ "sys",	"myotherseq",	2	]
[ "sys",	"myseq",	4	]
#select 'sys', seq.name, get_value_for('sys', seq.name) from sys.sequences seq, sys.schemas s where s.id = seq.schema_id order by s.name, seq.name;
% .%2,	sys.seq,	.%3 # table_name
% %2,	name,	%3 # name
% char,	varchar,	bigint # type
% 3,	10,	1 # length
[ "sys",	"myotherseq",	3	]
[ "sys",	"myseq",	5	]
#select s.name, 'myseq', get_value_for(s.name, 'myseq') from sys.sequences seq, sys.schemas s where s.id = seq.schema_id order by s.name, seq.name;
% sys.s,	.%2,	sys.%3 # table_name
% name,	%2,	%3 # name
% varchar,	char,	bigint # type
% 3,	5,	1 # length
[ "sys",	"myseq",	5	]
[ "sys",	"myseq",	5	]
#select s.name, seq.name, get_value_for(s.name, seq.name) from sys.sequences seq, sys.schemas s where s.id = seq.schema_id order by s.name, seq.name;
% sys.s,	sys.seq,	sys.%2 # table_name
% name,	name,	%2 # name
% varchar,	varchar,	bigint # type
% 3,	10,	1 # length
[ "sys",	"myotherseq",	3	]
[ "sys",	"myseq",	5	]
#select s.name, seq.name, "restart"(s.name, seq.name, 1) from sys.sequences seq, sys.schemas s where s.id = seq.schema_id order by s.name, seq.name;
% sys.s,	sys.seq,	sys.%2 # table_name
% name,	name,	%2 # name
% varchar,	varchar,	bigint # type
% 3,	10,	1 # length
[ "sys",	"myotherseq",	1	]
[ "sys",	"myseq",	1	]
#rollback;

# 09:54:58 >  
# 09:54:58 >  "Done."
# 09:54:58 >  

