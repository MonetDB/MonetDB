stdout of test 'slow-inner-join.Bug-6737` in directory 'sql/test/BugTracker-2019` itself:


# 10:02:31 >  
# 10:02:31 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30899" "--set" "mapi_usock=/var/tmp/mtest-13172/.s.monetdb.30899" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-Apr2019/BUILD/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "embedded_r=yes" "--set" "embedded_py=2" "--set" "embedded_c=true"
# 10:02:31 >  

# MonetDB 5 server v11.33.4 (hg id: 101e6463524a+)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.527 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:30899/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13172/.s.monetdb.30899
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_views.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_lidar.sql
# loading sql script: 75_shp.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded
# MonetDB/Python2 module loaded
# MonetDB/R   module loaded

# 13:08:58 >  
# 13:08:58 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-11396" "--port=35887"
# 13:08:58 >  

#start transaction;
#create table monet1_test ("Id" bigserial, key int, value varchar(2000));
#create table monet2_test ("Id" bigserial, key int, value varchar(2000));
#insert into monet1_test select value "Id", value "key", value "value" from generate_series(1,600);
[ 599	]
#insert into monet2_test select value "Id", value "key", value "value" from generate_series(1,200);
[ 199	]
#select count(1) from monet2_test t1 inner join monet1_test t2 on exists (select t1.key intersect select t2.key);
% .%11 # table_name
% %11 # name
% bigint # type
% 3 # length
[ 199	]
#select count(1) from monet2_test where exists(select 1 from monet1_test t2 where (t2.key = monet2_test.key) or ((t2.key is null) and (monet2_test.key is null)));
% .%1 # table_name
% %1 # name
% bigint # type
% 3 # length
[ 199	]
#select count(1) from monet2_test t1 inner join monet1_test t2 on ((t1.key = t2.key) or ((t1.key is null) and (t2.key is null)));
% .%3 # table_name
% %3 # name
% bigint # type
% 3 # length
[ 199	]
#MERGE INTO monet2_test
#USING monet1_test AS t_1
#	ON ("monet2_test"."key" = t_1."key" OR ("monet2_test"."key" IS NULL AND t_1."key" IS NULL))
#	WHEN MATCHED THEN
#	UPDATE SET "key" = t_1."key", "value" = t_1."value"
#	WHEN NOT MATCHED THEN
#	INSERT ("Id", "key", "value")
#	VALUES (t_1."Id", t_1."key", t_1."value");
[ 599	]
#rollback;

# 10:02:38 >  
# 10:02:38 >  "Done."
# 10:02:38 >  

