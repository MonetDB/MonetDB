stdout of test 'duplicates-not-eliminated-long-CASE-stmt.Bug-6697` in directory 'sql/test/BugTracker-2019` itself:


# 14:08:13 >  
# 14:08:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33481" "--set" "mapi_usock=/var/tmp/mtest-8696/.s.monetdb.33481" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 14:08:13 >  

# MonetDB 5 server v11.34.0 (hg id: 29627d20d2e0)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.385 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:33481/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8696/.s.monetdb.33481
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 14:08:13 >  
# 14:08:13 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8696" "--port=33481"
# 14:08:13 >  

#CREATE TABLE IF NOT EXISTS "task" (
#"sys_class_name" VARCHAR(80),
#"priority" BIGINT,
#"sys_created_on" TIMESTAMP
#);
#explain SELECT  sys.timestamp_to_str(case when task0."sys_created_on" >= '1999-10-31 09:00:00' and task0."sys_created_on" < '2000-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2000-04-02 10:00:00' and task0."sys_created_on" < '2000-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2000-10-29 09:00:00' and task0."sys_created_on" < '2001-04-01 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2001-04-01 10:00:00' and task0."sys_created_on" < '2001-10-28 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2001-10-28 09:00:00' and task0."sys_created_on" < '2002-04-07 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2002-04-07 10:00:00' and task0."sys_created_on" < '2002-10-27 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2002-10-27 09:00:00' and task0."sys_created_on" < '2003-04-06 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2003-04-06 10:00:00' and task0."sys_created_on" < '2003-10-26 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2003-10-26 09:00:00' and task0."sys_created_on" < '2004-04-04 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2004-04-04 10:00:00' and task0."sys_created_on" < '2004-10-31 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2004-10-31 09:00:00' and task0."sys_created_on" < '2005-04-03 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2005-04-03 10:00:00' and task0."sys_created_on" < '2005-10-30 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2005-10-30 09:00:00' and task0."sys_created_on" < '2006-04-02 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2006-04-02 10:00:00' and task0."sys_created_on" < '2006-10-29 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2006-10-29 09:00:00' and task0."sys_created_on" < '2007-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2007-03-11 10:00:00' and task0."sys_created_on" < '2007-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2007-11-04 09:00:00' and task0."sys_created_on" < '2008-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2008-03-09 10:00:00' and task0."sys_created_on" < '2008-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2008-11-02 09:00:00' and task0."sys_created_on" < '2009-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2009-03-08 10:00:00' and task0."sys_created_on" < '2009-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2009-11-01 09:00:00' and task0."sys_created_on" < '2010-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2010-03-14 10:00:00' and task0."sys_created_on" < '2010-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2010-11-07 09:00:00' and task0."sys_created_on" < '2011-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2011-03-13 10:00:00' and task0."sys_created_on" < '2011-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2011-11-06 09:00:00' and task0."sys_created_on" < '2012-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2012-03-11 10:00:00' and task0."sys_created_on" < '2012-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2012-11-04 09:00:00' and task0."sys_created_on" < '2013-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2013-03-10 10:00:00' and task0."sys_created_on" < '2013-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2013-11-03 09:00:00' and task0."sys_created_on" < '2014-03-09 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2014-03-09 10:00:00' and task0."sys_created_on" < '2014-11-02 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2014-11-02 09:00:00' and task0."sys_created_on" < '2015-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2015-03-08 10:00:00' and task0."sys_created_on" < '2015-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2015-11-01 09:00:00' and task0."sys_created_on" < '2016-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2016-03-13 10:00:00' and task0."sys_created_on" < '2016-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2016-11-06 09:00:00' and task0."sys_created_on" < '2017-03-12 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2017-03-12 10:00:00' and task0."sys_created_on" < '2017-11-05 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2017-11-05 09:00:00' and task0."sys_created_on" < '2018-03-11 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2018-03-11 10:00:00' and task0."sys_created_on" < '2018-11-04 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2018-11-04 09:00:00' and task0."sys_created_on" < '2019-03-10 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2019-03-10 10:00:00' and task0."sys_created_on" < '2019-11-03 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2019-11-03 09:00:00' and task0."sys_created_on" < '2020-03-08 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2020-03-08 10:00:00' and task0."sys_created_on" < '2020-11-01 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2020-11-01 09:00:00' and task0."sys_created_on" < '2021-03-14 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2021-03-14 10:00:00' and task0."sys_created_on" < '2021-11-07 09:00:00' then task0."sys_created_on" + interval '-25200' second when task0."sys_created_on" >= '2021-11-07 09:00:00' and task0."sys_created_on" < '2022-03-13 10:00:00' then task0."sys_created_on" + interval '-28800' second when task0."sys_created_on" >= '2022-03-13 10:00:00' and task0."sys_created_on" < '2022-11-06 09:00:00' then task0."sys_created_on" + interval '-25200' second else task0."sys_created_on" + interval '-28800' second end,'%Y') AS yearref FROM task task0 WHERE task0."sys_class_name" = 'incident' AND task0."priority" IS NOT NULL ;
% .explain # table_name
% mal # name
% clob # type
% 1023 # length
function user.s6_0():void;
    X_142:void := querylog.define("explain select sys.timestamp_to_str(case when task0.\"sys_created_on\" >= \\'1999-10-31 09:00:00\\' and task0.\"sys_created_on\" < \\'2000-04-02 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2000-04-02 10:00:00\\' and task0.\"sys_created_on\" < \\'2000-10-29 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2000-10-29 09:00:00\\' and task0.\"sys_created_on\" < \\'2001-04-01 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2001-04-01 10:00:00\\' and task0.\"sys_created_on\" < \\'2001-10-28 09:00:00\\' then task0.\"sys_created_on\" + interval \\'-25200\\' second when task0.\"sys_created_on\" >= \\'2001-10-28 09:00:00\\' and task0.\"sys_created_on\" < \\'2002-04-07 10:00:00\\' then task0.\"sys_created_on\" + interval \\'-28800\\' second when task0.\"sys_created_on\" >= \\'2002-04-07 10:00:00\\' and
    X_1246:bat[:str] := bat.pack("sys.":str);
    X_1247:bat[:str] := bat.pack("yearref":str);
    X_1248:bat[:str] := bat.pack("clob":str);
    X_1249:bat[:int] := bat.pack(0:int);
    X_184:bat[:timestamp] := bat.new(nil:timestamp);
    X_196:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "1999-10-31 09:00:00.000000":timestamp, "2000-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_200:bat[:timestamp] := mal.manifold("mtime":str, "timestamp_add_msec_interval":str, X_184:bat[:timestamp], -28800000:lng);
    X_215:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2000-04-02 10:00:00.000000":timestamp, "2000-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_219:bat[:timestamp] := mal.manifold("mtime":str, "timestamp_add_msec_interval":str, X_184:bat[:timestamp], -25200000:lng);
    X_233:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2000-10-29 09:00:00.000000":timestamp, "2001-04-01 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_254:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2001-04-01 10:00:00.000000":timestamp, "2001-10-28 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_272:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2001-10-28 09:00:00.000000":timestamp, "2002-04-07 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_293:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2002-04-07 10:00:00.000000":timestamp, "2002-10-27 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_311:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2002-10-27 09:00:00.000000":timestamp, "2003-04-06 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_332:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2003-04-06 10:00:00.000000":timestamp, "2003-10-26 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_350:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2003-10-26 09:00:00.000000":timestamp, "2004-04-04 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_371:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2004-04-04 10:00:00.000000":timestamp, "2004-10-31 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_389:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2004-10-31 09:00:00.000000":timestamp, "2005-04-03 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_410:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2005-04-03 10:00:00.000000":timestamp, "2005-10-30 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_428:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2005-10-30 09:00:00.000000":timestamp, "2006-04-02 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_449:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2006-04-02 10:00:00.000000":timestamp, "2006-10-29 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_467:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2006-10-29 09:00:00.000000":timestamp, "2007-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_488:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2007-03-11 10:00:00.000000":timestamp, "2007-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_506:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2007-11-04 09:00:00.000000":timestamp, "2008-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_527:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2008-03-09 10:00:00.000000":timestamp, "2008-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_545:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2008-11-02 09:00:00.000000":timestamp, "2009-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_566:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2009-03-08 10:00:00.000000":timestamp, "2009-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_584:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2009-11-01 09:00:00.000000":timestamp, "2010-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_605:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2010-03-14 10:00:00.000000":timestamp, "2010-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_623:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2010-11-07 09:00:00.000000":timestamp, "2011-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_644:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2011-03-13 10:00:00.000000":timestamp, "2011-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_662:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2011-11-06 09:00:00.000000":timestamp, "2012-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_683:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2012-03-11 10:00:00.000000":timestamp, "2012-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_701:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2012-11-04 09:00:00.000000":timestamp, "2013-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_722:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2013-03-10 10:00:00.000000":timestamp, "2013-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_740:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2013-11-03 09:00:00.000000":timestamp, "2014-03-09 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_761:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2014-03-09 10:00:00.000000":timestamp, "2014-11-02 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_779:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2014-11-02 09:00:00.000000":timestamp, "2015-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_800:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2015-03-08 10:00:00.000000":timestamp, "2015-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_818:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2015-11-01 09:00:00.000000":timestamp, "2016-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_839:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2016-03-13 10:00:00.000000":timestamp, "2016-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_857:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2016-11-06 09:00:00.000000":timestamp, "2017-03-12 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_878:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2017-03-12 10:00:00.000000":timestamp, "2017-11-05 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_896:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2017-11-05 09:00:00.000000":timestamp, "2018-03-11 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_917:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2018-03-11 10:00:00.000000":timestamp, "2018-11-04 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_935:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2018-11-04 09:00:00.000000":timestamp, "2019-03-10 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_956:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2019-03-10 10:00:00.000000":timestamp, "2019-11-03 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_974:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2019-11-03 09:00:00.000000":timestamp, "2020-03-08 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_995:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2020-03-08 10:00:00.000000":timestamp, "2020-11-01 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1013:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2020-11-01 09:00:00.000000":timestamp, "2021-03-14 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1034:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2021-03-14 10:00:00.000000":timestamp, "2021-11-07 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1052:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2021-11-07 09:00:00.000000":timestamp, "2022-03-13 10:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1073:bat[:bit] := batcalc.between(X_184:bat[:timestamp], "2022-03-13 10:00:00.000000":timestamp, "2022-11-06 09:00:00.000000":timestamp, false:bit, true:bit, false:bit, false:bit, false:bit);
    X_1084:bat[:timestamp] := batcalc.ifthenelse(X_1073:bat[:bit], X_219:bat[:timestamp], X_200:bat[:timestamp]);
    X_1089:bat[:timestamp] := batcalc.ifthenelse(X_1052:bat[:bit], X_200:bat[:timestamp], X_1084:bat[:timestamp]);
    X_1092:bat[:timestamp] := batcalc.ifthenelse(X_1034:bat[:bit], X_219:bat[:timestamp], X_1089:bat[:timestamp]);
    X_1096:bat[:timestamp] := batcalc.ifthenelse(X_1013:bat[:bit], X_200:bat[:timestamp], X_1092:bat[:timestamp]);
    X_1099:bat[:timestamp] := batcalc.ifthenelse(X_995:bat[:bit], X_219:bat[:timestamp], X_1096:bat[:timestamp]);
    X_1102:bat[:timestamp] := batcalc.ifthenelse(X_974:bat[:bit], X_200:bat[:timestamp], X_1099:bat[:timestamp]);
    X_1105:bat[:timestamp] := batcalc.ifthenelse(X_956:bat[:bit], X_219:bat[:timestamp], X_1102:bat[:timestamp]);
    X_1109:bat[:timestamp] := batcalc.ifthenelse(X_935:bat[:bit], X_200:bat[:timestamp], X_1105:bat[:timestamp]);
    X_1112:bat[:timestamp] := batcalc.ifthenelse(X_917:bat[:bit], X_219:bat[:timestamp], X_1109:bat[:timestamp]);
    X_1115:bat[:timestamp] := batcalc.ifthenelse(X_896:bat[:bit], X_200:bat[:timestamp], X_1112:bat[:timestamp]);
    X_1118:bat[:timestamp] := batcalc.ifthenelse(X_878:bat[:bit], X_219:bat[:timestamp], X_1115:bat[:timestamp]);
    X_1123:bat[:timestamp] := batcalc.ifthenelse(X_857:bat[:bit], X_200:bat[:timestamp], X_1118:bat[:timestamp]);
    X_1126:bat[:timestamp] := batcalc.ifthenelse(X_839:bat[:bit], X_219:bat[:timestamp], X_1123:bat[:timestamp]);
    X_1130:bat[:timestamp] := batcalc.ifthenelse(X_818:bat[:bit], X_200:bat[:timestamp], X_1126:bat[:timestamp]);
    X_1133:bat[:timestamp] := batcalc.ifthenelse(X_800:bat[:bit], X_219:bat[:timestamp], X_1130:bat[:timestamp]);
    X_1136:bat[:timestamp] := batcalc.ifthenelse(X_779:bat[:bit], X_200:bat[:timestamp], X_1133:bat[:timestamp]);
    X_1139:bat[:timestamp] := batcalc.ifthenelse(X_761:bat[:bit], X_219:bat[:timestamp], X_1136:bat[:timestamp]);
    X_1143:bat[:timestamp] := batcalc.ifthenelse(X_740:bat[:bit], X_200:bat[:timestamp], X_1139:bat[:timestamp]);
    X_1146:bat[:timestamp] := batcalc.ifthenelse(X_722:bat[:bit], X_219:bat[:timestamp], X_1143:bat[:timestamp]);
    X_1149:bat[:timestamp] := batcalc.ifthenelse(X_701:bat[:bit], X_200:bat[:timestamp], X_1146:bat[:timestamp]);
    X_1152:bat[:timestamp] := batcalc.ifthenelse(X_683:bat[:bit], X_219:bat[:timestamp], X_1149:bat[:timestamp]);
    X_1157:bat[:timestamp] := batcalc.ifthenelse(X_662:bat[:bit], X_200:bat[:timestamp], X_1152:bat[:timestamp]);
    X_1160:bat[:timestamp] := batcalc.ifthenelse(X_644:bat[:bit], X_219:bat[:timestamp], X_1157:bat[:timestamp]);
    X_1164:bat[:timestamp] := batcalc.ifthenelse(X_623:bat[:bit], X_200:bat[:timestamp], X_1160:bat[:timestamp]);
    X_1167:bat[:timestamp] := batcalc.ifthenelse(X_605:bat[:bit], X_219:bat[:timestamp], X_1164:bat[:timestamp]);
    X_1170:bat[:timestamp] := batcalc.ifthenelse(X_584:bat[:bit], X_200:bat[:timestamp], X_1167:bat[:timestamp]);
    X_1173:bat[:timestamp] := batcalc.ifthenelse(X_566:bat[:bit], X_219:bat[:timestamp], X_1170:bat[:timestamp]);
    X_1177:bat[:timestamp] := batcalc.ifthenelse(X_545:bat[:bit], X_200:bat[:timestamp], X_1173:bat[:timestamp]);
    X_1180:bat[:timestamp] := batcalc.ifthenelse(X_527:bat[:bit], X_219:bat[:timestamp], X_1177:bat[:timestamp]);
    X_1183:bat[:timestamp] := batcalc.ifthenelse(X_506:bat[:bit], X_200:bat[:timestamp], X_1180:bat[:timestamp]);
    X_1186:bat[:timestamp] := batcalc.ifthenelse(X_488:bat[:bit], X_219:bat[:timestamp], X_1183:bat[:timestamp]);
    X_1191:bat[:timestamp] := batcalc.ifthenelse(X_467:bat[:bit], X_200:bat[:timestamp], X_1186:bat[:timestamp]);
    X_1194:bat[:timestamp] := batcalc.ifthenelse(X_449:bat[:bit], X_219:bat[:timestamp], X_1191:bat[:timestamp]);
    X_1198:bat[:timestamp] := batcalc.ifthenelse(X_428:bat[:bit], X_200:bat[:timestamp], X_1194:bat[:timestamp]);
    X_1201:bat[:timestamp] := batcalc.ifthenelse(X_410:bat[:bit], X_219:bat[:timestamp], X_1198:bat[:timestamp]);
    X_1204:bat[:timestamp] := batcalc.ifthenelse(X_389:bat[:bit], X_200:bat[:timestamp], X_1201:bat[:timestamp]);
    X_1207:bat[:timestamp] := batcalc.ifthenelse(X_371:bat[:bit], X_219:bat[:timestamp], X_1204:bat[:timestamp]);
    X_1211:bat[:timestamp] := batcalc.ifthenelse(X_350:bat[:bit], X_200:bat[:timestamp], X_1207:bat[:timestamp]);
    X_1214:bat[:timestamp] := batcalc.ifthenelse(X_332:bat[:bit], X_219:bat[:timestamp], X_1211:bat[:timestamp]);
    X_1217:bat[:timestamp] := batcalc.ifthenelse(X_311:bat[:bit], X_200:bat[:timestamp], X_1214:bat[:timestamp]);
    X_1220:bat[:timestamp] := batcalc.ifthenelse(X_293:bat[:bit], X_219:bat[:timestamp], X_1217:bat[:timestamp]);
    X_1225:bat[:timestamp] := batcalc.ifthenelse(X_272:bat[:bit], X_200:bat[:timestamp], X_1220:bat[:timestamp]);
    X_1228:bat[:timestamp] := batcalc.ifthenelse(X_254:bat[:bit], X_219:bat[:timestamp], X_1225:bat[:timestamp]);
    X_1232:bat[:timestamp] := batcalc.ifthenelse(X_233:bat[:bit], X_200:bat[:timestamp], X_1228:bat[:timestamp]);
    X_1235:bat[:timestamp] := batcalc.ifthenelse(X_215:bat[:bit], X_219:bat[:timestamp], X_1232:bat[:timestamp]);
    X_1237:bat[:timestamp] := batcalc.ifthenelse(X_196:bat[:bit], X_200:bat[:timestamp], X_1235:bat[:timestamp]);
    X_1238:bat[:timestamp] := batcalc.timestamp(X_1237:bat[:timestamp], 7:int);
    X_1242:bat[:str] := mal.manifold("mtime":str, "timestamp_to_str":str, X_1238:bat[:timestamp], "%Y":str);
    sql.resultSet(X_1246:bat[:str], X_1247:bat[:str], X_1248:bat[:str], X_1249:bat[:int], X_1249:bat[:int], X_1242:bat[:str]);
end user.s6_0;
#inline               actions= 0 time=27 usec 
#remap                actions=320 time=535 usec 
#costmodel            actions= 1 time=10 usec 
#coercion             actions=231 time=56 usec 
#aliases              actions=372 time=80 usec 
#evaluate             actions=93 time=264 usec 
#emptybind            actions= 8 time=46 usec 
#pushselect           actions= 0 time=43 usec 
#aliases              actions=96 time=50 usec 
#mergetable           actions= 0 time=351 usec 
#deadcode             actions=242 time=61 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions=317 time=93 usec 
#commonTerms          actions=91 time=187 usec 
#projectionpath       actions= 0 time=10 usec 
#deadcode             actions=91 time=39 usec 
#reorder              actions= 1 time=76 usec 
#matpack              actions= 0 time=1 usec 
#dataflow             actions= 1 time=109 usec 
#multiplex            actions= 3 time=28 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=3 usec 
#deadcode             actions= 0 time=33 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=144 usec 
#total                actions=29 time=2531 usec 

# 14:08:13 >  
# 14:08:13 >  "Done."
# 14:08:13 >  

