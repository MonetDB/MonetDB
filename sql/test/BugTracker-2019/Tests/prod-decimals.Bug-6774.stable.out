stdout of test 'prod-decimals.Bug-6774` in directory 'sql/test/BugTracker-2019` itself:


# 13:44:20 >  
# 13:44:20 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37885" "--set" "mapi_usock=/var/tmp/mtest-31977/.s.monetdb.37885" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-Apr2019/BUILD/var/MonetDB/mTests_sql_test_BugTracker-2019" "--set" "embedded_r=yes" "--set" "embedded_py=2" "--set" "embedded_c=true"
# 13:44:20 >  

# MonetDB 5 server v11.33.12 (hg id: e994c3289040)
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2019', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.504 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:37885/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-31977/.s.monetdb.37885
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_views.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_lidar.sql
# loading sql script: 75_shp.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded
# MonetDB/Python2 module loaded
# MonetDB/R   module loaded

# 14:03:30 >  
# 14:03:30 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-16007" "--port=39576"
# 14:03:30 >  

#START TRANSACTION;
#CREATE TABLE "t1" (
#	"a1"   INTEGER,
#	"prob" DECIMAL(7,4)
#);
#INSERT INTO t1 VALUES (5, 0.2000);
[ 1	]
#CREATE TABLE "t2" (
#	"a1"   INTEGER,
#	"prob" DECIMAL(7,4)
#);
#INSERT INTO t2 VALUES (5, 0.5000);
[ 1	]
#CREATE TABLE "t3" (
#	"a1"   INTEGER,
#	"prob" TINYINT
#);
#INSERT INTO t3 VALUES (5, 1);
[ 1	]
#SELECT tmp.a1, prod(tmp.prob) AS prob FROM 
#    (SELECT a1, prob FROM 
#        (SELECT t1.a1 AS a1, t3.a1 AS a2, t1.prob * t3.prob AS prob FROM t1,t3 WHERE t1.a1 = t3.a1) AS t__x30
#     UNION ALL
#     SELECT a1, prob FROM (SELECT t2.a1 AS a1, t3.a1 AS a2, t2.prob * t3.prob AS prob FROM t2,t3 WHERE t2.a1 = t3.a1) AS t__x32) as tmp
#    GROUP BY tmp.a1;
% .tmp,	. # table_name
% a1,	prob # name
% int,	double # type
% 1,	24 # length
[ 5,	0.1	]
#select prod(col1) from (values(1.0), (0.5)) as t1(col1);
% .%2 # table_name
% %2 # name
% double # type
% 24 # length
[ 0.5	]
#select prod(col1) from (values(1.0), (1.0)) as t1(col1);
% .%2 # table_name
% %2 # name
% double # type
% 24 # length
[ 1	]
#select prod(col1) from (values(1.0), (1.0), (1.0)) as t1(col1);
% .%2 # table_name
% %2 # name
% double # type
% 24 # length
[ 1	]
#select prod(col1) from (values(152.2), (1.34), (0.3), (32.266)) as t1(col1);
% .%2 # table_name
% %2 # name
% double # type
% 24 # length
[ 1974.17585	]
#select prod(col1) from (values(152.2), (1.34), (0.3), (32.266), (-0.1)) as t1(col1);
% .%2 # table_name
% %2 # name
% double # type
% 24 # length
[ -197.417585	]
#ROLLBACK;

# 13:44:21 >  
# 13:44:21 >  "Done."
# 13:44:21 >  

