statement ok
CREATE TABLE test_num_data (id integer, val numeric(18,10))

statement ok
INSERT INTO test_num_data VALUES (1, '-0.0'),(2, '-34338492.215397047')

query IR rowsort
SELECT * FROM test_num_data
----
1
0.000
2
-34338492.215

onlyif has-hugeint
query IIR rowsort
SELECT t1.id, t2.id, t1.val * t2.val FROM test_num_data t1, test_num_data t2
----
1
1
0.000
1
2
0.000
2
1
0.000
2
2
1179132047626883.500

skipif has-hugeint
statement error 22003!overflow in calculation ...
SELECT t1.id, t2.id, t1.val * t2.val FROM test_num_data t1, test_num_data t2

onlyif has-hugeint
query IIR rowsort
SELECT t1.id, t2.id, round(t1.val * t2.val, 30) FROM test_num_data t1, test_num_data t2
----
1
1
0.000
1
2
0.000
2
1
0.000
2
2
1179132047626883.500

skipif has-hugeint
statement error 22003!overflow in calculation ...
SELECT t1.id, t2.id, round(t1.val * t2.val, 30) FROM test_num_data t1, test_num_data t2

onlyif has-hugeint
query I rowsort
SELECT CAST(((24829)+(((0.9767751031140547)*(0.7479400824095245)))) AS DOUBLE) IS NULL
----
0

skipif has-hugeint
statement error 22003!overflow in calculation ...
SELECT CAST(((24829)+(((0.9767751031140547)*(0.7479400824095245)))) AS DOUBLE) IS NULL

statement ok
drop table test_num_data

