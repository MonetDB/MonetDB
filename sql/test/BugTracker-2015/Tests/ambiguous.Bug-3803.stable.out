stdout of test 'ambiguous.Bug-3803` in directory 'sql/test/BugTracker-2015` itself:


# 17:26:39 >  
# 17:26:39 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=39839" "--set" "mapi_usock=/var/tmp/mtest-12556/.s.monetdb.39839" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/rc-clean/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2015" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 17:26:39 >  

# MonetDB 5 server v11.21.2
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2015', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:39839/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-12556/.s.monetdb.39839
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.37'
# Finished reading the write-ahead log 'sql_logs/sql/log.37'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 17:26:39 >  
# 17:26:39 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-12556" "--port=39839"
# 17:26:39 >  

#CREATE TABLE t1(a INTEGER, b INTEGER, c INTEGER, d INTEGER, e INTEGER);
#INSERT INTO t1(e,c,b,d,a) VALUES(103,102,100,101,104);
[ 1     ]
#INSERT INTO t1(a,c,d,e,b) VALUES(107,106,108,109,105);
[ 1     ]
#INSERT INTO t1(e,d,b,a,c) VALUES(110,114,112,111,113);
[ 1     ]
#INSERT INTO t1(d,c,e,a,b) VALUES(116,119,117,115,118);
[ 1     ]
#INSERT INTO t1(c,d,b,e,a) VALUES(123,122,124,120,121);
[ 1     ]
#INSERT INTO t1(a,d,b,e,c) VALUES(127,128,129,126,125);
[ 1     ]
#INSERT INTO t1(e,c,a,d,b) VALUES(132,134,131,133,130);
[ 1     ]
#INSERT INTO t1(a,d,b,e,c) VALUES(138,136,139,135,137);
[ 1     ]
#SELECT CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, cast(a+b*2+c*3+d*4 as bigint), cast(a+b*2+c*3 as bigint), c, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, abs(b-c) FROM t1 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b) OR b>c OR d NOT BETWEEN 110 AND 150 ORDER BY 4,1,5,2,6,3,7;
% .%4,	.%5,	.%6,	.%7,	.t1,	.%10,	.%11 # table_name
% %4,	%5,	%6,	%7,	c,	%10,	%11 # name
% smallint,     smallint,       bigint, bigint, int,    bigint, bigint # type
% 3,    3,      4,      3,      3,      4,      1 # length
[ 555,  444,    1014,   610,    102,    1000,   2       ]
[ 333,  333,    1067,   635,    106,    1050,   1       ]
[ 111,  222,    1130,   674,    113,    1120,   1       ]
[ 333,  222,    1172,   708,    119,    1180,   1       ]
[ 333,  222,    1226,   738,    123,    242,    1       ]
[ 333,  222,    1272,   760,    125,    254,    4       ]
[ 444,  333,    1325,   793,    134,    262,    4       ]
[ 111,  222,    1371,   827,    137,    276,    2       ]
#SELECT a, cast(a+b*2+c*3+d*4+e*5 as bigint), c-d, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, b-c, a+b*2 FROM t1 ORDER BY 6,2,4,5,3,1;
% .t1,	.%3,	.%4,	.%5,	.%6,	.%7 # table_name
% a,	%3,	%4,	%5,	%6,	%7 # name
% int,  bigint, bigint, bigint, bigint, bigint # type
% 3,    4,      2,      4,      2,      3 # length
[ 104,  1529,   1,      1000,   -2,     304     ]
[ 107,  1612,   -2,     1050,   -1,     317     ]
[ 111,  1680,   -1,     1120,   -1,     335     ]
[ 115,  1757,   3,      1180,   -1,     351     ]
[ 121,  1826,   1,      242,    1,      369     ]
[ 127,  1902,   -3,     254,    4,      385     ]
[ 131,  1985,   1,      262,    -4,     391     ]
[ 138,  2046,   1,      276,    2,      416     ]
#SELECT cast(a+b*2+c*3+d*4+e*5 as bigint), CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, a, abs(b-c), a+b*2, d, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END FROM t1 WHERE (e>c OR e<d) OR a>b ORDER BY 4,5,3,7,1,6,2;
% .%3,	.%4,	.t1,	.%5,	.%6,	.t1,	.%7 # table_name
% %3,	%4,	a,	%5,	%6,	d,	%7 # name
% bigint,       smallint,       int,    bigint, bigint, int,    bigint # type
% 4,    3,      3,      1,      3,      3,      4 # length
[ 1612, 333,    107,    1,      317,    108,    1050    ]
[ 1680, 222,    111,    1,      335,    114,    1120    ]
[ 1826, 222,    121,    1,      369,    122,    242     ]
[ 1529, 444,    104,    2,      304,    101,    1000    ]
[ 2046, 222,    138,    2,      416,    136,    276     ]
[ 1902, 222,    127,    4,      385,    128,    254     ]
[ 1985, 333,    131,    4,      391,    133,    262     ]
#SELECT a, e, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, a-b FROM t1 ORDER BY 2,4,3,1;
% .t1,	.t1,	.%3,	.%4 # table_name
% a,	e,	%3,	%4 # name
% int,  int,    bigint, bigint # type
% 3,    3,      4,      2 # length
[ 104,  103,    1000,   4       ]
[ 107,  109,    1050,   2       ]
[ 111,  110,    1120,   -1      ]
[ 115,  117,    1180,   -3      ]
[ 121,  120,    242,    -3      ]
[ 127,  126,    254,    -2      ]
[ 131,  132,    262,    1       ]
[ 138,  135,    276,    -1      ]
#SELECT d, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, abs(b-c), cast(a+b*2+c*3+d*4+e*5 as bigint), CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, d-e FROM t1 ORDER BY 1,6,2,3,5,4;
% .t1,	.%3,	.%4,	.%5,	.%6,	.%7 # table_name
% d,	%3,	%4,	%5,	%6,	%7 # name
% int,  bigint, bigint, bigint, smallint,       bigint # type
% 3,    4,      1,      4,      3,      2 # length
[ 101,  1000,   2,      1529,   444,    -2      ]
[ 108,  1050,   1,      1612,   333,    -1      ]
[ 114,  1120,   1,      1680,   222,    4       ]
[ 116,  1180,   1,      1757,   222,    -1      ]
[ 122,  242,    1,      1826,   222,    2       ]
[ 128,  254,    4,      1902,   222,    2       ]
[ 133,  262,    4,      1985,   333,    1       ]
[ 136,  276,    2,      2046,   222,    1       ]
#SELECT cast(a+b*2+c*3+d*4+e*5 as bigint), a, abs(a), a-b, d-e, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END FROM t1 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b) AND b>c ORDER BY 4,6,3,1,5,2;
% .%4,	.t1,	.%5,	.%6,	.%7,	.%10 # table_name
% %4,	a,	%5,	%6,	%7,	%10 # name
% bigint,       int,    int,    bigint, bigint, bigint # type
% 4,    3,      3,      2,      1,      3 # length
[ 1826, 121,    121,    -3,     2,      242     ]
[ 1902, 127,    127,    -2,     2,      254     ]
[ 2046, 138,    138,    -1,     1,      276     ]
#SELECT CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, cast(a+b*2+c*3+d*4+e*5 as bigint), a, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), d FROM t1 WHERE a>b AND (e>a AND e<b) ORDER BY 7,2,4,6,1,3,5;
% .%4,	.%5,	.t1,	.%6,	.%7,	.,	.t1 # table_name
% %4,	%5,	a,	%6,	%7,	%2,	d # name
% smallint,     bigint, int,    smallint,       bigint, bigint, int # type
% 1,    1,      1,      1,      1,      1,      1 # length
#SELECT e, (SELECT count(*) FROM t1 AS x WHERE x.b<t1.b), CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, a-b, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d) FROM t1 WHERE a>b AND (c<=d-2 OR c>=d+2) AND c>d ORDER BY 6,5,4,2,3,1;
% .t1,	.,	.%5,	.%6,	.%7,	. # table_name
% e,	%1,	%5,	%6,	%7,	%3 # name
% int,  bigint, bigint, smallint,       bigint, bigint # type
% 1,    1,      1,      1,      1,      1 # length
#SELECT b, a-b, c, abs(b-c), d-e, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, b-c FROM t1 WHERE EXISTS(SELECT 1 FROM t1 AS x WHERE x.b<t1.b) ORDER BY 1,6,4,5,2,7,3;
% .t1,	.%4,	.t1,	.%5,	.%6,	.%7,	.%10 # table_name
% b,	%4,	c,	%5,	%6,	%7,	%10 # name
% int,  bigint, int,    bigint, bigint, bigint, bigint # type
% 3,    2,      3,      1,      2,      4,      2 # length
[ 105,  2,      106,    1,      -1,     1050,   -1      ]
[ 112,  -1,     113,    1,      4,      1120,   -1      ]
[ 118,  -3,     119,    1,      -1,     1180,   -1      ]
[ 124,  -3,     123,    1,      2,      242,    1       ]
[ 129,  -2,     125,    4,      2,      254,    4       ]
[ 130,  1,      134,    4,      1,      262,    -4      ]
[ 139,  -1,     137,    2,      1,      276,    2       ]
#SELECT (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), b, a, cast(a+b*2+c*3+d*4+e*5 as bigint), CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, CASE a+1 WHEN b THEN 111 WHEN c THEN 222 WHEN d THEN 333  WHEN e THEN 444 ELSE 555 END, cast(a+b*2+c*3 as bigint) FROM t1 WHERE a>b AND (e>c OR e<d) ORDER BY 3,7,2,5,6,4,1;
% .,	.t1,	.t1,	.%4,	.%5,	.%6,	.%7 # table_name
% %1,	b,	a,	%4,	%5,	%6,	%7 # name
% bigint,       int,    int,    bigint, bigint, smallint,       bigint # type
% 1,    3,      3,      4,      4,      3,      3 # length
[ 0,    100,    104,    1529,   1000,   555,    610     ]
[ 0,    105,    107,    1612,   1050,   333,    635     ]
[ 0,    130,    131,    1985,   262,    444,    793     ]
#SELECT c-d, a-b, b, b-c, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, c, a+b*2 FROM t1 ORDER BY 1,5,4,3,2,6,7;
% .%3,	.%4,	.t1,	.%5,	.%6,	.t1,	.%7 # table_name
% %3,	%4,	b,	%5,	%6,	c,	%7 # name
% bigint,       bigint, int,    bigint, bigint, int,    bigint # type
% 2,    2,      3,      2,      4,      3,      3 # length
[ -3,   -2,     129,    4,      254,    125,    385     ]
[ -2,   2,      105,    -1,     1050,   106,    317     ]
[ -1,   -1,     112,    -1,     1120,   113,    335     ]
[ 1,    -3,     124,    1,      242,    123,    369     ]
[ 1,    1,      130,    -4,     262,    134,    391     ]
[ 1,    -1,     139,    2,      276,    137,    416     ]
[ 1,    4,      100,    -2,     1000,   102,    304     ]
[ 3,    -3,     118,    -1,     1180,   119,    351     ]
#SELECT cast(a+b*2+c*3+d*4 as bigint), a, c-d, abs(b-c), b, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END FROM t1 WHERE (e>c OR e<d) OR (c<=d-2 OR c>=d+2) ORDER BY 4,3,2,5,1,6;
% .%3,	.t1,	.%4,	.%5,	.t1,	.%6 # table_name
% %3,	a,	%4,	%5,	b,	%6 # name
% bigint,       int,    bigint, bigint, int,    bigint # type
% 4,    3,      2,      1,      3,      4 # length
[ 1067, 107,    -2,     1,      105,    1050    ]
[ 1130, 111,    -1,     1,      112,    1120    ]
[ 1226, 121,    1,      1,      124,    242     ]
[ 1172, 115,    3,      1,      118,    1180    ]
[ 1014, 104,    1,      2,      100,    1000    ]
[ 1371, 138,    1,      2,      139,    276     ]
[ 1272, 127,    -3,     4,      129,    254     ]
[ 1325, 131,    1,      4,      130,    262     ]
#SELECT a, cast(a+b*2+c*3+d*4+e*5 as bigint), b, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, e, a-b FROM t1 ORDER BY 1,4,5,3,6,2;
% .t1,	.%3,	.t1,	.%4,	.t1,	.%5 # table_name
% a,	%3,	b,	%4,	e,	%5 # name
% int,  bigint, int,    bigint, int,    bigint # type
% 3,    4,      3,      4,      3,      2 # length
[ 104,  1529,   100,    1000,   103,    4       ]
[ 107,  1612,   105,    1050,   109,    2       ]
[ 111,  1680,   112,    1120,   110,    -1      ]
[ 115,  1757,   118,    1180,   117,    -3      ]
[ 121,  1826,   124,    242,    120,    -3      ]
[ 127,  1902,   129,    254,    126,    -2      ]
[ 131,  1985,   130,    262,    132,    1       ]
[ 138,  2046,   139,    276,    135,    -1      ]
#SELECT d, d-e, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, a+b*2, cast(a+b*2+c*3+d*4+e*5 as bigint), CASE WHEN a<b-3 THEN 111 WHEN a<=b THEN 222 WHEN a<b+3 THEN 333 ELSE 444 END, cast(a+b*2+c*3 as bigint) FROM t1 ORDER BY 3,2,4,5,7,1,6;
% .t1,	.%3,	.%4,	.%5,	.%6,	.%7,	.%10 # table_name
% d,	%3,	%4,	%5,	%6,	%7,	%10 # name
% int,  bigint, bigint, bigint, bigint, smallint,       bigint # type
% 3,    2,      4,      3,      4,      3,      3 # length
[ 122,  2,      242,    369,    1826,   222,    738     ]
[ 128,  2,      254,    385,    1902,   222,    760     ]
[ 133,  1,      262,    391,    1985,   333,    793     ]
[ 136,  1,      276,    416,    2046,   222,    827     ]
[ 101,  -2,     1000,   304,    1529,   444,    610     ]
[ 108,  -1,     1050,   317,    1612,   333,    635     ]
[ 114,  4,      1120,   335,    1680,   222,    674     ]
[ 116,  -1,     1180,   351,    1757,   222,    708     ]
#SELECT a, CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), cast(a+b*2+c*3+d*4 as bigint), b FROM t1 WHERE c>d OR d>e ORDER BY 2,5,1,3,4;
% .t1,	.%4,	.,	.%5,	.t1 # table_name
% a,	%4,	%2,	%5,	b # name
% int,  bigint, bigint, bigint, int # type
% 3,    4,      1,      4,      3 # length
[ 121,  242,    0,      1226,   124     ]
[ 127,  254,    0,      1272,   129     ]
[ 131,  262,    0,      1325,   130     ]
[ 138,  276,    0,      1371,   139     ]
[ 104,  1000,   0,      1014,   100     ]
[ 111,  1120,   0,      1130,   112     ]
[ 115,  1180,   0,      1172,   118     ]
#SELECT c, (SELECT count(*) FROM t1 AS x WHERE x.c>t1.c AND x.d<t1.d), CASE WHEN c>(SELECT avg(c) FROM t1) THEN a*2 ELSE b*10 END, cast(a+b*2+c*3+d*4 as bigint) FROM t1 WHERE b>c OR (e>c OR e<d) OR d NOT BETWEEN 110 AND 150 ORDER BY 3,2,1,4;
% .t1,	.,	.%4,	.%5 # table_name
% c,	%1,	%4,	%5 # name
% int,  bigint, bigint, bigint # type
% 3,    1,      4,      4 # length
[ 123,  0,      242,    1226    ]
[ 125,  0,      254,    1272    ]
[ 134,  0,      262,    1325    ]
[ 137,  0,      276,    1371    ]
[ 102,  0,      1000,   1014    ]
[ 106,  0,      1050,   1067    ]
[ 113,  0,      1120,   1130    ]
#DROP TABLE t1;

# 17:26:40 >  
# 17:26:40 >  "Done."
# 17:26:40 >  

