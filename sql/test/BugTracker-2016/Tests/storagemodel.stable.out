stdout of test 'storagemodel` in directory 'sql/test/BugTracker-2016` itself:


# 23:38:43 >  
# 23:38:43 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30783" "--set" "mapi_usock=/var/tmp/mtest-21747/.s.monetdb.30783" "--set" "monet_prompt=" "--forcemito" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_sql_test_BugTracker-2016" "--set" "embedded_r=yes"
# 23:38:43 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2016', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:30783/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-21747/.s.monetdb.30783
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded


# 23:38:44 >  
# 23:38:44 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-21747" "--port=30783"
# 23:38:44 >  

#create table bug3923(i integer);
#select "schema", "table", "column", "type", "mode", case when typewidth < 14 then typewidth else 99 end as typewidth, hashes, phash, imprints from storage('sys','_tables');
% .%3,	.%3,	.%3,	.%3,	.%3,	.,	.%3,	.%3,	.%3 # table_name
% schema,	table,	column,	type,	mode,	typewidth,	hashes,	phash,	imprints # name
% varchar,	varchar,	varchar,	varchar,	varchar,	int,	bigint,	boolean,	bigint # type
% 3,	7,	13,	8,	8,	2,	1,	5,	1 # length
[ "sys",	"_tables",	"id",	"int",	"writable",	4,	0,	false,	0	]
[ "sys",	"_tables",	"name",	"varchar",	"writable",	99,	0,	false,	0	]
[ "sys",	"_tables",	"schema_id",	"int",	"writable",	4,	0,	false,	0	]
[ "sys",	"_tables",	"query",	"varchar",	"writable",	99,	0,	false,	0	]
[ "sys",	"_tables",	"type",	"smallint",	"writable",	2,	0,	false,	0	]
[ "sys",	"_tables",	"system",	"boolean",	"writable",	1,	0,	false,	0	]
[ "sys",	"_tables",	"commit_action",	"smallint",	"writable",	2,	0,	false,	0	]
[ "sys",	"_tables",	"access",	"smallint",	"writable",	2,	0,	false,	0	]
#update storagemodelinput set "count" =10000 where "table" ='bug3923';
[ 1	]
#update storagemodelinput set "distinct" =10 where "table" ='bug3923' and "column" ='i';
[ 1	]
#select * from storagemodel where "table" = 'bug3923';
% sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel # table_name
% schema,	table,	column,	type,	count,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	boolean,	boolean,	boolean # type
% 3,	7,	1,	3,	5,	5,	4,	1,	4,	1,	5,	5,	5 # length
[ "sys",	"bug3923",	"i",	"int",	10000,	10000,	8312,	0,	2000,	0,	true,	NULL,	true	]
#drop table bug3923;
#create table bug3923(i integer);
#select "schema", "table", "column", "type", "mode", case when typewidth < 14 then typewidth else 99 end as typewidth, hashes, phash, imprints from sys.storage('sys','_tables');
% .%3,	.%3,	.%3,	.%3,	.%3,	.,	.%3,	.%3,	.%3 # table_name
% schema,	table,	column,	type,	mode,	typewidth,	hashes,	phash,	imprints # name
% varchar,	varchar,	varchar,	varchar,	varchar,	int,	bigint,	boolean,	bigint # type
% 3,	7,	13,	8,	8,	2,	1,	5,	1 # length
[ "sys",	"_tables",	"id",	"int",	"writable",	4,	0,	false,	0	]
[ "sys",	"_tables",	"name",	"varchar",	"writable",	99,	0,	false,	0	]
[ "sys",	"_tables",	"schema_id",	"int",	"writable",	4,	0,	false,	0	]
[ "sys",	"_tables",	"query",	"varchar",	"writable",	99,	0,	false,	0	]
[ "sys",	"_tables",	"type",	"smallint",	"writable",	2,	0,	false,	0	]
[ "sys",	"_tables",	"system",	"boolean",	"writable",	1,	0,	false,	0	]
[ "sys",	"_tables",	"commit_action",	"smallint",	"writable",	2,	0,	false,	0	]
[ "sys",	"_tables",	"access",	"smallint",	"writable",	2,	0,	false,	0	]
#update storagemodelinput set "count" =10000 where "table" ='bug3923';
[ 1	]
#update storagemodelinput set "distinct" =10 where "table" ='bug3923' and "column" ='i';
[ 1	]
#select * from sys.storagemodel where "table" = 'bug3923';
% sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel # table_name
% schema,	table,	column,	type,	count,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	boolean,	boolean,	boolean # type
% 13,	7,	1,	3,	5,	5,	4,	1,	4,	1,	5,	5,	5 # length
[ "bug3923schema",	"bug3923",	"i",	"int",	10000,	10000,	8312,	0,	2000,	0,	true,	NULL,	true	]
#drop table bug3923;

# 23:38:44 >  
# 23:38:44 >  "Done."
# 23:38:44 >  

