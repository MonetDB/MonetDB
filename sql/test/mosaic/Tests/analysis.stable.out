stdout of test 'analysis` in directory 'sql/test/mosaic` itself:


# 16:07:15 >  
# 16:07:15 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38225" "--set" "mapi_usock=/var/tmp/mtest-15728/.s.monetdb.38225" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/aris/sources/monetdb/build/installation/var/MonetDB/mTests_sql_test_mosaic" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 16:07:15 >  

# MonetDB 5 server v11.34.0 (hg id: 4fe7de431d91+)
# This is an unreleased version
# Serving database 'mTests_sql_test_mosaic', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.349 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2019 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://aris-XPS-13-9380:38225/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-15728/.s.monetdb.38225
# MonetDB/SQL module loaded

# 16:07:15 >  
# 16:07:15 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-15728" "--port=38225"
# 16:07:15 >  

#START TRANSACTION;
#create table if not exists tmp4 (i int);
#truncate TABLE tmp4;
[ 0	]
#insert into tmp4 select * from generate_series(0, 10000000);
[ 10000000	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', NULL, '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 18,	24,	39,	41 # length
[ "delta ",	15.998,	"[[{\"delta\":1}]]",	"[[{\"delta\":10000000}]]"	]
[ "delta frame ",	15.998,	"[[{\"delta\":1}]]",	"[[{\"delta\":10000000}]]"	]
[ "delta linear ",	188679.25,	"[[{\"linear\":1}]]",	"[[{\"linear\":10000000}]]"	]
[ "delta prefix ",	15.998,	"[[{\"delta\":1}]]",	"[[{\"delta\":10000000}]]"	]
[ "dict ",	0.571,	"[[{\"dict\":1}]]",	"[[{\"dict\":10000000}]]"	]
[ "dict delta ",	15.998,	"[[{\"delta\":1}]]",	"[[{\"delta\":10000000}]]"	]
[ "dict frame ",	0.572,	"[[{\"dict\":1},{\"frame\":1}]]",	"[[{\"dict\":9967232},{\"frame\":32768}]]"	]
[ "dict linear ",	188679.25,	"[[{\"linear\":1}]]",	"[[{\"linear\":10000000}]]"	]
[ "dict prefix ",	0.572,	"[[{\"dict\":1},{\"prefix\":1}]]",	"[[{\"dict\":9967232},{\"prefix\":32768}]]"	]
[ "dict256 delta ",	15.998,	"[[{\"delta\":1}]]",	"[[{\"delta\":10000000}]]"	]
[ "dict256 dict ",	0.571,	"[[{\"dict256\":1},{\"dict\":1}]]",	"[[{\"dict256\":256},{\"dict\":9999744}]]"	]
[ "dict256 frame ",	2.132,	"[[{\"frame\":306}]]",	"[[{\"frame\":10000000}]]"	]
[ "dict256 linear ",	188679.25,	"[[{\"linear\":1}]]",	"[[{\"linear\":10000000}]]"	]
[ "dict256 prefix ",	2.132,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":10000000}]]"	]
[ "frame ",	2.132,	"[[{\"frame\":306}]]",	"[[{\"frame\":10000000}]]"	]
[ "frame prefix ",	2.132,	"[[{\"frame\":306}]]",	"[[{\"frame\":10000000}]]"	]
[ "linear ",	188679.25,	"[[{\"linear\":1}]]",	"[[{\"linear\":10000000}]]"	]
[ "linear frame ",	188679.25,	"[[{\"linear\":1}]]",	"[[{\"linear\":10000000}]]"	]
[ "linear prefix ",	188679.25,	"[[{\"linear\":1}]]",	"[[{\"linear\":10000000}]]"	]
[ "prefix ",	2.132,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":10000000}]]"	]
[ "raw delta ",	15.998,	"[[{\"delta\":1}]]",	"[[{\"delta\":10000000}]]"	]
[ "raw dict ",	0.571,	"[[{\"raw\":1},{\"dict\":1}]]",	"[[{\"raw\":1},{\"dict\":9999999}]]"	]
[ "raw dict256 ",	0.999,	"[[{\"raw\":2},{\"dict256\":1}]]",	"[[{\"raw\":9999745},{\"dict256\":255}]]"	]
[ "raw frame ",	2.132,	"[[{\"frame\":306}]]",	"[[{\"frame\":10000000}]]"	]
[ "raw linear ",	188679.25,	"[[{\"linear\":1}]]",	"[[{\"linear\":10000000}]]"	]
[ "raw prefix ",	2.132,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":10000000}]]"	]
[ "raw runlength ",	0.999,	"[[{\"raw\":1}]]",	"[[{\"raw\":10000000}]]"	]
[ "runlength ",	0.333,	"[[{\"runlength\":10000000}]]",	"[[{\"runlength\":10000000}]]"	]
[ "runlength delta ",	15.998,	"[[{\"delta\":1}]]",	"[[{\"delta\":10000000}]]"	]
[ "runlength dict ",	0.571,	"[[{\"dict\":1}]]",	"[[{\"dict\":10000000}]]"	]
[ "runlength dict256 ",	0.333,	"[[{\"runlength\":9999744},{\"dict256\":1}]]",	"[[{\"runlength\":9999744},{\"dict256\":256}]]"	]
[ "runlength frame ",	2.132,	"[[{\"frame\":306}]]",	"[[{\"frame\":10000000}]]"	]
[ "runlength linear ",	188679.25,	"[[{\"linear\":1}]]",	"[[{\"linear\":10000000}]]"	]
[ "runlength prefix ",	2.132,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":10000000}]]"	]
#insert into tmp4 select 10000000 from tmp4;
[ 10000000	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', NULL, '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 18,	24,	39,	46 # length
[ "delta ",	15.999,	"[[{\"delta\":2}]]",	"[[{\"delta\":20000000}]]"	]
[ "delta frame ",	17.401,	"[[{\"delta\":1},{\"frame\":1}]]",	"[[{\"delta\":16777215},{\"frame\":3222785}]]"	]
[ "delta linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "delta prefix ",	17.401,	"[[{\"delta\":1},{\"prefix\":1}]]",	"[[{\"delta\":16777215},{\"prefix\":3222785}]]"	]
[ "dict ",	0.799,	"[[{\"dict\":2}]]",	"[[{\"dict\":20000000}]]"	]
[ "dict delta ",	1.485,	"[[{\"dict\":1},{\"delta\":1}]]",	"[[{\"dict\":3222785},{\"delta\":16777215}]]"	]
[ "dict frame ",	0.882,	"[[{\"dict\":1},{\"frame\":2}]]",	"[[{\"dict\":16777215},{\"frame\":3222785}]]"	]
[ "dict linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "dict prefix ",	0.882,	"[[{\"dict\":1},{\"prefix\":2}]]",	"[[{\"dict\":16777215},{\"prefix\":3222785}]]"	]
[ "dict256 delta ",	17.401,	"[[{\"dict256\":1},{\"delta\":1}]]",	"[[{\"dict256\":3222785},{\"delta\":16777215}]]"	]
[ "dict256 dict ",	0.881,	"[[{\"dict256\":1},{\"dict\":1}]]",	"[[{\"dict256\":3222785},{\"dict\":16777215}]]"	]
[ "dict256 frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "dict256 linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "dict256 prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
[ "frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "frame prefix ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "linear frame ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "linear prefix ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
[ "raw delta ",	15.999,	"[[{\"delta\":2}]]",	"[[{\"delta\":20000000}]]"	]
[ "raw dict ",	0.775,	"[[{\"raw\":2},{\"dict\":1}]]",	"[[{\"raw\":3222785},{\"dict\":16777215}]]"	]
[ "raw dict256 ",	1.56,	"[[{\"raw\":1},{\"dict256\":1}]]",	"[[{\"raw\":9999745},{\"dict256\":10000255}]]"	]
[ "raw frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "raw linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "raw prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
[ "raw runlength ",	1.999,	"[[{\"raw\":1},{\"runlength\":1}]]",	"[[{\"raw\":10000000},{\"runlength\":10000000}]]"	]
[ "runlength ",	0.666,	"[[{\"runlength\":10000001}]]",	"[[{\"runlength\":20000000}]]"	]
[ "runlength delta ",	19.072,	"[[{\"runlength\":1},{\"delta\":1}]]",	"[[{\"runlength\":3222785},{\"delta\":16777215}]]"	]
[ "runlength dict ",	0.885,	"[[{\"runlength\":1},{\"dict\":1}]]",	"[[{\"runlength\":3222785},{\"dict\":16777215}]]"	]
[ "runlength dict256 ",	0.609,	"[[{\"runlength\":9999745},{\"dict256\":1}]]",	"[[{\"runlength\":9999745},{\"dict256\":10000255}]]"	]
[ "runlength frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "runlength linear ",	357142.843,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
[ "runlength prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', 'linear, runlength', '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 17,	24,	32,	45 # length
[ "linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "runlength ",	0.666,	"[[{\"runlength\":10000001}]]",	"[[{\"runlength\":20000000}]]"	]
[ "runlength linear ",	357142.843,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', 'linear, runlength', 'raw') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 21,	24,	32,	45 # length
[ "raw linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "raw runlength ",	1.999,	"[[{\"raw\":1},{\"runlength\":1}]]",	"[[{\"raw\":10000000},{\"runlength\":10000000}]]"	]
[ "raw runlength linear ",	357142.843,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
#set optimizer='mosaic_pipe';
#alter table tmp4 alter column i set storage 'runlength, linear';
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', NULL, '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 18,	24,	39,	46 # length
[ "delta ",	15.999,	"[[{\"delta\":2}]]",	"[[{\"delta\":20000000}]]"	]
[ "delta frame ",	17.401,	"[[{\"delta\":1},{\"frame\":1}]]",	"[[{\"delta\":16777215},{\"frame\":3222785}]]"	]
[ "delta linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "delta prefix ",	17.401,	"[[{\"delta\":1},{\"prefix\":1}]]",	"[[{\"delta\":16777215},{\"prefix\":3222785}]]"	]
[ "dict ",	0.799,	"[[{\"dict\":2}]]",	"[[{\"dict\":20000000}]]"	]
[ "dict delta ",	1.485,	"[[{\"dict\":1},{\"delta\":1}]]",	"[[{\"dict\":3222785},{\"delta\":16777215}]]"	]
[ "dict frame ",	0.882,	"[[{\"dict\":1},{\"frame\":2}]]",	"[[{\"dict\":16777215},{\"frame\":3222785}]]"	]
[ "dict linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "dict prefix ",	0.882,	"[[{\"dict\":1},{\"prefix\":2}]]",	"[[{\"dict\":16777215},{\"prefix\":3222785}]]"	]
[ "dict256 delta ",	17.401,	"[[{\"dict256\":1},{\"delta\":1}]]",	"[[{\"dict256\":3222785},{\"delta\":16777215}]]"	]
[ "dict256 dict ",	0.881,	"[[{\"dict256\":1},{\"dict\":1}]]",	"[[{\"dict256\":3222785},{\"dict\":16777215}]]"	]
[ "dict256 frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "dict256 linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "dict256 prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
[ "frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "frame prefix ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "linear frame ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "linear prefix ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
[ "raw delta ",	15.999,	"[[{\"delta\":2}]]",	"[[{\"delta\":20000000}]]"	]
[ "raw dict ",	0.775,	"[[{\"raw\":2},{\"dict\":1}]]",	"[[{\"raw\":3222785},{\"dict\":16777215}]]"	]
[ "raw dict256 ",	1.56,	"[[{\"raw\":1},{\"dict256\":1}]]",	"[[{\"raw\":9999745},{\"dict256\":10000255}]]"	]
[ "raw frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "raw linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "raw prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
[ "raw runlength ",	1.999,	"[[{\"raw\":1},{\"runlength\":1}]]",	"[[{\"raw\":10000000},{\"runlength\":10000000}]]"	]
[ "runlength ",	0.666,	"[[{\"runlength\":10000001}]]",	"[[{\"runlength\":20000000}]]"	]
[ "runlength delta ",	19.072,	"[[{\"runlength\":1},{\"delta\":1}]]",	"[[{\"runlength\":3222785},{\"delta\":16777215}]]"	]
[ "runlength dict ",	0.885,	"[[{\"runlength\":1},{\"dict\":1}]]",	"[[{\"runlength\":3222785},{\"dict\":16777215}]]"	]
[ "runlength dict256 ",	0.609,	"[[{\"runlength\":9999745},{\"dict256\":1}]]",	"[[{\"runlength\":9999745},{\"dict256\":10000255}]]"	]
[ "runlength frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "runlength linear ",	357142.843,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
[ "runlength prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements  from mosaic.analysis('sys', 'tmp4', 'i', 'linear, runlength', '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 17,	24,	32,	45 # length
[ "linear ",	350877.187,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "runlength ",	0.666,	"[[{\"runlength\":10000001}]]",	"[[{\"runlength\":20000000}]]"	]
[ "runlength linear ",	357142.843,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
#drop table tmp4;

# 16:08:07 >  
# 16:08:07 >  "Done."
# 16:08:07 >  

