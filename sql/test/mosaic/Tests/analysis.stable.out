stdout of test 'analysis` in directory 'sql/test/mosaic` itself:


# 17:16:44 >  
# 17:16:44 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37364" "--set" "mapi_usock=/var/tmp/mtest-1924/.s.monetdb.37364" "--forcemito" "--dbpath=/home/aris/sources/monetdb/build/installation/var/MonetDB/mTests_sql_test_mosaic" "--set" "embedded_c=true"
# 17:16:44 >  

# MonetDB 5 server v11.38.0 (hg id: 7b901c6e2d65+)
# This is an unreleased version
# Serving database 'mTests_sql_test_mosaic', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.323 GiB available main-memory of which we use 12.488 GiB
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://aris-XPS-13-9380:37364/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1924/.s.monetdb.37364
# MonetDB/SQL module loaded

# 17:16:44 >  
# 17:16:44 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1924" "--port=37364"
# 17:16:44 >  

#START TRANSACTION;
#create table if not exists tmp4 (i int);
#truncate TABLE tmp4;
[ 0	]
#insert into tmp4 select * from generate_series(0, 10000000);
[ 10000000	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', NULL, '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 10,	24,	26,	26 # length
[ "delta ",	15.998,	"[[{\"delta\":1}]]",	"[[{\"delta\":10000000}]]"	]
[ "dict ",	0.571,	"[[{\"dict\":1}]]",	"[[{\"dict\":10000000}]]"	]
[ "frame ",	2.132,	"[[{\"frame\":306}]]",	"[[{\"frame\":10000000}]]"	]
[ "linear ",	178571.421,	"[[{\"linear\":1}]]",	"[[{\"linear\":10000000}]]"	]
[ "prefix ",	2.132,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":10000000}]]"	]
[ "runlength ",	0.333,	"[[{\"runlength\":10000000}]]",	"[[{\"runlength\":10000000}]]"	]
#insert into tmp4 select 10000000 from tmp4;
[ 10000000	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', NULL, '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 17,	24,	32,	45 # length
[ "delta ",	15.999,	"[[{\"delta\":2}]]",	"[[{\"delta\":20000000}]]"	]
[ "delta frame ",	17.401,	"[[{\"delta\":1},{\"frame\":1}]]",	"[[{\"delta\":16777215},{\"frame\":3222785}]]"	]
[ "delta prefix ",	17.401,	"[[{\"delta\":1},{\"prefix\":1}]]",	"[[{\"delta\":16777215},{\"prefix\":3222785}]]"	]
[ "dict ",	0.799,	"[[{\"dict\":2}]]",	"[[{\"dict\":20000000}]]"	]
[ "dict delta ",	1.485,	"[[{\"dict\":1},{\"delta\":1}]]",	"[[{\"dict\":3222785},{\"delta\":16777215}]]"	]
[ "dict256 delta ",	17.401,	"[[{\"dict256\":1},{\"delta\":1}]]",	"[[{\"dict256\":3222785},{\"delta\":16777215}]]"	]
[ "frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "linear ",	333333.343,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
[ "raw dict256 ",	1.56,	"[[{\"raw\":1},{\"dict256\":1}]]",	"[[{\"raw\":9999745},{\"dict256\":10000255}]]"	]
[ "raw runlength ",	1.999,	"[[{\"raw\":1},{\"runlength\":1}]]",	"[[{\"raw\":10000000},{\"runlength\":10000000}]]"	]
[ "runlength ",	0.666,	"[[{\"runlength\":10000001}]]",	"[[{\"runlength\":20000000}]]"	]
[ "runlength delta ",	19.072,	"[[{\"runlength\":1},{\"delta\":1}]]",	"[[{\"runlength\":3222785},{\"delta\":16777215}]]"	]
[ "runlength linear ",	338983.062,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', 'linear, runlength', '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 17,	24,	32,	45 # length
[ "linear ",	333333.343,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "runlength ",	0.666,	"[[{\"runlength\":10000001}]]",	"[[{\"runlength\":20000000}]]"	]
[ "runlength linear ",	338983.062,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', 'linear, runlength', 'raw') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 21,	24,	32,	45 # length
[ "raw linear ",	333333.343,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "raw runlength ",	1.999,	"[[{\"raw\":1},{\"runlength\":1}]]",	"[[{\"raw\":10000000},{\"runlength\":10000000}]]"	]
[ "raw runlength linear ",	338983.062,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
#set optimizer='mosaic_pipe';
#alter table tmp4 alter column i set storage 'runlength, linear';
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements from mosaic.analysis('sys', 'tmp4', 'i', NULL, '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 17,	24,	32,	45 # length
[ "delta ",	15.999,	"[[{\"delta\":2}]]",	"[[{\"delta\":20000000}]]"	]
[ "delta frame ",	17.401,	"[[{\"delta\":1},{\"frame\":1}]]",	"[[{\"delta\":16777215},{\"frame\":3222785}]]"	]
[ "delta prefix ",	17.401,	"[[{\"delta\":1},{\"prefix\":1}]]",	"[[{\"delta\":16777215},{\"prefix\":3222785}]]"	]
[ "dict ",	0.799,	"[[{\"dict\":2}]]",	"[[{\"dict\":20000000}]]"	]
[ "dict delta ",	1.485,	"[[{\"dict\":1},{\"delta\":1}]]",	"[[{\"dict\":3222785},{\"delta\":16777215}]]"	]
[ "dict256 delta ",	17.401,	"[[{\"dict256\":1},{\"delta\":1}]]",	"[[{\"dict256\":3222785},{\"delta\":16777215}]]"	]
[ "frame ",	2.285,	"[[{\"frame\":306}]]",	"[[{\"frame\":20000000}]]"	]
[ "linear ",	333333.343,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "prefix ",	2.285,	"[[{\"prefix\":306}]]",	"[[{\"prefix\":20000000}]]"	]
[ "raw dict256 ",	1.56,	"[[{\"raw\":1},{\"dict256\":1}]]",	"[[{\"raw\":9999745},{\"dict256\":10000255}]]"	]
[ "raw runlength ",	1.999,	"[[{\"raw\":1},{\"runlength\":1}]]",	"[[{\"raw\":10000000},{\"runlength\":10000000}]]"	]
[ "runlength ",	0.666,	"[[{\"runlength\":10000001}]]",	"[[{\"runlength\":20000000}]]"	]
[ "runlength delta ",	19.072,	"[[{\"runlength\":1},{\"delta\":1}]]",	"[[{\"runlength\":3222785},{\"delta\":16777215}]]"	]
[ "runlength linear ",	338983.062,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
#select technique, factor, json.filter(layout, 'blks') as blocks, json.filter(layout, 'elms') as elements  from mosaic.analysis('sys', 'tmp4', 'i', 'linear, runlength', '') order by technique, factor desc;
% .%6,	.%6,	.,	. # table_name
% technique,	factor,	blocks,	elements # name
% clob,	double,	json,	json # type
% 17,	24,	32,	45 # length
[ "linear ",	333333.343,	"[[{\"linear\":2}]]",	"[[{\"linear\":20000000}]]"	]
[ "runlength ",	0.666,	"[[{\"runlength\":10000001}]]",	"[[{\"runlength\":20000000}]]"	]
[ "runlength linear ",	338983.062,	"[[{\"runlength\":1},{\"linear\":1}]]",	"[[{\"runlength\":9999999},{\"linear\":10000001}]]"	]
#drop table tmp4;
#ROLLBACK;

# 17:20:09 >  
# 17:20:09 >  "Done."
# 17:20:09 >  

