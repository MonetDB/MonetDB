stdout of test 'join` in directory 'sql/test/mosaic` itself:


# 13:25:01 >  
# 13:25:01 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32105" "--set" "mapi_usock=/var/tmp/mtest-27046/.s.monetdb.32105" "--forcemito" "--dbpath=/home/aris/sources/monetdb/build/installation/var/MonetDB/mTests_sql_test_mosaic" "--debug=2097152" "--set" "embedded_c=true"
# 13:25:01 >  

# MonetDB 5 server v11.36.0 (hg id: 91ecbf0a364f+)
# This is an unreleased version
# Serving database 'mTests_sql_test_mosaic', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.347 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2019 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://aris-XPS-13-9380:32105/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-27046/.s.monetdb.32105
# MonetDB/SQL module loaded
#MOScompress_delta
##BATmosaic: mosaic construction 23 usec
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_delta
#MOSjoin_COUI_delta

# 13:25:02 >  
# 13:25:02 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-27046" "--port=32105"
# 13:25:02 >  

#set optimizer='mosaic_pipe';
#START TRANSACTION;
#create table tmp3( i int, b boolean, f real,t timestamp);
#insert into tmp3 values
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(2, false, 0.314,'2014-08-23 11:34:54.000000'),
#(3, true, 0.314,'2014-08-23 11:34:54.000000'),
#(2, false, 0.314,'2014-08-23 11:34:54.000000'),
#(3, true, 0.314,'2014-08-23 11:34:54.000000'),
#(2, false, 0.314,'2014-08-23 11:34:54.000000'),
#(3, true, 0.314,'2014-08-23 11:34:54.000000'),
[ 20	]
#alter table tmp3 set read only;
#alter table tmp3 alter column i set storage 'delta';
#select compressed from storage where "table"='tmp3';
% .storage # table_name
% compressed # name
% bigint # type
% 3 # length
[ NULL	]
[ NULL	]
[ 236	]
[ NULL	]
#create table tmp4( i int, b boolean, f real,t timestamp);
#insert into tmp4 values
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(3, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(4, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
[ 14	]
#explain select tmp3.i, tmp4.i from tmp3, tmp4 where tmp3.i = tmp4.i;
% .explain # table_name
% mal # name
% clob # type
% 135 # length
function user.s18_0():void;
    X_1:void := querylog.define("explain select tmp3.i, tmp4.i from tmp3, tmp4 where tmp3.i = tmp4.i;":str, "mosaic_pipe":str, 19:int);
    X_25:bat[:str] := bat.pack("sys.tmp3":str, "sys.tmp4":str);
    X_26:bat[:str] := bat.pack("i":str, "i":str);
    X_27:bat[:str] := bat.pack("int":str, "int":str);
    X_28:bat[:int] := bat.pack(32:int, 32:int);
    X_29:bat[:int] := bat.pack(0:int, 0:int);
    X_4:int := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4:int, "sys":str, "tmp3":str);
    X_8:bat[:int] := sql.bind(X_4:int, "sys":str, "tmp3":str, "i":str, 0:int);
    X_11:bat[:int] := mosaic.projection(C_5:bat[:oid], X_8:bat[:int]);
    C_12:bat[:oid] := sql.tid(X_4:int, "sys":str, "tmp4":str);
    X_14:bat[:int] := sql.bind(X_4:int, "sys":str, "tmp4":str, "i":str, 0:int);
    X_15:bat[:int] := mosaic.projection(C_12:bat[:oid], X_14:bat[:int]);
    (X_16:bat[:oid], X_17:bat[:oid]) := mosaic.join(X_11:bat[:int], X_15:bat[:int], nil:BAT, nil:BAT, false:bit, nil:lng);
    X_22:bat[:int] := mosaic.projection(X_16:bat[:oid], X_11:bat[:int]);
    X_23:bat[:int] := mosaic.projection(X_17:bat[:oid], X_15:bat[:int]);
    sql.resultSet(X_25:bat[:str], X_26:bat[:str], X_27:bat[:str], X_28:bat[:int], X_29:bat[:int], X_22:bat[:int], X_23:bat[:int]);
end user.s18_0;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=1 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=0 usec 
#pushselect           actions= 0 time=2 usec 
#aliases              actions= 0 time=0 usec 
#mergetable           actions= 0 time=15 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=0 usec 
#constants            actions= 1 time=3 usec 
#commonTerms          actions= 0 time=3 usec 
#projectionpath       actions= 0 time=2 usec 
#deadcode             actions= 0 time=4 usec 
#reorder              actions= 1 time=12 usec 
#matpack              actions= 0 time=0 usec 
#multiplex            actions= 0 time=1 usec 
#mosaic               actions= 5 time=4 usec 
#profiler             actions= 1 time=0 usec 
#candidates           actions= 1 time=1 usec 
#deadcode             actions= 0 time=4 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=17 usec 
#total                actions=27 time=122 usec 
#select tmp3.i, tmp4.i from tmp3, tmp4 where tmp3.i = tmp4.i;
% sys.tmp3,	sys.tmp4 # table_name
% i,	i # name
% int,	int # type
% 1,	1 # length
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 3,	3	]
[ 3,	3	]
[ 3,	3	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 4,	4	]
[ 4,	4	]
[ 4,	4	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 5,	5	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
#set optimizer = 'mosaiccoui_pipe';
#explain select tmp3.i, tmp4.i from tmp3, tmp4 where tmp3.i = tmp4.i;
% .explain # table_name
% mal # name
% clob # type
% 139 # length
function user.s22_0():void;
    X_1:void := querylog.define("explain select tmp3.i, tmp4.i from tmp3, tmp4 where tmp3.i = tmp4.i;":str, "mosaiccoui_pipe":str, 19:int);
    X_25:bat[:str] := bat.pack("sys.tmp3":str, "sys.tmp4":str);
    X_26:bat[:str] := bat.pack("i":str, "i":str);
    X_27:bat[:str] := bat.pack("int":str, "int":str);
    X_28:bat[:int] := bat.pack(32:int, 32:int);
    X_29:bat[:int] := bat.pack(0:int, 0:int);
    X_4:int := sql.mvc();
    C_5:bat[:oid] := sql.tid(X_4:int, "sys":str, "tmp3":str);
    X_8:bat[:int] := sql.bind(X_4:int, "sys":str, "tmp3":str, "i":str, 0:int);
    X_11:bat[:int] := mosaic.projection(C_5:bat[:oid], X_8:bat[:int]);
    C_12:bat[:oid] := sql.tid(X_4:int, "sys":str, "tmp4":str);
    X_14:bat[:int] := sql.bind(X_4:int, "sys":str, "tmp4":str, "i":str, 0:int);
    X_15:bat[:int] := mosaic.projection(C_12:bat[:oid], X_14:bat[:int]);
    (X_16:bat[:oid], X_17:bat[:oid]) := mosaic.join(X_11:bat[:int], X_15:bat[:int], nil:BAT, nil:BAT, false:bit, nil:lng, true:bit);
    X_22:bat[:int] := mosaic.projection(X_16:bat[:oid], X_11:bat[:int]);
    X_23:bat[:int] := mosaic.projection(X_17:bat[:oid], X_15:bat[:int]);
    sql.resultSet(X_25:bat[:str], X_26:bat[:str], X_27:bat[:str], X_28:bat[:int], X_29:bat[:int], X_22:bat[:int], X_23:bat[:int]);
end user.s22_0;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=1 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=0 usec 
#pushselect           actions= 0 time=2 usec 
#aliases              actions= 0 time=1 usec 
#mergetable           actions= 0 time=16 usec 
#deadcode             actions= 0 time=4 usec 
#aliases              actions= 0 time=0 usec 
#constants            actions= 1 time=3 usec 
#commonTerms          actions= 0 time=3 usec 
#projectionpath       actions= 0 time=2 usec 
#deadcode             actions= 0 time=4 usec 
#reorder              actions= 1 time=12 usec 
#matpack              actions= 0 time=0 usec 
#multiplex            actions= 0 time=1 usec 
#mosaic               actions= 5 time=3 usec 
#profiler             actions= 1 time=1 usec 
#candidates           actions= 1 time=0 usec 
#deadcode             actions= 0 time=3 usec 
#wlc                  actions= 0 time=0 usec 
#garbagecollector     actions= 1 time=15 usec 
#total                actions=27 time=120 usec 
#select tmp3.i, tmp4.i from tmp3, tmp4 where tmp3.i = tmp4.i;
% sys.tmp3,	sys.tmp4 # table_name
% i,	i # name
% int,	int # type
% 1,	1 # length
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 1,	1	]
[ 3,	3	]
[ 3,	3	]
[ 3,	3	]
[ 4,	4	]
[ 4,	4	]
[ 4,	4	]
[ 5,	5	]
#ROLLBACK;

# 13:25:02 >  
# 13:25:02 >  "Done."
# 13:25:02 >  

