stdout of test 'union` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =

#--
#-- UNION (also INTERSECT, EXCEPT)
#--
#-- Simple UNION constructs
#SELECT 1 AS two UNION SELECT 2;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1 ]
[ 2 ]

#SELECT 1 AS one UNION SELECT 1;
% sys.L0 # table_name
% one # name
% ? # type
% ? # length
[ 1 ]

#SELECT 1 AS two UNION ALL SELECT 2;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1 ]
[ 2 ]

#SELECT 1 AS two UNION ALL SELECT 1;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1 ]
[ 1 ]

#SELECT 1 AS three UNION SELECT 2 UNION SELECT 3;
% sys.L0 # table_name
% three # name
% ? # type
% ? # length
[ 1 ]
[ 2 ]
[ 3 ]

#SELECT 1 AS two UNION SELECT 2 UNION SELECT 2;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1 ]
[ 2 ]

#SELECT 1 AS three UNION SELECT 2 UNION ALL SELECT 2;
% sys.L0 # table_name
% three # name
% ? # type
% ? # length
[ 1 ]
[ 2 ]
[ 2 ]

#SELECT 1.1 AS two UNION SELECT 2.2;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1.1 ]
[ 2.2 ]

#-- Mixed types
#SELECT 1.1 AS two UNION SELECT 2;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1.1 ]
[ 2 ]

#SELECT 1 AS two UNION SELECT 2.2;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1 ]
[ 2.2 ]

#SELECT 1 AS one UNION SELECT 1.0::double;
% sys.L0 # table_name
% one # name
% ? # type
% ? # length
[ 1 ]

#SELECT 1.1 AS two UNION ALL SELECT 2;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1.1 ]
[ 2 ]

#SELECT 1.0::double AS two UNION ALL SELECT 1;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1 ]
[ 1 ]

#SELECT 1.1 AS three UNION SELECT 2 UNION SELECT 3;
% sys.L0 # table_name
% three # name
% ? # type
% ? # length
[ 1.1 ]
[ 2 ]
[ 3 ]

#SELECT 1.1::double AS two UNION SELECT 2 UNION SELECT 2.0::double;
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1.1 ]
[ 2 ]

#SELECT 1.1 AS three UNION SELECT 2 UNION ALL SELECT 2;
% sys.L0 # table_name
% three # name
% ? # type
% ? # length
[ 1.1 ]
[ 2 ]
[ 2 ]

#SELECT 1.1 AS two UNION (SELECT 2 UNION ALL SELECT 2);
% sys.L0 # table_name
% two # name
% ? # type
% ? # length
[ 1.1 ]
[ 2 ]

#--
#-- Try testing from tables...
#--
#SELECT f1 AS five FROM FLOAT8_TBL
#UNION
#SELECT f1 FROM FLOAT8_TBL;
% sys.L0 # table_name
% five # name
% ? # type
% ? # length
[ "-1.2345678901234e+200" ]
[ -1004.3 ]
[ -34.84 ]
[ "-1.2345678901234e-200" ]
[ 0 ]

#SELECT f1 AS ten FROM FLOAT8_TBL
#UNION ALL
#SELECT f1 FROM FLOAT8_TBL;
% sys.L0 # table_name
% ten # name
% ? # type
% ? # length
[ 0 ]
[ -34.84 ]
[ -1004.3 ]
[ "-1.2345678901234e+200" ]
[ "-1.2345678901234e-200" ]
[ 0 ]
[ -34.84 ]
[ -1004.3 ]
[ "-1.2345678901234e+200" ]
[ "-1.2345678901234e-200" ]

#SELECT f1 AS nine FROM FLOAT8_TBL
#UNION
#SELECT f1 FROM INT4_TBL;
% sys.L0 # table_name
% nine # name
% ? # type
% ? # length
[ "-1.2345678901234e+200" ]
[ -2147483647 ]
[ -123456 ]
[ -1004.3 ]
[ -34.84 ]
[ "-1.2345678901234e-200" ]
[ 0 ]
[ 123456 ]
[ 2147483647 ]

#SELECT f1 AS ten FROM FLOAT8_TBL
#UNION ALL
#SELECT f1 FROM INT4_TBL;
% sys.L0 # table_name
% ten # name
% ? # type
% ? # length
[ 0 ]
[ -34.84 ]
[ -1004.3 ]
[ "-1.2345678901234e+200" ]
[ "-1.2345678901234e-200" ]
[ 0 ]
[ 123456 ]
[ -123456 ]
[ 2147483647 ]
[ -2147483647 ]

#SELECT f1 AS five FROM FLOAT8_TBL
#  WHERE f1 BETWEEN -1e6 AND 1e6
#UNION
#SELECT f1 FROM INT4_TBL
#  WHERE f1 BETWEEN 0 AND 1000000;
% sys.L0 # table_name
% five # name
% ? # type
% ? # length
[ -1004.3 ]
[ -34.84 ]
[ "-1.2345678901234e-200" ]
[ 0 ]
[ 123456 ]

#SELECT CAST(f1 AS char(4)) AS three FROM VARCHAR_TBL
#UNION
#SELECT f1 FROM CHAR_TBL;
% sys.L0 # table_name
% three # name
% ? # type
% ? # length
[ "a" ]
[ "ab" ]
[ "abcd" ]

#SELECT f1 AS three FROM VARCHAR_TBL
#UNION
#SELECT CAST(f1 AS varchar) FROM CHAR_TBL;
% sys.L0 # table_name
% three # name
% ? # type
% ? # length
[ "a" ]
[ "ab" ]
[ "abcd" ]

#SELECT f1 AS eight FROM VARCHAR_TBL
#UNION ALL
#SELECT f1 FROM CHAR_TBL;
% sys.L0 # table_name
% eight # name
% ? # type
% ? # length
[ "a" ]
[ "ab" ]
[ "abcd" ]
[ "abcd" ]
[ "a" ]
[ "ab" ]
[ "abcd" ]
[ "abcd" ]

#SELECT f1 AS five FROM TEXT_TBL
#UNION
#SELECT f1 FROM VARCHAR_TBL
#UNION
#SELECT TRIM(TRAILING FROM f1) FROM CHAR_TBL;
% sys.L0 # table_name
% five # name
% ? # type
% ? # length
[ "a" ]
[ "ab" ]
[ "abcd" ]
[ "doh!" ]
[ "hi de ho neighbor" ]

#--
#-- INTERSECT and EXCEPT
#--
#SELECT q2 FROM int8_tbl INTERSECT SELECT q1 FROM int8_tbl;
% sys.L0 # table_name
% q2 # name
% ? # type
% ? # length
[ 123 ]
[ 4567890123456789 ]

#SELECT q2 FROM int8_tbl INTERSECT ALL SELECT q1 FROM int8_tbl;
% sys.L0 # table_name
% q2 # name
% ? # type
% ? # length
[ 123 ]
[ 4567890123456789 ]
[ 4567890123456789 ]

#SELECT q2 FROM int8_tbl EXCEPT SELECT q1 FROM int8_tbl;
% sys.L0 # table_name
% q2 # name
% ? # type
% ? # length
[ -4567890123456789 ]
[ 456 ]

#SELECT q2 FROM int8_tbl EXCEPT ALL SELECT q1 FROM int8_tbl;
% sys.L0 # table_name
% q2 # name
% ? # type
% ? # length
[ -4567890123456789 ]
[ 456 ]

#SELECT q2 FROM int8_tbl EXCEPT ALL SELECT DISTINCT q1 FROM int8_tbl;
% sys.L0 # table_name
% q2 # name
% ? # type
% ? # length
[ -4567890123456789 ]
[ 456 ]
[ 4567890123456789 ]

#SELECT q1 FROM int8_tbl EXCEPT SELECT q2 FROM int8_tbl;
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length

#SELECT q1 FROM int8_tbl EXCEPT ALL SELECT q2 FROM int8_tbl;
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length
[ 123 ]
[ 4567890123456789 ]

#SELECT q1 FROM int8_tbl EXCEPT ALL SELECT DISTINCT q2 FROM int8_tbl;
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length
[ 123 ]
[ 4567890123456789 ]
[ 4567890123456789 ]

#--
#-- Mixed types
#--
#SELECT f1 FROM float8_tbl INTERSECT SELECT f1 FROM int4_tbl;
% sys.L0 # table_name
% f1 # name
% ? # type
% ? # length
[ 0 ]

#SELECT f1 FROM float8_tbl EXCEPT SELECT f1 FROM int4_tbl;
% sys.L0 # table_name
% f1 # name
% ? # type
% ? # length
[ "-1.2345678901234e+200" ]
[ -1004.3 ]
[ -34.84 ]
[ "-1.2345678901234e-200" ]

#--
#-- Operator precedence and (((((extra))))) parentheses
#--
#SELECT q1 FROM int8_tbl INTERSECT SELECT q2 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl;
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length
[ 123 ]
[ 4567890123456789 ]
[ 456 ]
[ 4567890123456789 ]
[ 123 ]
[ 4567890123456789 ]
[ -4567890123456789 ]

#SELECT q1 FROM int8_tbl INTERSECT (((SELECT q2 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl)));
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length
[ 123 ]
[ 4567890123456789 ]

(((SELECT q1 FROM int8_tbl INTERSECT SELECT q2 FROM int8_tbl))) UNION ALL SELECT q2 FROM int8_tbl;
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length
[ 123 ]
[ 4567890123456789 ]
[ 456 ]
[ 4567890123456789 ]
[ 123 ]
[ 4567890123456789 ]
[ -4567890123456789 ]

#SELECT q1 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl EXCEPT SELECT q1 FROM int8_tbl;
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length
[ -4567890123456789 ]
[ 456 ]

#SELECT q1 FROM int8_tbl UNION ALL (((SELECT q2 FROM int8_tbl EXCEPT SELECT q1 FROM int8_tbl)));
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length
[ 123 ]
[ 123 ]
[ 4567890123456789 ]
[ 4567890123456789 ]
[ 4567890123456789 ]
[ -4567890123456789 ]
[ 456 ]

(((SELECT q1 FROM int8_tbl UNION ALL SELECT q2 FROM int8_tbl))) EXCEPT SELECT q1 FROM int8_tbl;
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length
[ -4567890123456789 ]
[ 456 ]

#--
#-- Subqueries with ORDER BY & LIMIT clauses
#--
#-- In this syntax, ORDER BY/LIMIT apply to the result of the EXCEPT
#SELECT q1,q2 FROM int8_tbl EXCEPT SELECT q2,q1 FROM int8_tbl
#ORDER BY q2,q1;
% sys.L0,	sys.L0 # table_name
% q1,	q2 # name
% ?,	? # type
% ?,	? # length
[ 4567890123456789,	-4567890123456789 ]
[ 123,	456 ]

#-- This should fail, because q2 isn't a name of an EXCEPT output column
#
#-- But this should work:
#SELECT q1 FROM int8_tbl EXCEPT (((SELECT q2 FROM int8_tbl ORDER BY q2 LIMIT 1)));
% sys.L0 # table_name
% q1 # name
% ? # type
% ? # length
[ 123 ]
[ 4567890123456789 ]

#--
#-- New syntaxes (7.1) permit new tests
#--
(((((select * from int8_tbl)))));
% sys.L0,	sys.L0 # table_name
% q1,	q2 # name
% ?,	? # type
% ?,	? # length
[ 123,	456 ]
[ 123,	4567890123456789 ]
[ 4567890123456789,	123 ]
[ 4567890123456789,	4567890123456789 ]
[ 4567890123456789,	-4567890123456789 ]


= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

