stdout of test 'varchar` in directory 'sql/test/pg_regress` itself:


# 22:22:59 >  
# 22:22:59 >   mserver5 "--config=/export/scratch/stripe/fabian/monetdb/current/program-i86pc/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/export/scratch/stripe/fabian/monetdb/current/program-i86pc/lib/MonetDB5:/export/scratch/stripe/fabian/monetdb/current/program-i86pc/lib/MonetDB5/lib:/export/scratch/stripe/fabian/monetdb/current/program-i86pc/lib/MonetDB5/bin" --set "gdk_dbfarm=/export/scratch/stripe/fabian/monetdb/current/mtest-pegasus.ins.cwi.nl/sql/dbfarm"    --set mapi_open=true --set xrpc_open=true --set mapi_port=30462 --set xrpc_port=40583 --set monet_prompt= --trace  "--dbname=mTests_src_test_pg_regress" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 22:22:59 >  

# MonetDB server v5.13.0, based on kernel v1.31.0
# Serving database 'mTests_src_test_pg_regress', using 1 thread
# Compiled for x86_64-pc-solaris2.11/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2009 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://pegasus.ins.cwi.nl:30462/
# MonetDB/SQL module v2.31.0 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 22:22:59 >  
# 22:22:59 >  ./varchar.SQL.sh varchar 
# 22:22:59 >  


# 22:22:59 >  
# 22:22:59 >  Mtimeout -timeout 60 mclient -lsql -umonetdb -Pmonetdb --host=pegasus --port=30462  -e < ../../../../../../../../../../mirror/fabian/monetdb/current/sql/src/test/pg_regress/Tests/../monetdb/varchar.sql
# 22:22:59 >  

#--
#-- VARCHAR
#--
#CREATE TABLE VARCHAR_TBL(f1 varchar(1));
[ 1	]
[ 1	]
#-- any of the following three input formats are acceptable 
[ 1	]
[ 1	]
[ 1	]
#-- zero-length char 
[ 1	]
#-- try varchar's of greater than 1 length 
#INSERT INTO VARCHAR_TBL (f1) VALUES ('cd');
#INSERT INTO VARCHAR_TBL (f1) VALUES ('c     ');
#SELECT '' AS seven, VARCHAR_TBL.* FROM VARCHAR_TBL;
% .,	sys.varchar_tbl # table_name
% seven,	f1 # name
% char,	varchar # type
% 0,	1 # length
[ "",	"a"	]
[ "",	"A"	]
[ "",	"1"	]
[ "",	"2"	]
[ "",	"3"	]
[ "",	""	]
#SELECT '' AS six, c.*
#   FROM VARCHAR_TBL c
#   WHERE c.f1 <> 'a';
% .,	sys.c # table_name
% six,	f1 # name
% char,	varchar # type
% 0,	1 # length
[ "",	"A"	]
[ "",	"1"	]
[ "",	"2"	]
[ "",	"3"	]
[ "",	""	]
#SELECT '' AS one, c.*
#   FROM VARCHAR_TBL c
#   WHERE c.f1 = 'a';
% .,	sys.c # table_name
% one,	f1 # name
% char,	varchar # type
% 0,	1 # length
[ "",	"a"	]
#SELECT '' AS five, c.*
#   FROM VARCHAR_TBL c
#   WHERE c.f1 < 'a';
% .,	sys.c # table_name
% five,	f1 # name
% char,	varchar # type
% 0,	1 # length
[ "",	"A"	]
[ "",	"1"	]
[ "",	"2"	]
[ "",	"3"	]
[ "",	""	]
#SELECT '' AS six, c.*
#   FROM VARCHAR_TBL c
#   WHERE c.f1 <= 'a';
% .,	sys.c # table_name
% six,	f1 # name
% char,	varchar # type
% 0,	1 # length
[ "",	"a"	]
[ "",	"A"	]
[ "",	"1"	]
[ "",	"2"	]
[ "",	"3"	]
[ "",	""	]
#SELECT '' AS one, c.*
#   FROM VARCHAR_TBL c
#   WHERE c.f1 > 'a';
% .,	sys.c # table_name
% one,	f1 # name
% char,	varchar # type
% 0,	0 # length
#SELECT '' AS two, c.*
#   FROM VARCHAR_TBL c
#   WHERE c.f1 >= 'a';
% .,	sys.c # table_name
% two,	f1 # name
% char,	varchar # type
% 0,	1 # length
[ "",	"a"	]
#DROP TABLE VARCHAR_TBL;
#--
#-- Now test longer arrays of char
#--
#CREATE TABLE VARCHAR_TBL(f1 varchar(4));
[ 1	]
[ 1	]
[ 1	]
#INSERT INTO VARCHAR_TBL (f1) VALUES ('abcde');
#INSERT INTO VARCHAR_TBL (f1) VALUES ('abcd    ');
#SELECT '' AS four, VARCHAR_TBL.* FROM VARCHAR_TBL;
% .,	sys.varchar_tbl # table_name
% four,	f1 # name
% char,	varchar # type
% 0,	4 # length
[ "",	"a"	]
[ "",	"ab"	]
[ "",	"abcd"	]
#DROP TABLE VARCHAR_TBL;

# 22:22:59 >  
# 22:22:59 >  Done.
# 22:22:59 >  

