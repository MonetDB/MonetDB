stdout of test 'portals_p2` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =

#--
#-- PORTALS_P2
#--
START TRANSACTION;
DECLARE foo13 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 50;
DECLARE foo14 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 51;
DECLARE foo15 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 52;
DECLARE foo16 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 53;
DECLARE foo17 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 54;
DECLARE foo18 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 55;
DECLARE foo19 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 56;
DECLARE foo20 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 57;
DECLARE foo21 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 58;
DECLARE foo22 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 59;
DECLARE foo23 CURSOR FOR 
#   SELECT * FROM onek WHERE unique1 = 60;
DECLARE foo24 CURSOR FOR 
#   SELECT * FROM onek2 WHERE unique1 = 50;
DECLARE foo25 CURSOR FOR 
#   SELECT * FROM onek2 WHERE unique1 = 60;
FETCH all in foo13;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 50,	253,	0,	2,	0,	10,	0,	50,	50,	50,	50,	0,	1,	"YBAAAA",	"TJAAAA",	"HHHHxx" ]

FETCH all in foo14;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 51,	76,	1,	3,	1,	11,	1,	51,	51,	51,	51,	2,	3,	"ZBAAAA",	"YCAAAA",	"AAAAxx" ]

FETCH all in foo15;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 52,	985,	0,	0,	2,	12,	2,	52,	52,	52,	52,	4,	5,	"ACAAAA",	"XLBAAA",	"HHHHxx" ]

FETCH all in foo16;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 53,	196,	1,	1,	3,	13,	3,	53,	53,	53,	53,	6,	7,	"BCAAAA",	"OHAAAA",	"AAAAxx" ]

FETCH all in foo17;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 54,	356,	0,	2,	4,	14,	4,	54,	54,	54,	54,	8,	9,	"CCAAAA",	"SNAAAA",	"AAAAxx" ]

FETCH all in foo18;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 55,	627,	1,	3,	5,	15,	5,	55,	55,	55,	55,	10,	11,	"DCAAAA",	"DYAAAA",	"VVVVxx" ]

FETCH all in foo19;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 56,	54,	0,	0,	6,	16,	6,	56,	56,	56,	56,	12,	13,	"ECAAAA",	"CCAAAA",	"OOOOxx" ]

FETCH all in foo20;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 57,	942,	1,	1,	7,	17,	7,	57,	57,	57,	57,	14,	15,	"FCAAAA",	"GKBAAA",	"OOOOxx" ]

FETCH all in foo21;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 58,	114,	0,	2,	8,	18,	8,	58,	58,	58,	58,	16,	17,	"GCAAAA",	"KEAAAA",	"OOOOxx" ]

FETCH all in foo22;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 59,	593,	1,	3,	9,	19,	9,	59,	59,	59,	59,	18,	19,	"HCAAAA",	"VWAAAA",	"HHHHxx" ]

FETCH all in foo23;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 60,	483,	0,	0,	0,	0,	0,	60,	60,	60,	60,	0,	1,	"ICAAAA",	"PSAAAA",	"VVVVxx" ]

FETCH all in foo24;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 50,	253,	0,	2,	0,	10,	0,	50,	50,	50,	50,	0,	1,	"YBAAAA",	"TJAAAA",	"HHHHxx" ]

FETCH all in foo25;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% unique1,	unique2,	two,	four,	ten,	twenty,	hundred,	thousand,	twothousand,	fivethous,	tenthous,	odd,	even,	stringu1,	stringu2,	string4 # name
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ 60,	483,	0,	0,	0,	0,	0,	60,	60,	60,	60,	0,	1,	"ICAAAA",	"PSAAAA",	"VVVVxx" ]

CLOSE foo13;
CLOSE foo14;
CLOSE foo15;
CLOSE foo16;
CLOSE foo17;
CLOSE foo18;
CLOSE foo19;
CLOSE foo20;
CLOSE foo21;
CLOSE foo22;
CLOSE foo23;
CLOSE foo24;
CLOSE foo25;
COMMIT;

= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

