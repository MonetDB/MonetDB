stdout of test 'strings` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

#--
#-- STRINGS
#-- Test various data entry syntaxes.
#--
#-- SQL92 string continuation syntax
#-- E021-03 character string literals
#SELECT 'first line'
#' - next line'
#	' - third line'
#	AS "Three lines to one";
% . # table_name
% "Three lines to one" # name
% char # type
% 35 # length
[ "first line - next line - third line"	]
#SELECT 'first line'
#' - next line' /* this comment is not allowed here */
#' - third line'
#	AS "Illegal comment within continuation";
% . # table_name
% "Illegal comment within continuation" # name
% char # type
% 35 # length
[ "first line - next line - third line" ]
#CREATE TABLE CHAR_TBL(f1 char);
#INSERT INTO CHAR_TBL (f1) VALUES ('a');
[ 1	]
#INSERT INTO CHAR_TBL (f1) VALUES ('A');
[ 1	]
#INSERT INTO CHAR_TBL (f1) VALUES ('1');
[ 1	]
#INSERT INTO CHAR_TBL (f1) VALUES (2);
[ 1	]
#INSERT INTO CHAR_TBL (f1) VALUES ('3');
[ 1	]
#INSERT INTO CHAR_TBL (f1) VALUES ('');
[ 1	]
#SELECT CAST(f1 AS text) AS "text(char)" FROM CHAR_TBL;
% sys. # table_name
% text(char) # name
% char # type
% 1 # length
[ "a"	]
[ "A"	]
[ "1"	]
[ "2"	]
[ "3"	]
[ ""	]
#CREATE TABLE VARCHAR_TBL(f1 varchar(1));
#INSERT INTO VARCHAR_TBL (f1) VALUES ('a');
[ 1	]
#INSERT INTO VARCHAR_TBL (f1) VALUES ('A');
[ 1	]
#INSERT INTO VARCHAR_TBL (f1) VALUES ('1');
[ 1	]
#INSERT INTO VARCHAR_TBL (f1) VALUES (2);
[ 1	]
#INSERT INTO VARCHAR_TBL (f1) VALUES ('3');
[ 1	]
#INSERT INTO VARCHAR_TBL (f1) VALUES ('');
[ 1	]
#SELECT CAST(f1 AS text) AS "text(varchar)" FROM VARCHAR_TBL;
% sys. # table_name
% text(varchar) # name
% varchar # type
% 1 # length
[ "a"	]
[ "A"	]
[ "1"	]
[ "2"	]
[ "3"	]
[ ""	]
#SELECT CAST('namefield' AS text) AS "text(name)";
% . # table_name
% text(name) # name
% clob # type
% 9 # length
[ "namefield"	]
#CREATE TABLE TEXT_TBL (f1 text);
#INSERT INTO TEXT_TBL VALUES ('doh!');
[ 1	]
#INSERT INTO TEXT_TBL VALUES ('hi de ho neighbor');
[ 1	]
#SELECT CAST(f1 AS char(10)) AS "char(text)" FROM TEXT_TBL;
% sys. # table_name
% char(text) # name
% char # type
% 10 # length
[ "doh!"	]
[ "hi de ho n"	]
#SELECT CAST(f1 AS char(20)) AS "char(text)" FROM TEXT_TBL;
% sys. # table_name
% char(text) # name
% char # type
% 20 # length
[ "doh!"	]
[ "hi de ho neighbor"	]
#SELECT CAST(f1 AS char(10)) AS "char(varchar)" FROM VARCHAR_TBL;
% sys. # table_name
% char(varchar) # name
% char # type
% 10 # length
[ "a"	]
[ "A"	]
[ "1"	]
[ "2"	]
[ "3"	]
[ ""	]
#SELECT CAST('namefield' AS char(10)) AS "char(name)";
% . # table_name
% char(name) # name
% char # type
% 10 # length
[ "namefield"	]
#SELECT CAST(f1 AS varchar(1)) AS "varchar(text)" FROM TEXT_TBL;
% sys. # table_name
% varchar(text) # name
% varchar # type
% 1 # length
[ "d"	]
[ "h"	]
#SELECT CAST(f1 AS varchar(1)) AS "varchar(char)" FROM CHAR_TBL;
% sys. # table_name
% varchar(char) # name
% varchar # type
% 1 # length
[ "a"	]
[ "A"	]
[ "1"	]
[ "2"	]
[ "3"	]
[ ""	]
#SELECT CAST('namefield' AS string) AS "varchar(name)";
% . # table_name
% varchar(name) # name
% clob # type
% 9 # length
[ "namefield"	]
#DROP TABLE CHAR_TBL;
#DROP TABLE VARCHAR_TBL;
#DROP TABLE TEXT_TBL;
#SELECT TRIM('  bunch o blanks  ') = 'bunch o blanks' AS "bunch o blanks";
% . # table_name
% "bunch o blanks" # name
% boolean # type
% 5 # length
[ true	]
#SELECT LTRIM('  bunch o blanks  ') = 'bunch o blanks  ' AS "bunch o blanks  ";
% . # table_name
% "bunch o blanks  " # name
% boolean # type
% 5 # length
[ true	]
#SELECT RTRIM('  bunch o blanks  ') = '  bunch o blanks' AS "  bunch o blanks";
% . # table_name
% "  bunch o blanks" # name
% boolean # type
% 5 # length
[ true	]
#SELECT TRIM(replace('xxxxxsome Xsxxxxx', 'x', ' ')) = 'some Xs' AS "some Xs";
% . # table_name
% "some Xs" # name
% boolean # type
% 5 # length
[ true	]
#SELECT SUBSTRING('1234567890' FROM 3) = '34567890' AS "34567890";
% . # table_name
% 34567890 # name
% boolean # type
% 5 # length
[ true	]
#SELECT SUBSTRING('1234567890' FROM 4 FOR 3) = '456' AS "456";
% . # table_name
% 456 # name
% boolean # type
% 5 # length
[ true	]
#SELECT POSITION('4' IN '1234567890') = '4' AS "4";
% . # table_name
% 4 # name
% boolean # type
% 5 # length
[ true	]
#SELECT POSITION(5 IN '1234567890') = '5' AS "5";
% . # table_name
% 5 # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' LIKE 'h%' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' NOT LIKE 'h%' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'hawkeye' LIKE 'H%' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'hawkeye' NOT LIKE 'H%' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' LIKE 'indio%' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'hawkeye' NOT LIKE 'indio%' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' LIKE 'h%eye' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' NOT LIKE 'h%eye' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'indio' LIKE '_ndio' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'indio' NOT LIKE '_ndio' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'indio' LIKE 'in__o' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'indio' NOT LIKE 'in__o' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'indio' LIKE 'in_o' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'indio' NOT LIKE 'in_o' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' LIKE 'h%' ESCAPE '#' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' NOT LIKE 'h%' ESCAPE '#' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'indio' LIKE 'ind_o' ESCAPE '$' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'indio' NOT LIKE 'ind_o' ESCAPE '$' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'h%' LIKE 'h#%' ESCAPE '#' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'h%' NOT LIKE 'h#%' ESCAPE '#' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'h%wkeye' LIKE 'h#%' ESCAPE '#' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'h%wkeye' NOT LIKE 'h#%' ESCAPE '#' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'h%wkeye' LIKE 'h#%%' ESCAPE '#' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'h%wkeye' NOT LIKE 'h#%%' ESCAPE '#' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'h%awkeye' LIKE 'h#%a%k%e' ESCAPE '#' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'h%awkeye' NOT LIKE 'h#%a%k%e' ESCAPE '#' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'indio' LIKE '_ndio' ESCAPE '$' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'indio' NOT LIKE '_ndio' ESCAPE '$' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'i_dio' LIKE 'i$_d_o' ESCAPE '$' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'i_dio' NOT LIKE 'i$_d_o' ESCAPE '$' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'i_dio' LIKE 'i$_nd_o' ESCAPE '$' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'i_dio' NOT LIKE 'i$_nd_o' ESCAPE '$' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'i_dio' LIKE 'i$_d%o' ESCAPE '$' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'i_dio' NOT LIKE 'i$_d%o' ESCAPE '$' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'maca' LIKE 'm%aca' ESCAPE '%' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'maca' NOT LIKE 'm%aca' ESCAPE '%' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'ma%a' LIKE 'm%a%%a' ESCAPE '%' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'ma%a' NOT LIKE 'm%a%%a' ESCAPE '%' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'bear' LIKE 'b_ear' ESCAPE '_' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'bear' NOT LIKE 'b_ear' ESCAPE '_' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'be_r' LIKE 'b_e__r' ESCAPE '_' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'be_r' NOT LIKE 'b_e__r' ESCAPE '_' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'be_r' LIKE '__e__r' ESCAPE '_' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'be_r' NOT LIKE '__e__r' ESCAPE '_' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' ILIKE 'h%' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' NOT ILIKE 'h%' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'hawkeye' ILIKE 'H%' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' NOT ILIKE 'H%' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'hawkeye' ILIKE 'H%Eye' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'hawkeye' NOT ILIKE 'H%Eye' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'Hawkeye' ILIKE 'h%' AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT 'Hawkeye' NOT ILIKE 'h%' AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT 'unknown' || ' and unknown' AS "Concat unknown types";
% . # table_name
% "Concat unknown types" # name
% varchar # type
% 19 # length
[ "unknown and unknown" ]
#SELECT cast('text' as text) || ' and unknown' AS "Concat text to unknown type";
% . # table_name
% "Concat text to unknown type" # name
% varchar # type
% 16 # length
[ "text and unknown" ]
#SELECT cast('characters' as char(20)) || ' and text' AS "Concat char to unknown type";
% . # table_name
% "Concat char to unknown type" # name
% varchar # type
% 19 # length
[ "characters and text" ]
#SELECT cast('text' as text) || cast(' and characters' as char(20)) AS "Concat text to char";
% . # table_name
% "Concat text to char" # name
% varchar # type
% 19 # length
[ "text and characters" ]
#SELECT cast('text' as text) || cast(' and varchar' as varchar(20)) AS "Concat text to varchar";
% . # table_name
% "Concat text to varchar" # name
% varchar # type
% 16 # length
[ "text and varchar" ]

#--
#-- test substr with toasted text values
#--
#CREATE TABLE toasttest(f1 text);
#insert into toasttest values(repeat('1234567890',10000));
[ 1 ]
#insert into toasttest values(repeat('1234567890',10000));
[ 1 ]
#--
#-- Ensure that some values are uncompressed, to test the faster substring
#-- operation used in that case
#--
#alter table toasttest alter column f1 set storage external;
#insert into toasttest values(repeat('1234567890',10000));
[ 1 ]
#insert into toasttest values(repeat('1234567890',10000));
[ 1 ]
#SELECT substring(f1, -1, 5) from toasttest;
% sys.%1 # table_name
% %1 # name
% clob # type
% 5 # length
[ "12345"	]
[ "12345"	]
[ "12345"	]
[ "12345"	]
#SELECT substring(f1, 5, -1) from toasttest;
% sys.%1 # table_name
% %1 # name
% clob # type
% 0 # length
[ ""	]
[ ""	]
[ ""	]
[ ""	]
#SELECT substring(f1, 99995) from toasttest;
% sys.%1 # table_name
% %1 # name
% varchar # type
% 6 # length
[ "567890"	]
[ "567890"	]
[ "567890"	]
[ "567890"	]
#SELECT substring(f1, 99995, 10) from toasttest;
% sys.%1 # table_name
% %1 # name
% clob # type
% 6 # length
[ "567890"	]
[ "567890"	]
[ "567890"	]
[ "567890"	]
#DROP TABLE toasttest;
#CREATE TABLE toasttest(f1 blob);
#insert into toasttest values(repeat('1234567890',10000));
[ 1 ]
#insert into toasttest values(decode(repeat('1234567890',10000),'escape'));
[ 1 ]
#SELECT substring(f1, -1, 5) from toasttest;
% sys.%1 # table_name
% %1 # name
% clob # type
% 5 # length
[ "12345"	]
[ "12345"	]
#SELECT substring(f1, 5, -1) from toasttest;
% sys.%1 # table_name
% %1 # name
% clob # type
% 0 # length
[ ""	]
[ ""	]
#SELECT substring(f1, 99995) from toasttest;
% sys.%1 # table_name
% %1 # name
% clob # type
% 6 # length
[ "567890"	]
[ "567890"	]
#SELECT substring(f1, 99995, 10) from toasttest;
% sys.%1 # table_name
% %1 # name
% clob # type
% 6 # length
[ "567890"	]
[ "567890"	]
#DROP TABLE toasttest;
#--
#-- test length
#--
#SELECT length('abcdef') AS "length_6";
% . # table_name
% length_6 # name
% int # type
% 1 # length
[ 6 ]
#SELECT locate('cd', 'abcdef') AS "pos_3";
% . # table_name
% pos_3 # name
% int # type
% 1 # length
[ 3 ]
#SELECT locate('xy', 'abcdef') AS "pos_0";
% . # table_name
% pos_0 # name
% int # type
% 1 # length
[ 0 ]

#--
#-- test replace
#--
#SELECT replace('abcdef', 'de', '45') AS "abc45f";
% . # table_name
% abc45f # name
% varchar # type
% 6 # length
[ "abc45f" ]

#SELECT replace('yabadabadoo', 'ba', '123') AS "ya123da123doo";
% . # table_name
% ya123da123doo # name
% varchar # type
% 13 # length
[ "ya123da123doo" ]

#SELECT replace('yabadoo', 'bad', '') AS "yaoo";
% . # table_name
% yaoo # name
% varchar # type
% 4 # length
[ "yaoo" ]

#select split_part('joeuser@mydatabase','@',1) AS "joeuser";
% . # table_name
% joeuser # name
% clob # type
% 7 # length
[ "joeuser"     ]
#select split_part('joeuser@mydatabase','@',2) AS "mydatabase";
% . # table_name
% mydatabase # name
% clob # type
% 10 # length
[ "mydatabase"  ]
#select split_part('joeuser@mydatabase','@',3) AS "empty string";
% . # table_name
% "empty string" # name
% clob # type
% 0 # length
[ ""    ]
#select split_part('@joeuser@mydatabase@','@',2) AS "joeuser";
% . # table_name
% joeuser # name
% clob # type
% 7 # length
[ "joeuser"     ]

#select md5('') = 'd41d8cd98f00b204e9800998ecf8427e' AS "TRUE";
% . # table_name
% TRUE # name
% boolean # type
% 5 # length
[ true	]
#select md5('a') = '0cc175b9c0f1b6a831c399e269772661' AS "TRUE";
% . # table_name
% TRUE # name
% boolean # type
% 5 # length
[ true	]
#select md5('abc') = '900150983cd24fb0d6963f7d28e17f72' AS "TRUE";
% . # table_name
% TRUE # name
% boolean # type
% 5 # length
[ true	]
#select md5('message digest') = 'f96b697d7cb7938d525a2f31aaf161d0' AS "TRUE";
% . # table_name
% TRUE # name
% boolean # type
% 5 # length
[ true	]
#select md5('abcdefghijklmnopqrstuvwxyz') = 'c3fcd3d76192e4007dfb496cca67e13b' AS "TRUE";
% . # table_name
% TRUE # name
% boolean # type
% 5 # length
[ true	]
#select md5('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789') = 'd174ab98d277d9f5a5611c2c9f419d9f' AS "TRUE";
% . # table_name
% TRUE # name
% boolean # type
% 5 # length
[ true	]
#select md5('12345678901234567890123456789012345678901234567890123456789012345678901234567890') = '57edf4a22be3c955ac49da2e2107b67a' AS "TRUE";
% . # table_name
% TRUE # name
% boolean # type
% 5 # length
[ true	]

# 15:36:03 >  
# 15:36:03 >  "Done."
# 15:36:03 >  

