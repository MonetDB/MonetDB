stdout of test 'int2` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

#--
#-- smallint
#-- NOTE: smallint operators never check for over/underflow!
#-- Some of these answers are consequently numerically incorrect.
#--
#CREATE TABLE INT2_TBL(f1 smallint);
#INSERT INTO INT2_TBL(f1) VALUES ('0   ');
[ 1 ]
#INSERT INTO INT2_TBL(f1) VALUES ('  1234 ');
[ 1 ]
#INSERT INTO INT2_TBL(f1) VALUES ('    -1234');
[ 1 ]
#
#-- largest and smallest values
#INSERT INTO INT2_TBL(f1) VALUES ('32767');
[ 1 ]
#INSERT INTO INT2_TBL(f1) VALUES ('-32767');
[ 1 ]
#SELECT '' AS five, * FROM INT2_TBL;
% .,	sys.int2_tbl # table_name
% five,	f1 # name
% char,	smallint # type
% 0,	6 # length
[ "",	0	]
[ "",	1234	]
[ "",	-1234 ]
[ "",	32767 ]
[ "",	-32767 ]
#SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> cast('0' as smallint);
% .,	sys.i # table_name
% four,	f1 # name
% char,	smallint # type
% 0,	6 # length
[ "",	1234	]
[ "",	-1234 ]
[ "",	32767 ]
[ "",	-32767 ]
#SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> cast('0' as integer);
% .,	sys.i # table_name
% four,	f1 # name
% char,	smallint # type
% 0,	6 # length
[ "",	1234	]
[ "",	-1234 ]
[ "",	32767 ]
[ "",	-32767 ]
#SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = cast('0' as smallint);
% .,	sys.i # table_name
% one,	f1 # name
% char,	smallint # type
% 0,	1 # length
[ "",	0	]
#SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = cast('0' as integer);
% .,	sys.i # table_name
% one,	f1 # name
% char,	smallint # type
% 0,	1 # length
[ "",	0	]
#SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < cast('0' as smallint);
% .,	sys.i # table_name
% two,	f1 # name
% char,	smallint # type
% 0,	6 # length
[ "",	-1234 ]
[ "",	-32767 ]
#SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < cast('0' as integer);
% .,	sys.i # table_name
% two,	f1 # name
% char,	smallint # type
% 0,	6 # length
[ "",	-1234 ]
[ "",	-32767 ]
#SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= cast('0' as smallint);
% .,	sys.i # table_name
% three,	f1 # name
% char,	smallint # type
% 0,	6 # length
[ "",	0	]
[ "",	-1234 ]
[ "",	-32767 ]
#SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= cast('0' as integer);
% .,	sys.i # table_name
% three,	f1 # name
% char,	smallint # type
% 0,	6 # length
[ "",	0	]
[ "",	-1234 ]
[ "",	-32767 ]
#SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > cast('0' as smallint);
% .,	sys.i # table_name
% two,	f1 # name
% char,	smallint # type
% 0,	5 # length
[ "",	1234	]
[ "",	32767 ]
#SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > cast('0' as integer);
% .,	sys.i # table_name
% two,	f1 # name
% char,	smallint # type
% 0,	5 # length
[ "",	1234	]
[ "",	32767 ]
#SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= cast('0' as smallint);
% .,	sys.i # table_name
% three,	f1 # name
% char,	smallint # type
% 0,	5 # length
[ "",	0	]
[ "",	1234	]
[ "",	32767 ]
#SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= cast('0' as integer);
% .,	sys.i # table_name
% three,	f1 # name
% char,	smallint # type
% 0,	5 # length
[ "",	0	]
[ "",	1234	]
[ "",	32767 ]
#SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % cast('2' as smallint)) = cast('1' as smallint);
% .,	sys.i # table_name
% one,	f1 # name
% char,	smallint # type
% 0,	5 # length
[ "",	32767 ]
#SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % cast('2' as integer)) = cast('0' as smallint);
% .,	sys.i # table_name
% three,	f1 # name
% char,	smallint # type
% 0,	5 # length
[ "",	0	]
[ "",	1234	]
[ "",	-1234 ]
#SELECT '' AS five, i.f1, i.f1 * cast('2' as smallint) AS x FROM INT2_TBL i;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	bigint # type
% 0,	6,	6 # length
[ "",	0,	0	]
[ "",	1234,	2468	]
[ "",	-1234,	-2468	]
[ "",	32767,	65534	]
[ "",	-32767,	-65534	]
#SELECT '' AS five, i.f1, i.f1 * cast('2' as smallint) AS x FROM INT2_TBL i
#WHERE abs(f1) < 16384;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	bigint # type
% 0,	5,	5 # length
[ "",	0,	0	]
[ "",	1234,	2468	]
[ "",	-1234,	-2468 ]
#SELECT '' AS five, i.f1, i.f1 * cast('2' as integer) AS x FROM INT2_TBL i;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	bigint # type
% 0,	6,	6 # length
[ "",	0,	0	]
[ "",	1234,	2468	]
[ "",	-1234,	-2468 ]
[ "",	32767,	65534 ]
[ "",	-32767,	-65534 ]
#SELECT '' AS five, i.f1, i.f1 + cast('2' as smallint) AS x FROM INT2_TBL i;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	int # type
% 0,	6,	6 # length
[ "",	0,	2	]
[ "",	1234,	1236	]
[ "",	-1234,	-1232	]
[ "",	32767,	32769	]
[ "",	-32767,	-32765	]
#SELECT '' AS five, i.f1, i.f1 + cast('2' as smallint) AS x FROM INT2_TBL i
#WHERE f1 < 32766;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	int # type
% 0,	6,	6 # length
[ "",	0,	2	]
[ "",	1234,	1236	]
[ "",	-1234,	-1232 ]
[ "",	-32767,	-32765 ]
#SELECT '' AS five, i.f1, i.f1 + cast('2' as integer) AS x FROM INT2_TBL i;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	bigint # type
% 0,	6,	6 # length
[ "",	0,	2	]
[ "",	1234,	1236	]
[ "",	-1234,	-1232 ]
[ "",	32767,	32769 ]
[ "",	-32767,	-32765 ]
#SELECT '' AS five, i.f1, i.f1 - cast('2' as smallint) AS x FROM INT2_TBL i;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	int # type
% 0,	6,	6 # length
[ "",	0,	-2	]
[ "",	1234,	1232	]
[ "",	-1234,	-1236	]
[ "",	32767,	32765	]
[ "",	-32767,	-32769	]
#SELECT '' AS five, i.f1, i.f1 - cast('2' as smallint) AS x FROM INT2_TBL i
#WHERE f1 > -32767;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	int # type
% 0,	5,	5 # length
[ "",	0,	-2	]
[ "",	1234,	1232	]
[ "",	-1234,	-1236 ]
[ "",	32767,	32765 ]
#SELECT '' AS five, i.f1, i.f1 - cast('2' as integer) AS x FROM INT2_TBL i;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	bigint # type
% 0,	6,	6 # length
[ "",	0,	-2	]
[ "",	1234,	1232	]
[ "",	-1234,	-1236 ]
[ "",	32767,	32765 ]
[ "",	-32767,	-32769 ]
#SELECT '' AS five, i.f1, i.f1 / cast('2' as smallint) AS x FROM INT2_TBL i;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	smallint # type
% 0,	6,	6 # length
[ "",	0,	0	]
[ "",	1234,	617	]
[ "",	-1234,	-617 ]
[ "",	32767,	16383 ]
[ "",	-32767,	-16383 ]
#SELECT '' AS five, i.f1, i.f1 / cast('2' as integer) AS x FROM INT2_TBL i;
% .,	sys.i,	sys. # table_name
% five,	f1,	x # name
% char,	smallint,	int # type
% 0,	6,	6 # length
[ "",	0,	0	]
[ "",	1234,	617	]
[ "",	-1234,	-617 ]
[ "",	32767,	16383 ]
[ "",	-32767,	-16383 ]


# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

