stdout of test 'point` in directory 'sql/test/pg_regress` itself:


# 18:36:56 >  
# 18:36:56 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31786" "--set" "mapi_usock=/var/tmp/mtest-5174/.s.monetdb.31786" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch2/alvanaki/INSTALL/MonetDB-public/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 18:36:56 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://essen.ins.cwi.nl:31786/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-5174/.s.monetdb.31786
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 72_fits.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql


# 15:18:46 >  
# 15:18:46 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-13481" "--port=38041"
# 15:18:46 >  

#CREATE TABLE POINT_TBL(f1 GEOMETRY(POINT));
#INSERT INTO POINT_TBL(f1) VALUES (ST_MakePoint(0.0,0.0));
[ 1	]
#INSERT INTO POINT_TBL(f1) VALUES (ST_MakePoint(-10.0,0.0));
[ 1	]
#INSERT INTO POINT_TBL(f1) VALUES (ST_MakePoint(-3.0,4.0));
[ 1	]
#INSERT INTO POINT_TBL(f1) VALUES (ST_MakePoint(5.1, 34.5));
[ 1	]
#INSERT INTO POINT_TBL(f1) VALUES (ST_MakePoint(-5.0,-12.0));
[ 1	]
#INSERT INTO POINT_TBL(f1) VALUES (null);
[ 1	]
#SELECT '' AS six, POINT_TBL.* FROM POINT_TBL;
% .,	sys.point_tbl # table_name
% six,	f1 # name
% char,	geometry # type
% 0,	0 # length
[ "",	"POINT (0 0)"	]
[ "",	"POINT (-10 0)"	]
[ "",	"POINT (-3 4)"	]
[ "",	"POINT (5.1 34.5)"	]
[ "",	"POINT (-5 -12)"	]
[ "",	NULL	]
#SELECT '' AS six, f1, cast(f1 as varchar(55)) as txt FROM POINT_TBL;
% .,	sys.point_tbl,	sys. # table_name
% six,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	16 # length
[ "",	"POINT (0 0)",	"POINT (0 0)"	]
[ "",	"POINT (-10 0)",	"POINT (-10 0)"	]
[ "",	"POINT (-3 4)",	"POINT (-3 4)"	]
[ "",	"POINT (5.1 34.5)",	"POINT (5.1 34.5)"	]
[ "",	"POINT (-5 -12)",	"POINT (-5 -12)"	]
[ "",	NULL,	NULL	]
#CREATE VIEW POINT_TBL_VW AS SELECT f1, cast(f1 as varchar(55)) as txt FROM POINT_TBL;
#SELECT * FROM POINT_TBL_VW;
% sys.point_tbl_vw,	sys.point_tbl_vw # table_name
% f1,	txt # name
% geometry,	varchar # type
% 0,	16 # length
[ "POINT (0 0)",	"POINT (0 0)"	]
[ "POINT (-10 0)",	"POINT (-10 0)"	]
[ "POINT (-3 4)",	"POINT (-3 4)"	]
[ "POINT (5.1 34.5)",	"POINT (5.1 34.5)"	]
[ "POINT (-5 -12)",	"POINT (-5 -12)"	]
[ NULL,	NULL	]
#SELECT '' AS three, p.* FROM POINT_TBL_VW p WHERE p.f1 << ST_MakePoint(0.0, 0.0);
% .,	sys.p,	sys.p # table_name
% three,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	14 # length
[ "",	"POINT (-10 0)",	"POINT (-10 0)"	]
[ "",	"POINT (-3 4)",	"POINT (-3 4)"	]
[ "",	"POINT (-5 -12)",	"POINT (-5 -12)"	]
#SELECT '' AS three, p.* FROM POINT_TBL_VW p WHERE ST_MakePoint(0.0,0.0) >> p.f1;
% .,	sys.p,	sys.p # table_name
% three,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	14 # length
[ "",	"POINT (-10 0)",	"POINT (-10 0)"	]
[ "",	"POINT (-3 4)",	"POINT (-3 4)"	]
[ "",	"POINT (-5 -12)",	"POINT (-5 -12)"	]
#SELECT '' AS one, p.* FROM POINT_TBL_VW p WHERE ST_MakePoint(0.0,0.0) |>> p.f1;
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	14 # length
[ "",	"POINT (-5 -12)",	"POINT (-5 -12)"	]
#SELECT '' AS one, p.* FROM POINT_TBL_VW p WHERE p.f1 <<| ST_MakePoint(0.0, 0.0);
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	14 # length
[ "",	"POINT (-5 -12)",	"POINT (-5 -12)"	]
#SELECT '' AS one, p.* FROM POINT_TBL_VW p WHERE p.f1 ~= ST_MakePoint(5.1, 34.5);
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	16 # length
[ "",	"POINT (5.1 34.5)",	"POINT (5.1 34.5)"	]
#SELECT '' AS three, p.* FROM POINT_TBL_VW p WHERE p.f1 @ ST_WKTToSQL('linestring(0 0, 100 100)');
% .,	sys.p,	sys.p # table_name
% three,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	16 # length
[ "",	"POINT (0 0)",	"POINT (0 0)"	]
[ "",	"POINT (5.1 34.5)",	"POINT (5.1 34.5)"	]
#SELECT '' AS three, p.* FROM POINT_TBL_VW p WHERE not p.f1 @ ST_WKTToSQL('linestring(0 0, 100 100)');
% .,	sys.p,	sys.p # table_name
% three,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	14 # length
[ "",	"POINT (-10 0)",	"POINT (-10 0)"	]
[ "",	"POINT (-3 4)",	"POINT (-3 4)"	]
[ "",	"POINT (-5 -12)",	"POINT (-5 -12)"	]
#SELECT '' AS six, p.f1, p.f1 <-> ST_MakePoint(0,0) AS dist FROM POINT_TBL p ORDER BY dist;
% .,	sys.p,	sys. # table_name
% six,	f1,	dist # name
% char,	geometry,	double # type
% 0,	0,	24 # length
[ "",	NULL,	NULL	]
[ "",	"POINT (0 0)",	0	]
[ "",	"POINT (-3 4)",	5	]
[ "",	"POINT (-10 0)",	10	]
[ "",	"POINT (-5 -12)",	13	]
[ "",	"POINT (5.1 34.5)",	34.87491934	]
#SELECT '' AS thirtysix, p1.f1 AS point1, p2.f1 AS point2, p1.f1 <-> p2.f1 AS dist
#   FROM POINT_TBL p1, POINT_TBL p2
#   ORDER BY dist, point1, point2; -- using <<, point2 using <<;
% .,	sys.,	sys.,	sys. # table_name
% thirtysix,	point1,	point2,	dist # name
% char,	geometry,	geometry,	double # type
% 0,	0,	0,	24 # length
[ "",	NULL,	NULL,	NULL	]
[ "",	NULL,	"POINT (0 0)",	NULL	]
[ "",	NULL,	"POINT (-3 4)",	NULL	]
[ "",	NULL,	"POINT (-5 -12)",	NULL	]
[ "",	NULL,	"POINT (-10 0)",	NULL	]
[ "",	NULL,	"POINT (5.1 34.5)",	NULL	]
[ "",	"POINT (0 0)",	NULL,	NULL	]
[ "",	"POINT (-3 4)",	NULL,	NULL	]
[ "",	"POINT (-5 -12)",	NULL,	NULL	]
[ "",	"POINT (-10 0)",	NULL,	NULL	]
[ "",	"POINT (5.1 34.5)",	NULL,	NULL	]
[ "",	"POINT (0 0)",	"POINT (0 0)",	0	]
[ "",	"POINT (-3 4)",	"POINT (-3 4)",	0	]
[ "",	"POINT (-5 -12)",	"POINT (-5 -12)",	0	]
[ "",	"POINT (-10 0)",	"POINT (-10 0)",	0	]
[ "",	"POINT (5.1 34.5)",	"POINT (5.1 34.5)",	0	]
[ "",	"POINT (0 0)",	"POINT (-3 4)",	5	]
[ "",	"POINT (-3 4)",	"POINT (0 0)",	5	]
[ "",	"POINT (-3 4)",	"POINT (-10 0)",	8.062257748	]
[ "",	"POINT (-10 0)",	"POINT (-3 4)",	8.062257748	]
[ "",	"POINT (0 0)",	"POINT (-10 0)",	10	]
[ "",	"POINT (-10 0)",	"POINT (0 0)",	10	]
[ "",	"POINT (0 0)",	"POINT (-5 -12)",	13	]
[ "",	"POINT (-5 -12)",	"POINT (0 0)",	13	]
[ "",	"POINT (-5 -12)",	"POINT (-10 0)",	13	]
[ "",	"POINT (-10 0)",	"POINT (-5 -12)",	13	]
[ "",	"POINT (-3 4)",	"POINT (-5 -12)",	16.1245155	]
[ "",	"POINT (-5 -12)",	"POINT (-3 4)",	16.1245155	]
[ "",	"POINT (-3 4)",	"POINT (5.1 34.5)",	31.55724954	]
[ "",	"POINT (5.1 34.5)",	"POINT (-3 4)",	31.55724954	]
[ "",	"POINT (0 0)",	"POINT (5.1 34.5)",	34.87491934	]
[ "",	"POINT (5.1 34.5)",	"POINT (0 0)",	34.87491934	]
[ "",	"POINT (-10 0)",	"POINT (5.1 34.5)",	37.65979284	]
[ "",	"POINT (5.1 34.5)",	"POINT (-10 0)",	37.65979284	]
[ "",	"POINT (-5 -12)",	"POINT (5.1 34.5)",	47.58424107	]
[ "",	"POINT (5.1 34.5)",	"POINT (-5 -12)",	47.58424107	]
#SELECT '' AS twenty, p1.f1 AS point1, p2.f1 AS point2 FROM POINT_TBL p1, POINT_TBL p2 WHERE (p1.f1 <-> p2.f1) > 3;
% .,	sys.,	sys. # table_name
% twenty,	point1,	point2 # name
% char,	geometry,	geometry # type
% 0,	0,	0 # length
[ "",	"POINT (0 0)",	"POINT (-10 0)"	]
[ "",	"POINT (0 0)",	"POINT (-3 4)"	]
[ "",	"POINT (0 0)",	"POINT (5.1 34.5)"	]
[ "",	"POINT (0 0)",	"POINT (-5 -12)"	]
[ "",	"POINT (-10 0)",	"POINT (0 0)"	]
[ "",	"POINT (-10 0)",	"POINT (-3 4)"	]
[ "",	"POINT (-10 0)",	"POINT (5.1 34.5)"	]
[ "",	"POINT (-10 0)",	"POINT (-5 -12)"	]
[ "",	"POINT (-3 4)",	"POINT (0 0)"	]
[ "",	"POINT (-3 4)",	"POINT (-10 0)"	]
[ "",	"POINT (-3 4)",	"POINT (5.1 34.5)"	]
[ "",	"POINT (-3 4)",	"POINT (-5 -12)"	]
[ "",	"POINT (5.1 34.5)",	"POINT (0 0)"	]
[ "",	"POINT (5.1 34.5)",	"POINT (-10 0)"	]
[ "",	"POINT (5.1 34.5)",	"POINT (-3 4)"	]
[ "",	"POINT (5.1 34.5)",	"POINT (-5 -12)"	]
[ "",	"POINT (-5 -12)",	"POINT (0 0)"	]
[ "",	"POINT (-5 -12)",	"POINT (-10 0)"	]
[ "",	"POINT (-5 -12)",	"POINT (-3 4)"	]
[ "",	"POINT (-5 -12)",	"POINT (5.1 34.5)"	]
#SELECT '' AS ten, p1.f1 AS point1, p2.f1 AS point2, (p1.f1 <-> p2.f1) AS distance
#   FROM POINT_TBL p1, POINT_TBL p2
#   WHERE (p1.f1 <-> p2.f1) > 3 and p1.f1 << p2.f1
#   ORDER BY distance, point1, point2; -- using <<, point2 using <<;
% .,	sys.,	sys.,	sys. # table_name
% ten,	point1,	point2,	distance # name
% char,	geometry,	geometry,	double # type
% 0,	0,	0,	24 # length
[ "",	"POINT (-3 4)",	"POINT (0 0)",	5	]
[ "",	"POINT (-10 0)",	"POINT (-3 4)",	8.062257748	]
[ "",	"POINT (-10 0)",	"POINT (0 0)",	10	]
[ "",	"POINT (-5 -12)",	"POINT (0 0)",	13	]
[ "",	"POINT (-10 0)",	"POINT (-5 -12)",	13	]
[ "",	"POINT (-5 -12)",	"POINT (-3 4)",	16.1245155	]
[ "",	"POINT (-3 4)",	"POINT (5.1 34.5)",	31.55724954	]
[ "",	"POINT (0 0)",	"POINT (5.1 34.5)",	34.87491934	]
[ "",	"POINT (-10 0)",	"POINT (5.1 34.5)",	37.65979284	]
[ "",	"POINT (-5 -12)",	"POINT (5.1 34.5)",	47.58424107	]
#SELECT '' AS ten, p1.f1 AS point1, p2.f1 AS point2, (p1.f1 <-> p2.f1) AS distance
#   FROM POINT_TBL p1, POINT_TBL p2 
#   WHERE (p1.f1 <-> p2.f1) > 3 and p1.f1 << p2.f1   -- and p1.f1 >^ p2.f1
#   ORDER BY distance, point1;
% .,	sys.,	sys.,	sys. # table_name
% ten,	point1,	point2,	distance # name
% char,	geometry,	geometry,	double # type
% 0,	0,	0,	24 # length
[ "",	"POINT (-3 4)",	"POINT (0 0)",	5	]
[ "",	"POINT (-10 0)",	"POINT (-3 4)",	8.062257748	]
[ "",	"POINT (-10 0)",	"POINT (0 0)",	10	]
[ "",	"POINT (-5 -12)",	"POINT (0 0)",	13	]
[ "",	"POINT (-10 0)",	"POINT (-5 -12)",	13	]
[ "",	"POINT (-5 -12)",	"POINT (-3 4)",	16.1245155	]
[ "",	"POINT (-3 4)",	"POINT (5.1 34.5)",	31.55724954	]
[ "",	"POINT (0 0)",	"POINT (5.1 34.5)",	34.87491934	]
[ "",	"POINT (-10 0)",	"POINT (5.1 34.5)",	37.65979284	]
[ "",	"POINT (-5 -12)",	"POINT (5.1 34.5)",	47.58424107	]
#DROP VIEW POINT_TBL_VW;
#DROP TABLE POINT_TBL;

# 18:36:57 >  
# 18:36:57 >  "Done."
# 18:36:57 >  

