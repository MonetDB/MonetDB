stdout of test 'polygon` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

#CREATE TABLE POLYGON_TBL(f1 string);
#INSERT INTO POLYGON_TBL(f1) VALUES ('(2.0,0.0),(2.0,4.0),(0.0,0.0)');
[ 1 ]
#INSERT INTO POLYGON_TBL(f1) VALUES ('(3.0,1.0),(3.0,3.0),(1.0,0.0)');
[ 1 ]
#SELECT cast('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))' as geometry);
% .%1 # table_name
% %1 # name
% geometry # type
% 0 # length
[ "POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
#INSERT INTO POLYGON_TBL(f1) VALUES ('POLYGON((0.0 1.0, 1.0 1.0, 0.0 1.0))');
[ 1	]
#INSERT INTO POLYGON_TBL(f1) VALUES ('POLYGON((0.0 1.0, 0.0 1.0, 0.0 1.0, 0.0 1.0))');
[ 1 ]
#INSERT INTO POLYGON_TBL(f1) VALUES ('(0.0,1.0),(0.0,1.0)');
[ 1 ]
#SELECT '' AS four, POLYGON_TBL.* FROM POLYGON_TBL;
% .,	sys.polygon_tbl # table_name
% four,	f1 # name
% char,	geometry # type
% 0,	0 # length
[ "",	"POLYGON ((2 0, 2 4, 0 0, 2 0))"	]
[ "",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
[ "",	"POLYGON ((0 1, 1 1, 0 1))"	]
[ "",	"POLYGON ((0 1, 0 1, 0 1, 0 1))"	]
[ "",	"POLYGON ((0 2, 0 1, 0 1, 0 1, 0 2))"	]
#CREATE VIEW POLYGON_TBL_VW AS SELECT f1, cast(f1 as varchar(244)) as txt FROM POLYGON_TBL;
#SELECT * FROM POLYGON_TBL_VW;
% sys.polygon_tbl_vw,	sys.polygon_tbl_vw # table_name
% f1,	txt # name
% geometry,	varchar # type
% 0,	35 # length
[ "POLYGON ((2 0, 2 4, 0 0, 2 0))",	"POLYGON ((2 0, 2 4, 0 0, 2 0))"	]
[ "POLYGON ((3 1, 3 3, 1 0, 3 1))",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
[ "POLYGON ((0 1, 1 1, 0 1))",	"POLYGON ((0 1, 1 1, 0 1))"	]
[ "POLYGON ((0 1, 0 1, 0 1, 0 1))",	"POLYGON ((0 1, 0 1, 0 1, 0 1))"	]
[ "POLYGON ((0 2, 0 1, 0 1, 0 1, 0 2))",	"POLYGON ((0 2, 0 1, 0 1, 0 1, 0 2))"	]
#SELECT '' AS three, p.*
#   FROM POLYGON_TBL_VW p
#--   WHERE p.f1 && '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
#   WHERE p.f1 && 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))';
% .,	sys.p,	sys.p # table_name
% three,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	30 # length
[ "",	"POLYGON ((2 0, 2 4, 0 0, 2 0))",	"POLYGON ((2 0, 2 4, 0 0, 2 0))"	]
[ "",	"POLYGON ((3 1, 3 3, 1 0, 3 1))",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
[ "",	"POLYGON ((0 1, 1 1, 0 1))",	"POLYGON ((0 1, 1 1, 0 1))"	]
#SELECT '' AS one, p.* 
#   FROM POLYGON_TBL_VW p
#   WHERE st_overlaps(p.f1, 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))');
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	30 # length
[ "",	"POLYGON ((2 0, 2 4, 0 0, 2 0))",	"POLYGON ((2 0, 2 4, 0 0, 2 0))"	]
#SELECT '' AS four, p.* 
#   FROM POLYGON_TBL_VW p
#--   WHERE p.f1 &< '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
#   WHERE p.f1 &< 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))';
% .,	sys.p,	sys.p # table_name
% four,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	35 # length
[ "",	"POLYGON ((2 0, 2 4, 0 0, 2 0))",	"POLYGON ((2 0, 2 4, 0 0, 2 0))"	]
[ "",	"POLYGON ((3 1, 3 3, 1 0, 3 1))",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
[ "",	"POLYGON ((0 1, 1 1, 0 1))",	"POLYGON ((0 1, 1 1, 0 1))"	]
[ "",	"POLYGON ((0 1, 0 1, 0 1, 0 1))",	"POLYGON ((0 1, 0 1, 0 1, 0 1))"	]
[ "",	"POLYGON ((0 2, 0 1, 0 1, 0 1, 0 2))",	"POLYGON ((0 2, 0 1, 0 1, 0 1, 0 2))"	]
#SELECT '' AS two, p.* 
#   FROM POLYGON_TBL_VW p
#--   WHERE p.f1 &> '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
#   WHERE p.f1 &> 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))';
% .,	sys.p,	sys.p # table_name
% two,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	30 # length
[ "",	"POLYGON ((3 1, 3 3, 1 0, 3 1))",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
#SELECT '' AS one, p.*
#   FROM POLYGON_TBL_VW p
#--   WHERE p.f1 << '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
#   WHERE p.f1 << 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))';
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	35 # length
[ "",	"POLYGON ((0 1, 0 1, 0 1, 0 1))",	"POLYGON ((0 1, 0 1, 0 1, 0 1))"	]
[ "",	"POLYGON ((0 2, 0 1, 0 1, 0 1, 0 2))",	"POLYGON ((0 2, 0 1, 0 1, 0 1, 0 2))"	]
#SELECT '' AS zero, p.*
#   FROM POLYGON_TBL_VW p
#--   WHERE p.f1 >> '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
#   WHERE p.f1 >> 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))';
% .,	sys.p,	sys.p # table_name
% zero,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	0 # length
#SELECT '' AS one, p.* 
#   FROM POLYGON_TBL_VW p
#--   WHERE p.f1 @ polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
#   WHERE p.f1 @ 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))';
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	30 # length
[ "",	"POLYGON ((3 1, 3 3, 1 0, 3 1))",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
#SELECT '' AS one, p.*
#   FROM POLYGON_TBL_VW p
#--   WHERE p.f1 ~= polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
#   WHERE p.f1 ~= 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))';
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	30 # length
[ "",	"POLYGON ((3 1, 3 3, 1 0, 3 1))",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
#SELECT '' AS one, p.* 
#   FROM POLYGON_TBL_VW p
#   WHERE st_equals(p.f1, 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))');
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	30 # length
[ "",	"POLYGON ((3 1, 3 3, 1 0, 3 1))",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
#SELECT '' AS one, p.*
#   FROM POLYGON_TBL_VW p
#--   WHERE p.f1 ~ polygon '(3.0,1.0),(3.0,3.0),(1.0,0.0)';
#   WHERE p.f1 ~ 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))';
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	30 # length
[ "",	"POLYGON ((3 1, 3 3, 1 0, 3 1))",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
#SELECT '' AS one, p.* 
#   FROM POLYGON_TBL_VW p
#   WHERE st_contains(p.f1, 'POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))');
% .,	sys.p,	sys.p # table_name
% one,	f1,	txt # name
% char,	geometry,	varchar # type
% 0,	0,	30 # length
[ "",	"POLYGON ((3 1, 3 3, 1 0, 3 1))",	"POLYGON ((3 1, 3 3, 1 0, 3 1))"	]
#SELECT ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))') <<  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))') AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))') &<  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))') AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))') &>  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))') AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))') >>  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))') AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))') @  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))') AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))') ~  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))') AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_Contains(ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))'),  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))')) AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))') ~=  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))') AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_Equals(ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))'),  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))')) AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))') &&  ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))') AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT ST_Overlaps(ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))'), ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))')) AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT ST_Crosses(ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))'), ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))')) AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_Disjoint(ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))'), ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))')) AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_Distance(ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))'), ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))')) AS "0";
% . # table_name
% 0 # name
% double # type
% 24 # length
[ 0	]
#SELECT ST_Intersects(ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))'), ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))')) AS "true";
% . # table_name
% true # name
% boolean # type
% 5 # length
[ true	]
#SELECT ST_Touches(ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))'), ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))')) AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#SELECT ST_Within(ST_WKTToSQL('POLYGON((2.0 0.0, 2.0 4.0, 0.0 0.0, 2.0 0.0))'), ST_WKTToSQL('POLYGON((3.0 1.0, 3.0 3.0, 1.0 0.0, 3.0 1.0))')) AS "false";
% . # table_name
% false # name
% boolean # type
% 5 # length
[ false	]
#DROP VIEW POLYGON_TBL_VW;

# 17:35:18 >  
# 17:35:18 >  "Done."
# 17:35:18 >  

