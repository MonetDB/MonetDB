stdout of test 'sequence` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =
% sys.L0 # table_name
% = ! Correct / expected output still needs to be provided / verified / approved ! = # name
% ? # type
% ? # length
[ "--- test creation of SERIAL column" ]
% sys.L0 # table_name
% = ! Correct / expected output still needs to be provided / verified / approved ! = # name
% ? # type
% ? # length
[ "" ]
[ "#CREATE TABLE serialTest (f1 text, f2 serial);" ]
[ "NOTICE:  CREATE TABLE will create implicit sequence "serialtest_f2_seq" for serial column "serialtest.f2"" ]
[ "" ]
[ "#INSERT INTO serialTest VALUES ('foo');" ]
[ "[ 1 ]" ]
[ "#INSERT INTO serialTest VALUES ('bar');" ]
[ "[ 1 ]" ]
[ "#INSERT INTO serialTest VALUES ('force', 100);" ]
[ "[ 1 ]" ]
[ "#" ]
[ "" ]
[ "#SELECT * FROM serialTest;" ]
[ "f1",	"f2" ]
% sys.L0 # table_name
% = ! Correct / expected output still needs to be provided / verified / approved ! = # name
% ? # type
% ? # length
[ "foo",	1 ]
[ "bar",	2 ]
[ "force",	100 ]

 
#CREATE SEQUENCE sequence_test;
 
START TRANSACTION;
#SELECT nextval('sequence_test');
% sys.L0 # table_name
% nextval # name
% ? # type
% ? # length
[ 1 ]

#DROP SEQUENCE sequence_test;
COMMIT;
#-- renaming sequences
#CREATE SEQUENCE foo_seq;
#ALTER TABLE foo_seq RENAME TO foo_seq_new;
#SELECT * FROM foo_seq_new;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% sequence_name,	last_value,	increment_by,	max_value,	min_value,	cache_value,	log_cnt,	is_cycled,	is_called # name
% ?,	?,	?,	?,	?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	?,	?,	?,	?,	? # length
[ "foo_seq",	1,	1,	9223372036854775807,	1,	1,	1,	"f",	"f" ]

#DROP SEQUENCE foo_seq_new;
#--
#-- Alter sequence
#--
#CREATE SEQUENCE sequence_test2 START WITH 32;
#SELECT nextval('sequence_test2');
% sys.L0 # table_name
% nextval # name
% ? # type
% ? # length
[ 32 ]

#ALTER SEQUENCE sequence_test2 RESTART WITH 16
#	 INCREMENT BY 4 MAXVALUE 22 MINVALUE 5 CYCLE;
#SELECT nextval('sequence_test2');
% sys.L0 # table_name
% nextval # name
% ? # type
% ? # length
[ 16 ]

#SELECT nextval('sequence_test2');
% sys.L0 # table_name
% nextval # name
% ? # type
% ? # length
[ 20 ]

#SELECT nextval('sequence_test2');
% sys.L0 # table_name
% nextval # name
% ? # type
% ? # length
[ 5 ]

#-- Test comments

= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

