stdout of test 'inherit` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =

#--
#-- Test inheritance features
#--
#CREATE TABLE a (aa TEXT);
#CREATE TABLE b (bb TEXT); -- INHERITS (a)
#CREATE TABLE c (cc TEXT); -- INHERITS (a)
#CREATE TABLE d (dd TEXT); -- INHERITS (b,c,a)
NOTICE:  merging multiple inherited definitions of column "aa"
NOTICE:  merging multiple inherited definitions of column "aa"
#INSERT INTO a(aa) VALUES('aaa');
[ 1 ]
#INSERT INTO a(aa) VALUES('aaaa');
[ 1 ]
#INSERT INTO a(aa) VALUES('aaaaa');
[ 1 ]
#INSERT INTO a(aa) VALUES('aaaaaa');
[ 1 ]
#INSERT INTO a(aa) VALUES('aaaaaaa');
[ 1 ]
#INSERT INTO a(aa) VALUES('aaaaaaaa');
[ 1 ]
#INSERT INTO b(aa) VALUES('bbb');
[ 1 ]
#INSERT INTO b(aa) VALUES('bbbb');
[ 1 ]
#INSERT INTO b(aa) VALUES('bbbbb');
[ 1 ]
#INSERT INTO b(aa) VALUES('bbbbbb');
[ 1 ]
#INSERT INTO b(aa) VALUES('bbbbbbb');
[ 1 ]
#INSERT INTO b(aa) VALUES('bbbbbbbb');
[ 1 ]
#INSERT INTO c(aa) VALUES('ccc');
[ 1 ]
#INSERT INTO c(aa) VALUES('cccc');
[ 1 ]
#INSERT INTO c(aa) VALUES('ccccc');
[ 1 ]
#INSERT INTO c(aa) VALUES('cccccc');
[ 1 ]
#INSERT INTO c(aa) VALUES('ccccccc');
[ 1 ]
#INSERT INTO c(aa) VALUES('cccccccc');
[ 1 ]
#INSERT INTO d(aa) VALUES('ddd');
[ 1 ]
#INSERT INTO d(aa) VALUES('dddd');
[ 1 ]
#INSERT INTO d(aa) VALUES('ddddd');
[ 1 ]
#INSERT INTO d(aa) VALUES('dddddd');
[ 1 ]
#INSERT INTO d(aa) VALUES('ddddddd');
[ 1 ]
#INSERT INTO d(aa) VALUES('dddddddd');
[ 1 ]
#SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length
[ "a",	"aaa" ]
[ "a",	"aaaa" ]
[ "a",	"aaaaa" ]
[ "a",	"aaaaaa" ]
[ "a",	"aaaaaaa" ]
[ "a",	"aaaaaaaa" ]
[ "b",	"bbb" ]
[ "b",	"bbbb" ]
[ "b",	"bbbbb" ]
[ "b",	"bbbbbb" ]
[ "b",	"bbbbbbb" ]
[ "b",	"bbbbbbbb" ]
[ "c",	"ccc" ]
[ "c",	"cccc" ]
[ "c",	"ccccc" ]
[ "c",	"cccccc" ]
[ "c",	"ccccccc" ]
[ "c",	"cccccccc" ]
[ "d",	"ddd" ]
[ "d",	"dddd" ]
[ "d",	"ddddd" ]
[ "d",	"dddddd" ]
[ "d",	"ddddddd" ]
[ "d",	"dddddddd" ]

#SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "b",	"bbb",	"" ]
[ "b",	"bbbb",	"" ]
[ "b",	"bbbbb",	"" ]
[ "b",	"bbbbbb",	"" ]
[ "b",	"bbbbbbb",	"" ]
[ "b",	"bbbbbbbb",	"" ]
[ "d",	"ddd",	"" ]
[ "d",	"dddd",	"" ]
[ "d",	"ddddd",	"" ]
[ "d",	"dddddd",	"" ]
[ "d",	"ddddddd",	"" ]
[ "d",	"dddddddd",	"" ]

#SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "c",	"ccc",	"" ]
[ "c",	"cccc",	"" ]
[ "c",	"ccccc",	"" ]
[ "c",	"cccccc",	"" ]
[ "c",	"ccccccc",	"" ]
[ "c",	"cccccccc",	"" ]
[ "d",	"ddd",	"" ]
[ "d",	"dddd",	"" ]
[ "d",	"ddddd",	"" ]
[ "d",	"dddddd",	"" ]
[ "d",	"ddddddd",	"" ]
[ "d",	"dddddddd",	"" ]

#SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length
[ "d",	"ddd",	"",	"",	"" ]
[ "d",	"dddd",	"",	"",	"" ]
[ "d",	"ddddd",	"",	"",	"" ]
[ "d",	"dddddd",	"",	"",	"" ]
[ "d",	"ddddddd",	"",	"",	"" ]
[ "d",	"dddddddd",	"",	"",	"" ]

#SELECT relname, a.*  FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length
[ "a",	"aaa" ]
[ "a",	"aaaa" ]
[ "a",	"aaaaa" ]
[ "a",	"aaaaaa" ]
[ "a",	"aaaaaaa" ]
[ "a",	"aaaaaaaa" ]

#SELECT relname, b.*  FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "b",	"bbb",	"" ]
[ "b",	"bbbb",	"" ]
[ "b",	"bbbbb",	"" ]
[ "b",	"bbbbbb",	"" ]
[ "b",	"bbbbbbb",	"" ]
[ "b",	"bbbbbbbb",	"" ]

#SELECT relname, c.*  FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "c",	"ccc",	"" ]
[ "c",	"cccc",	"" ]
[ "c",	"ccccc",	"" ]
[ "c",	"cccccc",	"" ]
[ "c",	"ccccccc",	"" ]
[ "c",	"cccccccc",	"" ]

#SELECT relname, d.*  FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length
[ "d",	"ddd",	"",	"",	"" ]
[ "d",	"dddd",	"",	"",	"" ]
[ "d",	"ddddd",	"",	"",	"" ]
[ "d",	"dddddd",	"",	"",	"" ]
[ "d",	"ddddddd",	"",	"",	"" ]
[ "d",	"dddddddd",	"",	"",	"" ]

#UPDATE a SET aa='zzzz' WHERE aa='aaaa';
#UPDATE ONLY a SET aa='zzzzz' WHERE aa='aaaaa';
#UPDATE b SET aa='zzz' WHERE aa='aaa';
#UPDATE ONLY b SET aa='zzz' WHERE aa='aaa';
#UPDATE a SET aa='zzzzzz' WHERE aa LIKE 'aaa%';
#SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length
[ "a",	"zzzz" ]
[ "a",	"zzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "b",	"bbb" ]
[ "b",	"bbbb" ]
[ "b",	"bbbbb" ]
[ "b",	"bbbbbb" ]
[ "b",	"bbbbbbb" ]
[ "b",	"bbbbbbbb" ]
[ "c",	"ccc" ]
[ "c",	"cccc" ]
[ "c",	"ccccc" ]
[ "c",	"cccccc" ]
[ "c",	"ccccccc" ]
[ "c",	"cccccccc" ]
[ "d",	"ddd" ]
[ "d",	"dddd" ]
[ "d",	"ddddd" ]
[ "d",	"dddddd" ]
[ "d",	"ddddddd" ]
[ "d",	"dddddddd" ]

#SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "b",	"bbb",	"" ]
[ "b",	"bbbb",	"" ]
[ "b",	"bbbbb",	"" ]
[ "b",	"bbbbbb",	"" ]
[ "b",	"bbbbbbb",	"" ]
[ "b",	"bbbbbbbb",	"" ]
[ "d",	"ddd",	"" ]
[ "d",	"dddd",	"" ]
[ "d",	"ddddd",	"" ]
[ "d",	"dddddd",	"" ]
[ "d",	"ddddddd",	"" ]
[ "d",	"dddddddd",	"" ]

#SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "c",	"ccc",	"" ]
[ "c",	"cccc",	"" ]
[ "c",	"ccccc",	"" ]
[ "c",	"cccccc",	"" ]
[ "c",	"ccccccc",	"" ]
[ "c",	"cccccccc",	"" ]
[ "d",	"ddd",	"" ]
[ "d",	"dddd",	"" ]
[ "d",	"ddddd",	"" ]
[ "d",	"dddddd",	"" ]
[ "d",	"ddddddd",	"" ]
[ "d",	"dddddddd",	"" ]

#SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length
[ "d",	"ddd",	"",	"",	"" ]
[ "d",	"dddd",	"",	"",	"" ]
[ "d",	"ddddd",	"",	"",	"" ]
[ "d",	"dddddd",	"",	"",	"" ]
[ "d",	"ddddddd",	"",	"",	"" ]
[ "d",	"dddddddd",	"",	"",	"" ]

#SELECT relname, a.*  FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length
[ "a",	"zzzz" ]
[ "a",	"zzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]

#SELECT relname, b.*  FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "b",	"bbb",	"" ]
[ "b",	"bbbb",	"" ]
[ "b",	"bbbbb",	"" ]
[ "b",	"bbbbbb",	"" ]
[ "b",	"bbbbbbb",	"" ]
[ "b",	"bbbbbbbb",	"" ]

#SELECT relname, c.*  FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "c",	"ccc",	"" ]
[ "c",	"cccc",	"" ]
[ "c",	"ccccc",	"" ]
[ "c",	"cccccc",	"" ]
[ "c",	"ccccccc",	"" ]
[ "c",	"cccccccc",	"" ]

#SELECT relname, d.*  FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length
[ "d",	"ddd",	"",	"",	"" ]
[ "d",	"dddd",	"",	"",	"" ]
[ "d",	"ddddd",	"",	"",	"" ]
[ "d",	"dddddd",	"",	"",	"" ]
[ "d",	"ddddddd",	"",	"",	"" ]
[ "d",	"dddddddd",	"",	"",	"" ]

#UPDATE b SET aa='new';
#SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length
[ "a",	"zzzz" ]
[ "a",	"zzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "c",	"ccc" ]
[ "c",	"cccc" ]
[ "c",	"ccccc" ]
[ "c",	"cccccc" ]
[ "c",	"ccccccc" ]
[ "c",	"cccccccc" ]
[ "d",	"new" ]
[ "d",	"new" ]
[ "d",	"new" ]
[ "d",	"new" ]
[ "d",	"new" ]
[ "d",	"new" ]

#SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]

#SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "c",	"ccc",	"" ]
[ "c",	"cccc",	"" ]
[ "c",	"ccccc",	"" ]
[ "c",	"cccccc",	"" ]
[ "c",	"ccccccc",	"" ]
[ "c",	"cccccccc",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]

#SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]

#SELECT relname, a.*  FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length
[ "a",	"zzzz" ]
[ "a",	"zzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]
[ "a",	"zzzzzz" ]

#SELECT relname, b.*  FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]

#SELECT relname, c.*  FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "c",	"ccc",	"" ]
[ "c",	"cccc",	"" ]
[ "c",	"ccccc",	"" ]
[ "c",	"cccccc",	"" ]
[ "c",	"ccccccc",	"" ]
[ "c",	"cccccccc",	"" ]

#SELECT relname, d.*  FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]

#UPDATE a SET aa='new';
DELETE  FROM c WHERE aa='new';
#SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length
[ "a",	"new" ]
[ "a",	"new" ]
[ "a",	"new" ]
[ "a",	"new" ]
[ "a",	"new" ]
[ "a",	"new" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "b",	"new" ]
[ "d",	"new" ]
[ "d",	"new" ]
[ "d",	"new" ]
[ "d",	"new" ]
[ "d",	"new" ]
[ "d",	"new" ]

#SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]

#SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]
[ "d",	"new",	"" ]

#SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]

#SELECT relname, a.*  FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length
[ "a",	"new" ]
[ "a",	"new" ]
[ "a",	"new" ]
[ "a",	"new" ]
[ "a",	"new" ]
[ "a",	"new" ]

#SELECT relname, b.*  FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]
[ "b",	"new",	"" ]

#SELECT relname, c.*  FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length

#SELECT relname, d.*  FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]
[ "d",	"new",	"",	"",	"" ]

DELETE FROM a;
#SELECT relname, a.* FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length

#SELECT relname, b.* FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length

#SELECT relname, c.* FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length

#SELECT relname, d.* FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length

#SELECT relname, a.*  FROM a, pg_class where a.tableoid = pg_class.oid;
% sys.L0,	sys.L0 # table_name
% relname,	aa # name
% ?,	? # type
% ?,	? # length

#SELECT relname, b.*  FROM b, pg_class where b.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb # name
% ?,	?,	? # type
% ?,	?,	? # length

#SELECT relname, c.*  FROM c, pg_class where c.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	cc # name
% ?,	?,	? # type
% ?,	?,	? # length

#SELECT relname, d.*  FROM d, pg_class where d.tableoid = pg_class.oid;
% sys.L0,	sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	aa,	bb,	cc,	dd # name
% ?,	?,	?,	?,	? # type
% ?,	?,	?,	?,	? # length

#-- Confirm PRIMARY KEY adds NOT NULL constraint to child table
#CREATE TEMP TABLE z (b TEXT, PRIMARY KEY(aa, b)); -- inherits (a)
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "z_pkey" for table "z"
#
#-- Check UPDATE with inherited target and an inherited source table
#create temp table foo(f1 int, f2 int);
#create temp table foo2(f3 int); -- inherits (foo)
#create temp table bar(f1 int, f2 int);
#create temp table bar2(f3 int); -- inherits (bar)
#insert into foo values(1,1);
[ 1 ]
#insert into foo values(3,3);
[ 1 ]
#insert into foo2 values(2,2,2);
[ 1 ]
#insert into foo2 values(3,3,3);
[ 1 ]
#insert into bar values(1,1);
[ 1 ]
#insert into bar values(2,2);
[ 1 ]
#insert into bar values(3,3);
[ 1 ]
#insert into bar values(4,4);
[ 1 ]
#insert into bar2 values(1,1,1);
[ 1 ]
#insert into bar2 values(2,2,2);
[ 1 ]
#insert into bar2 values(3,3,3);
[ 1 ]
#insert into bar2 values(4,4,4);
[ 1 ]
#update bar set f2 = f2 + 100 where f1 in (select f1 from foo);
#SELECT relname, bar.* FROM bar, pg_class where bar.tableoid = pg_class.oid
#order by 1,2;
% sys.L0,	sys.L0,	sys.L0 # table_name
% relname,	f1,	f2 # name
% ?,	?,	? # type
% ?,	?,	? # length
[ "bar",	1,	101 ]
[ "bar",	2,	102 ]
[ "bar",	3,	103 ]
[ "bar",	4,	4 ]
[ "bar2",	1,	101 ]
[ "bar2",	2,	102 ]
[ "bar2",	3,	103 ]
[ "bar2",	4,	4 ]

/* Test inheritance of structure (LIKE) */
#CREATE TABLE inhx (xx text DEFAULT 'text');
/*
 * Test double inheritance
 *
 * Ensure that defaults are NOT included unless
 * INCLUDING DEFAULTS is specified 
 */
#CREATE TABLE inhe (ee text, LIKE inhx); -- inherits (b)
#INSERT INTO inhe VALUES ('ee-col1', 'ee-col2', DEFAULT, 'ee-col4');
[ 1 ]
#SELECT * FROM inhe; /* Columns aa, bb, xx value NULL, ee */
% sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% aa,	bb,	ee,	xx # name
% ?,	?,	?,	? # type
% ?,	?,	?,	? # length
[ "ee-col1",	"ee-col2",	"",	"ee-col4" ]

#SELECT * FROM inhx; /* Empty set since LIKE inherits structure only */
% sys.L0 # table_name
% xx # name
% ? # type
% ? # length

#SELECT * FROM b; /* Has ee entry */
% sys.L0,	sys.L0 # table_name
% aa,	bb # name
% ?,	? # type
% ?,	? # length
[ "ee-col1",	"ee-col2" ]

#SELECT * FROM a; /* Has ee entry */
% sys.L0 # table_name
% aa # name
% ? # type
% ? # length
[ "ee-col1" ]

#
#CREATE TABLE inhf (LIKE inhx INCLUDING DEFAULTS);
#INSERT INTO inhf DEFAULT VALUES;
[ 1 ]
#SELECT * FROM inhf; /* Single entry with value 'text' */
% sys.L0 # table_name
% xx # name
% ? # type
% ? # length
[ "text" ]

#-- Test changing the type of inherited columns
#insert into d values('test','one','two','three');
[ 1 ]
#alter table a alter column aa type integer using bit_length(aa);
#select * from d;
% sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% aa,	bb,	cc,	dd # name
% ?,	?,	?,	? # type
% ?,	?,	?,	? # length
[ 32,	"one",	"two",	"three" ]

#-- Tests for casting between the rowtypes of parent and child
#-- tables. See the pgsql-hackers thread beginning Dec. 4/04
#create table base (i integer);
#create table derived (); -- inherits (base)
#insert into derived (i) values (0);
[ 1 ]
#select derived::base from derived;
% sys.L0 # table_name
% derived # name
% ? # type
% ? # length
[ "(0)" ]

#drop table derived;
#drop table base;
#create table p1(ff1 int);
#create table p2(f1 text);
#create function p2text(p2) returns text as 'select $1.f1' language sql;
#create table c1(f3 int); -- inherits(p1,p2)
#insert into c1 values(123456789, 'hi', 42);
[ 1 ]
#select p2text(c1.*) from c1;
% sys.L0 # table_name
% p2text # name
% ? # type
% ? # length
[ "hi" ]

#drop function p2text(p2);
#drop table c1;
#drop table p2;
#drop table p1;

= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

