stderr of test 'polymorphism` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# builtin opt 	gdk_dbpath = /ufs/dinther/INSTALL/var/monetdb5/dbfarm/demo
# builtin opt 	gdk_debug = 0
# builtin opt 	gdk_vmtrim = no
# builtin opt 	monet_prompt = >
# builtin opt 	monet_daemon = no
# builtin opt 	mapi_port = 50000
# builtin opt 	mapi_open = false
# builtin opt 	mapi_autosense = false
# builtin opt 	sql_optimizer = default_pipe
# builtin opt 	sql_debug = 0
# cmdline opt 	gdk_nr_threads = 0
# cmdline opt 	mapi_open = true
# cmdline opt 	mapi_port = 38959
# cmdline opt 	mapi_usock = /var/tmp/mtest-1142/.s.monetdb.38959
# cmdline opt 	monet_prompt = 
# cmdline opt 	mal_listing = 2
# cmdline opt 	gdk_dbpath = /ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress
# cmdline opt 	mal_listing = 0
# cmdline opt 	gdk_debug = 536870922

# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

#-- Currently this tests polymorphic aggregates and indirectly does some
#-- testing of polymorphic SQL functions.  It ought to be extended.
#-- Legend:
#-- A = type is ANY
#-- P = type is polymorphic
#-- N = type is non-polymorphic
#-- B = aggregate base type
#-- S = aggregate state type
#-- R = aggregate return type
#-- 1 = arg1 of a function
#-- 2 = arg2 of a function
#-- ag = aggregate
#-- tf = trans (state) function
#-- ff = final function
#-- rt = return type of a function
#-- -> = implies
#-- => = allowed
#-- !> = not allowed
#-- E  = exists
#-- NE = not-exists
#-- 
#-- Possible states:
#-- ----------------
#-- B = (A || P || N)
#--   when (B = A) -> (tf2 = NE)
#-- S = (P || N)
#-- ff = (E || NE)
#-- tf1 = (P || N)
#-- tf2 = (NE || P || N)
#-- R = (P || N)
#-- create functions for use as tf and ff with the needed combinations of
#-- argument polymorphism, but within the constraints of valid aggregate
#-- functions, i.e. tf arg1 and tf return type must match
#-- polymorphic single arg transfn
#-- non-polymorphic single arg transfn
#-- dual polymorphic transfn
#-- dual non-polymorphic transfn
#-- arg1 only polymorphic transfn
#-- arg2 only polymorphic transfn
#-- finalfn polymorphic
#-- finalfn non-polymorphic
#-- Try to cover all the possible states:
#-- 
#-- Note: in Cases 1 & 2, we are trying to return P. Therefore, if the transfn
#-- is stfnp, tfnp, or tf2p, we must use ffp as finalfn, because stfnp, tfnp,
#-- and tf2p do not return P. Conversely, in Cases 3 & 4, we are trying to
#-- return N. Therefore, if the transfn is stfp, tfp, or tf1p, we must use ffnp
#-- as finalfn, because stfp, tfp, and tf1p do not return N.
#--
#--     Case1 (R = P) && (B = A)
#--     ------------------------
#--     S    tf1
#--     -------
#--     N    N
#-- should CREATE
#--     P    N
#-- should ERROR: stfnp(anyarray) not matched by stfnp(int[])
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp02a(BASETYPE = "ANY", SFUNC = stfnp, STYPE = anyarray,
  FINALFUNC = ffp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--     N    P
#-- should CREATE
#--     P    P
#-- should ERROR: we have no way to resolve S
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp04a(BASETYPE = "ANY", SFUNC = stfp, STYPE = anyarray,
  FINALFUNC = ffp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp04b(BASETYPE = "ANY", SFUNC = stfp, STYPE = anyarray,
  INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    Case2 (R = P) && ((B = P) || (B = N))
#--    -------------------------------------
#--    S    tf1      B    tf2
#--    -----------------------
#--    N    N        N    N
#-- should CREATE
#--    N    N        N    P
#-- should CREATE
#--    N    N        P    N
#-- should ERROR: tfnp(int[], anyelement) not matched by tfnp(int[], int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp07a(BASETYPE = anyelement, SFUNC = tfnp, STYPE = int[],
  FINALFUNC = ffp, INITCOND = '{}');
ERROR = function tfnp(integer[], anyelement) does not exist
#--    N    N        P    P
#-- should CREATE
#--    N    P        N    N
#-- should CREATE
#--    N    P        N    P
#-- should CREATE
#--    N    P        P    N
#-- should ERROR: tf1p(int[],anyelement) not matched by tf1p(anyarray,int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp11a(BASETYPE = anyelement, SFUNC = tf1p, STYPE = int[],
  FINALFUNC = ffp, INITCOND = '{}');
ERROR = function tf1p(integer[], anyelement) does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp11b(BASETYPE = anyelement, SFUNC = tf1p, STYPE = int[],
  INITCOND = '{}');
ERROR = function tf1p(integer[], anyelement) does not exist
#--    N    P        P    P
#-- should ERROR: tfp(int[],anyelement) not matched by tfp(anyarray,anyelement)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp12a(BASETYPE = anyelement, SFUNC = tfp, STYPE = int[],
  FINALFUNC = ffp, INITCOND = '{}');
ERROR = function tfp(integer[], anyelement) does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp12b(BASETYPE = anyelement, SFUNC = tfp, STYPE = int[],
  INITCOND = '{}');
ERROR = function tfp(integer[], anyelement) does not exist
#--    P    N        N    N
#-- should ERROR: tfnp(anyarray, int) not matched by tfnp(int[],int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp13a(BASETYPE = int, SFUNC = tfnp, STYPE = anyarray,
  FINALFUNC = ffp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    P    N        N    P
#-- should ERROR: tf2p(anyarray, int) not matched by tf2p(int[],anyelement)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp14a(BASETYPE = int, SFUNC = tf2p, STYPE = anyarray,
  FINALFUNC = ffp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    P    N        P    N
#-- should ERROR: tfnp(anyarray, anyelement) not matched by tfnp(int[],int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp15a(BASETYPE = anyelement, SFUNC = tfnp,
  STYPE = anyarray, FINALFUNC = ffp, INITCOND = '{}');
ERROR = function tfnp(anyarray, anyelement) does not exist
#--    P    N        P    P
#-- should ERROR: tf2p(anyarray, anyelement) not matched by tf2p(int[],anyelement)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp16a(BASETYPE = anyelement, SFUNC = tf2p,
  STYPE = anyarray, FINALFUNC = ffp, INITCOND = '{}');
ERROR = function tf2p(anyarray, anyelement) does not exist
#--    P    P        N    N
#-- should ERROR: we have no way to resolve S
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp17a(BASETYPE = int, SFUNC = tf1p, STYPE = anyarray,
  FINALFUNC = ffp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp17b(BASETYPE = int, SFUNC = tf1p, STYPE = anyarray,
  INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    P    P        N    P
#-- should ERROR: tfp(anyarray, int) not matched by tfp(anyarray, anyelement)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp18a(BASETYPE = int, SFUNC = tfp, STYPE = anyarray,
  FINALFUNC = ffp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp18b(BASETYPE = int, SFUNC = tfp, STYPE = anyarray,
  INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    P    P        P    N
#-- should ERROR: tf1p(anyarray, anyelement) not matched by tf1p(anyarray, int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp19a(BASETYPE = anyelement, SFUNC = tf1p,
  STYPE = anyarray, FINALFUNC = ffp, INITCOND = '{}');
ERROR = function tf1p(anyarray, anyelement) does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggp19b(BASETYPE = anyelement, SFUNC = tf1p,
  STYPE = anyarray, INITCOND = '{}');
ERROR = function tf1p(anyarray, anyelement) does not exist
#--    P    P        P    P
#-- should CREATE
#--     Case3 (R = N) && (B = A)
#--     ------------------------
#--     S    tf1
#--     -------
#--     N    N
#-- should CREATE
#--     P    N
#-- should ERROR: stfnp(anyarray) not matched by stfnp(int[])
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn02a(BASETYPE = "ANY", SFUNC = stfnp, STYPE = anyarray,
  FINALFUNC = ffnp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn02b(BASETYPE = "ANY", SFUNC = stfnp, STYPE = anyarray,
  INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--     N    P
#-- should CREATE
#--     P    P
#-- should ERROR: ffnp(anyarray) not matched by ffnp(int[])
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn04a(BASETYPE = "ANY", SFUNC = stfp, STYPE = anyarray,
  FINALFUNC = ffnp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    Case4 (R = N) && ((B = P) || (B = N))
#--    -------------------------------------
#--    S    tf1      B    tf2
#--    -----------------------
#--    N    N        N    N
#-- should CREATE
#--    N    N        N    P
#-- should CREATE
#--    N    N        P    N
#-- should ERROR: tfnp(int[], anyelement) not matched by tfnp(int[], int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn07a(BASETYPE = anyelement, SFUNC = tfnp, STYPE = int[],
  FINALFUNC = ffnp, INITCOND = '{}');
ERROR = function tfnp(integer[], anyelement) does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn07b(BASETYPE = anyelement, SFUNC = tfnp, STYPE = int[],
  INITCOND = '{}');
ERROR = function tfnp(integer[], anyelement) does not exist
#--    N    N        P    P
#-- should CREATE
#--    N    P        N    N
#-- should CREATE
#--    N    P        N    P
#-- should CREATE
#--    N    P        P    N
#-- should ERROR: tf1p(int[],anyelement) not matched by tf1p(anyarray,int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn11a(BASETYPE = anyelement, SFUNC = tf1p, STYPE = int[],
  FINALFUNC = ffnp, INITCOND = '{}');
ERROR = function tf1p(integer[], anyelement) does not exist
#--    N    P        P    P
#-- should ERROR: tfp(int[],anyelement) not matched by tfp(anyarray,anyelement)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn12a(BASETYPE = anyelement, SFUNC = tfp, STYPE = int[],
  FINALFUNC = ffnp, INITCOND = '{}');
ERROR = function tfp(integer[], anyelement) does not exist
#--    P    N        N    N
#-- should ERROR: tfnp(anyarray, int) not matched by tfnp(int[],int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn13a(BASETYPE = int, SFUNC = tfnp, STYPE = anyarray,
  FINALFUNC = ffnp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn13b(BASETYPE = int, SFUNC = tfnp, STYPE = anyarray,
  INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    P    N        N    P
#-- should ERROR: tf2p(anyarray, int) not matched by tf2p(int[],anyelement)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn14a(BASETYPE = int, SFUNC = tf2p, STYPE = anyarray,
  FINALFUNC = ffnp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn14b(BASETYPE = int, SFUNC = tf2p, STYPE = anyarray,
  INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    P    N        P    N
#-- should ERROR: tfnp(anyarray, anyelement) not matched by tfnp(int[],int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn15a(BASETYPE = anyelement, SFUNC = tfnp,
  STYPE = anyarray, FINALFUNC = ffnp, INITCOND = '{}');
ERROR = function tfnp(anyarray, anyelement) does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn15b(BASETYPE = anyelement, SFUNC = tfnp,
  STYPE = anyarray, INITCOND = '{}');
ERROR = function tfnp(anyarray, anyelement) does not exist
#--    P    N        P    P
#-- should ERROR: tf2p(anyarray, anyelement) not matched by tf2p(int[],anyelement)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn16a(BASETYPE = anyelement, SFUNC = tf2p,
  STYPE = anyarray, FINALFUNC = ffnp, INITCOND = '{}');
ERROR = function tf2p(anyarray, anyelement) does not exist
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn16b(BASETYPE = anyelement, SFUNC = tf2p,
  STYPE = anyarray, INITCOND = '{}');
ERROR = function tf2p(anyarray, anyelement) does not exist
#--    P    P        N    N
#-- should ERROR: ffnp(anyarray) not matched by ffnp(int[])
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn17a(BASETYPE = int, SFUNC = tf1p, STYPE = anyarray,
  FINALFUNC = ffnp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    P    P        N    P
#-- should ERROR: tfp(anyarray, int) not matched by tfp(anyarray, anyelement)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn18a(BASETYPE = int, SFUNC = tfp, STYPE = anyarray,
  FINALFUNC = ffnp, INITCOND = '{}');
ERROR = cannot determine transition data type
DETAIL:  An aggregate using "anyarray" or "anyelement" as transition type must have one of them as its base type.
#--    P    P        P    N
#-- should ERROR: tf1p(anyarray, anyelement) not matched by tf1p(anyarray, int)
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn19a(BASETYPE = anyelement, SFUNC = tf1p,
  STYPE = anyarray, FINALFUNC = ffnp, INITCOND = '{}');
ERROR = function tf1p(anyarray, anyelement) does not exist
#--    P    P        P    P
#-- should ERROR: ffnp(anyarray) not matched by ffnp(int[])
MAPI = (monetdb) /var/tmp/mtest-12345/.s.monetdb.54321
QUERY = CREATE AGGREGATE myaggn20a(BASETYPE = anyelement, SFUNC = tfp,
  STYPE = anyarray, FINALFUNC = ffnp, INITCOND = '{}');
ERROR = function ffnp(anyarray) does not exist
#-- create test data for polymorphic aggregates
#-- test the successfully created polymorphic aggregates

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

