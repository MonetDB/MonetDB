stdout of test 'stats` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =

#--
#-- Test Statistics Collector
#--
#-- Must be run after tenk2 has been created (by create_table),
#-- populated (by create_misc) and indexed (by create_index).
#--
#-- conditio sine qua non
SHOW stats_start_collector;  -- must be on
% sys.L0 # table_name
% stats_start_collector # name
% ? # type
% ? # length
[ "on" ]

#-- save counters
#CREATE TEMP TABLE prevstats AS
#SELECT t.seq_scan, t.seq_tup_read, t.idx_scan, t.idx_tup_fetch,
#       (b.heap_blks_read + b.heap_blks_hit) AS heap_blks,
#       (b.idx_blks_read + b.idx_blks_hit) AS idx_blks
#  FROM pg_catalog.pg_stat_user_tables AS t,
#       pg_catalog.pg_statio_user_tables AS b
# WHERE t.relname='tenk2' AND b.relname='tenk2';
#-- enable statistics
SET stats_block_level = on;
SET stats_row_level = on;
#-- helper function
#CREATE FUNCTION sleep(interval) RETURNS integer AS '
#DECLARE
#  endtime timestamp;
BEGIN
  endtime := timeofday()::timestamp + $1;
  WHILE timeofday()::timestamp < endtime LOOP
  END LOOP;
  RETURN 0;
COMMIT;
' LANGUAGE 'plpgsql';
#-- do something
#SELECT count(*) FROM tenk2;
% sys.L0 # table_name
% count # name
% ? # type
% ? # length
[ 10000 ]

#SELECT count(*) FROM tenk2 WHERE unique1 = 1;
% sys.L0 # table_name
% count # name
% ? # type
% ? # length
[ 1 ]

#-- let stats collector catch up
#SELECT sleep('0:0:2'::interval);
% sys.L0 # table_name
% sleep # name
% ? # type
% ? # length
[ 0 ]

#-- check effects
#SELECT st.seq_scan >= pr.seq_scan + 1,
#       st.seq_tup_read >= pr.seq_tup_read + cl.reltuples,
#       st.idx_scan >= pr.idx_scan + 1,
#       st.idx_tup_fetch >= pr.idx_tup_fetch + 1
#  FROM pg_stat_user_tables AS st, pg_class AS cl, prevstats AS pr
# WHERE st.relname='tenk2' AND cl.relname='tenk2';
% sys.L0,	sys.L0,	sys.L0,	sys.L0 # table_name
% ?column?,	?column?,	?column?,	?column? # name
% ?,	?,	?,	? # type
% ?,	?,	?,	? # length
[ "t",	"t",	"t",	"t" ]

#SELECT st.heap_blks_read + st.heap_blks_hit >= pr.heap_blks + cl.relpages,
#       st.idx_blks_read + st.idx_blks_hit >= pr.idx_blks + 1
#  FROM pg_statio_user_tables AS st, pg_class AS cl, prevstats AS pr
# WHERE st.relname='tenk2' AND cl.relname='tenk2';
% sys.L0,	sys.L0 # table_name
% ?column?,	?column? # name
% ?,	? # type
% ?,	? # length
[ "t",	"t" ]

#-- clean up
#DROP FUNCTION sleep(interval);
#-- End of Stats Test

= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

