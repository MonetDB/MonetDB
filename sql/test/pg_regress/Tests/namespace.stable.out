stdout of test 'namespace` in directory 'sql/test/pg_regress` itself:


# 17:11:18 >  
# 17:11:18 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38959" "--set" "mapi_usock=/var/tmp/mtest-1142/.s.monetdb.38959" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/ufs/dinther/INSTALL/var/MonetDB/mTests_sql_test_pg_regress" "--set" "mal_listing=0"
# 17:11:18 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_pg_regress', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.356 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://uwakai.da.cwi.nl:38959/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1142/.s.monetdb.38959
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 17:11:19 >  
# 17:11:19 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1142" "--port=38959"
# 17:11:19 >  

= ! Correct / expected output still needs to be provided / verified / approved ! =

#--
#-- Regression tests for schemas (namespaces)
#--
#CREATE SCHEMA test_schema_1
#       CREATE UNIQUE INDEX abc_a_idx ON abc (a)
#       CREATE VIEW abc_view AS
#              SELECT a+1 AS a, b+1 AS b FROM abc
#       CREATE TABLE abc (
#              a serial,
#              b int UNIQUE
#       );
NOTICE:  CREATE TABLE will create implicit sequence "abc_a_seq" for serial column "abc.a"
NOTICE:  CREATE TABLE / UNIQUE will create implicit index "abc_b_key" for table "abc"
#-- verify that the objects were created
#SELECT COUNT(*) FROM pg_class WHERE relnamespace =
#    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_1');
% sys.L0 # table_name
% count # name
% ? # type
% ? # length
[ 5 ]

#INSERT INTO test_schema_1.abc DEFAULT VALUES;
[ 1 ]
#INSERT INTO test_schema_1.abc DEFAULT VALUES;
[ 1 ]
#INSERT INTO test_schema_1.abc DEFAULT VALUES;
[ 1 ]
#SELECT * FROM test_schema_1.abc;
% sys.L0,	sys.L0 # table_name
% a,	b # name
% ?,	? # type
% ?,	? # length
[ 1,	"" ]
[ 2,	"" ]
[ 3,	"" ]

#SELECT * FROM test_schema_1.abc_view;
% sys.L0,	sys.L0 # table_name
% a,	b # name
% ?,	? # type
% ?,	? # length
[ 2,	"" ]
[ 3,	"" ]
[ 4,	"" ]

#DROP SCHEMA test_schema_1 CASCADE;
NOTICE:  drop cascades to view test_schema_1.abc_view
NOTICE:  drop cascades to rule _RETURN on view test_schema_1.abc_view
NOTICE:  drop cascades to table test_schema_1.abc
#-- verify that the objects were dropped
#SELECT COUNT(*) FROM pg_class WHERE relnamespace =
#    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_1');
% sys.L0 # table_name
% count # name
% ? # type
% ? # length
[ 0 ]


= ! Correct / expected output still needs to be provided / verified / approved ! =

# 17:11:19 >  
# 17:11:19 >  "Done."
# 17:11:19 >  

