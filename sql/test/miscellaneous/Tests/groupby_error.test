statement ok
CREATE SCHEMA "kagami_dump"

statement ok
CREATE TABLE "kagami_dump"."test_task" ("sys_id" CHAR(32) DEFAULT '', "number" VARCHAR(40), "parent" VARCHAR(32))

statement ok
INSERT INTO "kagami_dump".test_task(sys_id, number, parent) VALUES ('aaa', 'T0001', null),('bbb','T0002','aaa')

statement error
SELECT parent."sys_id" FROM "kagami_dump"."test_task" parent INNER JOIN "kagami_dump"."test_task" child ON child."parent" = parent."sys_id" GROUP BY parent."sys_id" HAVING count(child."sys_id") >= 1 ORDER BY parent."number"

statement ok
DROP SCHEMA "kagami_dump" CASCADE

statement ok
CREATE TABLE tab0(col0 INTEGER, col1 INTEGER, col2 INTEGER)

statement ok
INSERT INTO tab0 VALUES(97,1,99), (15,81,47), (87,21,10)

statement ok
CREATE TABLE tab1(col0 INTEGER, col1 INTEGER, col2 INTEGER)

statement ok
INSERT INTO tab1 VALUES (51,14,96), (85,5,59), (91,47,68)

statement ok
CREATE TABLE tab2(col0 INTEGER, col1 INTEGER, col2 INTEGER)

statement ok
INSERT INTO tab2 VALUES(64,77,40), (75,67,58), (46,51,23)

query I rowsort
SELECT CAST(+ col1 * - col1 AS BIGINT) AS col2 FROM tab0 GROUP BY col2, col0, col1 HAVING + - col0 / - AVG ( ALL + col2 ) - - - AVG ( DISTINCT + col0 ) + col0 IS NULL
----

query I rowsort
SELECT DISTINCT + 40 / + + col0 AS col2 FROM tab0 GROUP BY col0, col0, col2 HAVING NOT ( NOT + - 80 BETWEEN NULL AND + - 73 ) OR NOT ( + col0 >= - COUNT ( * ) + - COUNT ( DISTINCT - col0 ) )
----

query III rowsort
SELECT ALL * FROM tab0 AS cor0 WHERE col2 NOT IN ( 22, 18, CAST ( NULL AS INTEGER ) + - 77 )
----

query I rowsort
SELECT CAST(58 + + 78 + - COALESCE ( ( + CASE 68 WHEN - 77 - - 38 THEN NULL ELSE COUNT ( * ) END ), + 81 + - COUNT ( * ) + + CAST ( NULL AS INTEGER ), + + 34 * - 30 * + COUNT ( * ) ) * 15 * 38 AS BIGINT) AS col1
----
-434

query III rowsort
SELECT * FROM tab0 AS cor0 WHERE NOT - 39 <> 11
----

query III rowsort
SELECT DISTINCT * FROM tab0 WHERE NOT - - 12 <> + + 96
----

query III rowsort
SELECT * FROM tab0 AS cor0 WHERE - 52 = + 32
----

query III rowsort
SELECT ALL * FROM tab0 WHERE 68 = - + 83
----

query III rowsort
SELECT * FROM tab2 AS cor0 WHERE NOT - ( - + 57 ) + - ( ( - - col2 ) ) BETWEEN + - col2 AND + col2
----
46
51
23

query I rowsort
SELECT col0 FROM tab2 WHERE - - col2
----
46
64
75

query I rowsort
SELECT 1 FROM tab0 WHERE NOT (NOT NULL IN (1))
----

query I rowsort
SELECT NOT (NOT NULL IN (1)) FROM tab0
----
NULL
NULL
NULL

query I rowsort
SELECT - col0 + + CAST ( NULL AS INTEGER ) AS col2 FROM tab0 AS cor0 WHERE NOT ( NOT + - CAST ( NULL AS INTEGER ) NOT IN ( col0 / CAST ( col2 AS INTEGER ) - + col1 ) )
----

query I rowsort
SELECT NOT ( NOT + - CAST ( NULL AS INTEGER ) NOT IN ( col0 / CAST ( col2 AS INTEGER ) - + col1 ) ) FROM tab0 AS cor0
----
NULL
NULL
NULL

query T nosort
PLAN SELECT DISTINCT col0, col1, col2, col0 FROM tab0
----
group by (
| table("sys"."tab0") [ "tab0"."col0", "tab0"."col1", "tab0"."col2" ] COUNT 
) [ "tab0"."col2", "tab0"."col0", "tab0"."col1" ] [ "tab0"."col0", "tab0"."col1", "tab0"."col2", "tab0"."col0" ]

query IIII rowsort
SELECT DISTINCT col0, col1, col2, col0 FROM tab0
----
15
81
47
15
87
21
10
87
97
1
99
97

query T nosort
PLAN SELECT col0 FROM tab2 WHERE CAST(col2 AS BIGINT) = 40
----
project (
| select (
| | table("sys"."tab2") [ "tab2"."col0", "tab2"."col2" ] COUNT 
| ) [ bigint["tab2"."col2"] = bigint "40" ]
) [ "tab2"."col0" ]

query I rowsort
SELECT col0 FROM tab2 WHERE CAST(col2 AS BIGINT) = 40
----
64

query I rowsort
SELECT 11 FROM tab1 AS cor0 LEFT JOIN tab0 ON 80 = 70
----
11
11
11

query I rowsort
SELECT col0 FROM tab0 ORDER BY tab0.col0
----
15
87
97

query I rowsort
SELECT DISTINCT 99 col2 FROM tab1 WHERE NOT - ( 43 ) + + 98 = + col2
----
99

query III rowsort
SELECT * FROM tab2 AS cor0 WHERE NOT - 59 + + 47 <> + ( + col0 )
----

query I rowsort
SELECT CAST(+ col2 * col2 AS BIGINT) FROM tab2 AS cor0 WHERE NOT - CAST ( NULL AS INTEGER ) <> - - col1 AND NOT NULL NOT BETWEEN ( NULL ) AND - 91 - - + 27 * + col2
----

query I rowsort
SELECT + 2 FROM tab0 AS cor0 WHERE NOT - 29 IS NULL OR NOT NULL IS NULL AND NOT NULL BETWEEN + col1 - + 60 AND + 37 * + col1 + + col0
----
2
2
2

query III rowsort
SELECT * FROM tab0 WHERE NOT - col0 - col1 * col2 <= ( + col0 ) AND NOT ( + col2 + col1 - col1 ) NOT BETWEEN - col0 AND - col1 + - col2 / col1
----

query III rowsort
SELECT * FROM tab0 AS cor0 WHERE NOT col1 BETWEEN - col0 AND col0 + col1 * col1 AND - col1 BETWEEN col0 AND ( NULL ) OR NOT col0 * col0 + col0 <= NULL
----

query III rowsort
SELECT DISTINCT * FROM tab2 WHERE NOT ( - + 50 + ( 70 ) ) = + col2
----
46
51
23
64
77
40
75
67
58

statement error
SELECT col0 FROM tab0 ORDER BY sys.tab0.col0

statement ok
drop table tab1

statement ok
CREATE TABLE tab1(col0 INTEGER, col1 STRING)

query I rowsort
SELECT 1 FROM tab0 where CASE WHEN 64 IN ( col0 ) THEN true END
----

query I rowsort
SELECT 1 FROM tab0 GROUP BY col0 HAVING CASE WHEN 64 IN ( col0 ) THEN TRUE END
----

query I rowsort
SELECT + col2 + + col0 AS col0 FROM tab0 AS cor0 GROUP BY col1, col2, col0 HAVING NULL IN ( + ( - - ( CASE WHEN 64 IN ( col0 * - col2 + + col1 ) THEN - 98 END ) ) * - 13 )
----

statement ok
drop table tab0

statement ok
drop table tab1

statement ok
drop table tab2

query II rowsort
SELECT DISTINCT CAST(+ 77 - - - CASE - CAST ( NULL AS INTEGER ) WHEN - 11 THEN NULL WHEN - 34 THEN 81 ELSE - 15 + 20 * - ( + CAST ( + ( 96 ) AS INTEGER ) ) END AS BIGINT) AS col0, 35 AS col0
----
2012
35

query I rowsort
SELECT CAST(- CASE - ( + 0 ) WHEN 18 + - 60 THEN NULL WHEN - CASE - 67 WHEN + - 79 * + COUNT ( * ) / 30 - + 32 * + 69 THEN MAX ( DISTINCT + 34 ) / + 0 ELSE NULL END * + ( + 45 ) + + 19 * 17 THEN
20 WHEN + SUM ( ALL + 78 ) + + 69 THEN 29 * 74 ELSE + NULLIF ( 82, + 72 + 26 ) * 7 END * - 92 + MIN ( 88 + 57 ) AS BIGINT) AS col0
----
52953

query I rowsort
SELECT ALL CAST(19 * - CASE + - COUNT ( * ) WHEN 40 THEN NULL WHEN - - CAST ( NULL AS INTEGER ) * + - 1 THEN + 39 ELSE 27 + - MIN ( DISTINCT 13 ) END + 36 + 70 - - 69 * + COUNT ( * ) * 20 + + 83 AS BIGINT) AS col0
----
1303

query II rowsort
SELECT CAST(- 4 * + COUNT ( * ) + 22 + 69 AS BIGINT) AS col2, CAST(- ( + CASE + 85 WHEN - 77 / - CAST ( + CASE - + 51 WHEN 79 THEN + 95 + 13 * ( 60 * 77 ) END AS INTEGER ) + + 82 - COUNT ( * ) * COUNT ( * ) THEN
NULL WHEN SUM ( ALL 99 ) THEN COUNT ( * ) ELSE COUNT ( * ) * - ( COUNT ( * ) ) END ) * 46 - 83 AS BIGINT)
----
87
-37

query II rowsort
SELECT DISTINCT CAST(- CAST ( CASE 81 WHEN 48 - - 3 / - - 47 - - CAST ( NULL AS INTEGER ) THEN NULL WHEN COUNT ( * ) THEN + - 91 + + 43 ELSE + - 0 END AS INTEGER ) AS BIGINT) AS col0, CAST(- 27 * + 43 AS BIGINT)
----
0
-1161

query I rowsort
SELECT DISTINCT CAST(66 * - + CAST ( - - COUNT ( * ) AS INTEGER ) * 54 * + CASE 68 WHEN - 56 * + CAST ( NULL AS INTEGER ) + + + 47 THEN
- 83 ELSE + 59 + - COUNT ( * ) - 26 * ( 59 ) * 11 - - + COUNT ( * ) * - 73 END + + COUNT ( * ) / + ( 86 + 19 * 90 ) AS BIGINT)
----
60192396

query I rowsort
SELECT DISTINCT CAST(+ - CASE + 66 WHEN - CAST ( NULL AS INTEGER ) THEN NULL ELSE COUNT ( * ) + - CASE + COUNT ( * ) WHEN - 69 - + - 28 THEN - + MIN ( + 92 ) WHEN - COUNT ( 32 ) THEN
+ ( + 23 ) * + 17 * - 37 WHEN 63 THEN NULL ELSE + 67 * - 34 - 64 END - 31 END * - 94 AS BIGINT) AS col2
----
217328

query I rowsort
SELECT DISTINCT CAST(( + CASE WHEN NOT NULL BETWEEN NULL AND NULL THEN NULL ELSE + COUNT ( * ) END ) AS BIGINT) AS col1
----
1

query I rowsort
SELECT CAST(SUM ( + 73 ) * - CASE WHEN NOT ( NOT 27 BETWEEN 15 AND - NULLIF ( - 63, - 28 + + 76 ) ) THEN NULL ELSE + 77 * + 69 END / - CAST ( - 69 AS INTEGER ) AS BIGINT) AS col0
----
NULL

query I rowsort
SELECT DISTINCT CAST(COALESCE ( + 38, - - ( - 70 ) * 52 + + 91 + - 47 ) + + CAST ( - 54 AS REAL ) / + 68 / + ( - 92 ) * - - CASE WHEN NULL >= NULL THEN COUNT ( * ) WHEN - COUNT ( * ) IS NULL
THEN NULL ELSE NULL END * + 28 * - 58 + COUNT ( * ) + + COUNT ( * ) AS BIGINT)
----
NULL

query I rowsort
SELECT DISTINCT CAST(- ( COUNT ( * ) ) / + CASE 28 * + 72 + - 45 * + 2 WHEN - 14 THEN NULL WHEN 37 THEN - COALESCE ( CASE WHEN + 17 IS NOT NULL THEN ( + ( - 39 ) ) WHEN NOT NULL = ( NULL )
THEN NULL ELSE 52 END, - COUNT ( * ) * - 80, + NULLIF ( CASE - 70 WHEN 48 + 63 THEN NULL ELSE 89 * + 57 END, + 15 ) + - CASE + 19 WHEN - 97 THEN + 66 + - 25 END ) * + 79 + 93 * 21 END AS BIGINT) AS col1
----
NULL

statement ok
START TRANSACTION

statement ok
CREATE TABLE "tab0" ("col0" INTEGER,"col1" INTEGER,"col2" INTEGER)

statement ok
INSERT INTO "tab0" VALUES (83, 0, 38), (26, 0, 79), (43, 81, 24)

query I rowsort
SELECT CAST(COUNT ( DISTINCT + CAST ( NULL AS INTEGER ) ) + 93 as BIGINT) AS col2 FROM tab0 GROUP BY col0 HAVING NOT ( COUNT ( * ) ) = 94 / COUNT ( * )
----
93
93
93

query T rowsort
select group_concat(distinct 'a') from tab0
----
a

statement ok
INSERT INTO "tab0" VALUES (83, 0, 38), (26, 0, 79), (43, 81, 24)

query T rowsort
select group_concat(distinct col1, col2) from tab0 group by col0
----
0
0
81

query T rowsort
select group_concat(distinct col1, col2) from tab0
----
07902481

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE tab2 ("col0" INTEGER,"col1" INTEGER,"col2" INTEGER)

statement ok
INSERT INTO tab2 VALUES(64,77,40), (75,67,58), (46,51,23)

query I rowsort
SELECT col2 FROM tab2 WHERE col2 >= - col1 * 2 AND 1 IS NOT NULL
----
23
40
58

query I rowsort
SELECT col2 FROM tab2 WHERE ( + col2 ) >= - col1 * + + 19 * + col2 AND NOT 79 / + 50 IS NULL
----
23
40
58

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE t(x DECIMAL(4,1))

statement ok
INSERT INTO t VALUES (42)

query R rowsort
SELECT CAST(SUM(x) / COUNT(x) AS DECIMAL(13,1)) FROM t
----
42.000

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
create table tab1 ("myk" int, "part" int, "tet" int)

statement ok
create table tab2 ("myk" int, "ups" varchar(32))

statement ok
insert into tab1 values (1,1,1), (2,2,2)

statement ok
insert into tab2 values (1, 'a'), (1, 'b')

query T nosort
PLAN select
  myalias0."part" as "part",
  myalias0."tet" as "tet",
  count(*) as mycount,
  myalias0."tet" as track
from
  tab1 myalias0
  left join tab2 myalias1
  on myalias0."part" = myalias1."myk"
group by
  myalias0."part",
  track,
  myalias0."tet",
  myalias1."ups"
----
project (
| group by (
| | left outer join (
| | | table("sys"."tab1") [ "tab1"."part" as "myalias0"."part", "tab1"."tet" as "myalias0"."tet" ] COUNT ,
| | | table("sys"."tab2") [ "tab2"."myk" as "myalias1"."myk", "tab2"."ups" as "myalias1"."ups" ] COUNT 
| | ) [ "myalias0"."part" = "myalias1"."myk" ]
| ) [ "myalias1"."ups", "myalias0"."part", "myalias0"."tet" as "track" ] [ "myalias0"."part", "track", "sys"."count"() NOT NULL as "%1"."%1" ]
) [ "myalias0"."part", "track" as "tet", "%1"."%1" NOT NULL as "mycount", "track" ]

query IIII rowsort
select
  myalias0."part" as "part",
  myalias0."tet" as "tet",
  count(*) as mycount,
  myalias0."tet" as track
from
  tab1 myalias0
  left join tab2 myalias1
  on myalias0."part" = myalias1."myk"
group by
  myalias0."part",
  track,
  myalias0."tet",
  myalias1."ups"
----
1
1
1
1
1
1
1
1
2
2
1
2

statement ok
ROLLBACK

