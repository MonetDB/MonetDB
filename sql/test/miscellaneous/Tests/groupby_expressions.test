statement ok
create table "groupings" ("aa" int, "bb" int)

statement ok
start transaction

statement ok
insert into "groupings" values (1, 1), (2, 2), (1, 3)

query I rowsort
select cast("aa"+1 as bigint) from "groupings" group by "aa"+1
----
2
3

query I rowsort
select cast("aa"+1 as bigint) from "groupings" group by "aa"+1, "aa"+1
----
2
3

query T nosort
plan select cast("aa"+1 as bigint) from "groupings" group by "aa"+1, "aa"+1
----
project (
| group by (
| | project (
| | | table("sys"."groupings") [ "groupings"."aa" ]
| | ) [ bigint(33)["groupings"."aa"] as "%2"."%2", "sys"."sql_add"("%2"."%2", bigint(33) "1") as "%1"."%1" ]
| ) [ "%1"."%1" ] [ "%1"."%1" ]
) [ "%1"."%1" ]

query I rowsort
select cast(("aa"+1) + ("bb"+1) as bigint) from "groupings" group by "aa"+1, "bb"+1
----
4
6
6

query I rowsort
select cast(("aa"+1) + ("bb"+1) as bigint) from "groupings" group by ("aa"+1) + ("bb"+1)
----
4
6

query I rowsort
select cast(sum("aa"+1) as bigint) from "groupings" group by "aa"+1
----
3
4

query I rowsort
select cast(sum(distinct "aa"+1) as bigint) from "groupings" group by "aa"+1
----
2
3

query I rowsort
select cast(sum(("aa"+1) + ("bb"+2)) as bigint) from "groupings" group by "aa"+1, "bb"+2
----
5
7
7

query I rowsort
select cast(sum(("aa"+1) + ("bb"+2)) as bigint) from "groupings" group by ("aa"+1) + ("bb"+2)
----
14
5

query I rowsort
select cast("aa"+1 as bigint) from "groupings" group by "aa"+1 having "aa"+1 > 2
----
3

query I rowsort
select cast("aa"+1 as bigint) from "groupings" group by "aa"+1 order by "aa"+1
----
2
3

statement ok
create function sumints("a" int, "b" int) returns int begin return "a" + "b"; end

query I rowsort
select count(*) from "groupings" group by sumints("aa","bb")
----
1
2

query I rowsort
select sumints("aa","bb") from "groupings" group by sumints("aa","bb")
----
2
4

query I rowsort
select cast(sumints("aa","bb")*sum("bb") as bigint) from "groupings" group by sumints("aa","bb")
----
2
20

query I rowsort
select cast(sum("bb") as bigint) from "groupings" group by sumints("aa","bb")*sumints("aa",19)
----
1
2
3

query I rowsort
select count("aa") from "groupings" group by "aa" > 1
----
1
2

query I rowsort
select count(distinct "aa") from "groupings" group by "aa" > 1
----
1
1

query I rowsort
select distinct count(distinct "aa") from "groupings" group by "aa" > 1
----
1

query I rowsort
select "aa" > 1 from "groupings" group by "aa" > 1
----
0
1

query I rowsort
select count(*) from "groupings" group by case when "aa" > 1 then "aa" else "aa" + 10 end
----
1
2

query I rowsort
select case when "aa" > 1 then "aa" else "aa" * 4 end from "groupings" group by case when "aa" > 1 then "aa" else "aa" * 4 end
----
2
4

query I rowsort
select cast(sum("aa"+"bb") as bigint) from "groupings" group by "aa"+"bb"
----
2
8

query I rowsort
select cast(sum(distinct "aa"+"bb") as bigint) from "groupings" group by "aa"+"bb"
----
2
4

query I rowsort
select cast(sum("aa"+3452) as bigint) from "groupings" group by "aa"+"bb"
----
3453
6907

query I rowsort
select cast(sum(distinct "aa"+3452) as bigint) from "groupings" group by "aa"+"bb"
----
3453
6907

query I rowsort
select count(*) from "groupings" having count("aa"-54) > 2
----
3

query I rowsort
select count(*) from "groupings" order by count("bb"+1)
----
3

query III rowsort
select cast(sum("aa") as bigint), cast(sum("bb") as bigint), cast(sum("aa" + "bb") as bigint) from "groupings" group by "aa", "bb", "aa" + "bb" having sum("aa" + "bb") < 4
----
1
1
2

query I rowsort
select count(*) from "groupings" order by rank() over ()
----
3

query I rowsort
select "aa" + "bb" from "groupings" order by case when "aa" > 1 then "aa" else "aa" + 10 end
----
2
4
4

query I rowsort
select cast(sum("aa") + sum("bb") as bigint) from "groupings" order by sum("aa" + "bb")
----
10

query I rowsort
select "aa" + "bb" from "groupings" order by "aa" between "bb" and NULL
----
2
4
4

query II rowsort
select "aa", "bb" from "groupings" order by "aa" > "bb" + 10, "aa"
----
1
1
1
3
2
2

query II rowsort
select "aa", "bb" from "groupings" order by "aa" > all(select count("bb") from "groupings")
----
1
1
1
3
2
2

query I rowsort
select cast(sum("aa"+"bb") as bigint) from "groupings" order by 1
----
10

query T rowsort
select distinct "aa" > "bb" from "groupings" order by "aa" > "bb"
----
False

query I rowsort
select count(*) from "groupings" having count("aa") <= count("aa" + "bb") order by sum("aa") > sum("bb")
----
3

query I rowsort
select "aa" + "bb" from "groupings" group by "aa" + "bb" order by sum("aa")
----
2
4

query I rowsort
select 1 from "groupings" group by "aa" + "bb" order by "aa" + "bb"
----
1
1

query III rowsort
select cast(sum("aa") as bigint), cast(sum("bb") as bigint), cast(sum("aa" + "bb") as bigint) from "groupings" group by "aa", "bb", "aa" + "bb" order by "aa" + "bb"
----
1
1
2
1
3
4
2
2
4

query I rowsort
select sumints("aa","bb") from "groupings" order by "aa" > "bb" or "aa" < "bb", sumints("aa","bb")
----
2
4
4

query I rowsort
select 1 order by 1 < any(select sum("bb") from "groupings")
----
1

query II rowsort
select "aa", "bb" from "groupings" order by "aa" - "bb"
----
1
1
1
3
2
2

query II rowsort
select "aa", "bb" from "groupings" order by "aa" - "bb" desc nulls last
----
1
1
1
3
2
2

query I rowsort
select 1 group by 1
----
1

query I rowsort
select 1 group by 2
----
1

query I rowsort
select -90 from "groupings" group by -90
----
-90

query I rowsort
select count(*) from "groupings" group by 'hello'
----
3

query I rowsort
select count(*) from "groupings" group by NULL
----
3

query T rowsort
select 'world' from "groupings" group by -90
----
world

statement ok
create table "foo" ("bar" int)

query I rowsort
select * from "foo" group by "bar"
----

statement ok
rollback

statement error
select * from "groupings" group by "aa"

statement error
select "aa" from "groupings" group by NULL

statement error
select "aa"+3452 from "groupings" group by "aa"+"bb"

statement error
select count(*) from "groupings" group by count("aa")

statement error
select count(*) from "groupings" group by rank() over ()

statement error
select count(*) from "groupings" having rank() over ()

statement error
select cast("aa"+1 as bigint) from "groupings" group by "aa"+1 having "bb"+1 > 2

statement error
select cast("aa"+1 as bigint) from "groupings" group by "aa"+1 order by "bb"+1

statement error
select case when "aa" > 2 then "aa" else "aa" * 4 end from "groupings" group by case when "aa" > 1 then "aa" else "aa" * 4 end

statement error
select case when "aa" < 1 then "aa" else "aa" * 4 end from "groupings" group by case when "aa" > 1 then "aa" else "aa" * 4 end

statement error
select sum("aa") + sum("bb") from "groupings" order by "aa" between "bb" and NULL

statement error
select 1 from "groupings" group by "aa" + "bb" order by "aa"

statement ok
drop table "groupings"

statement ok
START TRANSACTION

statement ok
CREATE TABLE "mygroup" ("id" INTEGER, "depend_id" INTEGER,"depend_type" SMALLINT)

statement ok rowcount 405
COPY 405 RECORDS INTO "mygroup" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
2065	5547	5
2066	5547	5
5173	5558	5
5174	5558	5
5175	5558	5
5179	5558	5
2063	5558	5
2064	5558	5
2065	5558	5
2066	5558	5
5163	5558	5
5164	5558	5
5165	5558	5
5166	5558	5
5168	5558	5
2016	5567	5
2017	5567	5
2018	5567	5
2026	5567	5
2063	5567	5
2064	5567	5
2065	5567	5
2066	5567	5
5163	5567	5
5164	5567	5
5165	5567	5
5166	5567	5
5168	5567	5
5204	5573	5
5205	5573	5
5207	5573	5
2001	5573	5
2002	5573	5
2003	5573	5
2016	5581	5
2017	5581	5
2018	5581	5
2022	5581	5
2063	5581	5
2064	5581	5
2065	5581	5
2066	5581	5
5163	5581	5
5164	5581	5
5165	5581	5
5166	5581	5
5168	5581	5
2016	5589	5
2017	5589	5
2018	5589	5
2022	5589	5
2063	5589	5
2064	5589	5
2065	5589	5
2066	5589	5
5163	5589	5
5164	5589	5
5165	5589	5
5166	5589	5
5168	5589	5
2016	5598	5
2017	5598	5
2018	5598	5
2022	5598	5
2063	5598	5
2064	5598	5
2065	5598	5
2066	5598	5
5173	5598	5
5174	5598	5
5175	5598	5
5179	5598	5
2016	5609	5
2017	5609	5
2018	5609	5
2022	5609	5
2026	5609	5
2063	5609	5
2064	5609	5
2065	5609	5
2066	5609	5
2099	5617	5
2100	5617	5
2101	5617	5
2102	5617	5
5163	5617	5
5164	5617	5
5165	5617	5
5166	5617	5
2063	5617	5
2064	5617	5
2065	5617	5
2066	5617	5
2063	5627	5
2064	5627	5
2065	5627	5
2066	5627	5
5173	5627	5
5174	5627	5
5175	5627	5
5179	5627	5
2099	5627	5
2100	5627	5
2101	5627	5
5163	5627	5
5164	5627	5
5165	5627	5
5166	5627	5
2063	5637	5
2064	5637	5
2065	5637	5
2066	5637	5
2016	5637	5
2017	5637	5
2018	5637	5
2022	5637	5
2026	5637	5
2099	5637	5
2100	5637	5
2101	5637	5
2102	5637	5
2094	5646	5
2095	5646	5
2096	5646	5
2097	5646	5
2098	5646	5
5163	5646	5
5164	5646	5
5165	5646	5
5166	5646	5
2087	5646	5
2089	5646	5
2091	5646	5
2110	5658	5
2111	5658	5
2112	5658	5
2113	5658	5
2094	5658	5
2095	5658	5
2096	5658	5
2097	5658	5
2098	5658	5
5173	5658	5
5174	5658	5
5175	5658	5
5179	5658	5
5163	5658	5
5164	5658	5
5165	5658	5
5166	5658	5
2087	5658	5
2089	5658	5
2091	5658	5
2087	5666	5
2091	5666	5
2092	5666	5
2088	5666	5
2089	5666	5
2090	5666	5
5163	5666	5
5164	5666	5
5165	5666	5
5166	5666	5
2087	5676	5
2088	5676	5
2089	5676	5
2090	5676	5
2091	5676	5
2092	5676	5
2016	5685	5
2017	5685	5
2018	5685	5
2022	5685	5
2063	5685	5
2064	5685	5
2065	5685	5
2066	5685	5
5163	5685	5
5164	5685	5
5165	5685	5
5166	5685	5
5168	5685	5
2016	5694	5
2017	5694	5
2018	5694	5
2022	5694	5
2063	5694	5
2064	5694	5
2065	5694	5
2066	5694	5
5163	5694	5
5164	5694	5
5165	5694	5
5166	5694	5
5168	5694	5
2016	5703	5
2017	5703	5
2018	5703	5
2022	5703	5
2063	5703	5
2064	5703	5
2065	5703	5
2066	5703	5
5173	5703	5
5174	5703	5
5175	5703	5
5179	5703	5
2016	5714	5
2017	5714	5
2018	5714	5
2022	5714	5
2026	5714	5
2063	5714	5
2064	5714	5
2065	5714	5
2066	5714	5
2063	5724	5
2064	5724	5
2065	5724	5
2066	5724	5
2007	5724	5
2008	5724	5
2010	5724	5
5173	5724	5
5174	5724	5
5175	5724	5
5179	5724	5
5163	5724	5
5164	5724	5
5165	5724	5
5166	5724	5
2063	5732	5
2064	5732	5
2065	5732	5
2066	5732	5
2007	5732	5
2008	5732	5
2010	5732	5
2016	5732	5
2017	5732	5
2018	5732	5
2022	5732	5
2063	5742	5
2064	5742	5
2065	5742	5
2066	5742	5
2007	5742	5
2008	5742	5
2010	5742	5
2028	5742	5
2029	5742	5
2030	5742	5
2031	5742	5
2036	5742	5
2016	5742	5
2017	5742	5
2018	5742	5
5754	5774	5
5834	5846	5
5848	5868	5
5877	5882	7
5911	5919	5
5184	5923	5
5998	6018	5
6038	6048	5
6697	6699	10
6697	6698	4
5173	6713	5
5175	6713	5
5176	6713	5
5177	6713	5
5178	6713	5
5179	6713	5
2007	6713	5
2009	6713	5
2010	6713	5
5163	6713	5
5164	6713	5
5165	6713	5
5166	6713	5
2001	6713	5
2002	6713	5
2003	6713	5
6684	6713	5
6688	6713	5
6692	6713	5
6946	6955	7
6950	6959	7
6704	7195	7
6697	7195	7
6703	7195	7
6763	7207	7
7195	7207	7
7199	7207	7
7280	7282	15
7280	7287	15
7280	7292	15
7280	7297	15
7280	7302	15
7280	7307	15
7280	7311	15
7280	7319	15
7280	7323	15
7280	7327	15
7280	7331	15
7280	7335	15
7280	7339	15
7280	7343	15
7280	7355	15
7363	7365	15
7363	7368	15
7390	7392	10
7390	7391	4
7395	7397	10
7398	7400	10
7395	7396	4
7398	7399	4
7403	7405	10
7406	7408	10
7403	7404	4
7406	7407	4
7412	7414	10
7415	7417	10
7412	7413	4
7415	7416	4
7421	7423	10
7424	7426	10
7421	7422	4
7424	7425	4
7429	7431	10
7432	7434	10
7429	7430	4
7432	7433	4
7437	7439	10
7440	7442	10
7437	7438	4
7440	7441	4
5212	7448	5
5213	7448	5
5214	7448	5
5215	7448	5
5202	7448	5
2007	7472	7
2010	7472	7
7482	7486	7
7486	7491	7
7486	7503	7
7496	7503	7
2001	7514	5
2002	7514	5
2003	7514	5
2067	7514	5
2068	7514	5
2069	7514	5
2070	7514	5
2072	7514	5
2073	7514	5
2087	7514	5
2088	7514	5
2089	7514	5
2090	7514	5
2091	7514	5
2110	7514	5
2111	7514	5
2112	7514	5
2094	7521	5
2095	7521	5
2096	7521	5
2097	7521	5
2098	7521	5
2087	7521	5
2090	7521	5
2091	7521	5
2110	7521	5
2111	7521	5
2112	7521	5
2113	7521	5
2067	7521	5
2068	7521	5
2069	7521	5
2070	7521	5
2001	7521	5
2002	7521	5
2003	7521	5
2076	7521	5
2078	7521	5
2082	7521	5
5163	7527	5
5164	7527	5
5165	7527	5
5166	7527	5
5169	7527	5
5173	7527	5
5175	7527	5
5179	7527	5
5180	7527	5
2001	7527	5
2002	7527	5
2003	7527	5
2067	7539	5
2068	7539	5
2069	7539	5
2070	7539	5
2001	7539	5
2002	7539	5

statement ok rowcount 1
INSERT INTO mygroup values (2027,8223,5)

statement ok rowcount 1
DELETE FROM mygroup WHERE id = 2027 AND depend_id = 8223 AND depend_type = 5

query III
SELECT COUNT(*), id, depend_id FROM mygroup GROUP BY id, depend_id HAVING COUNT(*) > 1
----

statement ok
ROLLBACK
