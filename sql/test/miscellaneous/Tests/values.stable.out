stdout of test 'values` in directory 'sql/test/miscellaneous` itself:


# 16:16:10 >  
# 16:16:10 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33718" "--set" "mapi_usock=/var/tmp/mtest-17929/.s.monetdb.33718" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-default/BUILD/var/MonetDB/mTests_sql_test_miscellaneous" "--set" "monet_daemon=yes" "--set" "embedded_c=true"
# 16:16:10 >  

# MonetDB 5 server v11.34.0 (hg id: 46ba7db7f1bd)
# This is an unreleased version
# Serving database 'mTests_sql_test_miscellaneous', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.527 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:33718/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17929/.s.monetdb.33718
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 16:16:11 >  
# 16:16:11 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-17929" "--port=33718"
# 16:16:11 >  

#values (1);
% .%1 # table_name
% %1 # name
% tinyint # type
% 1 # length
[ 1	]
#values (NULL);
% .%1 # table_name
% %1 # name
% smallint # type
% 1 # length
[ NULL	]
#values (1,2,3);
% .%1,	.%2,	.%3 # table_name
% %1,	%2,	%3 # name
% tinyint,	tinyint,	tinyint # type
% 1,	1,	1 # length
[ 1,	2,	3	]
#values (1,2,3), (4,NULL,6), (7,8,NULL);
% .%1,	.%2,	.%3 # table_name
% %1,	%2,	%3 # name
% tinyint,	tinyint,	tinyint # type
% 1,	1,	1 # length
[ 1,	2,	3	]
[ 4,	NULL,	6	]
[ 7,	8,	NULL	]
#values (1) union values (3);
% .%11 # table_name
% %1 # name
% tinyint # type
% 1 # length
[ 1	]
[ 3	]
#values (1,1) union values (1,1);
% .%15,	.%15 # table_name
% %1,	%2 # name
% tinyint,	tinyint # type
% 1,	1 # length
[ 1,	1	]
#values (1,2,3) union all values (1,2,3);
% .%21,	.%21,	.%21 # table_name
% %1,	%2,	%3 # name
% tinyint,	tinyint,	tinyint # type
% 1,	1,	1 # length
[ 1,	2,	3	]
[ 1,	2,	3	]
#values (3), (2) intersect values (3);
% .%12 # table_name
% %1 # name
% tinyint # type
% 1 # length
[ 3	]
#values (1,2,3), (4,5,6) except select 1,2,4;
% .%21,	.%21,	.%21 # table_name
% %1,	%2,	%3 # name
% tinyint,	tinyint,	tinyint # type
% 1,	1,	1 # length
[ 1,	2,	3	]
[ 4,	5,	6	]
#values (1,2,3), (4,5,6) except select 1,2,3;
% .%21,	.%21,	.%21 # table_name
% %1,	%2,	%3 # name
% tinyint,	tinyint,	tinyint # type
% 1,	1,	1 # length
[ 4,	5,	6	]
#select 'a', 'c' union select 'b', 'c' except values ('a', 'c'), ('b', 'c');
% .%24,	.%24 # table_name
% %2,	%3 # name
% char,	char # type
% 1,	1 # length
#select 'a', 'c' union select 'b', 'c' except values ('a', 'c'), ('b', 'd');
% .%24,	.%24 # table_name
% %2,	%3 # name
% char,	char # type
% 1,	1 # length
[ "b",	"c"	]
#with t1(a,b) as (values (1,2), (3,5)) select t1.b from t1 where a > 1;
% .t1 # table_name
% b # name
% tinyint # type
% 1 # length
[ 5	]
#with t1(a,b) as (values (1,1), (2,2)),
#     t2(a,b) as (values (2,4), (3,3))
#     select * from t1 inner join t2 on t1.a = t2.a;
% .t1,	.t1,	.t2,	.t2 # table_name
% a,	b,	a,	b # name
% tinyint,	tinyint,	tinyint,	tinyint # type
% 1,	1,	1,	1 # length
[ 2,	2,	2,	4	]
#with t1 as (select 1) values (2);
% .%1 # table_name
% %1 # name
% tinyint # type
% 1 # length
[ 2	]
#create function foo() returns table (aa int, bb int) begin return table(values (1,2)); end;
#select aa, bb + 1 from foo();
% .%1,	.%6 # table_name
% aa,	%6 # name
% int,	bigint # type
% 1,	1 # length
[ 1,	3	]
#select cc from foo() as bar(cc, dd);
% .bar # table_name
% cc # name
% int # type
% 1 # length
[ 1	]
#drop function foo;
#values (date '2010-01-01'), (timestamp '2010-01-01 10:00:00');
% .%1 # table_name
% %1 # name
% timestamp # type
% 26 # length
[ 2010-01-01 00:00:00.000000	]
[ 2010-01-01 10:00:00.000000	]
#values (timestamp '2010-01-01 10:00:00'), (date '2010-01-01');
% .%1 # table_name
% %1 # name
% timestamp # type
% 26 # length
[ 2010-01-01 10:00:00.000000	]
[ 2010-01-01 00:00:00.000000	]

# 16:16:11 >  
# 16:16:11 >  "Done."
# 16:16:11 >  

