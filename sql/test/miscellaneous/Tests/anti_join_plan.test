# init
statement ok
CREATE TABLE Test (k1 int, k2 int, k3 int, v int);

statement ok
INSERT INTO Test SELECT value % 10 as k1, value % 100 as k2, value % 1000 as k3, value as v FROM generate_series(1, 100000);

statement ok
set optimizer='sequential_pipe'

# unoptimized anti join
query T python .explain.function_histogram
explain select * from test
where (k1, k2) not in (
    select k1, k2
    from test
    where k1 = 1
);
----
algebra.difference
1
algebra.join -- this join unnecessarily generates a huge relation (in this example, 100k rows joined with 10k generates a relation with 100M rows)
1
algebra.projection
7
algebra.projectionpath
3
algebra.select
1
algebra.thetaselect
1
bat.mirror
1
bat.pack
5
batcalc.ifthenelse
1
querylog.define
1
sql.bind
6
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

# optimized anti join
query T python .explain.function_histogram
explain select * from test
where k2 not in (
    select k2
    from test
    where k1 = 1
);
----
algebra.difference
1
algebra.projection
3
algebra.projectionpath
3
algebra.thetaselect
1
bat.pack
5
querylog.define
1
sql.bind
6
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

statement ok
set optimizer='default_pipe'
