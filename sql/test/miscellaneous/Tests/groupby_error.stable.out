stdout of test 'groupby_error` in directory 'sql/test/miscellaneous` itself:


# 10:56:46 >  
# 10:56:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=36667" "--set" "mapi_usock=/var/tmp/mtest-13678/.s.monetdb.36667" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-Apr2019/BUILD/var/MonetDB/mTests_sql_test_miscellaneous" "--set" "embedded_c=true"
# 10:56:46 >  

# MonetDB 5 server v11.33.12 (hg id: e994c3289040)
# This is an unreleased version
# Serving database 'mTests_sql_test_miscellaneous', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.527 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:36667/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-13678/.s.monetdb.36667
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_views.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_lidar.sql
# loading sql script: 75_shp.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded

# 14:05:14 >  
# 14:05:14 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-22422" "--port=33014"
# 14:05:14 >  

#CREATE SCHEMA "kagami_dump";
#CREATE TABLE "kagami_dump"."test_task" ("sys_id" CHAR(32) DEFAULT '', "number" VARCHAR(40), "parent" VARCHAR(32));
#INSERT INTO "kagami_dump".test_task(sys_id, number, parent) VALUES ('aaa', 'T0001', null),('bbb','T0002','aaa');
[ 2	]
#DROP SCHEMA "kagami_dump" CASCADE;
#START TRANSACTION;
#CREATE TABLE tab0(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab0 VALUES(97,1,99), (15,81,47), (87,21,10);
[ 3	]
#CREATE TABLE tab1(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab1 VALUES (51,14,96), (85,5,59), (91,47,68);
[ 3	]
#SELECT CAST(+ col1 * - col1 AS BIGINT) AS col2 FROM tab0 GROUP BY col2, col0, col1 HAVING + - col0 / - AVG ( ALL + col2 ) - - - AVG ( DISTINCT + col0 ) + col0 IS NULL;
% sys. # table_name
% col2 # name
% bigint # type
% 1 # length
#SELECT DISTINCT + 40 / + + col0 AS col2 FROM tab0 GROUP BY col0, col0, col2 HAVING NOT ( NOT + - 80 BETWEEN NULL AND + - 73 ) OR NOT ( + col0 >= - COUNT ( * ) + - COUNT ( DISTINCT - col0 ) );
% . # table_name
% col2 # name
% int # type
% 1 # length
#SELECT ALL * FROM tab0 AS cor0 WHERE col2 NOT IN ( 22, 18, CAST ( NULL AS INTEGER ) + - 77 );
% sys.cor0,	sys.cor0,	sys.cor0 # table_name
% col0,	col1,	col2 # name
% int,	int,	int # type
% 1,	1,	1 # length
#SELECT * FROM tab0 AS cor0 WHERE NOT - 39 <> 11; --empty
% sys.cor0,	sys.cor0,	sys.cor0 # table_name
% col0,	col1,	col2 # name
% int,	int,	int # type
% 1,	1,	1 # length
#SELECT DISTINCT * FROM tab0 WHERE NOT - - 12 <> + + 96; --empty
% sys.tab0,	sys.tab0,	sys.tab0 # table_name
% col0,	col1,	col2 # name
% int,	int,	int # type
% 1,	1,	1 # length
#SELECT * FROM tab0 AS cor0 WHERE - 52 = + 32; --empty
% sys.cor0,	sys.cor0,	sys.cor0 # table_name
% col0,	col1,	col2 # name
% int,	int,	int # type
% 1,	1,	1 # length
#SELECT ALL * FROM tab0 WHERE 68 = - + 83; --empty
% sys.tab0,	sys.tab0,	sys.tab0 # table_name
% col0,	col1,	col2 # name
% int,	int,	int # type
% 1,	1,	1 # length
#SELECT 11 FROM tab1 AS cor0 LEFT JOIN tab0 ON 80 = 70;
% . # table_name
% single_value # name
% tinyint # type
% 2 # length
[ 11	]
[ 11	]
[ 11	]
#SELECT col0 FROM tab0 ORDER BY tab0.col0;
% sys.tab0 # table_name
% col0 # name
% int # type
% 2 # length
[ 15	]
[ 87	]
[ 97	]
#prepare select col0 from tab0 where (?) in (select col0 from tab0);
#prepare select col0 from tab0 where (?) in (select col0 from tab0);
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 3,	3,	1,	0,	4,	4 # length
[ "int",	32,	0,	"",	"tab0",	"col0"	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
#prepare select col0 from tab0 where (?,?) in (select col0,col1 from tab0);
#prepare select col0 from tab0 where (?,?) in (select col0,col1 from tab0);
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 3,	3,	1,	0,	4,	4 # length
[ "int",	32,	0,	"",	"tab0",	"col0"	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
#prepare select col0 from tab0 where (col1,col1) in (select col0,? from tab0);
#prepare select col0 from tab0 where (col1,col1) in (select col0,? from tab0);
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 3,	3,	1,	0,	4,	4 # length
[ "int",	32,	0,	"",	"tab0",	"col0"	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
#prepare select col0 from tab0 where (col1,col1) in (select ?,? from tab0);
#prepare select col0 from tab0 where (col1,col1) in (select ?,? from tab0);
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 3,	3,	1,	0,	4,	4 # length
[ "int",	32,	0,	"",	"tab0",	"col0"	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
#prepare select col0 from tab0 where (col0) in (?);
#prepare select col0 from tab0 where (col0) in (?);
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 3,	3,	1,	0,	4,	4 # length
[ "int",	32,	0,	"",	"tab0",	"col0"	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
#prepare select col0 from tab0 where (col0) in (?,?);
#prepare select col0 from tab0 where (col0) in (?,?);
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 3,	3,	1,	0,	4,	4 # length
[ "int",	32,	0,	"",	"tab0",	"col0"	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
#prepare select ? < ANY (select max(col0) from tab0) from tab0 t1;
#prepare select ? < ANY (select max(col0) from tab0) from tab0 t1;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	2,	1,	0,	2,	2 # length
[ "boolean",	1,	0,	"",	"%5",	"%5"	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
#prepare select col0 = ALL (select ? from tab0) from tab0 t1;
#prepare select col0 = ALL (select ? from tab0) from tab0 t1;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	2,	1,	0,	2,	2 # length
[ "boolean",	1,	0,	"",	"%5",	"%5"	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
#prepare select 1 from tab0 where 1 between ? and ?;
#prepare select 1 from tab0 where 1 between ? and ?;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	0,	0 # length
[ "tinyint",	1,	0,	"",	"",	""	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
#prepare select 1 from tab0 where ? between 1 and ?;
#prepare select 1 from tab0 where ? between 1 and ?;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	0,	0 # length
[ "tinyint",	1,	0,	"",	"",	""	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
#prepare select 1 from tab0 where ? between ? and 1;
#prepare select 1 from tab0 where ? between ? and 1;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	0,	0 # length
[ "tinyint",	1,	0,	"",	"",	""	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
#prepare select EXISTS (SELECT ? FROM tab0) from tab0;
#prepare select EXISTS (SELECT ? FROM tab0) from tab0;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	2,	2 # length
[ "boolean",	1,	0,	"",	"%2",	"%2"	]
[ "boolean",	1,	0,	NULL,	NULL,	NULL	]
#prepare select EXISTS (SELECT ?,? FROM tab0) from tab0;
#prepare select EXISTS (SELECT ?,? FROM tab0) from tab0;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	2,	2 # length
[ "boolean",	1,	0,	"",	"%3",	"%3"	]
[ "boolean",	1,	0,	NULL,	NULL,	NULL	]
[ "boolean",	1,	0,	NULL,	NULL,	NULL	]
#prepare select case when col0 = 0 then ? else 1 end from tab0;
#prepare select case when col0 = 0 then ? else 1 end from tab0;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	2,	2 # length
[ "tinyint",	1,	0,	"",	"%1",	"%1"	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
#prepare select case when col0 = 0 then 1 else ? end from tab0;
#prepare select case when col0 = 0 then 1 else ? end from tab0;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	2,	2 # length
[ "tinyint",	1,	0,	"",	"%1",	"%1"	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
#prepare select case when col0 = 0 then ? when col0 = 1 then ? else 1 end from tab0;
#prepare select case when col0 = 0 then ? when col0 = 1 then ? else 1 end from tab0;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	2,	2 # length
[ "tinyint",	1,	0,	"",	"%1",	"%1"	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
[ "tinyint",	1,	0,	NULL,	NULL,	NULL	]
#drop table tab1;
#CREATE TABLE tab1(col0 INTEGER, col1 STRING);
#prepare select 1 from tab1 where (col0,col1) in (select ?,? from tab1);
#prepare select 1 from tab1 where (col0,col1) in (select ?,? from tab1);
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	2,	1,	0,	0,	0 # length
[ "tinyint",	1,	0,	"",	"",	""	]
[ "int",	32,	0,	NULL,	NULL,	NULL	]
[ "clob",	0,	0,	NULL,	NULL,	NULL	]
#drop table tab0;
#drop table tab1;

# 10:56:47 >  
# 10:56:47 >  "Done."
# 10:56:47 >  

