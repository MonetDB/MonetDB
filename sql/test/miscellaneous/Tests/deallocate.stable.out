stdout of test 'deallocate` in directory 'sql/test/miscellaneous` itself:


# 13:56:29 >  
# 13:56:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35105" "--set" "mapi_usock=/var/tmp/mtest-170269/.s.monetdb.35105" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-default/BUILD/var/MonetDB/mTests_sql_test_miscellaneous" "--set" "embedded_c=true"
# 13:56:29 >  

# MonetDB 5 server v11.36.0 (hg id: 680b94cb09ab)
# This is an unreleased version
# Serving database 'mTests_sql_test_miscellaneous', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.504 GiB available main-memory of which we use 12.635 GiB
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:35105/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-170269/.s.monetdb.35105
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_views.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 58_hot_snapshot.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 61_wlcr.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded

# 13:56:29 >  
# 13:56:29 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-170269" "--port=35105"
# 13:56:29 >  

#prepare select "system" or ? from _tables WHERE false;
#prepare select "system" or ? from _tables WHERE false;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	2,	2 # length
[ "boolean",	1,	0,	"",	"%1",	"%1"	]
[ "boolean",	1,	0,	NULL,	NULL,	NULL	]
#select "statement" from prepared_statements; --only 1
% .prepared_statements # table_name
% statement # name
% clob # type
% 58 # length
[ "prepare select \"system\" or ? from sys._tables where false;"	]
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from sys.prepared_statements_args; --only 1
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	clob,	int,	int,	clob,	clob,	clob # type
% 1,	1,	7,	1,	1,	0,	2,	2 # length
[ 0,	0,	"boolean",	1,	0,	NULL,	"%1",	"%1"	]
[ 1,	1,	"boolean",	1,	0,	NULL,	NULL,	NULL	]
#select "prep"."statement", "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" 
#from prepared_statements prep
#inner join prepared_statements_args psa on prep."statementid" = psa."statementid"; --two rows
% .prep,	.psa,	.psa,	.psa,	.psa,	.psa,	.psa,	.psa,	.psa # table_name
% statement,	inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% clob,	tinyint,	int,	clob,	int,	int,	clob,	clob,	clob # type
% 58,	1,	1,	7,	1,	1,	0,	2,	2 # length
[ "prepare select \"system\" or ? from sys._tables where false;",	0,	0,	"boolean",	1,	0,	NULL,	"%1",	"%1"	]
[ "prepare select \"system\" or ? from sys._tables where false;",	1,	1,	"boolean",	1,	0,	NULL,	NULL,	NULL	]
#EXEC  3(false);
% sys.%1 # table_name
% %1 # name
% boolean # type
% 5 # length
#select "statement" from prepared_statements; --only 1
% .prepared_statements # table_name
% statement # name
% clob # type
% 58 # length
[ "prepare select \"system\" or ? from sys._tables where false;"	]
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from sys.prepared_statements_args; --only 1
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	clob,	int,	int,	clob,	clob,	clob # type
% 1,	1,	7,	1,	1,	0,	2,	2 # length
[ 0,	0,	"boolean",	1,	0,	NULL,	"%1",	"%1"	]
[ 1,	1,	"boolean",	1,	0,	NULL,	NULL,	NULL	]
#deallocate  3;
#select "statement" from prepared_statements; --empty
% .prepared_statements # table_name
% statement # name
% clob # type
% 0 # length
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from prepared_statements_args; --empty
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	clob,	int,	int,	clob,	clob,	clob # type
% 1,	1,	0,	1,	1,	0,	0,	0 # length
#prepare select "system" or ? from _tables WHERE false;
#prepare select "system" or ? from _tables WHERE false;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	str,	str,	str # type
% 7,	1,	1,	0,	2,	2 # length
[ "boolean",	1,	0,	"",	"%1",	"%1"	]
[ "boolean",	1,	0,	NULL,	NULL,	NULL	]
#execute 15(false);
% sys.%1 # table_name
% %1 # name
% boolean # type
% 5 # length
#DEALLOCATE prepare all;
#select "statement" from prepared_statements; --empty
% .prepared_statements # table_name
% statement # name
% clob # type
% 0 # length
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from prepared_statements_args; --empty
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	clob,	int,	int,	clob,	clob,	clob # type
% 1,	1,	0,	1,	1,	0,	0,	0 # length
#DEALLOCATE ALL;
#select "statement" from prepared_statements; --empty
% .prepared_statements # table_name
% statement # name
% clob # type
% 0 # length
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from prepared_statements_args; --empty
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	clob,	int,	int,	clob,	clob,	clob # type
% 1,	1,	0,	1,	1,	0,	0,	0 # length

# 13:56:29 >  
# 13:56:29 >  "Done."
# 13:56:29 >  

