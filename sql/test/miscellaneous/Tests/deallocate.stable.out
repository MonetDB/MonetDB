#deallocate all; --deallocate all the prepared statements from the current directory run (but does the client reconnect after each test?)
#prepare select "system" or ? from sys._tables WHERE false;
#prepare select "system" or ? from sys._tables WHERE false;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	varchar,	varchar,	varchar # type
% 7,	1,	1,	0,	2,	2 # length
[ "boolean",	1,	0,	"",	"%1",	"%1"	]
[ "boolean",	1,	0,	NULL,	NULL,	NULL	]
#select "statement" from prepared_statements; --only 1
% .prepared_statements # table_name
% statement # name
% varchar # type
% 58 # length
[ "prepare select \"system\" or ? from sys._tables where false;"	]
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from prepared_statements_args; --only 1
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	varchar,	int,	int,	varchar,	varchar,	varchar # type
% 1,	1,	7,	1,	1,	0,	2,	2 # length
[ 0,	0,	"boolean",	1,	0,	NULL,	"%1",	"%1"	]
[ 1,	1,	"boolean",	1,	0,	NULL,	NULL,	NULL	]
#select "prep"."statement", "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" 
#from prepared_statements prep
#inner join prepared_statements_args psa on prep."statementid" = psa."statementid"; --two rows
% .prep,	.psa,	.psa,	.psa,	.psa,	.psa,	.psa,	.psa,	.psa # table_name
% statement,	inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% varchar,	tinyint,	int,	varchar,	int,	int,	varchar,	varchar,	varchar # type
% 58,	1,	1,	7,	1,	1,	0,	2,	2 # length
[ "prepare select \"system\" or ? from sys._tables where false;",	0,	0,	"boolean",	1,	0,	NULL,	"%1",	"%1"	]
[ "prepare select \"system\" or ? from sys._tables where false;",	1,	1,	"boolean",	1,	0,	NULL,	NULL,	NULL	]
#EXEC  0(false);
% sys.%1 # table_name
% %1 # name
% boolean # type
% 5 # length
#select "statement" from prepared_statements; --only 1
% .prepared_statements # table_name
% statement # name
% varchar # type
% 58 # length
[ "prepare select \"system\" or ? from sys._tables where false;"	]
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from prepared_statements_args; --only 1
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	varchar,	int,	int,	varchar,	varchar,	varchar # type
% 1,	1,	7,	1,	1,	0,	2,	2 # length
[ 0,	0,	"boolean",	1,	0,	NULL,	"%1",	"%1"	]
[ 1,	1,	"boolean",	1,	0,	NULL,	NULL,	NULL	]
#deallocate  0;
#select "statement" from prepared_statements; --empty
% .prepared_statements # table_name
% statement # name
% varchar # type
% 0 # length
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from prepared_statements_args; --empty
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	varchar,	int,	int,	varchar,	varchar,	varchar # type
% 1,	1,	0,	1,	1,	0,	0,	0 # length
#prepare select "system" or ? from sys._tables WHERE false;
#prepare select "system" or ? from sys._tables WHERE false;
% .prepare,	.prepare,	.prepare,	.prepare,	.prepare,	.prepare # table_name
% type,	digits,	scale,	schema,	table,	column # name
% varchar,	int,	int,	varchar,	varchar,	varchar # type
% 7,	1,	1,	0,	2,	2 # length
[ "boolean",	1,	0,	"",	"%1",	"%1"	]
[ "boolean",	1,	0,	NULL,	NULL,	NULL	]
#execute  1(false);
% sys.%1 # table_name
% %1 # name
% boolean # type
% 5 # length
#DEALLOCATE prepare all;
#select "statement" from prepared_statements; --empty
% .prepared_statements # table_name
% statement # name
% varchar # type
% 0 # length
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from prepared_statements_args; --empty
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	varchar,	int,	int,	varchar,	varchar,	varchar # type
% 1,	1,	0,	1,	1,	0,	0,	0 # length
#DEALLOCATE ALL;
#select "statement" from prepared_statements; --empty
% .prepared_statements # table_name
% statement # name
% varchar # type
% 0 # length
#select "inout", "number", "type", "type_digits", "type_scale", "schema", "table", "column" from prepared_statements_args; --empty
% .prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args,	.prepared_statements_args # table_name
% inout,	number,	type,	type_digits,	type_scale,	schema,	table,	column # name
% tinyint,	int,	varchar,	int,	int,	varchar,	varchar,	varchar # type
% 1,	1,	0,	1,	1,	0,	0,	0 # length
