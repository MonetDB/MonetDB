statement ok
create type pair AS (key varchar, value varchar)

statement ok
create table foo(p pair)

statement ok
insert into foo values (('left', 'right')), (('left', 'right'))

query TT nosort
select p.key, p.value from foo
----
left
right
left
right

query I nosort
select count(*) from foo
----
2

statement ok
create table bar(p pair[])

statement ok
insert into bar values (array[('left', 'right'), ('left', 'right')])

query TT nosort
select p.key, p.value from bar, unnest(p)
----
left
right
left
right

query I nosort
select count(*) from bar, unnest(p)
----
2

statement ok
create table tpv( i integer, p pair)

statement ok
insert into tpv values (1, ('left','right')), (2, ('left','right')), (3, ('l1', 'r1'))

query ITT nosort
select i, p.key, p.value from tpv
----
1
left
right
2
left
right
3
l1
r1

statement ok
create table tpsv( i integer, p pair[2])

statement ok
insert into tpsv values (1, array [ ('left','right'), ('l2','r2') ]), (2, array [ ('left','right'), ('l2','r2') ]), (3, array [ ('l3', 'r3') ])

query ITT nosort
select i, p.key, p.value from tpsv cross join unnest(p)
----
1
left
right
1
l2
r2
2
left
right
2
l2
r2
3
l3
r3

query ITT nosort
select i, up.key, up.value from tpsv cross join unnest(p) up where i = 1
----
1
left
right
1
l2
r2

query ITT nosort
select i, up.key, up.value from tpsv cross join unnest(p) up where up.key = 'left'
----
1
left
right
2
left
right

query II nosort
select i, count(*) from tpsv cross join unnest(p) up group by i
----
1
2
2
2
3
1

statement ok
insert into tpsv select i, p from tpsv

#select cast(json '[ { "key": "left", "value": "right" }]' as pair[])
query TT nosort
select b.key, b.value from (select cast(json '[ { "key": "left", "value": "right" }]' as pair[]) as a) cross join unnest (a) b
----
left
right

#select cast(json '[ { "key": "left", "value": "right" }, { "key": "l1", "value": "r1" }]' as pair[])
query TT nosort
select b.key, b.value from (select cast(json '[ { "key": "left", "value": "right" }, { "key": "l1", "value": "r1" }]' as pair[]) as a) cross join unnest (a) b
----
left
right
l1
r1

statement ok
insert into tpsv select 1, cast(json '[ { "key": "left", "value": "right" }, { "key": "l1", "value": "r1" }]' as pair[])

statement ok
create type npair as (ppair pair[], i integer)

statement ok
create table np (id integer, np npair[])

#statement ok
#insert into np values (1, array [ (array [ ('left','right'), ('l2','r2') ], 11), (array [], 12) ]), (2, array [ ( array [ ('l3', 'r3') ], 22) ])

statement ok
create type ipair AS (pleft varchar, pright integer)

query TI nosort
select b.pleft, b.pright from (select  cast(json '[ { "pleft": "left", "pright": 1 }]' as ipair[]) as a) cross join unnest (a) b
----
left
1

query TI nosort
select b.pleft, b.pright from (select cast(json '[ { "pleft": "left", "pright": 1 }, { "pleft": "l1", "pright": "2" }]' as ipair[]) as a) cross join unnest (a) b
----
left
1
l1
2
