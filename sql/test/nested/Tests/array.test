## fixed-length type array

query T nosort array_literal_single
select array[10, 11]
----
{10,11}

query T nosort array_literal_single
select (values (array[10, 11]))
----
{10,11}

query T nosort array_literal_single
select * from (values (array[10, 11]))
----
{10,11}

query T nosort
select * from (values (array[10, 11]), (array[20, 21]))
----
{10,11}
{20,21}

query I nosort unnest_elements
select elements from (select array[10, 11] a), unnest(a)
----
10
11

query I nosort unnest_elements
select u.elements from (select array[10, 11] a) sq, unnest(sq.a) u
----
10
11

query III nosort 
select u.* from (select array[10, 11] a) sq, unnest(sq.a) u
----
10
11

query TIII nosort unnest_all
select * from (select array[10, 11] a) sq, unnest(sq.a) u
----
{10,11}
10
{10,11}
11

query TIII nosort unnest_all
select sq.*, u.* from (select array[10, 11] a) sq, unnest(sq.a) u
----
{10,11}
10
{10,11}
11

query T nosort
select sq.* from (select array[10, 11] a) sq, unnest(sq.a) u
----
{10,11}
{10,11}

statement ok
create table flt_arr (n int[])

query I nosort
select * from flt_arr
----

statement ok
insert into flt_arr values ('{10, 11}')

query T nosort
select * from flt_arr
----
{10,11}

query TI nosort table_unnest_all
select * from flt_arr, unnest(flt_arr.n)
----
{10,11}
10
{10,11}
11

query I nosort
select elements from flt_arr, unnest(flt_arr.n)
----
10
11

query I nosort
select u.* from flt_arr, unnest(flt_arr.n) u
----
10
11

query I nosort
select u.elements from flt_arr, unnest(flt_arr.n) u
----
10
11

query IT nosort
select u.*, fa.* from flt_arr fa, unnest(fa.n) u
----
10
{10,11}
11
{10,11}

query TIII nosort unnest_all
select fa.*, u.* from flt_arr fa, unnest(fa.n) u
----
{10,11}
10
{10,11}
11

query T nosort
select fa.* from flt_arr fa, unnest(fa.n) u
----
{10,11}
{10,11}

query TI nosort unnest_all
select * from flt_arr fa, unnest(fa.n) u
----
{10,11}
10
{10,11}
11

query TI nosort unnest_all
select * from flt_arr, unnest(flt_arr.n)
----
{10,11}
10
{10,11}
11

statement ok
insert into flt_arr values (array[20, 21])

query T nosort
select * from flt_arr
----
{10,11}
{20,21}

statement ok
insert into flt_arr values ('{30, 31}'), ('{40}'), ('{50, 51, 52}')

query T nosort
select * from flt_arr
----
{10,11}
{20,21}
{30,31}
{40}
{50,51,52}

statement ok
insert into flt_arr values (array[60]), (array[70, 71])

query T nosort
select * from flt_arr
----
{10,11}
{20,21}
{30,31}
{40}
{50,51,52}
{60}
{70,71}

## ambiguous col elements (table vs unnest())

statement ok
create table amb (elements int[])

statement ok
insert into amb values (array[10, 11]), (array[20, 21])

statement error SELECT: identifier 'elements' ambiguous
select elements from amb, unnest(elements)

query T nosort 
select elements from amb, unnest(elements) u
----
{10,11}
{20,21}

## variable-length type array

statement ok
create table vlt_arr (s text[])

query I nosort
select * from vlt_arr
----

statement ok
insert into vlt_arr values ('{"left", "right"}')

query T nosort
select * from vlt_arr
----
{"left","right"}

statement ok
insert into vlt_arr values ('{"l2", "r2"}')

query T nosort
select * from vlt_arr
----
{"left","right"}
{"l2","r2"}

statement ok
insert into vlt_arr values ('{"single"}'), ('{"a", "b", "c"}'), ('{"one", "two"}');

query T nosort
select * from vlt_arr
----
{"left","right"}
{"l2","r2"}
{"single"}
{"a","b","c"}
{"one","two"}

## unnest with select

statement ok
create type kv as (k text, v text)

statement ok
create table data (n int, kva kv[])

statement ok
insert into data values (1, array[('one', 'alice'), ('two', 'bob')]), (2, array[('one', 'jane'), ('two', 'john')])

query IT nosort select_key_one
select n, kv_pair.v from data, unnest(kva) kv_pair where kv_pair.k = 'one';
----
1
alice
2
jane

query IT nosort select_key_one
select n, kv_pair.v from data cross join unnest(kva) kv_pair where kv_pair.k = 'one';
----
1
alice
2
jane

