statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" BOOLEAN,"c1" DOUBLE PRECISION NOT NULL)

statement ok
COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
false	0.2059926383949241
NULL	1.89755202e+09
NULL	0.8514002985569765
NULL	0.8565135463082767

query T rowsort
SELECT ALL t0.c0 FROM t0 WHERE (((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0))
----
NULL
NULL
NULL

query T rowsort
SELECT t0.c0 FROM t0 WHERE 1 BETWEEN SYMMETRIC t0.c1 AND 0
----
NULL

query T rowsort
SELECT t0.c0 FROM t0 WHERE 1 BETWEEN t0.c1 AND 0
----

query T rowsort
SELECT ALL t0.c0 FROM t0 WHERE (((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0)) UNION ALL
SELECT ALL t0.c0 FROM t0 WHERE NOT ((((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0))) UNION ALL
SELECT t0.c0 FROM t0 WHERE ((((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0))) IS NULL
----
False
NULL
NULL
NULL

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE integers(i INTEGER)

statement ok
INSERT INTO integers VALUES (1), (2), (3), (NULL)

query T rowsort
select i between symmetric cast(1 as decimal) and cast(2 as double) from integers
----
False
NULL
True
True

statement ok
ROLLBACK

statement error
SELECT CAST(1 AS INTERVAL SECOND) + CAST(3 AS BIGINT)

statement error
SELECT CAST(1 AS INTERVAL MONTH) + CAST(3 AS BIGINT)

statement error
SELECT CAST(1 AS INTERVAL MONTH) + CAST(3 AS BIGINT)

statement ok
START TRANSACTION

statement ok
CREATE TABLE t0("c0" DOUBLE NOT NULL)

statement ok
COPY 11 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
0
0.9440456550171384
0.3985168253176739
0.9033732171086648
0.969477015070214
-4798112
0.6321209051017095
0.7740272412444077
0.7778437505533593
0.34293653568934335
0.1228907839970418

statement error
SELECT AVG(ALL ((((CAST(((+ (-12))/(sql_min(-12, -67))) AS INT))+(abs(((13)*(10))))))*(((((greatest(12, -11))/(((((34-15)))/(CAST(t0.c0 AS INT))))))*(- (+ (((-29)*(6))))))))), 0.777 FROM t0 WHERE (0.06) NOT  BETWEEN ASYMMETRIC (t0.c0) AND (t0.c0)
GROUP BY 0.1, 0.7, 0.2, + (+ (- (length(r'q')))), greatest(upper(upper(r'623865997')), trim(replace(r'vAd(Lup}Z', r'-1774953973', r'0.4235712099498189'), substr(r'', -19)))

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" DECIMAL(18,3) NOT NULL)

statement ok
COPY 41 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
0.388
0.371
0.939
0.790
0.493
0.148
0.841
0.034
0.189
0.087
0.048
0.227
0.759
0.446
0.622
0.579
0.453
0.819
0.768
0.027
0.839
0.506
0.560
0.362
0.453
0.728
0.078
0.364
0.559
0.829
0.061
0.854
0.920
0.440
0.627
0.838
0.113
0.501
0.283
0.722
0.819

query R rowsort
select t0.c0 from t0 where ((((cast(0.8800821070828266368124559448915533721446990966796875 as string))like(cast(greatest(r'0.29269552476776495', r'Aṵ\tmmz\\v/p*Q2Q5') as string(667)))))and((0.7706295839241474876502024926594458520412445068359375)
between asymmetric (t0.c0) and (t0.c0))) union all
select all t0.c0 from t0 where not (((((cast(0.8800821070828266368124559448915533721446990966796875 as string))like(cast(greatest(r'0.29269552476776495', r'Aṵ\tmmz\\v/p*Q2Q5') as string(667)))))and((0.7706295839241474876502024926594458520412445068359375)
between asymmetric (t0.c0) and (t0.c0)))) union all
select all t0.c0 from t0 where (((((cast(0.8800821070828266368124559448915533721446990966796875 as string))like(cast(greatest(r'0.29269552476776495', r'Aṵ\tmmz\\v/p*Q2Q5') as string(667)))))and((0.7706295839241474876502024926594458520412445068359375)
between asymmetric (t0.c0) and (t0.c0)))) is null
----
0.027
0.034
0.048
0.061
0.078
0.087
0.113
0.148
0.189
0.227
0.283
0.362
0.364
0.371
0.388
0.440
0.446
0.453
0.453
0.493
0.501
0.506
0.559
0.560
0.579
0.622
0.627
0.722
0.728
0.759
0.768
0.790
0.819
0.819
0.829
0.838
0.839
0.841
0.854
0.920
0.939

query RRI rowsort
SELECT ALL CAST((- (- (VAR_POP(ALL ((CAST(CAST(abs(709845242) AS INT) AS INT))%(abs(CAST((931144491) NOT IN (-587881807) AS INT))))))))^(- (+ (- (char_length(r'>])'))))) as decimal(10,3)), CAST(0.5186927954967 as decimal(14,13)), CAST("locate"(lower(r'[]'), rtrim(r'..ۄUH*6鉡q'), ((((-233289450)&(-476676450)))-(- (236876413)))) AS INT)
FROM t0 WHERE FALSE GROUP BY 1.2807753E7 HAVING MAX(ALL ((t0.c0)>=(NULL)))
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" (
	"c0" CHAR(451),
	"c1" DOUBLE        NOT NULL DEFAULT 0.49024308,
	"c2" CHARACTER LARGE OBJECT,
	CONSTRAINT "t0_c1_pkey" PRIMARY KEY ("c1"),
	CONSTRAINT "t0_c1_unique" UNIQUE ("c1")
)

statement ok
COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
NULL	0.36945874012955704	NULL
"u"	20	"Q\\"
"EjgaDfV\t6m)Qvw0'%cW#\015*]h "	0.944146436872532	""
"M"	0.7309075439656509	NULL

statement ok
UPDATE t0 SET c2 = r'' WHERE (((length(r'-14'))>>(((patindex(t0.c0, t0.c2))+(CAST(2 AS INT)))))) NOT IN (0.2, t0.c1, t0.c1, ((CAST(((-1)*(2)) AS INT))/(2)))

statement ok
ROLLBACK

statement error
SELECT 1 WHERE scale_up(CAST(0.89767724 AS REAL), 1)

query R rowsort
SELECT scale_up(0.2928163, 3)
----
8784489.000

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" BOOLEAN NOT NULL)

statement ok
COPY 15 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
true
false
true
false
true
false
true
true
false
true
false
false
true
false
true

query I rowsort
SELECT count(*) FROM t0 FULL OUTER JOIN (SELECT 1 FROM t0) AS sub0 ON t0.c0
----
127

query I rowsort
SELECT count(*) FROM t0 FULL OUTER JOIN (SELECT 1 FROM t0) AS sub0 ON t0.c0 WHERE t0.c0
----
120

query I rowsort
SELECT CAST(sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND))))) as BIGINT) FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0
----
-1136

query I rowsort
SELECT CAST(SUM(agg0) as BIGINT) FROM (
SELECT sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND))))) as agg0 FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0 WHERE t0.c0
UNION ALL
SELECT sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND)))))  as agg0 FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0 WHERE NOT (t0.c0)
UNION ALL
SELECT sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND)))))  as agg0 FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0 WHERE (t0.c0) IS NULL
) as asdf
----
-1136

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" BOOLEAN NOT NULL,CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"))

statement ok
COPY 2 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
true
false

query T rowsort
SELECT sum(CASE 0.84864913922764240172824656838201917707920074462890625 WHEN 0.26932793764126483626597519105416722595691680908203125 THEN INTERVAL '6' MONTH
WHEN 0.82674200362462446634026491665281355381011962890625 THEN INTERVAL '1' MONTH WHEN 0.16258430860651318372589457794674672186374664306640625 THEN INTERVAL '5' MONTH
WHEN 0.94891882487575707205706976310466416180133819580078125 THEN INTERVAL '8' MONTH WHEN 0.74703252230588967908175845877849496901035308837890625 THEN INTERVAL '1' MONTH END) FROM t0
----
NULL

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" (
	"c0" TIMESTAMP,
	"c2" DATE          NOT NULL DEFAULT DATE '1970-01-02',
	CONSTRAINT "t0_c2_pkey" PRIMARY KEY ("c2"),
	CONSTRAINT "t0_c0_unique" UNIQUE ("c0")
)

statement ok
COMMENT ON TABLE "sys"."t0" IS 'r'

statement ok
INSERT INTO "sys"."t0" VALUES (NULL, DATE '1970-01-02')

query T rowsort
SELECT ALL t0.c2 FROM t0 WHERE (t0.c2) NOT BETWEEN ASYMMETRIC (t0.c2) AND (sql_min(CAST(t0.c0 AS DATE), t0.c2))
UNION ALL
SELECT t0.c2 FROM t0 WHERE NOT ((t0.c2) NOT BETWEEN ASYMMETRIC (t0.c2) AND (sql_min(CAST(t0.c0 AS DATE), t0.c2)))
UNION ALL
SELECT t0.c2 FROM t0 WHERE ((t0.c2) NOT BETWEEN ASYMMETRIC (t0.c2) AND (sql_min(CAST(t0.c0 AS DATE), t0.c2))) IS NULL
----
1970-01-02

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" (
	"c0" TIMESTAMP,
	"c2" DATE          NOT NULL DEFAULT DATE '1970-01-02',
	CONSTRAINT "t0_c2_pkey" PRIMARY KEY ("c2"),
	CONSTRAINT "t0_c0_unique" UNIQUE ("c0")
)

statement ok
COPY 5 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
NULL	1970-01-02
NULL	1970-01-11
NULL	1970-01-23
"1970-01-22 20:43:07.000000"	1970-01-16
"1970-01-08 05:11:41.000000"	1970-01-14

statement ok
create view v0(c0) as (select t0.c2 from t0 where (t0.c2) not between asymmetric (date '1970-01-23') and (case when r'true' then t0.c2 when case true when (true) = true then substr(r' x+㶴9rr7긬X0陷?F5{W>gg0N*#Sꖿs', 1) end then nullif(t0.c2, t0.c2) end))

query I rowsort
SELECT 1 FROM v0 JOIN t0 ON '4321901' LIKE CAST(COALESCE(TIME '21:08:38', TIME '14:42:56') AS STRING)
----

query TT rowsort
SELECT ALL t0.c0, v0.c0 FROM v0 JOIN t0 ON ((upper(COALESCE(r'', r'4321901')))ILIKE(CAST(COALESCE(sql_max(TIME '05:11:41', TIME '21:08:38'), COALESCE(TIME '05:10:13', TIME '14:42:56'), sql_min(TIME '16:14:39', TIME '03:01:13')) AS STRING(586))))
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" INTEGER)

statement ok
COPY 10 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
-733291712
383672170
1913274279
-709161370
-1166455306
-53279625
1985993362
-1
386205865
-780047338

statement ok
create view v0(c0, c1, c2, c3) as (
select distinct cast(case time '03:52:21' when time '05:04:36' then r'0.2' end as date),
coalesce (t0.c0, length(coalesce (r't%QB', replace(r' ,yO_5G刵i稶bDßᶏ''', r'0.8', r'-1e500')))), 1, timestamp '1970-01-16 13:47:20' from t0) with check option

query I rowsort
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON COALESCE(v0.c1, v0.c2) BETWEEN v0.c2 AND t0.c0
----
16

query T rowsort
SELECT ALL max(ALL v0.c3) FROM v0 LEFT OUTER JOIN t0 ON (- (((v0.c2)-(COALESCE(v0.c2, v0.c1))))) NOT  BETWEEN SYMMETRIC (v0.c2) AND (t0.c0)
----
1970-01-16 13:47:20

statement ok
ROLLBACK

query T rowsort
SELECT CASE 1 WHEN 1 THEN 'rr' WHEN ln(-2) THEN 'a' END FROM (values (1),(2)) as t0(c0)
----
rr
rr

query T rowsort
SELECT CASE 1 WHEN 3 THEN 'rr' WHEN ln(c0) THEN 'a' END FROM (values (1.2),(2.3)) as t0(c0)
----
NULL
NULL

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("tc0" TIMESTAMP NOT NULL,CONSTRAINT "t0_tc0_pkey" PRIMARY KEY ("tc0"),CONSTRAINT "t0_tc0_unique" UNIQUE ("tc0"))

statement ok
COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
"1970-01-07 15:47:59.000000"
"1970-01-01 01:00:00.000000"
"1970-01-15 16:36:07.000000"
"1970-01-01 13:45:44.000000"

statement ok
CREATE TABLE "sys"."t2" ("tc2" BOOLEAN NOT NULL,CONSTRAINT "t2_tc2_pkey" PRIMARY KEY ("tc2"),CONSTRAINT "t2_tc2_unique" UNIQUE ("tc2"))

statement ok
COPY 2 RECORDS INTO "sys"."t2" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
false
true

query T rowsort
SELECT substr(ltrim('1Yc',''), CAST(t2.tc2 AS INT), "second"(CAST(t0.tc0 AS TIMESTAMP))) FROM t2, t0
----
(empty)
(empty)
1Yc
1Yc
1Yc
1Yc
1Yc
1Yc

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t2" ("c0" INTEGER NOT NULL)

statement ok
INSERT INTO "t2" VALUES (59), (-3), (5), (0), (1), (-6)

statement ok
UPDATE t2 SET c0 = 5 WHERE least(((3)=(round(0.55, t2.c0))), true)

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t2" ("c1" DOUBLE NOT NULL,CONSTRAINT "t2_c1_pkey" PRIMARY KEY ("c1"))

statement ok
COPY 6 RECORDS INTO "sys"."t2" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
-3.1207632e+08
1
0
-903197136
0.3672199296718357
-1.7976931348623157e+308

statement error
update t2 set c1 = (scale_down(t2.c1, 0.39861114390109142480156378951505757868289947509765625))
where (scale_up(-1155480997, 0.5434124050282382)) is not null

statement ok
ROLLBACK


