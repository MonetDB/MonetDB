statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" BOOLEAN,"c1" DOUBLE PRECISION NOT NULL)

statement ok
COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
false	0.2059926383949241
NULL	1.89755202e+09
NULL	0.8514002985569765
NULL	0.8565135463082767

query I rowsort
SELECT ALL t0.c0 FROM t0 WHERE (((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0))
----
NULL
NULL
NULL

query I rowsort
SELECT t0.c0 FROM t0 WHERE 1 BETWEEN SYMMETRIC t0.c1 AND 0
----
NULL

query I rowsort
SELECT t0.c0 FROM t0 WHERE 1 BETWEEN t0.c1 AND 0
----

query I rowsort
SELECT ALL t0.c0 FROM t0 WHERE (((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0)) UNION ALL
SELECT ALL t0.c0 FROM t0 WHERE NOT ((((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0))) UNION ALL
SELECT t0.c0 FROM t0 WHERE ((((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0))) IS NULL
----
0
NULL
NULL
NULL

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE integers(i INTEGER)

statement ok
INSERT INTO integers VALUES (1), (2), (3), (NULL)

query I rowsort
select i between symmetric cast(1 as decimal) and cast(2 as double) from integers
----
0
1
1
NULL

statement ok
ROLLBACK

statement error
SELECT CAST(1 AS INTERVAL SECOND) + CAST(3 AS BIGINT)

statement error
SELECT CAST(1 AS INTERVAL MONTH) + CAST(3 AS BIGINT)

statement error
SELECT CAST(1 AS INTERVAL MONTH) + CAST(3 AS BIGINT)

statement ok
START TRANSACTION

statement ok
CREATE TABLE t0("c0" DOUBLE NOT NULL)

statement ok
COPY 11 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
0
0.9440456550171384
0.3985168253176739
0.9033732171086648
0.969477015070214
-4798112
0.6321209051017095
0.7740272412444077
0.7778437505533593
0.34293653568934335
0.1228907839970418

statement error
SELECT AVG(ALL ((((CAST(((+ (-12))/(sql_min(-12, -67))) AS INT))+(abs(((13)*(10))))))*(((((greatest(12, -11))/(((((34-15)))/(CAST(t0.c0 AS INT))))))*(- (+ (((-29)*(6))))))))), 0.777 FROM t0 WHERE (0.06) NOT  BETWEEN ASYMMETRIC (t0.c0) AND (t0.c0)
GROUP BY 0.1, 0.7, 0.2, + (+ (- (length(r'q')))), greatest(upper(upper(r'623865997')), trim(replace(r'vAd(Lup}Z', r'-1774953973', r'0.4235712099498189'), substr(r'', -19)))

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" DECIMAL(18,3) NOT NULL)

statement ok
COPY 41 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
0.388
0.371
0.939
0.790
0.493
0.148
0.841
0.034
0.189
0.087
0.048
0.227
0.759
0.446
0.622
0.579
0.453
0.819
0.768
0.027
0.839
0.506
0.560
0.362
0.453
0.728
0.078
0.364
0.559
0.829
0.061
0.854
0.920
0.440
0.627
0.838
0.113
0.501
0.283
0.722
0.819

query R rowsort
select t0.c0 from t0 where ((((cast(0.8800821070828266368124559448915533721446990966796875 as string))like(cast(greatest(r'0.29269552476776495', r'Aṵ\tmmz\\v/p*Q2Q5') as string(667)))))and((0.7706295839241474876502024926594458520412445068359375)
between asymmetric (t0.c0) and (t0.c0))) union all
select all t0.c0 from t0 where not (((((cast(0.8800821070828266368124559448915533721446990966796875 as string))like(cast(greatest(r'0.29269552476776495', r'Aṵ\tmmz\\v/p*Q2Q5') as string(667)))))and((0.7706295839241474876502024926594458520412445068359375)
between asymmetric (t0.c0) and (t0.c0)))) union all
select all t0.c0 from t0 where (((((cast(0.8800821070828266368124559448915533721446990966796875 as string))like(cast(greatest(r'0.29269552476776495', r'Aṵ\tmmz\\v/p*Q2Q5') as string(667)))))and((0.7706295839241474876502024926594458520412445068359375)
between asymmetric (t0.c0) and (t0.c0)))) is null
----
0.027
0.034
0.048
0.061
0.078
0.087
0.113
0.148
0.189
0.227
0.283
0.362
0.364
0.371
0.388
0.440
0.446
0.453
0.453
0.493
0.501
0.506
0.559
0.560
0.579
0.622
0.627
0.722
0.728
0.759
0.768
0.790
0.819
0.819
0.829
0.838
0.839
0.841
0.854
0.920
0.939

query RRI rowsort
SELECT ALL CAST((- (- (VAR_POP(ALL ((CAST(CAST(abs(709845242) AS INT) AS INT))%(abs(CAST((931144491) NOT IN (-587881807) AS INT))))))))^(- (+ (- (char_length(r'>])'))))) as decimal(10,3)), CAST(0.5186927954967 as decimal(14,13)), CAST("locate"(lower(r'[]'), rtrim(r'..ۄUH*6鉡q'), ((((-233289450)&(-476676450)))-(- (236876413)))) AS INT)
FROM t0 WHERE FALSE GROUP BY 1.2807753E7 HAVING MAX(ALL ((t0.c0)>=(NULL)))
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" (
	"c0" CHAR(451),
	"c1" DOUBLE        NOT NULL DEFAULT 0.49024308,
	"c2" CHARACTER LARGE OBJECT,
	CONSTRAINT "t0_c1_pkey" PRIMARY KEY ("c1"),
	CONSTRAINT "t0_c1_unique" UNIQUE ("c1")
)

statement ok
COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
NULL	0.36945874012955704	NULL
"u"	20	"Q\\"
"EjgaDfV\t6m)Qvw0'%cW#\015*]h "	0.944146436872532	""
"M"	0.7309075439656509	NULL

statement ok
UPDATE t0 SET c2 = r'' WHERE (((length(r'-14'))>>(((patindex(t0.c0, t0.c2))+(CAST(2 AS INT)))))) NOT IN (0.2, t0.c1, t0.c1, ((CAST(((-1)*(2)) AS INT))/(2)))

statement ok
ROLLBACK

statement error
SELECT 1 WHERE scale_up(CAST(0.89767724 AS REAL), 1)

query R rowsort
SELECT scale_up(0.2928163, 3)
----
8784489.000

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" BOOLEAN NOT NULL)

statement ok
COPY 15 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
true
false
true
false
true
false
true
true
false
true
false
false
true
false
true

query I rowsort
SELECT count(*) FROM t0 FULL OUTER JOIN (SELECT 1 FROM t0) AS sub0 ON t0.c0
----
127

query I rowsort
SELECT count(*) FROM t0 FULL OUTER JOIN (SELECT 1 FROM t0) AS sub0 ON t0.c0 WHERE t0.c0
----
120

query I rowsort
SELECT CAST(sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND))))) as BIGINT) FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0
----
-1136

query I rowsort
SELECT CAST(SUM(agg0) as BIGINT) FROM (
SELECT sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND))))) as agg0 FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0 WHERE t0.c0
UNION ALL
SELECT sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND)))))  as agg0 FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0 WHERE NOT (t0.c0)
UNION ALL
SELECT sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND)))))  as agg0 FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0 WHERE (t0.c0) IS NULL
) as asdf
----
-1136

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" BOOLEAN NOT NULL,CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"))

statement ok
COPY 2 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
true
false

query T rowsort
SELECT sum(CASE 0.84864913922764240172824656838201917707920074462890625 WHEN 0.26932793764126483626597519105416722595691680908203125 THEN INTERVAL '6' MONTH
WHEN 0.82674200362462446634026491665281355381011962890625 THEN INTERVAL '1' MONTH WHEN 0.16258430860651318372589457794674672186374664306640625 THEN INTERVAL '5' MONTH
WHEN 0.94891882487575707205706976310466416180133819580078125 THEN INTERVAL '8' MONTH WHEN 0.74703252230588967908175845877849496901035308837890625 THEN INTERVAL '1' MONTH END) FROM t0
----
NULL

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" (
	"c0" TIMESTAMP,
	"c2" DATE          NOT NULL DEFAULT DATE '1970-01-02',
	CONSTRAINT "t0_c2_pkey" PRIMARY KEY ("c2"),
	CONSTRAINT "t0_c0_unique" UNIQUE ("c0")
)

statement ok
COMMENT ON TABLE "sys"."t0" IS 'r'

statement ok
INSERT INTO "sys"."t0" VALUES (NULL, DATE '1970-01-02')

query T rowsort
SELECT ALL t0.c2 FROM t0 WHERE (t0.c2) NOT BETWEEN ASYMMETRIC (t0.c2) AND (sql_min(CAST(t0.c0 AS DATE), t0.c2))
UNION ALL
SELECT t0.c2 FROM t0 WHERE NOT ((t0.c2) NOT BETWEEN ASYMMETRIC (t0.c2) AND (sql_min(CAST(t0.c0 AS DATE), t0.c2)))
UNION ALL
SELECT t0.c2 FROM t0 WHERE ((t0.c2) NOT BETWEEN ASYMMETRIC (t0.c2) AND (sql_min(CAST(t0.c0 AS DATE), t0.c2))) IS NULL
----
1970-01-02

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" (
	"c0" TIMESTAMP,
	"c2" DATE          NOT NULL DEFAULT DATE '1970-01-02',
	CONSTRAINT "t0_c2_pkey" PRIMARY KEY ("c2"),
	CONSTRAINT "t0_c0_unique" UNIQUE ("c0")
)

statement ok
COPY 5 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
NULL	1970-01-02
NULL	1970-01-11
NULL	1970-01-23
"1970-01-22 20:43:07.000000"	1970-01-16
"1970-01-08 05:11:41.000000"	1970-01-14

statement ok
create view v0(c0) as (select t0.c2 from t0 where (t0.c2) not between asymmetric (date '1970-01-23') and (case when r'true' then t0.c2 when case true when (true) = true then substr(r' x+㶴9rr7긬X0陷?F5{W>gg0N*#Sꖿs', 1) end then nullif(t0.c2, t0.c2) end))

query I rowsort
SELECT 1 FROM v0 JOIN t0 ON '4321901' LIKE CAST(COALESCE(TIME '21:08:38', TIME '14:42:56') AS STRING)
----

query TT rowsort
SELECT ALL t0.c0, v0.c0 FROM v0 JOIN t0 ON ((upper(COALESCE(r'', r'4321901')))ILIKE(CAST(COALESCE(sql_max(TIME '05:11:41', TIME '21:08:38'), COALESCE(TIME '05:10:13', TIME '14:42:56'), sql_min(TIME '16:14:39', TIME '03:01:13')) AS STRING(586))))
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" INTEGER)

statement ok
COPY 10 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
-733291712
383672170
1913274279
-709161370
-1166455306
-53279625
1985993362
-1
386205865
-780047338

statement ok
create view v0(c0, c1, c2, c3) as (
select distinct cast(case time '03:52:21' when time '05:04:36' then r'0.2' end as date),
coalesce (t0.c0, length(coalesce (r't%QB', replace(r' ,yO_5G刵i稶bDßᶏ''', r'0.8', r'-1e500')))), 1, timestamp '1970-01-16 13:47:20' from t0) with check option

query I rowsort
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON COALESCE(v0.c1, v0.c2) BETWEEN v0.c2 AND t0.c0
----
16

query T rowsort
SELECT ALL max(ALL v0.c3) FROM v0 LEFT OUTER JOIN t0 ON (- (((v0.c2)-(COALESCE(v0.c2, v0.c1))))) NOT  BETWEEN SYMMETRIC (v0.c2) AND (t0.c0)
----
1970-01-16 13:47:20

statement ok
ROLLBACK

query T rowsort
SELECT CASE 1 WHEN 1 THEN 'rr' WHEN ln(-2) THEN 'a' END FROM (values (1),(2)) as t0(c0)
----
rr
rr

query T rowsort
SELECT CASE 1 WHEN 3 THEN 'rr' WHEN ln(c0) THEN 'a' END FROM (values (1.2),(2.3)) as t0(c0)
----
NULL
NULL

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t2" ("c1" DOUBLE NOT NULL,CONSTRAINT "t2_c1_pkey" PRIMARY KEY ("c1"))

statement ok
COPY 6 RECORDS INTO "sys"."t2" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
-3.1207632e+08
1
0
-903197136
0.3672199296718357
-1.7976931348623157e+308

statement error
update t2 set c1 = (scale_down(t2.c1, 0.39861114390109142480156378951505757868289947509765625))
where (scale_up(-1155480997, 0.5434124050282382)) is not null

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t1" ("c0" BOOLEAN NOT NULL,"c1" DECIMAL(18,3) NOT NULL,CONSTRAINT "t1_c0_c1_pkey" PRIMARY KEY ("c0", "c1"))

statement ok
COPY 8 RECORDS INTO "sys"."t1" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
false	0.970
true	0.249
false	0.901
true	0.416
true	0.150
true	-1.000
true	0.305
false	0.310

statement ok
CREATE TABLE "sys"."t2" ("c0" DOUBLE NOT NULL,"c1" CHAR(21),"c2" DOUBLE)

statement ok
COPY 16 RECORDS INTO "sys"."t2" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
1	NULL	NULL
1	NULL	NULL
0.20096332264638103	NULL	-8177017368
0.6291712421744081	NULL	3
0.5608280161984844	"\n)GV3\n4w,"	NULL
0.2283066361977384	"DoiQ2"	NULL
0.4162827659910059	""	NULL
0.7076516986629799	"2"	NULL
0.0724600616400724	"true"	9
0.03951652412329898	""	1.5639034457363068
0.4631650256727575	"0.10356338203734772"	0.2836868317291048
-7.88997488	NULL	NULL
0.9604713389860059	NULL	NULL
0.7959037091231439	NULL	NULL
0.38681017904242443	NULL	NULL
-4.411138449465319	NULL	NULL

query I rowsort
SELECT ALL t1.c0 FROM t1, t2 CROSS JOIN ((SELECT "isauuid"(COALESCE(t2.c1, t2.c1)) FROM t2 WHERE ((((((((((TRUE)AND(TRUE)))OR
(TRUE)))OR(TRUE)))OR(FALSE)))AND(TRUE))) EXCEPT ALL (SELECT ALL ((CASE 0.54967607103225102349597364082001149654388427734375
WHEN 0.05049592582495154857724628527648746967315673828125 THEN t2.c2 END)>(greatest(t2.c2, t2.c0))) FROM t2
RIGHT OUTER JOIN (SELECT ALL l1t1.c0, CASE WHEN l1t1.c0 THEN l1t1.c0 WHEN l1t1.c0 THEN l1t1.c0 WHEN l1t1.c0
THEN l1t1.c0 END FROM t2 AS l1t2, t1 AS l1t1 WHERE l1t1.c0) AS sub0 ON ((FALSE)OR(TRUE))
CROSS JOIN (VALUES (r'-|cQ5', least(6, 4), CASE 0.13214429 WHEN 0.92287980834693872367324729566462337970733642578125
THEN r'Bv*氅.x' END), (r'', 0.7763767959438655, "insert"(r'RR6Mw+', 5, -65604773, r'1225096844'))) AS sub1)) AS sub0
CROSS JOIN (VALUES (2, ((0.53827864)>>("day"(DATE '1969-12-27'))), CAST(((2)+(-1758578278)) AS REAL))) AS sub1
WHERE (3.0) IS NOT NULL
----
896 values hashing to 25c86efc7cd2ecb484be80b79f18927b

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT ALL CAST((3.0) IS NOT NULL AS INT) as count FROM t1, t2 CROSS JOIN
((SELECT "isauuid"(COALESCE(t2.c1, t2.c1)) FROM t2 WHERE ((((((((((TRUE)AND(TRUE)))OR(TRUE)))OR(TRUE)))OR(FALSE)))AND(TRUE)))
EXCEPT ALL (SELECT ALL ((CASE 0.54967607103225102349597364082001149654388427734375 WHEN 0.05049592582495154857724628527648746967315673828125
THEN t2.c2 END)>(greatest(t2.c2, t2.c0))) FROM t2 RIGHT OUTER JOIN (SELECT l1t1.c0, CASE WHEN l1t1.c0 THEN l1t1.c0
WHEN l1t1.c0 THEN l1t1.c0 WHEN l1t1.c0 THEN l1t1.c0 END FROM t2 AS l1t2, t1 AS l1t1 WHERE l1t1.c0) AS sub0 ON ((FALSE)OR(TRUE))
CROSS JOIN (VALUES (r'-|cQ5', least(6, 4), CASE 0.13214429 WHEN 0.92287980834693872367324729566462337970733642578125
THEN r'Bv*氅.x' END), (r'', 0.7763767959438655, "insert"(r'RR6Mw+', 5, -65604773, r'1225096844'))) AS sub1)) AS sub0
CROSS JOIN (VALUES (2, ((0.53827864)>>("day"(DATE '1969-12-27'))), CAST(((2)+(-1758578278)) AS REAL))) AS sub1) as res
----
896

statement error
SELECT ALL t1.c0 FROM t1, t2 CROSS JOIN ((SELECT 1 FROM t2)
EXCEPT (SELECT ALL ((CASE 0.1 WHEN 0.2 THEN t2.c2 END)>(greatest(t2.c2, t2.c0))) FROM t2)) AS sub0
WHERE (3.0) IS NOT NULL

statement ok
ROLLBACK

statement ok
CREATE TEMP TABLE mycount(cc BIGINT) ON COMMIT PRESERVE ROWS

statement ok
INSERT INTO mycount SELECT COUNT(*) FROM sys.dependencies

statement ok
CREATE TABLE t0(c0 int AUTO_INCREMENT,c1 STRING)

query I rowsort
SELECT COUNT(*) > (SELECT cc FROM mycount) FROM sys.dependencies
----
1

statement ok
ALTER TABLE t0 DROP c0 CASCADE

statement ok
DROP TABLE t0

query I rowsort
SELECT CAST(COUNT(*) - (SELECT cc FROM mycount) AS BIGINT) FROM sys.dependencies
----
0

statement ok
TRUNCATE mycount

statement ok
INSERT INTO mycount SELECT COUNT(*) FROM sys.dependencies

statement ok
CREATE FUNCTION myfunc() returns int return 1

statement ok
CREATE TABLE t0(c0 int default myfunc(),c1 STRING)

query I rowsort
SELECT COUNT(*) > (SELECT cc FROM mycount) FROM sys.dependencies
----
1

statement ok
ALTER TABLE t0 DROP c0 CASCADE

statement ok
DROP TABLE t0

statement ok
DROP FUNCTION myfunc()

query I rowsort
SELECT CAST(COUNT(*) - (SELECT cc FROM mycount) AS BIGINT) FROM sys.dependencies
----
0

statement ok
DROP TABLE mycount

statement ok
START TRANSACTION

statement ok
create view v20(vc0) as (values (-214362849))

statement ok
create view v40(vc0) as (values (false), (true))

statement ok
create view v43(vc0) as (values (null), (true))

statement ok
create view v54(vc0, vc1, vc2) as (values ('S12^h)y{[]', false, 9.000000000000),('0.9516513734508343', true, null))

statement ok
create view v1(vc0) as (with cte0(c0,c1,c2) as ((select 7, 0, 2.00000000) union all
(select 5, 5.1, 4)) select '8#<Fk#]R' from v40 as l0v40, v43 as l0v43, cte0 as l0cte0)

statement ok
create view v27(vc0, vc1, vc2, vc3, vc4) as (select 1, 2, 1, 0.920, -4 from v40 as l0v40 right outer join (
select true, case l1v54.vc0 when 'a' then -1 when 'b' then 3 end, 1
from v54 as l1v54, v1 as l1v1 where l1v54.vc1) as sub1 on not l0v40.vc0 where l0v40.vc0)

query I rowsort
select 1 from v20 as l0v20, v27 as l0v27, v1 as l0v1 where (l0v20.vc0) in (-3, l0v20.vc0, l0v27.vc1)
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t1" ("c0" BOOLEAN NOT NULL,CONSTRAINT "t1_c0_pkey" PRIMARY KEY ("c0"),CONSTRAINT "t1_c0_unique" UNIQUE ("c0"))

statement ok
INSERT INTO "t1" VALUES (false), (true)

statement ok
create view v5(vc0) as (values (1), (4))

statement ok
create view v8(vc1) as ((select l0t1.c0 from t1 as l0t1) union distinct (select false))

query I rowsort
SELECT v5.vc0 FROM v5, v8 JOIN (VALUES (0.3, 10.0),(0.5, 8.0)) AS sub0 ON
true WHERE least(CASE v5.vc0 WHEN v5.vc0 THEN v8.vc1 END, true)
----
1
1
4
4

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST(least(CASE v5.vc0 WHEN v5.vc0 THEN v8.vc1 END, true) AS INT) as count
FROM v5, v8 JOIN (VALUES (0.3, 10.0),(0.5, 8.0)) AS sub0 ON true) as res
----
4

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("tc0" TIMESTAMP NOT NULL,CONSTRAINT "t0_tc0_pkey" PRIMARY KEY ("tc0"),CONSTRAINT "t0_tc0_unique" UNIQUE ("tc0"))

statement ok
COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
"1970-01-07 15:47:59.000000"
"1970-01-01 01:00:00.000000"
"1970-01-15 16:36:07.000000"
"1970-01-01 13:45:44.000000"

statement ok
CREATE TABLE "sys"."t2" ("tc2" BOOLEAN NOT NULL,CONSTRAINT "t2_tc2_pkey" PRIMARY KEY ("tc2"),CONSTRAINT "t2_tc2_unique" UNIQUE ("tc2"))

statement ok
COPY 2 RECORDS INTO "sys"."t2" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
false
true

query T rowsort
SELECT substr(ltrim('1Yc',''), CAST(t2.tc2 AS INT), "second"(CAST(t0.tc0 AS TIMESTAMP))) FROM t2, t0
----
(empty)
(empty)
1Yc
1Yc
1Yc
1Yc
1Yc
1Yc

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t2" ("c0" INTEGER NOT NULL)

statement ok
INSERT INTO "t2" VALUES (59), (-3), (5), (0), (1), (-6)

statement ok
UPDATE t2 SET c0 = 5 WHERE least(((3)=(round(0.55, t2.c0))), true)

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" INTEGER,"c1" INTEGER NOT NULL,"c3" DECIMAL(18,3),"c4" DOUBLE,"c5" BOOLEAN,
	"c6" CHARACTER LARGE OBJECT,"c7" DOUBLE NOT NULL,"c8" DOUBLE,"c9" DECIMAL(18,3))

statement ok
COPY 5 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
-1581661246	8	0.000	0.5757982106353843	false	"?h\t*B/"	0.5947494687969431	6.835094360268594	0.317
-8	3	1.000	0.46282961313792403	false	"*Cn"	0.5643561072026775	1	0.524
5	6	0.277	0.6299672734345518	false	"v*?g"	-1102035617	1317540012	-2.000
-570443752	0	0.000	2	NULL	"]#퟈!Nv"	0.6681382286865544	0.5840009532283835	0.540
-1808926980	9	0.646	0.2983007748066492	true	"P^"	-221084136	4	0.028

statement ok
create view v14(vc1, vc2) as (values (0.42, 0.34))

statement ok
create view v12(vc1) as (values (NULL),(-49.17))

statement ok
create view v22(vc0, vc1, vc2) as ((select 1, 0.3, true) union all (
select greatest(l0v12.vc1, 3.2), -9.3976294E8, true from v12 as l0v12))

statement ok
create view v59(vc0) as (select 1)

statement ok
create view v85(vc0, vc1) as ((select -9.397294E8, ifthenelse(l0v22.vc2, 7, -5) from v22 as l0v22
where l0v22.vc0 < l0v22.vc0) intersect (select 1, 8))

query III rowsort
select true, 3, 1 from v14 as l0v14 join ((select 1) except all (select 3 from v85 as l1v85)) as
sub0 on case l0v14.vc2 when l0v14.vc1 then false end
----

statement ok
insert into t0(c5, c0, c4)(select true, 3, 1 from v14 as l0v14 join ((select 1) except all
(select 3 from v85 as l1v85)) as sub0 on case l0v14.vc2 when l0v14.vc1 then false end)

statement ok
ROLLBACK

