statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" BIGINT,"c1" DOUBLE PRECISION,"c3" TIME,"c4" INTERVAL DAY)

statement ok rowcount 5
INSERT INTO "t0" VALUES (6, NULL, NULL, NULL), (8, NULL, NULL, NULL), (44, 0.011253359357251025, NULL, INTERVAL '345600' SECOND), (45, 2099043029, NULL, NULL), (-6, NULL, NULL, INTERVAL '86400' SECOND)

statement ok
CREATE TABLE "t1" ("c0" BIGINT)

statement ok rowcount 7
INSERT INTO "t1" VALUES (-482276492),(2),(0),(-1048351158),(1849849110),(6),(3)

query I rowsort
SELECT 1 FROM t0 FULL OUTER JOIN (SELECT DISTINCT NULLIF(t0.c0, 1) FROM t0 FULL OUTER JOIN (SELECT 1 FROM t1) AS sub0 ON FALSE) AS sub0 ON FALSE
----
1
1
1
1
1
1
1
1
1
1
1

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t1" ("c0" UUID)

statement ok rowcount 4
INSERT INTO "t1" VALUES ('f4ecc4d5-5f7c-ce6a-199e-dd98c59f7bbf'), ('f4ecc4d5-5f7c-ce6a-199e-dd98c59f7bbf'), ('f4ecc4d5-5f7c-ce6a-199e-dd98c59f7bbf'), ('f4ecc4d5-5f7c-ce6a-199e-dd98c59f7bbf')

query T rowsort
SELECT t1.c0 FROM t1 WHERE ((((FALSE)OR(CAST(greatest(5, 1) AS BOOLEAN))))OR((((t1.c0) BETWEEN SYMMETRIC (t1.c0) AND (t1.c0))OR(((t1.c0)<(t1.c0))))))
----
f4ecc4d5-5f7c-ce6a-199e-dd98c59f7bbf
f4ecc4d5-5f7c-ce6a-199e-dd98c59f7bbf
f4ecc4d5-5f7c-ce6a-199e-dd98c59f7bbf
f4ecc4d5-5f7c-ce6a-199e-dd98c59f7bbf

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" TIMESTAMP,"c1" BINARY LARGE OBJECT,"c2" INTERVAL MONTH NOT NULL,CONSTRAINT "t0_c1_c0_unique" UNIQUE ("c1", "c0"))

statement ok rowcount 1
INSERT INTO "t0" VALUES (TIMESTAMP '1970-01-01 00:00:00.000000', BINARY LARGE OBJECT 'D0', INTERVAL '0' MONTH)

statement ok rowcount 1
MERGE INTO t0 USING (VALUES (1)) AS mergejoined(c0) ON TRUE WHEN MATCHED THEN UPDATE SET c0 = TIMESTAMP '1970-01-01 01:00:00' WHEN NOT MATCHED THEN INSERT (c0) VALUES (TIMESTAMP '1970-01-01 01:00:00')

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t1" ("c0" INTEGER)

statement ok rowcount 4
INSERT INTO "t1" VALUES (1), (2), (3), (4)

query I rowsort
SELECT 1 FROM t1 FULL OUTER JOIN (SELECT 2 FROM t1 JOIN (SELECT sql_min(TIME '01:00:00', TIME '12:05:37') FROM t1) AS sub0(c0) ON TRUE WHERE true) AS sub0(c0) 
ON CAST(6 AS DOUBLE)/(CASE 3 WHEN sub0.c0 THEN 0.2 END) > 2
----
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1
1

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE t0(c0 INTERVAL DAY PRIMARY KEY, c1 BIGINT)

statement ok
CREATE TABLE t1(c0 INTERVAL DAY, c1 BIGINT)

statement ok rowcount 2
INSERT INTO t1(c1) VALUES(3), (5)

statement ok rowcount 3
INSERT INTO t0(c0) VALUES(INTERVAL '9' DAY), (INTERVAL '7' DAY), (INTERVAL '8' DAY)

statement ok rowcount 3
TRUNCATE t0

statement ok rowcount 1
INSERT INTO t0(c0) VALUES(INTERVAL '8' DAY)

query T rowsort
SELECT t0.c0 FROM t0 WHERE (SELECT INTERVAL '2' DAY FROM t1 GROUP BY t1.c0) NOT IN (t0.c0)
----
8

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE t0(c0 INTERVAL DAY)

statement ok rowcount 3
INSERT INTO t0(c0) VALUES(INTERVAL '9' DAY), (INTERVAL '7' DAY), (INTERVAL '8' DAY)

query T rowsort
select sub0.c2 from t0 cross join (values (timestamp '1970-01-01 01:00:00', timestamp '1970-01-01 01:00:00')) as sub0(c1,c2)
----
1970-01-01 01:00:00
1970-01-01 01:00:00
1970-01-01 01:00:00

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c1" VARCHAR(44))

statement ok rowcount 5
COPY 5 RECORDS INTO "t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
"9史"
"-1680198574"
"|Yv\ne軒sX"
"㧪 dg"
"c}u"

statement error 42000!Soundex function not available for non ASCII strings
select length(soundex(t0.c1)) from t0

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t1" ("c2" BIGINT NOT NULL, CONSTRAINT "con2" PRIMARY KEY ("c2"))

statement ok rowcount 40
COPY 40 RECORDS INTO "t1" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
2
0
-1765753
-671746563
6
1921029267
-825025708
-2104297243
8
-129210606
-1726103676
1060807335
5
-1998039746
-773178777
9
-1
-9
1978301412
3
4
8077286484
2091469291
-132835704
2042020815
243455873
-1382358507
-1764685245
7
1
-1819128901
1992817175
7885662936
1052088495
-358447186
487372521
904364548
446252969
-477681301
-51400690

query I rowsort
SELECT t1.c2 FROM t1 WHERE (((CAST(t1.c2 AS STRING(268)))NOT ILIKE('%6I/2'''))) IN
((((('-')LIKE('0.2118767221584169')))OR(((((TRUE)AND(TRUE)))OR(FALSE)))))
----
-1
-129210606
-132835704
-1382358507
-1726103676
-1764685245
-1765753
-1819128901
-1998039746
-2104297243
-358447186
-477681301
-51400690
-671746563
-773178777
-825025708
-9
0
1
1052088495
1060807335
1921029267
1978301412
1992817175
2
2042020815
2091469291
243455873
3
4
446252969
487372521
5
6
7
7885662936
8
8077286484
9
904364548

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST((((CAST(t1.c2 AS STRING(268)))NOT ILIKE('%6I/2'))) IN
((((('-')LIKE('0.2118767221584169')))OR(((((TRUE)AND(TRUE)))OR(FALSE))))) AS INT) as count FROM t1) as res
----
40

statement ok
ROLLBACK

