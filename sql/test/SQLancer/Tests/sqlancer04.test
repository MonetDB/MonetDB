statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" INTERVAL MONTH NOT NULL)

statement ok
COPY 3 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
150184010
332127116
2136089006

query R rowsort
SELECT SUM(ALL 0.12830007105673624234754015560611151158) FROM t0 WHERE ((sql_min(t0.c0, t0.c0))<>(COALESCE (t0.c0, sql_min(abs(t0.c0), nullif(t0.c0, t0.c0))))) GROUP BY 0.1
HAVING MIN(ALL ((r'946496923')LIKE(CAST(nullif(0.5, 0.03) AS STRING(538)))))
UNION ALL SELECT SUM(ALL 0.12830007105673624234754015560611151158) FROM t0 WHERE ((sql_min(t0.c0, t0.c0))<>(COALESCE (t0.c0, sql_min(abs(t0.c0), nullif(t0.c0, t0.c0))))) GROUP BY 0.1
HAVING NOT (MIN(ALL ((r'946496923')LIKE(CAST(nullif(0.5, 0.03) AS STRING(538))))))
UNION ALL SELECT ALL SUM(ALL 0.12830007105673624234754015560611151158) FROM t0 WHERE ((sql_min(t0.c0, t0.c0))<>(COALESCE (t0.c0, sql_min(abs(t0.c0), nullif(t0.c0, t0.c0))))) GROUP BY 0.1
HAVING (MIN(ALL ((r'946496923')LIKE(CAST(nullif(0.5, 0.03) AS STRING(538)))))) IS NULL
----

query R rowsort
SELECT SUM(ALL 0.12830007105673624234754015560611151158) FROM t0 WHERE ((sql_min(t0.c0, t0.c0))<>(COALESCE (t0.c0, sql_min(abs(t0.c0), nullif(t0.c0, t0.c0))))) GROUP BY 0.1
HAVING MIN(ALL ((r'946496923')LIKE(CAST(nullif(0.5, 0.03) AS STRING(538)))))
UNION ALL SELECT SUM(ALL 0.12830007105673624234754015560611151158) FROM t0 WHERE ((sql_min(t0.c0, t0.c0))<>(COALESCE (t0.c0, sql_min(abs(t0.c0), nullif(t0.c0, t0.c0))))) GROUP BY 0.1
HAVING NOT (MIN(ALL ((r'946496923')LIKE(CAST(nullif(0.5, 0.03) AS STRING(538))))))
UNION ALL SELECT ALL SUM(ALL 0.12830007105673624234754015560611151158) FROM t0 WHERE ((sql_min(t0.c0, t0.c0))<>(COALESCE (t0.c0, sql_min(abs(t0.c0), nullif(t0.c0, t0.c0))))) GROUP BY 0.1
HAVING (MIN(ALL ((r'946496923')LIKE(CAST(nullif(0.5, 0.03) AS STRING(538)))))) IS NULL
----

statement ok
ROLLBACK

query R rowsort
SELECT covar_samp(1, - (COALESCE(1, 2)||5))
----
NULL

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0"("c0" DATE, "c1" DATE, "c2" INTERVAL SECOND NOT NULL,"c3" TIME NOT NULL)

statement error
select case covar_samp(all - (coalesce (cast(-5 as int), coalesce (((cast(0.4 as int))-(coalesce (5, 5))), +
(case -3 when 0.5 then 5 else 3 end)))), - (- (((coalesce (cast(0.2 as int),
coalesce (5, 3, -747176383), ((6)%(3)), ((-2)<<(3))))||(-5))))) when case t0.c0 when
case coalesce (coalesce (0.2, 0.3, 0.7), 0.5,
cast(t0.c2 as decimal)) when cast(interval '-4' month as interval second) then cast(case 0.3 when t0.c1 then 0.6
when interval '-3' month then 0.3 end as interval second) end then coalesce (abs(0.6),
cast(lower(r'') as decimal), 0.4) end then abs(0.5) when abs(-1.4)
then coalesce (sql_min(case t0.c0 when t0.c1 then 0.5 else 0.4 end,
case 0.5 when t0.c2 then 0.6 when 0.5 then 0.2 else 0.7 end), abs(coalesce (0.3, 0.5, 0.3)))
else coalesce (case coalesce (dayofmonth(timestamp '1970-01-15 10:08:18'), coalesce (-5, 3, 5)) when coalesce (cast(timestamp '1970-01-18 00:15:34' as double),
cast(t0.c3 as double)) then case least(t0.c1, t0.c1) when case t0.c2 when interval '5' month then r'*pf6/+}öq壚,j2\302\205K]sNKk,_%Tu' when 1016331084 then r'0.4'
else r'*' end then 0.8 end when sql_min(t0.c3, t0.c3) then coalesce (cast(t0.c2 as decimal), "second"(t0.c3), cast(t0.c2 as decimal),
0.9) when coalesce (cast(t0.c1 as double), 0.2) then 0.0 else 0.0 end, 0.2) end from t0 where (interval '6' month)
is not null group by cast(dayofmonth(t0.c0) as string(679)), 0.2

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" INTERVAL SECOND NOT NULL)

statement error
SELECT CASE '5'^3 WHEN COUNT(TRUE) THEN 1 END FROM t0 GROUP BY 2 IN ((CAST(INTERVAL '-2' SECOND AS INT))%2)

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" CHARACTER LARGE OBJECT NOT NULL,"c1" BIGINT NOT NULL,CONSTRAINT "t0_c1_pkey" PRIMARY KEY ("c1"))

statement ok
CREATE TABLE "sys"."t1" ("c0" CHARACTER LARGE OBJECT,"c1" BIGINT)

statement ok
COPY 3 RECORDS INTO "sys"."t1" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
"-216073164"	NULL
"-2044926527"	NULL
NULL	1

query I rowsort
SELECT 1 FROM t1 LEFT OUTER JOIN t0 ON TRUE
LEFT OUTER JOIN (SELECT 1 FROM t0) AS sub0 ON TRUE
WHERE (TIME '00:25:07') IN (TIME '07:29:34', CASE 2 WHEN 2 THEN TIME '17:23:46' ELSE TIME '05:14:30' END)
----

query I rowsort
SELECT 1 FROM t1 LEFT OUTER JOIN t0 ON TRUE
LEFT OUTER JOIN (SELECT 1 FROM t0) AS sub0 ON TRUE
WHERE t0.c0 <= t0.c0 AND (TIME '00:25:07') IN (TIME '07:29:34', CASE 2 WHEN 2 THEN TIME '17:23:46' ELSE TIME '05:14:30' END)
----

query I rowsort
SELECT ALL COUNT(TIME '06:32:50') FROM t1 LEFT OUTER JOIN t0 ON TRUE
LEFT OUTER JOIN (SELECT t1.c1, t0.c1, 0.43 FROM t0, t1) AS sub0 ON TRUE
WHERE ((NOT ((TIME '00:25:07') IN (TIME '07:29:34', TIME '05:21:58', CASE 0.54 WHEN 0.65 THEN TIME '17:23:46' ELSE TIME '05:14:30' END))))
GROUP BY TIMESTAMP '1969-12-08 01:47:58'
----
3

statement ok
ROLLBACK

statement ok
CREATE TABLE t0(c0 TIME, UNIQUE(c0))

statement error
CREATE TABLE t1(c0 CHAR(222), FOREIGN KEY (c0) REFERENCES t0(c0) MATCH FULL, PRIMARY KEY(c0))

statement error
CREATE TABLE t1(c0 int, FOREIGN KEY (c0) REFERENCES t0(c0) MATCH FULL, PRIMARY KEY(c0))

statement ok
DROP TABLE t0

statement ok
CREATE TABLE t0(c0 INTERVAL SECOND, UNIQUE(c0))

statement error
CREATE TABLE t1(c2 BLOB, FOREIGN KEY (c2) REFERENCES t0(c0) MATCH FULL, PRIMARY KEY(c2))

statement error
CREATE TABLE t1(c2 TIME, FOREIGN KEY (c2) REFERENCES t0(c0) MATCH FULL, PRIMARY KEY(c2))

statement ok
DROP TABLE t0

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" DOUBLE NOT NULL,CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"))

statement ok
CREATE TABLE "sys"."t1" ("c0" DOUBLE)

query R rowsort
select coalesce(c0, cast('a' as int)) from t0
----

statement ok
create view v1(c0, c1) as (select distinct (((t0.c0)=(((1357695262)^(-922564194))))) = false, cast(coalesce(coalesce(0.3, 0.4), "second"(timestamp '1970-01-10 11:54:13')) as double) from t0)

statement ok
create view v2(c0) as (select distinct coalesce(abs(interval '-1976292283' month), cast(greatest(r'Dnwxjm4btQ9cp&\c''a_', r'(y7,{q?][NHU,') as interval month)) from t1, t0 where ((upper(r''))not ilike(lower(r'''wAg_ z ''PPxXßgrd⍮G'))))

query T rowsort
select all v2.c0 from v2 right outer join v1 on ((r'8*By1q)*Oc<n')like(substr(r'', 1151312829, 406714197)))
where (case v1.c0 when v1.c0 then interval '104279220' second end) in (interval '2129103763' second) group by timestamp '1970-01-21 14:05:46'
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" DOUBLE NOT NULL DEFAULT 0.7383512, "c1" VARCHAR(277),CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"),CONSTRAINT "t0_c0_unique" UNIQUE ("c0"),CONSTRAINT "t0_c1_unique" UNIQUE ("c1"))

statement ok
COPY 7 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
0.1982342084128137	""
0.0705861623402474	NULL
0.7383512	"0.7547346625402616"
0.1405589229429235	NULL
0.7259117208346431	NULL
0.9832712376311843	NULL
0.03311829699079161	"'X狆l[%Lt]ulp!9nR)"

statement ok
CREATE TABLE "sys"."t1" ("c0" DOUBLE,"c1" VARCHAR(277))

statement ok
COPY 11 RECORDS INTO "sys"."t1" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
1839750227	""
0.4660818799383487	"l*+>⡪kF*bRp薓ßtP| P!-?54JIT"
0.98293459381004	"X웨e_灰u8y"
NULL	"2B_"
NULL	"9"
NULL	""
NULL	""
0.18404121429597398	NULL
0.6820837154477003	"8C7_7\015\015(wntWql j\n9"
NULL	"]"
NULL	"0.48396026646393187"

query R rowsort
SELECT CAST(SUM(ALL 0.14) AS DECIMAL(10,2)) FROM sys.t0 JOIN sys.t1 ON CAST(CASE t0.c1 WHEN t1.c1 THEN NOT (FALSE) WHEN t1.c1 THEN (t0.c0) NOT  BETWEEN ASYMMETRIC (t1.c0) AND (t0.c0) WHEN t0.c1
THEN (0.2) IN (0.3) END AS BOOLEAN) GROUP BY NOT (FALSE), COALESCE(((COALESCE(2, 4, 1))<<(COALESCE(5, -6))), ((COALESCE('-8', -4, 6))|(COALESCE(-2, 3, 4, 5, -6))))
----
0.420

query R rowsort
SELECT PROD(ALL 0.14) FROM t0 JOIN t1 ON CAST(CASE t0.c1 WHEN t1.c1 THEN NOT (FALSE) WHEN t1.c1 THEN (t0.c0) NOT  BETWEEN ASYMMETRIC (t1.c0) AND (t0.c0) WHEN t0.c1
THEN (0.2) IN (0.3) END AS BOOLEAN) GROUP BY NOT (FALSE), COALESCE(((COALESCE(2, 4, 1))<<(COALESCE(5, -6))), ((COALESCE(r'-8', -4, 6))|(COALESCE(-2, 3, 4, 5, -6))))
----
0.003

statement ok
ROLLBACK

query R rowsort
select cbrt(x) from (values (1), (8), (27)) as x(x)
----
1.000
2.000
3.000

query R rowsort
select cbrt(64)
----
4.000

statement ok
CREATE TABLE "sys"."t0" ("c0" DATE,"c1" DOUBLE NOT NULL,"c2" DATE NOT NULL)

statement error
select 1 from t0 natural join (select 4 from t0) as sub0

statement error
with sub0 as (select 4 from t0) select 1 from t0 natural join sub0

statement ok
DROP TABLE t0

statement ok
START TRANSACTION

statement ok
CREATE TABLE t0(c0 DATE)

statement ok
CREATE TABLE t1(c0 DATE NOT NULL)

query T rowsort
select t0.c0 from t0 natural join t1
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE t0(c0 DOUBLE PRIMARY KEY NULL)

statement ok
CREATE TABLE "sys"."t1" ("c0" DOUBLE,CONSTRAINT "t1_c0_unique" UNIQUE ("c0"))

statement ok
COPY 9 RECORDS INTO "sys"."t1" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
0.21248182395969406
0.6307796692265083
2059310235
-6.5457821e+08
0.743704157497456
0.4001718453135127
0.3935743494971655
0.5299192301063729
0.7609386265982908

query T rowsort
SELECT CASE WHEN DATE '1970-01-04' IS NULL THEN CAST(CASE t1.c0 WHEN t1.c0 THEN TIME '11:33:56' END AS VARCHAR(524)) ELSE '0.6' END FROM t1
----
0.6
0.6
0.6
0.6
0.6
0.6
0.6
0.6
0.6

query T rowsort
SELECT ALL MAX(ALL CASE WHEN (DATE '1970-01-04') IS NULL THEN CAST(CASE t1.c0 WHEN t1.c0 THEN TIME '11:33:56' END AS VARCHAR(524)) ELSE sql_max(r'iDfwsFjp藖1J洅ៅR-?0OT^.', r'0.6') END) FROM t1
JOIN (SELECT ALL t0.c0, greatest(CAST(INTERVAL '6' SECOND AS TIME), TIME '10:25:00') FROM t1, t0) AS sub0 ON (COALESCE(-3, -6, 3)) NOT IN (CASE WHEN TRUE THEN -3 END, ((-4)&(-5)), - (6))
WHERE ((r'%')ILIKE(r'6')) GROUP BY COALESCE(CAST(least(0.4, 0.7) AS VARCHAR(506)), CAST(nullif(TIME '14:14:35', TIME '02:49:23') AS VARCHAR(388))), abs(0.6)
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE t0(c0 INTERVAL SECOND, c1 serial)

statement ok
create view v0(c0) as (select distinct t0.c1 from t0)

query T rowsort
SELECT ALL AVG(ALL CASE COALESCE(CAST(v0.c0 AS REAL), atan(v0.c0, v0.c0)) WHEN abs(0.7471649) THEN INTERVAL '1865286244' MONTH END) FROM v0 GROUP BY COALESCE(((((v0.c0)+(v0.c0)))&(v0.c0)), v0.c0, CAST("second"(TIME '01:32:22') AS INT))
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" DOUBLE,"c1" INTERVAL MONTH)

statement ok
COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
NULL	1876068957
NULL	1798321013
0.8609488658910056	496732801
0.6220338267946794	1689393833

query I rowsort
SELECT 1 FROM t0 WHERE 'b' = COALESCE('1', CASE WHEN 2 THEN 'a' END)
----

query R rowsort
SELECT MAX(ALL 0.47279814) FROM t0 WHERE ((r'Vቕ*2DGj!K-?')NOT ILIKE(COALESCE(r'뷿', upper(r'1285890467'), r'R B+ ]%''?E}%<[cöjö媘թ丅MJV%r&伉',
CASE WHEN -681304440 THEN r'+s' WHEN -2104930505 THEN r'M[' END))) GROUP BY t0.c0, t0.c1
----
0.473
0.473
0.473
0.473

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t1" ("c0" CHAR(240))

statement ok
COPY 5 RECORDS INTO "sys"."t1" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
"2m^OqPm/3DḞZ02"
"2m^OqPm/3DḞZ02"
"2m^OqPm/3DḞZ02"
"2m^OqPm/3DḞZ02"
"2m^OqPm/3DḞZ02"

query I rowsort
SELECT 1 FROM t1 WHERE COALESCE(FALSE, t1.c0 = '0' AND t1.c0 LIKE t1.c0)
----

query T rowsort
SELECT SUM(agg0) FROM (
SELECT ALL sum(ALL abs(INTERVAL '1507781126' SECOND)) as agg0 FROM t1
WHERE COALESCE(FALSE, (((((((((((t1.c0) NOT BETWEEN ASYMMETRIC (t1.c0) AND (t1.c0))AND(((t1.c0)>=(t1.c0)))))AND(NOT (TRUE))))AND(((t1.c0)LIKE(t1.c0)))))AND(((t1.c0)NOT ILIKE(t1.c0)))))OR(COALESCE(FALSE, FALSE))))
UNION ALL
SELECT sum(ALL abs(INTERVAL '1507781126' SECOND)) as agg0 FROM t1
WHERE NOT (COALESCE(FALSE, (((((((((((t1.c0) NOT BETWEEN ASYMMETRIC (t1.c0) AND (t1.c0))AND(((t1.c0)>=(t1.c0)))))AND(NOT (TRUE))))AND(((t1.c0)LIKE(t1.c0)))))AND(((t1.c0)NOT ILIKE(t1.c0)))))OR(COALESCE(FALSE, FALSE)))))
UNION ALL
SELECT sum(ALL abs(INTERVAL '1507781126' SECOND)) as agg0 FROM t1
WHERE (COALESCE(FALSE, (((((((((((t1.c0) NOT BETWEEN ASYMMETRIC (t1.c0) AND (t1.c0))AND(((t1.c0)>=(t1.c0)))))AND(NOT (TRUE))))AND(((t1.c0)LIKE(t1.c0)))))AND(((t1.c0)NOT ILIKE(t1.c0)))))OR(COALESCE(FALSE, FALSE))))) IS NULL)
as asdf
----
87255 days, 20:27:10

statement ok
ROLLBACK

statement ok
CREATE TABLE "sys"."t1" ("c1" DOUBLE)

statement ok
COPY 7 RECORDS INTO "sys"."t1" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
763223864
0.4947502779444658
0.7872504424909134
0.7099123743128314
0.7223969464007746
0.6184216877785851
0.6479886625655562

statement error
select max(coalesce(interval '5' month, interval '2' month)) from t1 order by t1.c1 desc nulls last

statement error
select sum(coalesce(coalesce(interval '5' month, interval '3' month), interval '2' month, coalesce(abs(interval '5' month), interval '2' month,
case timestamp '1970-01-15 22:17:17' when timestamp '1970-01-03 22:17:36' then interval '5' month else interval '5' month end, interval '3' month), interval '3' month)) from t1 order by t1.c1 desc nulls last

query I rowsort
SELECT 1 FROM t1 WHERE COALESCE(1, CAST(t1.c1 AS INT) & COALESCE(1101847419, 2))
----
1
1
1
1
1
1
1

statement ok
DROP TABLE "sys"."t1"

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" (
	"c0" DATE          NOT NULL,
	"c1" SMALLINT      NOT NULL,
	"c2" DATE          NOT NULL,
	CONSTRAINT "t0_c2_c0_c1_pkey" PRIMARY KEY ("c2", "c0", "c1"),
	CONSTRAINT "t0_c0_c1_c2_unique" UNIQUE ("c0", "c1", "c2")
)

statement ok
CREATE TABLE "t1" (
	"c0" DOUBLE PRECISION        NOT NULL,
	CONSTRAINT "t1_c0_pkey" PRIMARY KEY ("c0"),
	CONSTRAINT "t1_c0_unique" UNIQUE ("c0")
)

query I rowsort
SELECT count(*) FROM t1 CROSS JOIN t0
----
0

query I rowsort
SELECT count(*) FROM t1 CROSS JOIN t0 GROUP BY 0.2
----

query I rowsort
SELECT count(*) FROM t1 CROSS JOIN t0 GROUP BY 0.2 HAVING max((ltrim(')''+')) NOT IN (CAST(t0.c1 AS VARCHAR(32)), CAST(INTERVAL '6' MONTH AS VARCHAR(32)), CAST(INTERVAL '7' MONTH AS VARCHAR(32))))
UNION ALL
SELECT count(*) FROM t1 CROSS JOIN t0 GROUP BY 0.2 HAVING NOT (max((ltrim(')''+')) NOT IN (CAST(t0.c1 AS VARCHAR(32)), CAST(INTERVAL '6' MONTH AS VARCHAR(32)), CAST(INTERVAL '7' MONTH AS VARCHAR(32)))))
UNION ALL
SELECT count(*) FROM t1 CROSS JOIN t0 GROUP BY 0.2 HAVING (max((ltrim(')''+')) NOT IN (CAST(t0.c1 AS VARCHAR(32)), CAST(INTERVAL '6' MONTH AS VARCHAR(32)), CAST(INTERVAL '7' MONTH AS VARCHAR(32))))) IS NULL
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE IF NOT EXISTS t0(c0 FLOAT, c1 DECIMAL NULL UNIQUE)

statement ok
CREATE TEMP TABLE t1 (c0 TIME)

query I rowsort
SELECT 1 FROM t1 INNER JOIN (SELECT 2 FROM t0) AS sub0 ON CASE 8 WHEN 3 THEN (4) IN (5, 6, 7) END
----

query T rowsort
SELECT t1.c0 FROM t1 INNER JOIN (SELECT ALL CAST(TIMESTAMP '1970-01-07 06:59:48' AS TIMESTAMP) FROM t0) AS sub0 ON CASE t1.c0 WHEN sql_min(t1.c0, t1.c0)
THEN (((((((496867080) IN (52439321, 1596181433, -506328570))OR(((r'W1')ILIKE(r'0.48600327092830353')))))OR((t1.c0) BETWEEN SYMMETRIC (t1.c0) AND (t1.c0))))OR(NOT (FALSE))) END
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" (
	"c0" INTERVAL SECOND,
	"c1" INTERVAL MONTH NOT NULL,
	CONSTRAINT "t0_c1_pkey" PRIMARY KEY ("c1"),
	CONSTRAINT "t0_c1_unique" UNIQUE ("c1"),
	CONSTRAINT "t0_c0_unique" UNIQUE ("c0")
)

statement ok
COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
NULL	1519431547
NULL	557549613
1798684773.000	124642631
2039246931.000	1575918952

statement ok
CREATE TABLE "sys"."t1" ("c0" INTERVAL SECOND NOT NULL,"c1" INTERVAL MONTH)

statement ok
COPY 4 RECORDS INTO "sys"."t1" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
800031356.000	386570239
-725381573.000	1244714316
1942291856.000	NULL
125146072.000	NULL

query I rowsort
SELECT 1 FROM t1 WHERE CASE WHEN CASE t1.c1 WHEN t1.c1 THEN FALSE ELSE TRUE END THEN COALESCE(FALSE, FALSE) END
----

query TT rowsort
SELECT t0.c1, t0.c0 FROM t1 FULL OUTER JOIN t0 ON CASE WHEN CASE t1.c1 WHEN t1.c1 THEN CAST(FALSE AS INT) ELSE abs(-1677579573) END
THEN NOT (COALESCE(FALSE, FALSE)) WHEN ((COALESCE(1985884175, 53875539, r'-427000320'))/(- (-936496635))) THEN (((((FALSE)OR(TRUE)))OR(TRUE))) = FALSE ELSE (t1.c1) BETWEEN ASYMMETRIC (t0.c1) AND (t1.c1) END
----
124642631
20818 days, 2:39:33
124642631
20818 days, 2:39:33
1519431547
NULL
1519431547
NULL
1575918952
23602 days, 9:28:51
1575918952
23602 days, 9:28:51
557549613
NULL
557549613
NULL
NULL
NULL
NULL
NULL

statement ok
ROLLBACK

query R rowsort
SELECT CASE WHEN 3 THEN cot(COALESCE(3, 4)) END FROM (values(1),(2)) as t0(c0)
----
-7.015
-7.015

statement error
select coalesce(-1129107763, '1415606329') from (values(1),(2)) as t0(c0)

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" TIME NOT NULL, CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"))

statement ok
COPY 15 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
15:11:18
01:20:22
13:28:53
11:33:19
14:26:05
10:53:59
04:52:51
18:01:33
11:10:29
10:53:34
03:35:48
03:19:11
23:13:24
04:53:25
22:08:34

statement ok
CREATE TABLE "sys"."t2" ("c0" TIME)

statement ok
COPY 5 RECORDS INTO "sys"."t2" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
07:23:20
00:19:06
12:50:37
00:30:02
21:01:23

statement ok
CREATE TABLE "sys"."t3" ("c0" TIME)

statement ok
COPY 8 RECORDS INTO "sys"."t3" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
16:58:19
NULL
21:19:34
20:14:42
16:39:56
04:19:48
00:19:06
16:45:41

statement ok
CREATE TABLE "sys"."t4" ("c0" INTERVAL SECOND, CONSTRAINT "t4_c0_unique" UNIQUE ("c0"))

statement ok
COPY 5 RECORDS INTO "sys"."t4" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
29578044.000
60548068.000
57514024.000
2030212684.000
1699639666.000

query T rowsort
select interval '-1680612084' second from t3 natural join (select t4.c0, (cast(r'*' as boolean)) = false from t2, t0, t4) as sub0 group by t3.c0
----

statement ok
ROLLBACK

query T rowsort
select cast(interval '29578044' second as time)
----
08:07:24

statement ok
START TRANSACTION

statement ok
create view v3(vc0) as (values (not ((r'%') is not null)), (least(cast(1 as boolean), not (true))), (case sql_min(r'vFP*鱍', r'&G*')
when cast(0 as string) then (true) is null when cast(9 as string(678)) then ((true)or(false)) end), (false)) with check option

statement ok
create view v20(vc0) as (values (((sql_max(2, 0.8207251106243245164506561195594258606433868408203125))&(abs(0.25579435)))))

statement ok
create view v37(vc0) as (values (r'1837521830'), (replace(coalesce(r'4', r'', r'20', r'0.5074455058602168'),
case 1108638173 when 1 then r'PS	' when 0.4804786358649317801194911226048134267330169677734375 then r'' else
r'XCWVB	' end, cast(false as string)))) with check option

statement ok
create view v40(vc0) as (values ((true) not in (false, false)), ("isauuid"(case 8 when 4 then r'F&' when 0 then r'&' end)))

query I rowsort
select cast(sum(count) as bigint) from (select cast(greatest(false, true) as int) as count from v37 full outer join
(select all ((((1074663557)%(0.8367095941704169)))%(scale_up(v20.vc0, 0.25281408194923194))), 0.573499282341099
from v20 where ((((true)or(true)))or(true)) group by 2) as sub0 on
((case 0.28276833606549456323620006514829583466053009033203125 when 1 then v37.vc0 when 1436332976 then r'FALSE'
when 0.4573545 then v37.vc0 else r'G1hw7' end)not ilike(sql_min(r'46', v37.vc0))) inner join (select (case v3.vc0
when v40.vc0 then -2078582481 when v40.vc0 then 0.26386297637506184177169643589877523481845855712890625 when v3.vc0
then 6 when v40.vc0 then 0.37311851701627662958316022923099808394908905029296875 when v40.vc0
then 0.78255921469665923329017687137820757925510406494140625 end) is null, + (case r'14' when r'p.e4xf'
then 0.8350239383024128 when r'6r' then 932574625 when r'[]' then 9 when r'' then 5 when r'LnP/Amb9' then 2 end)
from v40, v3 where (0.4906208915598539999081140194903127849102020263671875) not in (1654919043, 6)) as sub1
on ((trim(v37.vc0))>=(substr(v37.vc0, 9, 8)))) as res
----
8

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
create view v3(vc0, vc1) as (select distinct r'', cast(cast(-1197336362 as int) as decimal) where greatest(false, true))
with check option

statement ok
create view v7(vc0, vc1, vc2) as (values (1307331776, ((0.8065742163429374)||(0.1829829)),
((floor(23898.0))-(cast(16268 as double)))), (least(cast(r'1' as bigint), ifthenelse(true, 7769,
0.52628413232100446084160694226738996803760528564453125)), 2092106435, case when ((((((((r'TRUE')or(true)))and(false)))
or(false)))and(false)) then pi() when false then sql_max(10246889, 0.038412724) else cast(1556011470 as bigint) end))
with check option

statement ok
create view v28(vc0, vc1, vc2) as (values (-595506138, ((nullif(-1.09922038E8, 24510))*(coalesce(-1802237644,
0.7125421032644879, 662707145))), "week"(greatest(timestamp '1970-01-11 12:58:57', timestamp '1969-12-24 00:21:39'))))
with check option

statement ok
create view v32(vc0, vc1) as (values (cast(-330282362 as bigint), ((((674023637)||(-1856487129)))<=(case -1983844154
when 122 then 11 when 1381635703 then -367942232 when -1208650057 then 713851705 else 0.40289348 end))),
(sql_max(((10)>>(1)), - (-1088048958)), (not (true)) = true))

statement ok
create view v38(vc0) as (select all cast(cast(11149 as bigint) as real) where "isauuid"(r'0.962687263902831'))

statement ok
create view v43(vc0, vc1) as (select distinct cast(case 0.635420284843984273237538218381814658641815185546875 when
0.94514286975825123615635448004468344151973724365234375 then 0.8788786 end as bigint), null
where ((-1975284152)<=(17772))) with check option

query I rowsort
SELECT 1 FROM v7, v43 WHERE v7.vc1 ILIKE v43.vc1
----

query RI rowsort
SELECT median(ALL least(+ (0.26910993823565487748084024133277125656604766845703125),
((0.5744001734384440727154697015066631138324737548828125)&(-1283341470)))), CASE WHEN NOT (FALSE) THEN
least(-650735786, -1123683253) ELSE 1414135574 END FROM v7, v38, v43 RIGHT OUTER JOIN
(SELECT ALL sql_max(CAST(v28.vc0 AS REAL), ifthenelse(v32.vc1, 56, 104)), ((CAST(v28.vc1 AS DOUBLE))*
(CAST(TRUE AS TINYINT))), r'u''A#{' FROM v28, v32, v3) AS sub0 ON (((TRUE)AND(TRUE))) = TRUE
WHERE ((v7.vc1)ILIKE(upper(v43.vc1))) GROUP BY "second"(TIME '10:50:47')
----

statement ok
ROLLBACK

statement ok
CREATE TABLE t2(c0 DOUBLE)

statement ok
INSERT INTO t2(c0) VALUES(852.0), (-0.31015700674852054), (45), (null), (-1.936408526E9), (0.12208305626734062), (-1.707045885E9)

statement ok
INSERT INTO t2(c0) VALUES(1660989841)

statement ok
DELETE FROM t2 WHERE TRUE

statement ok
INSERT INTO t2(c0) VALUES(null)

statement ok
UPDATE t2 SET c0 = 0.2818413675323882 WHERE sql_min((0.0194696766772712859250304973102174699306488037109375)
BETWEEN (t2.c0) AND (0.8918001896191873), (t2.c0) NOT IN (-682776732))

statement ok
DROP TABLE t2

statement ok
START TRANSACTION

statement ok
CREATE TABLE "sys"."t0" ("c0" BOOLEAN,CONSTRAINT "t0_c0_unique" UNIQUE ("c0"))

statement ok
INSERT INTO "sys"."t0" VALUES (true), (false)

statement ok
create view v3(vc0) as (values (least(909916901, - (1451705231))))

statement ok
create view v4(vc0, vc1, vc2, vc3) as (select case sql_min(true, r'TRUE') when (-1243138496) not between
asymmetric (-1723862249) and (253857921) then least(-1523235132, -1.04665549E9) end, cast(nullif(r'', r'') as bigint),
weekofyear(sql_sub(date '1970-01-10', interval '58931850' month)), 0.16610325448814467 where least(false, false))

statement ok
create view v6(vc0, vc1, vc2) as (values (cast((true) = true as int), cast(((1576421008)&(null)) as decimal),
((((0.15598454)-(-235033638)))<<(((0.50459784)/(1078999181))))), (abs(20223), + (cast(0.6995354 as real)),
cast(-1695180722 as bigint)))

query I rowsort
SELECT v3.vc0 FROM v3, v6 CROSS JOIN (SELECT ALL ((sign(0.9241489178039545))*
(scale_down(0.74460343372682225027148206208948977291584014892578125, 0.33816958610011738084466514919768087565898895263671875)))
FROM t0 LEFT OUTER JOIN (SELECT DISTINCT upper(r'bŀ') WHERE FALSE) AS sub0 ON TRUE WHERE greatest(t0.c0, TRUE)) AS sub0
LEFT OUTER JOIN (SELECT DISTINCT 5688 FROM v4 WHERE (v4.vc0) IN (-2081865947, 30436)) AS sub1 ON least(FALSE, TRUE)
RIGHT OUTER JOIN (VALUES (CAST(greatest(r'77', 0.10216334194461484941029993933625519275665283203125) AS STRING(478)))) AS sub2
ON ((greatest(r'', r'32228'))NOT ILIKE(CAST(30792 AS STRING(381)))) WHERE (((v6.vc1)-(v6.vc1))) IS NOT NULL
----
-1451705231
-1451705231

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT ALL CAST((((v6.vc1)-(v6.vc1))) IS NOT NULL AS INT) as count FROM v3, v6 CROSS JOIN
(SELECT ((sign(0.9241489178039545))*(scale_down(0.74460343372682225027148206208948977291584014892578125,
0.33816958610011738084466514919768087565898895263671875))) FROM t0 LEFT OUTER JOIN (SELECT DISTINCT upper(r'bŀ') WHERE FALSE)
AS sub0 ON TRUE WHERE greatest(t0.c0, TRUE)) AS sub0 LEFT OUTER JOIN (SELECT DISTINCT 5688 FROM v4
WHERE (v4.vc0) IN (-2081865947, 30436)) AS sub1 ON least(FALSE, TRUE) RIGHT OUTER JOIN (VALUES (CAST(greatest(r'77',
0.10216334194461484941029993933625519275665283203125) AS STRING(478)))) AS sub2 ON ((greatest(r'', r'32228'))NOT
ILIKE(CAST(30792 AS STRING(381))))) as res
----
2

statement ok
ROLLBACK

statement error
select cast(count(1) as interval second) from (values (false)) as v6(vc0)

statement ok
CREATE TABLE t1(c0 BOOLEAN, c1 DOUBLE)

statement ok
ALTER TABLE t1 ADD PRIMARY KEY(c0, c1)

statement ok
INSERT INTO t1(c1, c0) VALUES(0.3, FALSE), (0.5, true), (0.0, true), (4, false), (1, true), (4, true)

statement ok
DELETE FROM t1 WHERE NOT t1.c0

statement error
UPDATE t1 SET c1 = 0 WHERE t1.c1 > 3

statement ok
DROP TABLE t1


