statement ok
START TRANSACTION

statement ok
CREATE TABLE "t2" ("c0" INT)

statement ok
create view v1(vc0) as (select 1 where false)

statement ok
create view v2(vc0) as (select true)

query I nosort
SELECT (SELECT 'a' FROM v1) <> ALL(SELECT 'b' FROM t2) FROM v2
----
1

query I nosort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST((SELECT 'a' FROM v1) <> ALL((SELECT 'b' FROM t2) UNION (SELECT 'c' FROM v1)) AS INT)
as count FROM v2) as res
----
1

# this one is right
query I nosort
SELECT 1 FROM v2 WHERE (SELECT 'a' FROM v1) <> ALL((SELECT 'b' FROM t2) UNION (SELECT 'c' FROM v1))
----
1

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE t0 (c0 INT)

statement ok
INSERT INTO t0 VALUES (1)

statement ok
CREATE TABLE t1 (c0 INT)

statement ok
INSERT INTO t1 VALUES (1)

query I nosort
SELECT 1 = ANY(SELECT 1 FROM t1 JOIN (SELECT count(*) GROUP BY t0.c0) AS x(x) ON TRUE) FROM t0
----
1

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE VIEW v1(vc0, vc1, vc2) AS (WITH ctel0n0(ct0n0,ct0n1) AS (VALUES (4, 5)) SELECT 1, 2, 3 FROM ctel0n0)

query III nosort
SELECT * FROM v1
----
1
2
3

statement error 42000!CREATE VIEW: LIMIT not supported
CREATE VIEW v2(vc0, vc1, vc2) AS (WITH ctel0n0(ct0n0,ct0n1) AS (VALUES (4, 5)) SELECT 1, 2, 3 FROM ctel0n0 LIMIT 7)

statement ok
ROLLBACK

statement ok
CREATE TABLE mct20 (c0 INTERVAL DAY, c1 DATE)

query I nosort
select 1 from mct20 inner join (select x.x from (values (true)) x(x)) as nort0(norc0)
on true and greatest(((select nort0.norc0) intersect (select true)), true)
----

# these are right
query I nosort
select rank() over (order by ((select mct20.c0) union all (select interval '1' day))) from mct20
----

query I nosort
select sum(((select mct20.c0) union all (select interval '1' day))) over () from mct20
----

query I nosort
select sum(((select interval '2' day) union all (select interval '1' day))) over () from mct20
----

query I nosort
select max(((select mct20.c0) union all (select interval '1' day))) over () from mct20
----

statement ok rowcount 1
INSERT INTO mct20 VALUES (INTERVAL '1' DAY, DATE '2010-01-01')

statement error GDK reported error: BATsubcross: more than one match
select 1 from mct20 where ((select true) union all (select true))

statement error GDK reported error: mergejoin: more than one match
select 1 from mct20 inner join (select x.x from (values (true)) x(x)) as nort0(norc0)
on true and greatest(((select nort0.norc0) union all (select true)), true)

statement error GDK reported error: mergejoin: more than one match
select 1 from mct20 inner join (select x.x from (values (true)) x(x)) as nort0(norc0)
on ((select nort0.norc0) union all (select true))

statement error GDK reported error: mergejoin: more than one match
select 1 from mct20 inner join (select x.x from (values (true)) x(x)) as nort0(norc0)
on true where ((select nort0.norc0) union all (select true))

statement error GDK reported error: mergejoin: more than one match
select rank() over (order by ((select mct20.c0) union all (select interval '1' day))) from mct20
----

statement error GDK reported error: mergejoin: more than one match
select sum(((select mct20.c0) union all (select interval '1' day))) over () from mct20
----

statement error GDK reported error: BATsubcross: more than one match
select sum(((select interval '2' day) union all (select interval '1' day))) over () from mct20
----

statement error GDK reported error: mergejoin: more than one match
select max(((select mct20.c0) union all (select interval '1' day))) over () from mct20
----

statement ok
DROP TABLE mct20

statement ok
START TRANSACTION

statement ok
CREATE TABLE t0(c0 INT)

query I nosort
with x(x) as (select 4) select 2 > all(select 3 from t0 full outer join (values (x.x)) as y(y) on false) from x
----
0

statement ok rowcount 0
update t0 set c0 = (with x(x) as (select 3)
select 79 from x join (select 1) as y(y) on v17.c0 <= -4 where x.x > 1) from t0 v17

statement ok rowcount 1
INSERT INTO t0 VALUES (1)

statement ok rowcount 1
update t0 set c0 = (with x(x) as (select 3)
select 79 from x join (select 1) as y(y) on v17.c0 <= -4 where x.x > 1) from t0 v17

query I nosort
SELECT c0 FROM t0
----
NULL

statement ok
CREATE TABLE rt0 (c0 INT)

statement ok
CREATE TABLE rt2v2 (c0 UUID)

statement ok rowcount 1
INSERT INTO rt2v2 VALUES (uuid 'dbC4da54-8C0B-4b83-E74E-30342dA0a5fF')

statement ok rowcount 0
update rt2v2 set c0 = (select rt2v2.c0 from rt0 where false) from rt0 where cast(2 in (select null where true) as boolean)

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
create table t0 (c0 int)

statement ok
create or replace view vx(vc0, vc1, vc2) as (values (1,0,2))

query I nosort
SELECT 1 FROM (values (0)) vx(vc1) WHERE 1 > ALL(SELECT vx.vc1 FROM t0)
----
1

query I nosort
SELECT vx.vc2 FROM vx JOIN (VALUES (1)) AS x(x) ON TRUE WHERE vx.vc0 >= ALL(SELECT t0.c0 FROM t0) AND 1 >= ALL(SELECT vx.vc1 FROM t0)
----
2

# this one is right
query I nosort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST(vx.vc0 >= ALL(SELECT t0.c0 FROM t0) AND 1 >= ALL(SELECT vx.vc1 FROM t0) AS INT)
as count FROM vx JOIN (VALUES (1)) AS x(x) ON TRUE) as res
----
1

statement ok
create or replace view vx(x) AS (VALUES (184),(33),(3600))

statement ok
create or replace view vy(y) AS (VALUES (FALSE),(FALSE))

query I nosort
SELECT 1 FROM vy WHERE NOT EXISTS (SELECT 1 FROM vx WHERE vy.y)
----
1
1

query I nosort
SELECT vy.y FROM vy WHERE CAST(NOT EXISTS (SELECT 1 FROM vx WHERE vy.y) AS BOOLEAN)
----
0
0

# this one is right
query I nosort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST(CAST(NOT EXISTS (SELECT 1 FROM vx WHERE vy.y) AS BOOLEAN) AS INT) as count FROM vy) as res
----
2

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
create table t0 (c0 int, CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"))

statement ok rowcount 1
MERGE INTO t0 USING (SELECT 1 FROM t0
FULL OUTER JOIN (SELECT 1 FROM t0 AS w RIGHT OUTER JOIN (SELECT 1) AS z(z) ON EXISTS (SELECT 1 WHERE w.c0 > 0)) AS y(y)
ON y.y = y.y) AS x(x) ON TRUE WHEN NOT MATCHED THEN INSERT (c0) VALUES (1)

statement ok rowcount 1
TRUNCATE t0

statement ok
CREATE TABLE rt0 (c0 INT)

query I nosort
SELECT 1 FROM rt0 WHERE 5 <= ALL(SELECT 2 FROM generate_series((SELECT 3, rt0.c0, 4 FROM rt0 x)))
----

query I nosort
SELECT 1 FROM t0 WHERE 5 <= ALL(SELECT 2 FROM generate_series((SELECT 3, t0.c0, 4 FROM t0 x)))
----

statement ok
create or replace view vx(vc0, vc1) as (select 10, 2)

query I nosort
SELECT vx.vc1 <> ALL(SELECT x.x) FROM vx JOIN (SELECT 1) AS x(x) ON vx.vc1 <> ALL(SELECT vx.vc1 FROM t0) AND (SELECT FALSE FROM t0)
----

query I nosort
SELECT vx.vc1 <> ALL(SELECT x.x FROM t0) FROM vx JOIN (SELECT 1) AS x(x) ON vx.vc1 <> ALL(SELECT vx.vc1 FROM t0) AND (SELECT FALSE FROM t0)
----

query I nosort
SELECT 1 FROM vx JOIN (SELECT 1) AS x(x) ON vx.vc1 <> ALL(SELECT vx.vc1 FROM t0) AND (SELECT FALSE FROM t0)
----

query I nosort
SELECT 1 FROM vx WHERE vx.vc1 <> ALL(SELECT vx.vc1 FROM t0) AND (SELECT FALSE FROM t0)
----

query I nosort
SELECT 1 FROM (SELECT DISTINCT c0 FROM rt0) vt(vc1) WHERE (1) IN (SELECT 2 FROM rt0 GROUP BY rt0.c0, vt.vc1)
----

statement ok
CREATE TABLE integers(i INTEGER)

statement ok rowcount 4
INSERT INTO integers VALUES (1), (2), (3), (NULL)

query I rowsort
SELECT i IN (SELECT i1.i FROM (SELECT * FROM integers i1 WHERE i1.i=integers.i) i1 JOIN generate_series(1, 3, 1) tbl(i) ON i1.i=tbl.i) FROM integers
----
0
0
1
1

query I
SELECT i IN (SELECT i1.i FROM (SELECT * FROM integers i1 WHERE i1.i=integers.i) i1 LEFT JOIN generate_series(1, 3, 1) tbl(i) ON i1.i=tbl.i) FROM integers
----
1
1
1
0

query I
SELECT i IN (SELECT i1.i FROM generate_series(1, 3, 1) tbl(i) RIGHT JOIN (SELECT * FROM integers i1 WHERE i1.i=integers.i) i1 ON i1.i=tbl.i) FROM integers
----
1
1
1
0

query I
SELECT i IN (SELECT i1.i FROM (SELECT * FROM integers i1 WHERE i1.i=integers.i) i1 RIGHT JOIN generate_series(1, 3, 1) tbl(i) ON i1.i=tbl.i) FROM integers
----
1
1
NULL
NULL

query I
SELECT i IN (SELECT i1.i FROM generate_series(1, 3, 1) tbl(i) LEFT JOIN (SELECT * FROM integers i1 WHERE i1.i=integers.i) i1 ON i1.i=tbl.i) FROM integers
----
1
1
NULL
NULL

query I nosort
SELECT 1 FROM rt0 JOIN ((SELECT 2) EXCEPT (SELECT 3)) AS x(x) ON TRUE
----

query I nosort
SELECT 1 FROM rt0 JOIN (VALUES (1),(2),(3)) AS x(x) ON TRUE
----

query I nosort
SELECT 1 FROM rt0 JOIN LATERAL ((SELECT 2) EXCEPT (SELECT 3)) AS x(x) ON TRUE
----

query I nosort
SELECT 1 FROM rt0 JOIN LATERAL (VALUES (1),(2),(3)) AS x(x) ON TRUE
----

query I nosort
SELECT 1 FROM rt0 JOIN LATERAL (with x(x) as (select rt0.c0) (select x from x)) AS x(x) ON TRUE
----

statement ok rowcount 4
INSERT INTO rt0 VALUES (1), (2), (3), (NULL)

query I nosort
SELECT rt0.c0 FROM rt0 JOIN LATERAL (with x(x) as (select rt0.c0) (select rt0.c0 + x.x from x)) AS x(x) ON TRUE
----
1
2
3
NULL

query I nosort
SELECT rt0.c0 FROM rt0 CROSS JOIN LATERAL (with x(x) as (select rt0.c0) (select rt0.c0 + x.x from x)) AS x(x)
----
1
2
3
NULL

query I nosort
SELECT rt0.c0 FROM rt0 CROSS JOIN LATERAL ((SELECT rt0.c0 + 2) INTERSECT (SELECT rt0.c0 - 2)) AS x(x)
----
NULL

query I nosort
SELECT rt0.c0 FROM rt0 CROSS JOIN LATERAL (VALUES (rt0.c0), (4)) AS x(x)
----
1
1
2
2
3
3
NULL
NULL

statement error 42000!SELECT: relation name "rt0" specified more than once
SELECT 1 FROM rt0 JOIN ((SELECT 1) UNION ALL (SELECT 2)) AS rt0(c0) ON TRUE

statement ok
ROLLBACK

statement error 42000!SELECT: relation name "rt0" specified more than once
SELECT 1 FROM (SELECT 1) rt0(c0) JOIN ((SELECT 1) UNION ALL (SELECT 2)) AS rt0(c0) ON TRUE

statement error 42000!SELECT: relation name "rt0" specified more than once
SELECT 1 FROM (SELECT 1) rt0(c0) JOIN LATERAL ((SELECT 1) UNION ALL (SELECT 2)) AS rt0(c0) ON TRUE

statement error 42000!SELECT: identifier 'c0' ambiguous
SELECT c0 FROM (SELECT 1) rt1(c0) JOIN ((SELECT 1) EXCEPT (SELECT 2)) AS rt0(c0) ON TRUE

statement error 42000!SELECT: identifier 'c0' ambiguous
SELECT c0 FROM (SELECT 1) rt1(c0) JOIN LATERAL ((SELECT 1) EXCEPT (SELECT 2)) AS rt0(c0) ON TRUE

statement error 42000!SELECT: relation name "rt0" specified more than once
SELECT 1 FROM (SELECT 1) rt0(c0) CROSS JOIN (WITH x(x) AS (SELECT 2) SELECT 3 FROM x) AS rt0(c1)

statement error 42000!SELECT: relation name "rt0" specified more than once
SELECT 1 FROM (SELECT 1) rt0(c0) CROSS JOIN LATERAL (WITH x(x) AS (SELECT 2) SELECT 3 FROM x) AS rt0(c1)

statement error 42000!SELECT: identifier 'c0' ambiguous
SELECT c0 FROM (SELECT 1) rt1(c0) CROSS JOIN (WITH x(x) AS (SELECT 2) SELECT 3) AS rt0(c0)

statement error 42000!SELECT: identifier 'c0' ambiguous
SELECT c0 FROM (SELECT 1) rt1(c0) CROSS JOIN LATERAL (WITH x(x) AS (SELECT 2) SELECT 3) AS rt0(c0)

statement ok
START TRANSACTION

statement ok
CREATE TABLE rt1 (c0 VARCHAR(32))

statement ok rowcount 1
INSERT INTO rt1 VALUES ('abc')

query I nosort
SELECT 'c' <> ANY(VALUES (rt1.c0), ('b')) FROM rt1
----
1

statement ok
CREATE TABLE t2 (c0 INT)

statement ok rowcount 2
INSERT INTO t2 VALUES (1), (2)

query I nosort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST(EXISTS (SELECT 1 WHERE FALSE HAVING max(cast(3 > t2.c0 OR (SELECT min('true') FROM t2)
= 'true' as int)) > 0) = FALSE AS INT) as count FROM t2) as res
----
0

query I nosort
SELECT EXISTS (SELECT 1 WHERE FALSE HAVING max(t2.c0) > 0) FROM t2
----
1

query I nosort
SELECT EXISTS (SELECT 1 WHERE FALSE HAVING max(cast(3 > t2.c0 as int)) > 0) FROM t2
----
1

query I nosort
SELECT EXISTS (SELECT 1 WHERE FALSE HAVING max(cast(3 > t2.c0 OR (SELECT min('true') FROM t2) = 'true' as int)) > 0) FROM t2
----
1

#this one is right
query I nosort
SELECT t2.c0 FROM t2 WHERE EXISTS (SELECT 1 WHERE FALSE HAVING max((SELECT min(1) FROM t2)) > 0)
----

statement ok
SAVEPOINT sp1

statement error 42000!SELECT: aggregate functions not allowed in WHERE clause
SELECT t2.c0 FROM t2 WHERE EXISTS (SELECT 1 WHERE FALSE HAVING max(cast(3 > t2.c0 OR (SELECT min('true') FROM t2) = 'true' as int)) > 0)

statement ok
ROLLBACK TO SAVEPOINT sp1

statement ok
CREATE TABLE rt2 ("c0" INTERVAL DAY)

statement ok rowcount 2
INSERT INTO rt2 VALUES (INTERVAL '0' SECOND),(INTERVAL '0' SECOND)

statement ok
SAVEPOINT sp2

statement error
SELECT TRUE FROM rt2 AS x RIGHT OUTER JOIN LATERAL (SELECT x.c0, TRUE FROM rt2) AS y(y,z) ON y.z
----
1
1
1
1

statement ok
ROLLBACK TO SAVEPOINT sp2

statement error
SELECT TRUE FROM rt2 AS x FULL OUTER JOIN LATERAL (SELECT x.c0, TRUE FROM rt2) AS y(y,z) ON y.z
----
1
1
1
1

statement ok
ROLLBACK TO SAVEPOINT sp2

query I nosort
SELECT TRUE FROM rt2 AS x JOIN LATERAL (SELECT x.c0, TRUE FROM rt2) AS y(y,z) ON y.z
----
1
1
1
1

query I nosort
SELECT TRUE FROM rt2 AS x CROSS JOIN LATERAL (SELECT x.c0, TRUE FROM rt2) AS y(y,z)
----
1
1
1
1

query I nosort
SELECT TRUE FROM rt2 AS x LEFT OUTER JOIN LATERAL (SELECT x.c0, TRUE FROM rt2) AS y(y,z) ON y.z
----
1
1
1
1

statement ok
create table t0 (c0 int)

query I nosort
SELECT (SELECT FALSE FROM t0 LEFT OUTER JOIN (VALUES (y.z), (y.z)) AS x(x) ON y.y = y.y) FROM t0
JOIN (VALUES ('b', 3)) AS y(y,z) ON y.y >= ANY(VALUES (y.y))
----

statement ok
CREATE TABLE rt3 (c0 DATE)

statement ok rowcount 4
INSERT INTO rt3 VALUES (DATE '4153-10-28'),(DATE '2471-08-17'),(DATE '2022-02-08'),(DATE '1970-01-20')

query T nosort
SELECT (SELECT DATE '2011-10-01' FROM rt3 y RIGHT OUTER JOIN (VALUES (DATE '2010-10-01'), (z.c0)) AS x(x) ON 
length('a') > 0 WHERE rt3.c0 = DATE '2012-10-01') FROM rt3, rt3 z
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL

statement ok
ROLLBACK
