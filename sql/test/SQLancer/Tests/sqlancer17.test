statement ok
START TRANSACTION

statement ok
CREATE TABLE "t1" ("c0" INTEGER)

statement ok rowcount 31
INSERT INTO "t1" VALUES (8), (8), (-173909322), (4), (7), (-8), (11), (2112833619), (583284612), (581585171), (1), (6), (7), (0), (2), (1), (1041993071),
(NULL), (0), (-1498894491), (-47709878), (4), (6), (-526272879), (-1468874541), (4), (3), (-756533326), (7), (0), (-73089569)

statement ok
CREATE TABLE "t2" ("c0" INTEGER)

statement ok rowcount 53
INSERT INTO "t2" VALUES (2), (1), (6), (1), (-888425077), (2), (5), (-1), (554424471), (2), (-2097744654), (30), (0), (1), (2), (9), (NULL), (NULL),
(0), (1), (0), (1457967621), (-2007218942), (2), (-32), (6), (1379912927), (0), (9), (0), (-1149644916), (-1471582802), (0), (NULL), (7), (2003447142),
(NULL), (1041993071), (NULL), (-888425077), (2086619558), (-1), (6), (337689526), (NULL), (7), (7), (-109524918), (4), (10), (742198232), (0), (0)

query I rowsort
SELECT t2.c0 FROM t2 JOIN (SELECT DISTINCT TIME '01:00:00', greatest(t1.c0, 0.3)%asin(0.7) FROM t1) AS sub0(c0,c1) ON sub0.c1 <= t2.c0 WHERE '' NOT ILIKE 'x'
----
377 values hashing to 3fcc20c12d29f4847a2af7e1c9e3c51b

query T rowsort
SELECT '' NOT ILIKE 'x' FROM t2 JOIN (SELECT DISTINCT TIME '01:00:00', greatest(t1.c0, 0.3)%asin(0.7) FROM t1) AS sub0(c0,c1) ON sub0.c1 <= t2.c0
----
377 values hashing to 19d4c8a836908c70817468cb9b9d7405

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c2" DATE, CONSTRAINT "t0_c2_pkey" PRIMARY KEY ("c2"))

statement ok rowcount 2
INSERT INTO "t0" VALUES (DATE '1970-01-04'), (DATE '1970-01-01')

query T rowsort
SELECT t0.c2 FROM t0 WHERE (t0.c2) IN (t0.c2, (VALUES (DATE '1969-12-10'), (DATE '1970-01-01')))
----
1970-01-01
1970-01-04

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST((t0.c2) IN (t0.c2, (VALUES (DATE '1969-12-10'), (DATE '1970-01-01'))) AS INT) as count FROM t0) as res
----
2

statement ok
CREATE TABLE "t1" ("c2" BIGINT NOT NULL, CONSTRAINT "t1_c2_pkey" PRIMARY KEY ("c2"))

statement ok rowcount 4
INSERT INTO "t1" VALUES (69), (-12), (9), (0)

query I rowsort
SELECT -3 < least((SELECT 1 WHERE FALSE), (SELECT DISTINCT 2 FROM t1)) FROM t1
----
True
True
True
True

query I rowsort
SELECT t1.c2 FROM t1 WHERE -3 < least((SELECT 1 WHERE FALSE), (SELECT 2 FROM t1 GROUP BY DATE '1970-01-11'))
----
-12
0
69
9

query I rowsort
SELECT least((SELECT 1 WHERE FALSE), (SELECT DISTINCT 2 FROM t1)) > -3 FROM t1
----
True
True
True
True

query I rowsort
SELECT t1.c2 FROM t1 WHERE least((SELECT 1 WHERE FALSE), (SELECT 2 FROM t1 GROUP BY DATE '1970-01-11')) > -3
----
-12
0
69
9

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c3" INTERVAL SECOND)

statement ok rowcount 9
INSERT INTO "t0" VALUES (INTERVAL '6' SECOND),(INTERVAL '9' SECOND),(INTERVAL '1' SECOND),
(INTERVAL '0' SECOND),(INTERVAL '9' SECOND),(INTERVAL '4' SECOND),(INTERVAL '6' SECOND),(INTERVAL '1' SECOND),(NULL)

query I rowsort
SELECT (SELECT 2 WHERE FALSE) = ANY(SELECT 3 WHERE FALSE)
----
False

query T rowsort
SELECT t0.c3 FROM t0 WHERE ifthenelse((SELECT 2 WHERE FALSE) = ANY(SELECT 3 WHERE FALSE), 2, 1)
----
0:00:00
0:00:01
0:00:01
0:00:04
0:00:06
0:00:06
0:00:09
0:00:09
NULL

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST(ifthenelse((SELECT 2 WHERE FALSE) = ANY(SELECT 3 WHERE FALSE), 2, 1) AS INT) as count FROM t0) as res
----
9

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t2" ("c2" REAL)

statement ok rowcount 142
COPY 142 RECORDS INTO "t2" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
NULL
0.18141033
0.10420329
NULL
-1.2681471e+09
0.6239734
NULL
0.37928414
0.7922281
0.49325344
-1.7018686e+17
0.070922926
4
8.981221e+07
0.17222267
0.21218215
0.58062196
0.419161
0.84214187
0.29322016
0.29322016
-0
0.7530656
0
-1
-2.0448145e+09
0.2540231
0.49195638
0.0023798633
0.6432879
7
NULL
0.61336726
0.37398192
-9.4684614e+08
0.18818615
0.5136187
3
0.12575655
0.29542512
0.7088062
-8.094762e+08
110847336
0.3245087
0.35633564
0.311399
0.9717446
-8
1
6
0.43797848
1.82855e+09
0.5382776
0.5785479
NULL
0.34842148
0.35951182
0
0.3906244
0.7785596
0.9109514
0.38354927
0.28305355
1.9593509e+08
0.89934695
0.9522356
0.6559638
0.2916218
-1.4625787e+09
2
0.9737825
0.12143436
1.9697553e+09
4
3.1415927
0.18462433
-4.500457e-09
0.5604565
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
-8.705452e+08
0.24377942
-1
1.5076613e+09
NULL
6
0.7550721
-5.3695283
2.0706463e+09
0.51699466
0.53571135
1
-1.0872904e+09
0.30670688
7
6.008104e+08
0.5502465
2.0706463e+09
0.45825
0.4935091
0.86806786
0.23549564
1
0.35711357
0.2559728
0
3
0.35711357
1.9593509e+08
-6
0.7928499
-5
0.84033513
0
-7.0777914e+08
5
0.6435906
0.60735834
NULL
0.12356741
-4.4439933e+08
5
0.029250568
4
0.7656532

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT 1 as count FROM t2 JOIN
(SELECT DISTINCT t2.c2, 3 FROM t2) AS sub0(c2,c3) on t2.c2 = sub0.c2) as res
----
135

# the hash is not right, it's a reminder it has to return 135 rows
query R rowsort
SELECT sub0.c2 FROM t2 JOIN (SELECT DISTINCT t2.c2, 3 FROM t2) AS sub0(c2,c3) on t2.c2 = sub0.c2
----
135 values hashing to e55d26263a0004ee5457d82440cc2577

statement ok
ROLLBACK

