stdout of test 'sqlancer02` in directory 'sql/test/SQLancer` itself:


# 17:04:12 >  
# 17:04:12 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-438766" "--port=32798"
# 17:04:12 >  

#START TRANSACTION; -- Bug 6909
#CREATE TABLE "sys"."t0" ("c0" BOOLEAN,"c1" DOUBLE PRECISION NOT NULL);
#COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#false	0.2059926383949241
#NULL	1.89755202e+09
#NULL	0.8514002985569765
#NULL	0.8565135463082767
[ 4	]
#SELECT ALL t0.c0 FROM t0 WHERE (((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0));
% sys.t0 # table_name
% c0 # name
% boolean # type
% 5 # length
[ NULL	]
[ NULL	]
[ NULL	]
#SELECT t0.c0 FROM t0 WHERE 1 BETWEEN SYMMETRIC t0.c1 AND 0;
% sys.t0 # table_name
% c0 # name
% boolean # type
% 5 # length
[ NULL	]
#SELECT t0.c0 FROM t0 WHERE 1 BETWEEN t0.c1 AND 0;
% sys.t0 # table_name
% c0 # name
% boolean # type
% 5 # length
#SELECT ALL t0.c0 FROM t0 WHERE (((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0)) UNION ALL 
#SELECT ALL t0.c0 FROM t0 WHERE NOT ((((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0))) UNION ALL 
#SELECT t0.c0 FROM t0 WHERE ((((0.654013919354451) BETWEEN SYMMETRIC (t0.c1) AND ("length"(upper(''))))OR(t0.c0))) IS NULL;
% .%12 # table_name
% c0 # name
% boolean # type
% 5 # length
[ NULL	]
[ NULL	]
[ NULL	]
[ false	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE integers(i INTEGER);
#INSERT INTO integers VALUES (1), (2), (3), (NULL);
[ 4	]
#select i between symmetric cast(1 as decimal) and cast(2 as double) from integers;
% sys.%2 # table_name
% %2 # name
% boolean # type
% 5 # length
[ true	]
[ true	]
[ false	]
[ NULL	]
#ROLLBACK;
#START TRANSACTION; -- Bug 6910
#CREATE TABLE t0("c0" DOUBLE NOT NULL);
#COPY 11 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#0
#0.9440456550171384
#0.3985168253176739
#0.9033732171086648
#0.969477015070214
#-4798112
#0.6321209051017095
#0.7740272412444077
#0.7778437505533593
#0.34293653568934335
#0.1228907839970418
[ 11	]
#ROLLBACK;
#START TRANSACTION; -- Bug 6911
#CREATE TABLE "sys"."t0" ("c0" DECIMAL(18,3) NOT NULL);
#COPY 41 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#0.388
#0.371
#0.939
#0.790
#0.493
#0.148
#0.841
#0.034
#0.189
#0.087
#0.048
#0.227
#0.759
#0.446
#0.622
#0.579
#0.453
#0.819
#0.768
#0.027
#0.839
#0.506
#0.560
#0.362
#0.453
#0.728
#0.078
#0.364
#0.559
#0.829
#0.061
#0.854
#0.920
#0.440
#0.627
#0.838
#0.113
#0.501
#0.283
#0.722
#0.819
[ 41	]
#select t0.c0 from t0 where ((((cast(0.8800821070828266368124559448915533721446990966796875 as string))like(cast(greatest(r'0.29269552476776495', r'Aṵ\tmmz\\v/p*Q2Q5') as string(667)))))and((0.7706295839241474876502024926594458520412445068359375) 
#between asymmetric (t0.c0) and (t0.c0))) union all
#select all t0.c0 from t0 where not (((((cast(0.8800821070828266368124559448915533721446990966796875 as string))like(cast(greatest(r'0.29269552476776495', r'Aṵ\tmmz\\v/p*Q2Q5') as string(667)))))and((0.7706295839241474876502024926594458520412445068359375) 
% .%20 # table_name
% c0 # name
% decimal # type
% 20 # length
[ 0.388	]
[ 0.371	]
[ 0.939	]
[ 0.790	]
[ 0.493	]
[ 0.148	]
[ 0.841	]
[ 0.034	]
[ 0.189	]
[ 0.087	]
[ 0.048	]
[ 0.227	]
[ 0.759	]
[ 0.446	]
[ 0.622	]
[ 0.579	]
[ 0.453	]
[ 0.819	]
[ 0.768	]
[ 0.027	]
[ 0.839	]
[ 0.506	]
[ 0.560	]
[ 0.362	]
[ 0.453	]
[ 0.728	]
[ 0.078	]
[ 0.364	]
[ 0.559	]
[ 0.829	]
[ 0.061	]
[ 0.854	]
[ 0.920	]
[ 0.440	]
[ 0.627	]
[ 0.838	]
[ 0.113	]
[ 0.501	]
[ 0.283	]
[ 0.722	]
[ 0.819	]
#SELECT ALL ((- (- (VAR_POP(ALL ((CAST(CAST(abs(709845242) AS INT) AS INT))%(abs(CAST((931144491) NOT IN (-587881807) AS INT))))))))^(- (+ (- (char_length(r'>])')))))), 0.5186927954967299, CAST("locate"(lower(r'[]'), rtrim(r'..ۄUH*6鉡q'), ((((-233289450)&(-476676450)))-(- (236876413)))) AS INT)
#FROM t0 WHERE FALSE GROUP BY 1.2807753E7 HAVING MAX(ALL ((t0.c0)>=(NULL)));
% .%6,	.%12,	.%13 # table_name
% %6,	%12,	%13 # name
% decimal,	decimal,	int # type
% 12,	16,	1 # length
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE "sys"."t0" (
#	"c0" CHAR(451),
#	"c1" DOUBLE        NOT NULL DEFAULT 0.49024308,
#	"c2" CHARACTER LARGE OBJECT,
#	CONSTRAINT "t0_c1_pkey" PRIMARY KEY ("c1"),
#	CONSTRAINT "t0_c1_unique" UNIQUE ("c1")
#);
#COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#NULL	0.36945874012955704	NULL
#"u"	20	"Q\\"
#"EjgaDfV\t6m)Qvw0'%cW#\015*]h "	0.944146436872532	""
#"M"	0.7309075439656509	NULL
[ 4	]
#UPDATE t0 SET c2 = r'' WHERE (((length(r'-14'))>>(((patindex(t0.c0, t0.c2))+(CAST(2 AS INT)))))) NOT IN (0.2, t0.c1, t0.c1, ((CAST(((-1)*(2)) AS INT))/(2)));
[ 2	]
#ROLLBACK;
#SELECT scale_up(0.2928163, 3);
% .%2 # table_name
% %2 # name
% decimal # type
% 10 # length
[ 8784489	]
#START TRANSACTION;
#CREATE TABLE "sys"."t0" ("c0" BOOLEAN NOT NULL);
#COPY 15 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#true
#false
#true
#false
#true
#false
#true
#true
#false
#true
#false
#false
#true
#false
#true
[ 15	]
#SELECT count(*) FROM t0 FULL OUTER JOIN (SELECT 1 FROM t0) AS sub0 ON t0.c0;
% .%2 # table_name
% %2 # name
% bigint # type
% 3 # length
[ 127	]
#SELECT count(*) FROM t0 FULL OUTER JOIN (SELECT 1 FROM t0) AS sub0 ON t0.c0 WHERE t0.c0;
% .%2 # table_name
% %2 # name
% bigint # type
% 3 # length
[ 120	]
#SELECT CAST(sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND))))) as BIGINT) FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0;
% .%2 # table_name
% %2 # name
% bigint # type
% 5 # length
[ -1136	]
#SELECT CAST(SUM(agg0) as BIGINT) FROM (
#SELECT sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND))))) as agg0 FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0 WHERE t0.c0
#UNION ALL
#SELECT sum(- (((((abs(2))*("quarter"(DATE '1970-01-25'))))<<("minute"(INTERVAL '1279040638' SECOND)))))  as agg0 FROM t0 FULL OUTER JOIN (SELECT greatest(least(INTERVAL '-33334168' SECOND, INTERVAL '41947202' SECOND), greatest(INTERVAL '1134741726' SECOND, INTERVAL '1713690410' SECOND)), t0.c0 FROM t0 WHERE t0.c0) AS sub0 ON t0.c0 WHERE NOT (t0.c0)
% .%21 # table_name
% %21 # name
% bigint # type
% 5 # length
[ -1136	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE "sys"."t0" ("c0" BOOLEAN NOT NULL,CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"));
#COPY 2 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#true
#false
[ 2	]
#SELECT sum(CASE 0.84864913922764240172824656838201917707920074462890625 WHEN 0.26932793764126483626597519105416722595691680908203125 THEN INTERVAL '6' MONTH 
#WHEN 0.82674200362462446634026491665281355381011962890625 THEN INTERVAL '1' MONTH WHEN 0.16258430860651318372589457794674672186374664306640625 THEN INTERVAL '5' MONTH 
#WHEN 0.94891882487575707205706976310466416180133819580078125 THEN INTERVAL '8' MONTH WHEN 0.74703252230588967908175845877849496901035308837890625 THEN INTERVAL '1' MONTH END) FROM t0;
% .%1 # table_name
% %1 # name
% month_interval # type
% 1 # length
[ NULL	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE "sys"."t0" (
#	"c0" TIMESTAMP,
#	"c2" DATE          NOT NULL DEFAULT DATE '1970-01-02',
#	CONSTRAINT "t0_c2_pkey" PRIMARY KEY ("c2"),
#	CONSTRAINT "t0_c0_unique" UNIQUE ("c0")
#);
#COMMENT ON TABLE "sys"."t0" IS 'r';
#INSERT INTO "sys"."t0" VALUES (NULL, DATE '1970-01-02');
[ 1	]
#SELECT ALL t0.c2 FROM t0 WHERE (t0.c2) NOT BETWEEN ASYMMETRIC (t0.c2) AND (sql_min(CAST(t0.c0 AS DATE), t0.c2))
#UNION ALL
#SELECT t0.c2 FROM t0 WHERE NOT ((t0.c2) NOT BETWEEN ASYMMETRIC (t0.c2) AND (sql_min(CAST(t0.c0 AS DATE), t0.c2)))
#UNION ALL
#SELECT t0.c2 FROM t0 WHERE ((t0.c2) NOT BETWEEN ASYMMETRIC (t0.c2) AND (sql_min(CAST(t0.c0 AS DATE), t0.c2))) IS NULL;
% .%15 # table_name
% c2 # name
% date # type
% 10 # length
[ 1970-01-02	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE "sys"."t0" (
#	"c0" TIMESTAMP,
#	"c2" DATE          NOT NULL DEFAULT DATE '1970-01-02',
#	CONSTRAINT "t0_c2_pkey" PRIMARY KEY ("c2"),
#	CONSTRAINT "t0_c0_unique" UNIQUE ("c0")
#);
#COPY 5 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#NULL	1970-01-02
#NULL	1970-01-11
#NULL	1970-01-23
#"1970-01-22 20:43:07.000000"	1970-01-16
#"1970-01-08 05:11:41.000000"	1970-01-14
[ 5	]
#create view v0(c0) as (select t0.c2 from t0 where (t0.c2) not between asymmetric (date '1970-01-23') and (case when r'true' then t0.c2 when case true when (true) = true then substr(r' x+㶴9rr7긬X0陷?F5{W>gg0N*#Sꖿs', 1) end then nullif(t0.c2, t0.c2) end));
#SELECT 1 FROM v0 JOIN t0 ON '4321901' LIKE CAST(COALESCE(TIME '21:08:38', TIME '14:42:56') AS STRING);
% .%2 # table_name
% %2 # name
% tinyint # type
% 1 # length
#SELECT ALL t0.c0, v0.c0 FROM v0 JOIN t0 ON ((upper(COALESCE(r'', r'4321901')))ILIKE(CAST(COALESCE(sql_max(TIME '05:11:41', TIME '21:08:38'), COALESCE(TIME '05:10:13', TIME '14:42:56'), sql_min(TIME '16:14:39', TIME '03:01:13')) AS STRING(586))));
% sys.t0,	sys.v0 # table_name
% c0,	c0 # name
% timestamp,	date # type
% 26,	10 # length
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE "sys"."t0" ("c0" INTEGER);
#COPY 10 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#-733291712
#383672170
#1913274279
#-709161370
#-1166455306
#-53279625
#1985993362
#-1
#386205865
#-780047338
[ 10	]
#create view v0(c0, c1, c2, c3) as (
#select distinct cast(case time '03:52:21' when time '05:04:36' then r'0.2' end as date),
#coalesce (t0.c0, length(coalesce (r't%QB', replace(r' ,yO_5G刵i稶bDßᶏ''', r'0.8', r'-1e500')))), 1, timestamp '1970-01-16 13:47:20' from t0) with check option;
#SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON COALESCE(v0.c1, v0.c2) BETWEEN v0.c2 AND t0.c0;
% .%2 # table_name
% %2 # name
% bigint # type
% 2 # length
[ 16	]
#SELECT ALL max(ALL v0.c3) FROM v0 LEFT OUTER JOIN t0 ON (- (((v0.c2)-(COALESCE(v0.c2, v0.c1))))) NOT  BETWEEN SYMMETRIC (v0.c2) AND (t0.c0);
% .%2 # table_name
% %2 # name
% timestamp # type
% 26 # length
[ 1970-01-16 13:47:20.000000	]
#ROLLBACK;
#SELECT CASE 1 WHEN 1 THEN 'rr' WHEN ln(-2) THEN 'a' END FROM (values (1),(2)) as t0(c0);
% .%4 # table_name
% %4 # name
% char # type
% 2 # length
[ "rr"	]
[ "rr"	]
#SELECT CASE 1 WHEN 3 THEN 'rr' WHEN ln(c0) THEN 'a' END FROM (values (1.2),(2.3)) as t0(c0);
% .%4 # table_name
% %4 # name
% char # type
% 2 # length
[ NULL	]
[ NULL	]
#START TRANSACTION;
#CREATE TABLE "sys"."t0" ("tc0" TIMESTAMP NOT NULL,CONSTRAINT "t0_tc0_pkey" PRIMARY KEY ("tc0"),CONSTRAINT "t0_tc0_unique" UNIQUE ("tc0"));
#COPY 4 RECORDS INTO "sys"."t0" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#"1970-01-07 15:47:59.000000"
#"1970-01-01 01:00:00.000000"
#"1970-01-15 16:36:07.000000"
#"1970-01-01 13:45:44.000000"
[ 4	]
#CREATE TABLE "sys"."t2" ("tc2" BOOLEAN NOT NULL,CONSTRAINT "t2_tc2_pkey" PRIMARY KEY ("tc2"),CONSTRAINT "t2_tc2_unique" UNIQUE ("tc2"));
#COPY 2 RECORDS INTO "sys"."t2" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#false
#true
[ 2	]
#SELECT substr(ltrim('1Yc',''), CAST(t2.tc2 AS INT), "second"(CAST(t0.tc0 AS TIMESTAMP))) FROM t2, t0;
% .%2 # table_name
% %2 # name
% clob # type
% 3 # length
[ "1Yc"	]
[ ""	]
[ "1Yc"	]
[ "1Yc"	]
[ "1Yc"	]
[ ""	]
[ "1Yc"	]
[ "1Yc"	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE "sys"."t2" ("c0" INTEGER NOT NULL);
#INSERT INTO "t2" VALUES (59), (-3), (5), (0), (1), (-6);
[ 6	]
#UPDATE t2 SET c0 = 5 WHERE least(((3)=(round(0.55, t2.c0))), true);
[ 0	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE "sys"."t2" ("c1" DOUBLE NOT NULL,CONSTRAINT "t2_c1_pkey" PRIMARY KEY ("c1"));
#COPY 6 RECORDS INTO "sys"."t2" FROM stdin USING DELIMITERS E'\t',E'\n','"';
#-3.1207632e+08
#1
#0
#-903197136
#0.3672199296718357
#-1.7976931348623157e+308
[ 6	]
#ROLLBACK;

# 17:04:12 >  
# 17:04:12 >  "Done."
# 17:04:12 >  

