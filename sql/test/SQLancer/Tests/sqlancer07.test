statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0"("c0" INTERVAL MONTH,"c1" INTERVAL SECOND)

statement ok
CREATE TABLE "t1"("c0" INTERVAL MONTH,"c1" INTERVAL SECOND)

statement ok
CREATE TABLE "t2"("c0" INTERVAL MONTH,"c1" INTERVAL SECOND)

query I rowsort
SELECT 1 FROM t1 JOIN t2 ON NOT (NOT (SELECT FALSE FROM t2))
----

query I rowsort
SELECT ALL CAST(NOT ((DATE '1970-01-22') NOT IN (DATE '1970-01-04')) AS INT) as count FROM t0, t1 FULL OUTER JOIN t2 ON NOT (NOT ((SELECT DISTINCT FALSE FROM t2, t0, t1)))
----

statement ok
ROLLBACK

statement ok
CREATE TABLE "t0" ("c0" DOUBLE PRECISION NOT NULL)

statement ok
INSERT INTO "t0" VALUES (0.13492451886840173)

statement ok
INSERT INTO "t0" VALUES (79004262)

statement ok
INSERT INTO "t0" VALUES (1476461507)

statement ok
CREATE TABLE "t1" ("c0" DOUBLE PRECISION)

statement ok
INSERT INTO "t1" VALUES (973588428)

statement ok
INSERT INTO "t1" VALUES (NULL)

statement ok
INSERT INTO "t1" VALUES (0.39517295223772886)

statement ok
INSERT INTO "t1" VALUES (NULL)

statement error
SELECT t0.c0 BETWEEN SYMMETRIC (SELECT t0.c0 FROM t0) AND t0.c0 FROM t0

statement error
SELECT CAST(NOT ((t0.c0) NOT BETWEEN SYMMETRIC ((SELECT DISTINCT t0.c0 FROM t0, t1)) AND (t0.c0)) AS INT) FROM t0

statement ok
DROP TABLE t0

statement ok
DROP TABLE t1

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" DATE NOT NULL)

statement ok
CREATE TABLE "t1" ("c1" INT)

statement ok
CREATE TABLE "t2" ("c0" DATE NOT NULL)

query I rowsort
SELECT 0 <= ANY(SELECT CASE INTERVAL '2' SECOND WHEN INTERVAL '6' SECOND THEN t1.c1 ELSE (SELECT t1.c1 FROM t1) END FROM t1) FROM t1
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" INTERVAL MONTH NOT NULL,CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"),CONSTRAINT "t0_c0_unique" UNIQUE ("c0"))

statement ok
INSERT INTO "t0" VALUES (INTERVAL '2101098338' MONTH)

statement ok
CREATE TABLE "t1" ("c0" INTERVAL MONTH,"c1" BOOLEAN)

statement ok
CREATE TABLE "t2" ("c0" INTERVAL MONTH)

query I rowsort
SELECT CAST(t1.c1 AS INT) FROM t1, t0 RIGHT OUTER JOIN t2 ON ((SELECT DISTINCT t1.c0 FROM t1, t0 WHERE FALSE)) NOT IN (t0.c0)
----

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" VARCHAR(156) NOT NULL)

statement ok
CREATE TABLE "t1" ("c0" VARCHAR(156) NOT NULL)

statement error
select 1 from t0, t1 inner join t0 on true

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" CHAR(315))

statement ok
INSERT INTO "t0" VALUES ('(y/l'), (''), ('*J')

statement ok
CREATE TABLE "t1" ("c0" VARCHAR(512), "c1" DOUBLE PRECISION)

statement ok
INSERT INTO "t1" VALUES ('0.9295919173154146', NULL)

statement ok
CREATE TABLE "t2" ("c0" CHAR(315))

statement ok
INSERT INTO "t2" VALUES ('1753268987.000'), ('(y/l'), ('(y/l'), ('')

query I rowsort
SELECT '1' > COALESCE(((SELECT t1.c0 FROM t1) INTERSECT (SELECT '2')), t0.c0) FROM t0
----
1
1
1

query I rowsort
SELECT CAST(((COALESCE(t0.c0, t0.c0, t0.c0))>(COALESCE(((SELECT DISTINCT t1.c0 FROM t1, t0, t2 WHERE FALSE) INTERSECT DISTINCT (SELECT ALL t0.c0 FROM t0 WHERE TRUE)),
t0.c0, CASE INTERVAL '720497648' MONTH WHEN INTERVAL '1899785652' MONTH THEN t0.c0 ELSE t0.c0 END))) AS INT) FROM t0
----
0
0
0

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" VARCHAR(156) NOT NULL)

statement ok
INSERT INTO "t0" VALUES ('')

statement ok
CREATE TABLE "t1" ("c0" VARCHAR(156) NOT NULL)

statement ok
INSERT INTO "t1" VALUES ('i?#\t+U,s'), ('288044674'), ('b'), ('W?ykP7L+X'), ('34076821'), ('ah'), ('﹂9j0M4')

query I rowsort
SELECT CASE '1' WHEN COALESCE((SELECT t0.c0 FROM t0), COALESCE(t1.c0, '2')) THEN 1 END FROM t1
----
NULL
NULL
NULL
NULL
NULL
NULL
NULL

statement ok
ROLLBACK

statement ok
CREATE TABLE "t0" ("c1" VARCHAR(388) NOT NULL,CONSTRAINT "t0_c1_pkey" PRIMARY KEY ("c1"),CONSTRAINT "t0_c1_unique" UNIQUE ("c1"))

statement ok
INSERT INTO "t0" VALUES (''), ('Ral%}?U*A'), ('Dz '), ('P')

statement ok
CREATE TABLE "t2" ("c1" VARCHAR(388) NOT NULL)

statement ok
INSERT INTO "t2" VALUES ('4'),('4'),('3eSU8,'),(''),('5E~쟱'),('~'),('1386006226'),('0.19005213960704492'),('''{Mdd뒆VB'''),('\015␱%L%]'),('+'),(''),('㕚o+k')

query T rowsort
select t0.c1 from t0 where (5) in (case when t0.c1 = 'a' then 1 end, (select 3))
----

query T rowsort
select t0.c1 from t0 where (5) in ((select 3), case when t0.c1 = 'a' then 1 end)
----

query T rowsort
select t0.c1 from t0 where (5) in (case when t0.c1 = 'a' then 1 end, (select 3 from t0))
----

query T rowsort
select t0.c1 from t0 where (-5) in (case when t0.c1 = 'a' then 1 else -2 end, (select -3 from t0, t2 where false))
----

statement ok
DROP TABLE t0

statement ok
DROP TABLE t2

statement ok
CREATE TABLE t1 (c0 DOUBLE PRECISION NOT NULL)

statement error
INSERT INTO t1(c0) VALUES((0.6548429615298178*0.3050008736497528)/(0.5061323979270875))

statement error
INSERT INTO t1(c0) VALUES(((((COALESCE(0.6548429615298178, 0.20317629894456002))*(COALESCE(0.3050008736497528, 0.2277902039419617))))/(0.5061323979270875)))

query R rowsort
SELECT t1.c0 FROM t1
----

statement ok
DROP TABLE t1

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" DECIMAL(18,3) NOT NULL,"c1" DOUBLE PRECISION NOT NULL)

statement ok
CREATE TABLE "t1" ("c1" DOUBLE PRECISION)

statement ok
CREATE TABLE "t2" ("c0" DECIMAL(18,3),"c1" DOUBLE PRECISION)

query I rowsort
SELECT (SELECT 1 FROM t1, t2, t0 JOIN (SELECT 1) AS sub0 ON (t1.c1) BETWEEN (t2.c1) AND (t1.c1)) FROM t2, t0 CROSS JOIN t1
----

statement ok
ROLLBACK

statement ok
CREATE TABLE "t0" ("c0" BIGINT NOT NULL,CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"),CONSTRAINT "t0_c0_unique" UNIQUE ("c0"))

statement ok
INSERT INTO "t0" VALUES (0),(-1557127883),(-488477810)

statement ok
CREATE TABLE "t1" ("c0" BIGINT NOT NULL)

statement ok
INSERT INTO "t1" VALUES (1457011207),(98933083),(1259938486)

statement ok
CREATE TABLE "t2" ("c0" BIGINT NOT NULL,CONSTRAINT "t2_c0_pkey" PRIMARY KEY ("c0"))

statement ok
INSERT INTO "t2" VALUES (596983192), (-601428889), (1688368391)

query I rowsort
SELECT 1 FROM t2, t0 CROSS JOIN t1 WHERE t0.c0 % (SELECT 1 WHERE FALSE) <= t1.c0
----

query I rowsort
SELECT t1.c0 FROM t2, t0 CROSS JOIN t1 WHERE ((((t0.c0)%((SELECT DISTINCT t0.c0 FROM t1, t0, t2 WHERE FALSE))))<=(t1.c0))
----

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT ALL CAST(((((t0.c0)%((SELECT DISTINCT t0.c0 FROM t1, t0, t2 WHERE FALSE))))<=(t1.c0)) AS INT) as count FROM t2, t0 CROSS JOIN t1) as res
----
NULL

statement error
SELECT 1 FROM t2, t0 WHERE (SELECT 1 UNION SELECT 2) > 0

statement error
SELECT 1 FROM t2, t0, t1 WHERE (SELECT 1 UNION SELECT 2) > 0

statement error
SELECT 1 FROM t2, t0 CROSS JOIN t1 WHERE (SELECT 1 UNION SELECT 2) > 0

statement ok
DROP TABLE t0

statement ok
DROP TABLE t1

statement ok
DROP TABLE t2

query I rowsort
SELECT 1 WHERE (SELECT 1 WHERE FALSE) IS NULL
----
1

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0"("c0" INTEGER,"c1" DECIMAL(18,3))

statement ok
INSERT INTO "t0" VALUES (-533312265, 0.254)

query I rowsort
SELECT 1 FROM t0 WHERE EXISTS ((SELECT 0.59, TRUE) INTERSECT (SELECT t0.c0, TRUE))
----

statement ok
UPDATE t0 SET c1 = 0.9, c0 = 53 WHERE EXISTS ((SELECT 0.5932837, (+ (46)) IS NULL FROM t0) INTERSECT (SELECT t0.c0, TRUE))

statement ok
ROLLBACK

query II rowsort
values (1,(select 2))
----
1
2

query II rowsort
values (1,(select 2 intersect select 3))
----
1
NULL

query II rowsort
values (1,(select 2 except select 2))
----
1
NULL

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" INTEGER,"c1" DECIMAL(18,3))

statement ok
INSERT INTO "t0" VALUES (72238796, 0.553)

statement ok
CREATE TABLE "t1" ("c0" INTEGER)

statement ok
INSERT INTO "t1" VALUES (-1302854973), (-1302854973), (107900469), (-292023894)

statement ok
CREATE TABLE "t2" ("c0" INTEGER)

statement ok
INSERT INTO "t2" VALUES (1), (2), (3)

query R rowsort
SELECT t0.c1 FROM t0 WHERE (VALUES (t0.c1 = (SELECT t0.c1 FROM t0)))
----
0.553

query I rowsort
SELECT CAST(sum((((VALUES (NULLIF(0, 1.09949409E8))))*(t0.c0))) AS BIGINT) FROM t2 JOIN t0 ON
(VALUES ((t0.c1) NOT BETWEEN ASYMMETRIC (CAST(140698873 AS DECIMAL)) AND (((SELECT DISTINCT t0.c1 FROM t0, t1, t2) EXCEPT DISTINCT (SELECT t0.c1 FROM t0, t2 WHERE TRUE)))))
----
0

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t1" ("c0" DOUBLE PRECISION NOT NULL)

query I rowsort
select 1 from (values (0.86), ((select 3 from t1))) as sub0(c0)
----
1
1

query R rowsort
select sub0.c0 from (values (0.86), ((select 3 from t1))) as sub0(c0)
----
0.860
NULL

query R rowsort
select sub0.c0 from (values (0.86), ((select 3 from t1))) as sub0(c0) WHERE NOT TRUE
----

query R rowsort
select sub0.c0 from (values (0.86), ((select 3))) as sub0(c0)
----
0.860
3.000

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" DOUBLE PRECISION,"c1" INT)

statement ok
CREATE TABLE "t1"("c1" INT)

statement ok
INSERT INTO "t1" VALUES (1)

query I rowsort
SELECT 1 FROM t0 WHERE (EXISTS (SELECT 1 WHERE FALSE)) IN ((SELECT FALSE))
----

query R rowsort
SELECT t0.c0 FROM t0 WHERE (EXISTS (SELECT TRUE, 0.3, INTERVAL '5' MONTH, TIME '16:59:58' WHERE FALSE)) IN ((SELECT DISTINCT FALSE FROM t1), (('0.9')NOT ILIKE('')))
----

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST((EXISTS (SELECT ALL TRUE, 0.3, INTERVAL '5' MONTH, TIME '16:59:58' WHERE FALSE)) IN ((SELECT DISTINCT FALSE FROM t1), (('0.9')NOT ILIKE(''))) AS INT) as count FROM t0) as res
----
NULL

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("tc0" TIMESTAMP)

statement ok
INSERT INTO "t0" VALUES (TIMESTAMP '1970-01-07 07:00:31.000000')

statement ok
create view v0(vc0) as (select 0.22400981)

query T rowsort
SELECT t0.tc0 FROM v0 RIGHT OUTER JOIN t0 ON FALSE WHERE t0.tc0 = ANY(SELECT TIMESTAMP '1969-12-15 15:50:02')
----

query T rowsort
SELECT ALL t0.tc0 FROM v0 RIGHT OUTER JOIN t0 ON FALSE WHERE t0.tc0 = ANY(VALUES (ifthenelse(((TRUE)<=(TRUE)), TIMESTAMP '1969-12-15 15:50:02', TIMESTAMP '1970-01-12 06:29:27')))
----

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT ALL CAST(t0.tc0 = ANY(VALUES (ifthenelse(((TRUE)<=(TRUE)), TIMESTAMP '1969-12-15 15:50:02', TIMESTAMP '1970-01-12 06:29:27'))) AS INT) as count FROM v0 RIGHT OUTER JOIN t0 ON FALSE) as res
----
0

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" TIMESTAMP NOT NULL,CONSTRAINT "t0_c0_pkey" PRIMARY KEY ("c0"),CONSTRAINT "t0_c0_unique" UNIQUE ("c0"))

statement ok
COPY 5 RECORDS INTO "t0" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
"1970-01-06 01:52:11.000000"
"1970-01-14 10:55:10.000000"
"1970-01-04 18:13:57.000000"
"1970-01-03 16:27:13.000000"
"1970-01-07 23:49:20.000000"

statement ok
CREATE TABLE "t1" ("c0" TIMESTAMP,CONSTRAINT "t1_c0_unique" UNIQUE ("c0"))

statement ok
CREATE TABLE "t2" ("c0" TIMESTAMP NOT NULL,CONSTRAINT "t2_c0_pkey" PRIMARY KEY ("c0"))

statement ok
COPY 5 RECORDS INTO "t2" FROM stdin USING DELIMITERS E'\t',E'\n','"'
<COPY_INTO_DATA>
"1970-01-18 20:11:31.000000"
"1970-01-17 19:38:53.000000"
"1970-01-04 22:47:27.000000"
"1970-01-19 03:36:31.000000"
"1970-01-06 00:11:21.000000"

statement ok
create view v0(c0) as (values (((-839450346)||(0.2907855)))) with check option

statement ok
create view v1(c0) as (with cte0(c0) as (values (case when ((true)or(true)) then ((0.75)&(0.16181643)) else 0.5068248 end)) select all 0.48 from t1, v0, t2,t0,cte0)

statement ok
create view v2(c0) as (select distinct interval '883554454' month from t1, t2) with check option

query I rowsort
VALUES ('b' LIKE (SELECT 'a' FROM t1)), (EXISTS (SELECT 1 WHERE TRUE))
----
1
NULL

query I rowsort
SELECT (VALUES ((('524519669')NOT ILIKE((SELECT 'X囊*T\f' FROM t1, v2 WHERE FALSE)))), (NOT EXISTS (SELECT DISTINCT sql_min(0.52, 0.90) WHERE TRUE))) FROM v1, t2 RIGHT OUTER JOIN v0 ON ((v0.c0)<>('Vx'))
----

statement ok
ROLLBACK

statement ok
CREATE TABLE t0(c0 BLOB DEFAULT (blob 'E443Aefab0') UNIQUE PRIMARY KEY NULL)

statement ok
CREATE TABLE t2(LIKE t0)

statement ok
INSERT INTO t2(c0) VALUES(blob ''), (NULL), (blob 'A0')

statement ok
DELETE FROM t2 WHERE TRUE

statement ok
INSERT INTO t2(c0) VALUES(blob 'dAe8C7')

statement ok
DROP TABLE t0

statement ok
DROP TABLE t2

statement ok
START TRANSACTION

statement ok
CREATE TABLE "t0" ("c0" INTERVAL MONTH NOT NULL,"c1" TINYINT NOT NULL,CONSTRAINT "t0_c0_c1_pkey" PRIMARY KEY ("c0", "c1"),CONSTRAINT "t0_c1_c0_unique" UNIQUE ("c1", "c0"))

statement ok
INSERT INTO "t0" VALUES (INTERVAL '2076515258' MONTH, 125), (INTERVAL '2043534562' MONTH, 55), (INTERVAL '202288310' MONTH, 100), (INTERVAL '1514712125' MONTH, 101), (INTERVAL '708314220' MONTH, 116)

statement ok
CREATE TABLE "t1" ("c0" BIGINT NOT NULL)

statement ok
INSERT INTO "t1" VALUES (29358), (29358), (29358), (39231208), (-697168639), (3232261), (-379432950)

statement ok
CREATE TABLE "t2" ("c0" BIGINT NOT NULL,CONSTRAINT "t2_c0_pkey" PRIMARY KEY ("c0"),CONSTRAINT "t2_c0_unique" UNIQUE ("c0"))

statement ok
INSERT INTO "t2" VALUES (446453788), (1973525566), (1604369323), (-907882617), (1067873323), (1615259391), (1286378024)

query I rowsort
SELECT 1 FROM t0 RIGHT OUTER JOIN t1 ON 3 IN ((SELECT 2), t1.c0)
----
1
1
1
1
1
1
1

query I rowsort
SELECT CAST(SUM(count) AS BIGINT) FROM (SELECT CAST(FALSE AS INT) as count FROM t2, t0 RIGHT OUTER JOIN t1 ON (CAST(1.2 AS DECIMAL)) IN
	((SELECT DISTINCT 1832275178 FROM t0, t1), ((t1.c0)+(0.83835187465939664530623076643678359687328338623046875)))) as res
----
0

statement ok
ROLLBACK

statement ok
START TRANSACTION

statement ok
create view v0(vc0) as (values (interval '100' second))

statement ok
create view v3(vc0) as (select 1638520390)

statement ok
create view v4(vc0) as (values (-1548784118))

query I rowsort
SELECT 1 FROM (SELECT 2) v4(vc0) WHERE (0.6) IN (CASE WHEN v4.vc0 THEN (SELECT 0.2 WHERE TRUE) END)
----

query I rowsort
SELECT 1 FROM (SELECT 1) as v3(c0) RIGHT JOIN (SELECT 2) as v4(c0) ON (0.6) NOT IN (0.5, (SELECT 0.2))
----
1

query II rowsort
SELECT * FROM (SELECT 1) as v3(c0) LEFT JOIN (SELECT 2) as v4(c0) ON (0.6) NOT IN ((SELECT v4.c0), 0.5)
----
1
2

query I rowsort
SELECT FALSE FROM v3, v0 FULL OUTER JOIN v4 ON sql_max(FALSE, (0.6902854) NOT IN (0.5854332103580835, CASE WHEN v4.vc0 THEN (SELECT 0.023816515 WHERE TRUE) END))
----
0

statement ok
ROLLBACK

query T rowsort
select interval '1' month * cast(1 as bigint)
----
1

