stdout of test 'mergepart06` in directory 'sql/test/merge-partitions` itself:


# 15:49:30 >
# 15:49:30 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35425" "--set" "mapi_usock=/var/tmp/mtest-655/.s.monetdb.35425" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-merge-partitions/BUILD/var/MonetDB/mTests_sql_test_merge-partitions" "--set" "embedded_r=yes" "--set" "embedded_py=true" "--set" "embedded_c=true"
# 15:49:30 >

# MonetDB 5 server v11.30.0
# This is an unreleased version
# Serving database 'mTests_sql_test_merge-partitions', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.492 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2018 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://dhcp-23.eduroam.cwi.nl:35425/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-655/.s.monetdb.35425
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/Python2 module loaded
# MonetDB/R   module loaded

# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 21_dependency_views.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_lidar.sql
# loading sql script: 75_shp.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 15:49:31 >
# 15:49:31 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-655" "--port=35425"
# 15:49:31 >

#CREATE MERGE TABLE testrangelimits (a int, b varchar(32)) PARTITION BY RANGE ON (a);
#CREATE TABLE sublimits1 (a int, b varchar(32));
#CREATE TABLE sublimits2 (a int, b varchar(32));
#CREATE TABLE sublimits3 (a int, b varchar(32));
#CREATE TABLE sublimits4 (a int, b varchar(32));
#CREATE TABLE sublimits5 (a int, b varchar(32));
#ALTER TABLE testrangelimits ADD TABLE sublimits1 AS PARTITION FROM 0 TO 100;
#INSERT INTO testrangelimits VALUES (1, 'first');
[ 1	]
#ALTER TABLE testrangelimits ADD TABLE sublimits2 AS PARTITION FROM 101 TO 200;
#ALTER TABLE testrangelimits ADD TABLE sublimits3 AS PARTITION FROM 401 TO 500 WITH NULL VALUES;
#ALTER TABLE testrangelimits ADD TABLE sublimits4 AS PARTITION FROM 500 TO 600; --still legal
#INSERT INTO testrangelimits VALUES (1, 'a'), (101, 'b'), (401, 'c');
[ 3	]
#INSERT INTO testrangelimits VALUES (50, 'more'); --1st partition
[ 1	]
#INSERT INTO testrangelimits VALUES (171, 'test'); --2nd partition
[ 1	]
#INSERT INTO testrangelimits VALUES (401, 'another'), (NULL, 'test'), (450, 'to'), (499, 'pass'); --3rd partition
[ 4	]
#INSERT INTO sublimits1 VALUES (2, 'another');
[ 1	]
#INSERT INTO sublimits2 VALUES (102, 'successful');
[ 1	]
#INSERT INTO sublimits3 VALUES (NULL, 'attempt');
[ 1	]
#SELECT a,b FROM testrangelimits;
% .testrangelimits,	.testrangelimits # table_name
% a,	b # name
% int,	varchar # type
% 3,	10 # length
[ 1,	"first"	]
[ 1,	"a"	]
[ 50,	"more"	]
[ 2,	"another"	]
[ 101,	"b"	]
[ 171,	"test"	]
[ 102,	"successful"	]
[ 401,	"c"	]
[ 401,	"another"	]
[ NULL,	"test"	]
[ 450,	"to"	]
[ 499,	"pass"	]
[ NULL,	"attempt"	]
#SELECT a,b FROM sublimits1;
% sys.sublimits1,	sys.sublimits1 # table_name
% a,	b # name
% int,	varchar # type
% 2,	7 # length
[ 1,	"first"	]
[ 1,	"a"	]
[ 50,	"more"	]
[ 2,	"another"	]
#SELECT a,b FROM sublimits2;
% sys.sublimits2,	sys.sublimits2 # table_name
% a,	b # name
% int,	varchar # type
% 3,	10 # length
[ 101,	"b"	]
[ 171,	"test"	]
[ 102,	"successful"	]
#SELECT a,b FROM sublimits3;
% sys.sublimits3,	sys.sublimits3 # table_name
% a,	b # name
% int,	varchar # type
% 3,	7 # length
[ 401,	"c"	]
[ 401,	"another"	]
[ NULL,	"test"	]
[ 450,	"to"	]
[ 499,	"pass"	]
[ NULL,	"attempt"	]
#SELECT a,b FROM sublimits4;
% sys.sublimits4,	sys.sublimits4 # table_name
% a,	b # name
% int,	varchar # type
% 1,	0 # length
#ALTER TABLE testrangelimits DROP TABLE sublimits1;
#ALTER TABLE testrangelimits DROP TABLE sublimits2;
#ALTER TABLE testrangelimits DROP TABLE sublimits3;
#ALTER TABLE testrangelimits DROP TABLE sublimits4;
#DROP TABLE testrangelimits;
#DROP TABLE sublimits1;
#DROP TABLE sublimits2;
#DROP TABLE sublimits3;
#DROP TABLE sublimits4;
#DROP TABLE sublimits5;

# 15:49:31 >
# 15:49:31 >  "Done."
# 15:49:31 >

