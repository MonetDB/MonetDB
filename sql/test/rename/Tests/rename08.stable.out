stdout of test 'rename08` in directory 'sql/test/rename` itself:


# 14:06:46 >  
# 14:06:46 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31771" "--set" "mapi_usock=/var/tmp/mtest-8540/.s.monetdb.31771" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-merge-statements/BUILD/var/MonetDB/mTests_sql_test_rename" "--set" "embedded_c=true"
# 14:06:46 >  

# MonetDB 5 server v11.32.0 (hg id: 3c2a3f8919bb+)
# This is an unreleased version
# Serving database 'mTests_sql_test_rename', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.528 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2018 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://wired-142.cwi.nl:31771/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-8540/.s.monetdb.31771
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 14:06:46 >  
# 14:06:46 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-8540" "--port=31771"
# 14:06:46 >  

#create schema "oldtables";
#create schema "newtables";
#create table "oldtables"."t1" ("a" int primary key, "b" int default '2');
#select "kk"."type" from "sys"."keys" "kk" inner join "sys"."tables" "tt" on "kk"."table_id" = "tt"."id" where "tt"."name" = 't1';
% .kk # table_name
% type # name
% int # type
% 1 # length
[ 0	]
#select "ii"."type" from "sys"."idxs" "ii" inner join "sys"."tables" "tt" on "ii"."table_id" = "tt"."id" where "tt"."name" = 't1';
% .ii # table_name
% type # name
% int # type
% 1 # length
[ 0	]
#insert into "oldtables"."t1" values (3, default);
[ 1	]
#select "a", "b" from "oldtables"."t1";
% oldtables.t1,	oldtables.t1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
[ 3,	2	]
#alter table "oldtables"."t1" set schema "newtables";
#select "kk"."type" from "sys"."keys" "kk" inner join "sys"."tables" "tt" on "kk"."table_id" = "tt"."id" where "tt"."name" = 't1';
% .kk # table_name
% type # name
% int # type
% 1 # length
[ 0	]
#select "ii"."type" from "sys"."idxs" "ii" inner join "sys"."tables" "tt" on "ii"."table_id" = "tt"."id" where "tt"."name" = 't1';
% .ii # table_name
% type # name
% int # type
% 1 # length
[ 0	]
#insert into "newtables"."t1" values (4, default);
[ 1	]
#select "a", "b" from "newtables"."t1";
% newtables.t1,	newtables.t1 # table_name
% a,	b # name
% int,	int # type
% 1,	1 # length
[ 3,	2	]
[ 4,	2	]
#create trigger "newtables"."tr1" after insert on "newtables"."t1" insert into "newtables"."t1" values (5, default);
#drop schema "oldtables" cascade;
#drop schema "newtables" cascade;
#select "kk"."type" from "sys"."keys" "kk" inner join "sys"."tables" "tt" on "kk"."table_id" = "tt"."id" where "tt"."name" = 't1';
% .kk # table_name
% type # name
% int # type
% 1 # length
#select "ii"."type" from "sys"."idxs" "ii" inner join "sys"."tables" "tt" on "ii"."table_id" = "tt"."id" where "tt"."name" = 't1';
% .ii # table_name
% type # name
% int # type
% 1 # length

# 14:06:46 >  
# 14:06:46 >  "Done."
# 14:06:46 >  

