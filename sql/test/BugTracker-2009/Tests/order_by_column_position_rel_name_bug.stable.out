stdout of test 'order_by_column_position_rel_name_bug` in directory 'sql/test/BugTracker-2009` itself:


# 16:00:58 >  
# 16:00:58 >   mserver5 "--config=/ufs/niels/scratch/rc/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB5/sql_logs"   --set mapi_open=true --set xrpc_open=true --set mapi_port=32548 --set xrpc_port=47907 --set xrpc_docroot=/net/alf.ins.cwi.nl/export/scratch1/niels/rc/sql --set monet_prompt= --trace  "--dbname=mTests_src_test_BugTracker-2009" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 16:00:58 >  

# MonetDB server v5.11.0, based on kernel v1.28.0
# Serving database 'mTests_src_test_BugTracker-2009', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:32548/
# MonetDB/SQL module v2.28.0 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 11:47:31 >  
# 11:47:31 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-23209" "--port=33225"
# 11:47:31 >  

#CREATE TABLE "sys"."store" ( 
#        "store_id" int NOT NULL, 
#        "store_type" varchar(30), 
#        "region_id" int, 
#        "store_name" varchar(30), 
#        "store_number" int, 
#        "store_street_address" varchar(30), 
#        "store_city" varchar(30), 
#        "store_state" varchar(30), 
#        "store_postal_code" varchar(30), 
#        "store_country" varchar(30), 
#        "store_manager" varchar(30), 
#        "store_phone" varchar(30), 
#        "store_fax" varchar(30), 
#        "first_opened_date" timestamp(7), 
#CREATE TABLE "sys"."warehouse" (
#        "warehouse_id" int NOT NULL,
#        "warehouse_class_id" int,
#        "stores_id" int,
#        "warehouse_name" varchar(60),
#        "wa_address1" varchar(30),
#        "wa_address2" varchar(30),
#        "wa_address3" varchar(30),
#        "wa_address4" varchar(30),
#        "warehouse_city" varchar(30),
#        "warehouse_state_province" varchar(30),
#        "warehouse_postal_code" varchar(30),
#        "warehouse_country" varchar(30),
#        "warehouse_owner_name" varchar(30),
#CREATE TABLE "sys"."warehouse_class" (
#        "warehouse_class_id" int NOT NULL,
#        "description" varchar(30)
#);
#CREATE TABLE "sys"."inventory_fact_1997" (
#	"product_id" int NOT NULL,
#	"time_id" int,
#	"warehouse_id" int,
#	"store_id" int,
#	"units_ordered" int,
#	"units_shipped" int,
#	"warehouse_sales" decimal(10,4),
#	"warehouse_cost" decimal(10,4),
#	"supply_time" smallint,
#	"store_invoice" decimal(10,4)
#);
#CREATE TABLE "sys"."time_by_day" (
#	"time_id" int NOT NULL,
#	"the_date" timestamp(7),
#	"the_day" varchar(30),
#	"the_month" varchar(30),
#	"the_year" smallint,
#	"day_of_month" smallint,
#	"week_of_year" int,
#	"month_of_year" smallint,
#	"quarter" varchar(30),
#	"fiscal_period" varchar(30)
#);
#select 
#	"warehouse"."warehouse_country" as "c0", 
#       	"time_by_day"."the_year" as "c1", 
#       	"time_by_day"."quarter" as "c2", 
#       	"time_by_day"."month_of_year" as "c3" 
#  from 
#	"warehouse" as "warehouse", 
#       	"inventory_fact_1997" as "inventory_fact_1997", 
#       	"time_by_day" as "time_by_day" 
#where
#       "inventory_fact_1997"."warehouse_id" = "warehouse"."warehouse_id" and
#       "inventory_fact_1997"."time_id" = "time_by_day"."time_id" 
#group by
#       "warehouse"."warehouse_country", 
% sys.,	sys.,	sys.,	sys. # table_name
% c0,	c1,	c2,	c3 # name
% varchar,	smallint,	varchar,	smallint # type
% 0,	1,	0,	1 # length

# 16:00:59 >  
# 16:00:59 >  Done.
# 16:00:59 >  

