stdout of test 'AVG_ReturnsNoLines.SF-2596084` in directory 'sql/test/BugTracker-2009` itself:


# 21:59:45 >  
# 21:59:45 >   mserver5 "--config=/ufs/niels/scratch/rc/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/rc/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/niels/scratch/rc/Linux-x86_64/var/MonetDB5/sql_logs"   --set mapi_open=true --set xrpc_open=true --set mapi_port=31980 --set xrpc_port=49900 --set xrpc_docroot=/net/alf.ins.cwi.nl/export/scratch1/niels/rc/sql --set monet_prompt= --trace  "--dbname=mTests_src_test_BugTracker-2009" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 21:59:45 >  

# MonetDB server v5.10.0, based on kernel v1.28.0
# Serving database 'mTests_src_test_BugTracker-2009', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:31980/
# MonetDB/SQL module v2.28.0 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 21:59:45 >  
# 21:59:45 >  mclient -lsql -umonetdb -Pmonetdb --host=alf --port=31980 
# 21:59:45 >  

[ 1	]
[ 1	]
[ 1	]
#SELECT AVG(x) AS avgx, AVG(x) AS avgx2
#FROM x;
% sys.,	sys. # table_name
% avgx,	avgx2 # name
% double,	double # type
% 24,	24 # length
[ 2,	2	]
#SELECT AVG(x) AS avgx, SUM(x) AS sumx
#FROM x;
% sys.,	sys. # table_name
% avgx,	sumx # name
% double,	double # type
% 24,	24 # length
[ 2,	6	]
#SELECT AVG(x) AS avgx, COUNT(x) AS countx
#FROM x;
% sys.,	sys. # table_name
% avgx,	countx # name
% double,	bigint # type
% 24,	1 # length
[ 2,	3	]
#SELECT AVG(x) AS avgx, COUNT(*) AS countstar
#FROM x;
% sys.,	. # table_name
% avgx,	countstar # name
% double,	bigint # type
% 24,	1 # length
[ 2,	3	]
#SELECT AVG(x) AS avgx, MIN(x) AS minx
#FROM x;
% sys.,	sys. # table_name
% avgx,	minx # name
% double,	double # type
% 24,	24 # length
[ 2,	1	]
#SELECT AVG(x) AS avgx, MAX(x) AS maxx
#FROM x;
% sys.,	sys. # table_name
% avgx,	maxx # name
% double,	double # type
% 24,	24 # length
[ 2,	3	]
#SELECT SUM(x) AS sumx, MIN(x) AS minx, MAX(x) AS maxx, COUNT(x) AS countx, COUNT(*) AS countstar
#FROM x;
% sys.,	sys.,	sys.,	sys.,	. # table_name
% sumx,	minx,	maxx,	countx,	countstar # name
% double,	double,	double,	bigint,	bigint # type
% 24,	24,	24,	1,	1 # length
[ 6,	1,	3,	3,	3	]
#SELECT COUNT(x) AS n1, sum(x)/count(x) as m1, sqrt( sum(x*x)/count(x) - (sum(x)/count(x))*(sum(x)/count(x)) ) as sd1
#FROM x;
% sys.,	sys.,	sys. # table_name
% n1,	m1,	sd1 # name
% bigint,	double,	double # type
% 1,	24,	24 # length
[ 3,	2,	0.8164965809	]
#SELECT MIN(n) AS n2, MIN(m) AS m2, SQRT(SUM((x-m)*(x-m))/MIN(n)) AS sd2
#FROM
#(
#  SELECT AVG(x) AS m, COUNT(x) AS n
#  FROM x
#) pass1
#, x
#;
% .,	.,	sys. # table_name
% n2,	m2,	sd2 # name
% bigint,	double,	double # type
% 1,	24,	24 # length
[ 3,	2,	0.8164965809	]
#SELECT COUNT(x) AS n2, MIN(m) AS m2, SQRT(SUM((x-m)*(x-m))/COUNT(x)) AS sd2
#FROM
#(
#  SELECT AVG(x) AS m
#  FROM x
#) agg
#, x
#;
% sys.,	.,	sys. # table_name
% n2,	m2,	sd2 # name
% bigint,	double,	double # type
% 1,	24,	24 # length
[ 3,	2,	0.8164965809	]

# 21:59:45 >  
# 21:59:45 >  Done.
# 21:59:45 >  

