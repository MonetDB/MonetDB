stdout of test 'TribooleanFailureWithSubquery.SF-2679434` in directory 'sql/test/BugTracker-2009` itself:


# 11:12:19 >  
# 11:12:19 >   mserver5 "--config=/ufs/manegold/_/scratch0/Monet/Testing/Stable/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/manegold/_/scratch0/Monet/Testing/Stable/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/lib64/MonetDB5:/ufs/manegold/_/scratch0/Monet/Testing/Stable/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/lib64/MonetDB5/lib:/ufs/manegold/_/scratch0/Monet/Testing/Stable/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/manegold/_/scratch0/Monet/Testing/Stable/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/manegold/_/scratch0/Monet/Testing/Stable/prefix.--enable-strict_--disable-optimize_--enable-debug_--enable-assert/var/MonetDB5/sql_logs"   --set mapi_open=true --set xrpc_open=true --set mapi_port=33716 --set xrpc_port=47982 --set xrpc_docroot=/net/rig.ins.cwi.nl/export/scratch0/manegold/Monet/Testing/Stable/source/sql --set monet_prompt= --trace  "--dbname=mTests_src_test_BugTracker-2009" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 11:12:19 >  

# MonetDB server v5.10.1, based on kernel v1.28.1
# Serving database 'mTests_src_test_BugTracker-2009', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://rig.ins.cwi.nl:33716/
# MonetDB/SQL module v2.28.1 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 11:47:36 >  
# 11:47:36 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-23209" "--port=33225"
# 11:47:36 >  

#SELECT cast( SUM(a) as bigint) AS suma
#FROM ( 
#  SELECT *
#  FROM ( 
#    SELECT 1 AS a, 'x' AS b
#    ) sub
#  WHERE b IN ('y')
#) sub2
#;
% . # table_name
% suma # name
% bigint # type
% 1 # length
[ NULL  ]
#SELECT cast( SUM(a) as bigint) AS suma
#FROM ( 
#  SELECT *
#  FROM ( 
#    SELECT 1 AS a, 'x' AS b
#    ) sub
#  WHERE b IN ('y')
#) sub2
#HAVING SUM(a) IS NULL
#;
% . # table_name
% suma # name
% bigint # type
% 1 # length
[ NULL  ]
#SELECT cast( SUM(a) as bigint) AS suma
#FROM ( 
#  SELECT *
#  FROM ( 
#    SELECT 1 AS a, 'x' AS b
#    ) sub
#  WHERE b IN ('y')
#) sub2
#HAVING SUM(a) IS NOT NULL
#;
% . # table_name
% suma # name
% bigint # type
% 1 # length
#SELECT cast( SUM(a) as bigint) AS suma
#FROM ( 
#  SELECT *
#  FROM ( 
#    SELECT 1 AS a, 'x' AS b
#    ) sub
#  WHERE b IN ('y')
#) sub2
#HAVING SUM(a) > 0
#;
% . # table_name
% suma # name
% bigint # type
% 1 # length
#SELECT * 
#FROM (
#  SELECT cast( SUM(a) as bigint) AS suma, NULL AS mynull
#  FROM ( 
#    SELECT *
#    FROM ( 
#      SELECT 1 AS a, 'x' AS b
#      ) sub
#    WHERE b IN ('y')
#  ) sub2
#) sub3
#WHERE suma > 0
#;
% .sub3,        .sub3 # table_name
% suma, mynull # name
% bigint,       char # type
% 1,    0 # length
#SELECT *
#FROM (
#  SELECT cast( SUM(a) as bigint) AS suma, NULL AS mynull
#  FROM ( 
#    SELECT *
#    FROM ( 
#      SELECT 1 AS a, 'x' AS b
#      ) sub
#    WHERE b IN ('y')
#  ) sub2
#) sub3
#WHERE mynull > 0
#;
% .sub3,        .sub3 # table_name
% suma, mynull # name
% bigint,       char # type
% 1,    0 # length
#SELECT * 
#FROM (
#  SELECT 1 AS a, NULL AS b
#) sub
#WHERE b>0
#;
% .sub, .sub # table_name
% a,    b # name
% tinyint,      char # type
% 1,    0 # length
#SELECT * 
#FROM (
#  SELECT 1 AS a, NULL AS b
#) sub
#WHERE NOT b<=0
#;
% .sub, .sub # table_name
% a,    b # name
% tinyint,      char # type
% 1,    0 # length
#CREATE TABLE dummy (a INTEGER, b INTEGER);
#INSERT INTO dummy VALUES (1, NULL);
[ 1     ]
#SELECT * FROM dummy;
% sys.dummy,    sys.dummy # table_name
% a,    b # name
% int,  int # type
% 1,    1 # length
[ 1,    NULL    ]
#SELECT * FROM dummy WHERE b>0;
% sys.dummy,    sys.dummy # table_name
% a,    b # name
% int,  int # type
% 1,    1 # length
#SELECT * FROM dummy WHERE NOT b<=0;
% sys.dummy,    sys.dummy # table_name
% a,    b # name
% int,  int # type
% 1,    1 # length
#SELECT * FROM dummy WHERE NOT b>0;
% sys.dummy,    sys.dummy # table_name
% a,    b # name
% int,  int # type
% 1,    1 # length
#SELECT * FROM dummy WHERE b<=0;
% sys.dummy,    sys.dummy # table_name
% a,    b # name
% int,  int # type
% 1,    1 # length
#DROP table dummy;
#CREATE TABLE dummy (a BOOLEAN, b BOOLEAN);
#INSERT INTO dummy VALUES (TRUE, TRUE);
[ 1     ]
#INSERT INTO dummy VALUES (TRUE, FALSE);
[ 1     ]
#INSERT INTO dummy VALUES (TRUE, NULL);
[ 1     ]
#INSERT INTO dummy VALUES (FALSE, TRUE);
[ 1     ]
#INSERT INTO dummy VALUES (FALSE, FALSE);
[ 1     ]
#INSERT INTO dummy VALUES (FALSE, NULL);
[ 1     ]
#INSERT INTO dummy VALUES (NULL, TRUE);
[ 1     ]
#INSERT INTO dummy VALUES (NULL, FALSE);
[ 1     ]
#INSERT INTO dummy VALUES (NULL, NULL);
[ 1     ]
#SELECT 
#  a
#, b
#, NOT a   AS "NOT_a"
#, a=b     AS "a_EQ_b"
#, a<>b    AS "a_NE_b"
#, a<b     AS "a_LT_b"
#, a<=b    AS "a_LE_b"
#, a>b     AS "a_GT_b"
#, a>=b    AS "a_GE_b"
#, a OR b  AS "a_OR_b"
#, a AND b AS "a_AND_b"
#FROM dummy
#;
% sys.dummy,	sys.dummy,	sys.,	sys.,	sys.,	sys.,	sys.,	sys.,	sys.,	sys.,	sys. # table_name
% a,    b,      NOT_a,  a_EQ_b, a_NE_b, a_LT_b, a_LE_b, a_GT_b, a_GE_b, a_OR_b, a_AND_b # name
% boolean,      boolean,        boolean,        boolean,        boolean,        boolean,        boolean,        boolean,        boolean,        boolean,        boolean # type
% 5,    5,      5,      5,      5,      5,      5,      5,      5,      5,      5 # length
[ true, true,   false,  true,   false,  false,  true,   false,  true,   true,   true    ]
[ true, false,  false,  false,  true,   false,  false,  true,   true,   true,   false   ]
[ true, NULL,   false,  NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   true,   NULL    ]
[ false,        true,   true,   false,  true,   true,   true,   false,  false,  true,   false   ]
[ false,        false,  true,   true,   false,  false,  true,   false,  true,   false,  false   ]
[ false,        NULL,   true,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   false   ]
[ NULL, true,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   true,   NULL    ]
[ NULL, false,  NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   false   ]
[ NULL, NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL,   NULL    ]
#DROP table dummy;

# 11:12:20 >  
# 11:12:20 >  Done.
# 11:12:20 >  

