statement ok
set optimizer = 'minimal_pipe'

statement ok
create table oblo (a int)

statement ok
insert into oblo values (4)

statement ok
insert into oblo values (3)

statement ok
insert into oblo values (2)

statement ok
insert into oblo values (1)

query T nosort
   PLAN select * from oblo
----
project (
| table("sys"."oblo") [ "oblo"."a" ]
) [ "oblo"."a" ]

query T nosort
   PLAN select * from oblo OFFSET 2
----
project (
| top N (
| | table("sys"."oblo") [ "oblo"."a" ]
| ) [ bigint(64) NULL, bigint(64) "2" ]
) [ "oblo"."a" ]

query T nosort
   PLAN select * from oblo LIMIT 2
----
project (
| top N (
| | table("sys"."oblo") [ "oblo"."a" ]
| ) [ bigint(64) "2" ]
) [ "oblo"."a" ]

query T nosort
   PLAN select * from oblo LIMIT 1 OFFSET 2
----
project (
| top N (
| | table("sys"."oblo") [ "oblo"."a" ]
| ) [ bigint(64) "1", bigint(64) "2" ]
) [ "oblo"."a" ]

query T nosort
   PLAN select * from oblo LIMIT 2 OFFSET 1
----
project (
| top N (
| | table("sys"."oblo") [ "oblo"."a" ]
| ) [ bigint(64) "2", bigint(64) "1" ]
) [ "oblo"."a" ]

query T nosort
   PLAN select * from oblo ORDER BY a
----
project (
| table("sys"."oblo") [ "oblo"."a" ]
) [ "oblo"."a" ] [ "oblo"."a" ASC ]

query T nosort
   PLAN select * from oblo ORDER BY a OFFSET 2
----
top N (
| project (
| | table("sys"."oblo") [ "oblo"."a" ]
| ) [ "oblo"."a" ] [ "oblo"."a" ASC ]
) [ bigint(64) NULL, bigint(64) "2" ]

query T nosort
   PLAN select * from oblo ORDER BY a LIMIT 2
----
top N (
| project (
| | table("sys"."oblo") [ "oblo"."a" ]
| ) [ "oblo"."a" ] [ "oblo"."a" ASC ]
) [ bigint(64) "2" ]

query T nosort
   PLAN select * from oblo ORDER BY a LIMIT 2 OFFSET 1
----
top N (
| project (
| | table("sys"."oblo") [ "oblo"."a" ]
| ) [ "oblo"."a" ] [ "oblo"."a" ASC ]
) [ bigint(64) "2", bigint(64) "1" ]

query T nosort
   PLAN select * from oblo ORDER BY a LIMIT 1 OFFSET 2
----
top N (
| project (
| | table("sys"."oblo") [ "oblo"."a" ]
| ) [ "oblo"."a" ] [ "oblo"."a" ASC ]
) [ bigint(64) "1", bigint(64) "2" ]

query T python .explain.function_histogram
EXPLAIN select * from oblo
----
algebra.projection
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
EXPLAIN select * from oblo OFFSET 2
----
algebra.projection
2
algebra.subslice
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
EXPLAIN select * from oblo LIMIT 2
----
algebra.projection
2
algebra.subslice
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
EXPLAIN select * from oblo LIMIT 1 OFFSET 2
----
algebra.projection
2
algebra.subslice
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
EXPLAIN select * from oblo LIMIT 2 OFFSET 1
----
algebra.projection
2
algebra.subslice
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
EXPLAIN select * from oblo ORDER BY a
----
algebra.projection
2
algebra.sort
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
EXPLAIN select * from oblo ORDER BY a OFFSET 2
----
algebra.projection
3
algebra.sort
1
algebra.subslice
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
EXPLAIN select * from oblo ORDER BY a LIMIT 2
----
algebra.firstn
1
algebra.projection
4
algebra.sort
1
algebra.subslice
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
EXPLAIN select * from oblo ORDER BY a LIMIT 2 OFFSET 1
----
algebra.firstn
1
algebra.projection
4
algebra.sort
1
algebra.subslice
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
EXPLAIN select * from oblo ORDER BY a LIMIT 1 OFFSET 2
----
algebra.firstn
1
algebra.projection
4
algebra.sort
1
algebra.subslice
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query I rowsort
        select * from oblo
----
1
2
3
4

query I rowsort
        select * from oblo OFFSET 2
----
1
2

query I rowsort
        select * from oblo LIMIT 2
----
3
4

query I rowsort
        select * from oblo LIMIT 1 OFFSET 2
----
2

query I rowsort
        select * from oblo LIMIT 2 OFFSET 1
----
2
3

query I rowsort
        select * from oblo ORDER BY a
----
1
2
3
4

query I rowsort
        select * from oblo ORDER BY a OFFSET 2
----
3
4

query I rowsort
        select * from oblo ORDER BY a LIMIT 2
----
1
2

query I rowsort
        select * from oblo ORDER BY a LIMIT 2 OFFSET 1
----
2
3

query I rowsort
        select * from oblo ORDER BY a LIMIT 1 OFFSET 2
----
3

statement ok
drop table oblo

statement ok
set optimizer = 'default_pipe'

