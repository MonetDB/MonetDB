stdout of test 'mat.slice_limit1.Bug-2645` in directory 'sql/test/BugTracker-2010` itself:


# 15:04:12 >  
# 15:04:12 >   mserver5 "--config=/export/scratch0/zhang/monet-install/candidate/debug/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/export/scratch0/zhang/monet-install/candidate/debug/lib/MonetDB5:/export/scratch0/zhang/monet-install/candidate/debug/lib/MonetDB5/lib:/export/scratch0/zhang/monet-install/candidate/debug/lib/MonetDB5/bin" --set "gdk_dbfarm=/export/scratch0/zhang/monet-install/candidate/debug/var/MonetDB5/dbfarm"  --set mapi_open=true --set xrpc_open=true --set mapi_port=37776 --set xrpc_port=42741 --set monet_prompt= --set mal_listing=2 --trace  "--dbname=mTests_src_test_BugTracker-2010" --set mal_listing=0 ; echo ; echo Over..
# 15:04:12 >  

# MonetDB server v5.20.4, based on kernel v1.38.4
# Not released
# Serving database 'mTests_src_test_BugTracker-2010', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.751 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://halfdan.ins.cwi.nl:37776/
# MonetDB/SQL module v2.38.4 loaded
# MonetDB/GIS module v0.18.4 loaded



# 15:04:12 >  
# 15:04:12 >  mclient -lsql -ftest -i -e --host=halfdan --port=37776 
# 15:04:12 >  

#create table slice_test (x int, y int, val int);
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 0, 1, 12985);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#insert into slice_test values ( 1, 1, 28323);
[ 1	]
#insert into slice_test values ( 3, 5, 89439);
[ 1	]
#create function GetTrace()
#	returns table (
#		event integer,		-- event counter
#		clk varchar(20), 	-- wallclock, no mtime in kernel
#		pc varchar(50), 	-- module.function[nr]
#		thread int, 		-- thread identifier
#		ticks integer, 		-- time in microseconds
#		reads integer, 		-- number of blocks read
#		writes integer, 	-- number of blocks written
#		rbytes integer,		-- amount of bytes touched
#		wbytes integer,		-- amount of bytes written
#		type string,		-- return types
#TRACE select x,y from slice_test limit 1;
% sys.slice_test,	sys.slice_test # table_name
% x,	y # name
% int,	int # type
% 1,	1 # length
[ 0,	1	]
#SELECT count(*) FROM
#( SELECT count(*) AS mat       FROM TheTrace WHERE stmt LIKE '% := mat.%'       ) as m,
#( SELECT count(*) AS mat_slice FROM TheTrace WHERE stmt LIKE '% := mat.slice(%' ) as ms,
#( SELECT count(*) AS mat_pack  FROM TheTrace WHERE stmt LIKE '% := mat.pack%(%' ) as mp
#WHERE ( mat = 0 AND mat_slice+mat_pack = 0 ) OR ( mat > 0 AND mat_slice+mat_pack > 0 );
% .L4 # table_name
% L4 # name
% wrd # type
% 1 # length
[ 1	]
#TRACE select cast(x as string)||'-bla-'||cast(y as string) from slice_test limit 1;
% sys.L # table_name
% concat_concat_x # name
% varchar # type
% 7 # length
[ "0-bla-1"	]
#SELECT count(*) FROM
#( SELECT count(*) AS mat       FROM TheTrace WHERE stmt LIKE '% := mat.%'       ) as m,
#( SELECT count(*) AS mat_slice FROM TheTrace WHERE stmt LIKE '% := mat.slice(%' ) as ms,
#( SELECT count(*) AS mat_pack  FROM TheTrace WHERE stmt LIKE '% := mat.pack%(%' ) as mp
#WHERE ( mat = 0 AND mat_slice+mat_pack = 0 ) OR ( mat > 0 AND mat_slice+mat_pack > 0 );
% .L4 # table_name
% L4 # name
% wrd # type
% 1 # length
[ 1	]
#drop function GetTrace;
#drop table slice_test;

# 10:54:05 >  
# 10:54:05 >  Done.
# 10:54:05 >  

