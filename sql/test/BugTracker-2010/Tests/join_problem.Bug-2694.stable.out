stdout of test 'join_problem.Bug-2694` in directory 'sql/test/BugTracker-2010` itself:


# 10:39:58 >  
# 10:39:58 >   mserver5 "--config=/ufs/manegold/_/scratch0/Monet/HG/Oct2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/manegold/_/scratch0/Monet/HG/Oct2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/lib64/MonetDB5:/ufs/manegold/_/scratch0/Monet/HG/Oct2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/lib64/MonetDB5/lib:/ufs/manegold/_/scratch0/Monet/HG/Oct2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/manegold/_/scratch0/Monet/HG/Oct2010/prefix.--enable-strict_--disable-debug_--enable-optimize_--enable-assert/var/MonetDB5/dbfarm"  --set mapi_open=true --set xrpc_open=true --set mapi_port=35126 --set xrpc_port=47300 --set monet_prompt= --trace --forcemito --set mal_listing=2  "--dbname=mTests_src_test_BugTracker-2010" --set mal_listing=0 ; echo ; echo Over..
# 10:39:58 >  

# MonetDB server v5.22.0, based on kernel v1.40.1
# Not released
# Serving database 'mTests_src_test_BugTracker-2010', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 7.750 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://rig.ins.cwi.nl:35126/
# MonetDB/SQL module v2.40.0 loaded

# SQL catalog created, loading sql scripts once


# 10:39:58 >  
# 10:39:58 >  mclient -lsql -ftest -i -e --host=rig --port=35126 
# 10:39:58 >  

#start transaction;
#CREATE TABLE "time" (
#  "data_id" BIGINT NOT NULL,
#  "header_id" BIGINT NOT NULL,
#  "data_item" VARCHAR(24) NOT NULL,
#  "opr_date" DATE NOT NULL,
#  "opr_hr" INT NOT NULL,
#  "opr_min" INT NOT NULL,
#  "yyyymmddhh" BIGINT NOT NULL,
#  "interval_num" INT NOT NULL,
#  "svalue" VARCHAR(10) NOT NULL,
#  "years" SMALLINT NOT NULL,
#  "months" SMALLINT NOT NULL,
#  "yyyymm" varchar(7) NOT NULL,
#  "quarter" SMALLINT NOT NULL
#);
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (100, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 1, 0, 2009040101, 1, 'OFF', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (101, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 2, 0, 2009040102, 2, 'OFF', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (102, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 3, 0, 2009040103, 3, 'OFF', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (103, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 4, 0, 2009040104, 4, 'OFF', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (104, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 5, 0, 2009040105, 5, 'OFF', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (105, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 6, 0, 2009040106, 6, 'OFF', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (106, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 7, 0, 2009040107, 7, 'ON', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (107, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 8, 0, 2009040108, 8, 'ON', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (108, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 9, 0, 2009040109, 9, 'ON', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (109, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 10, 0, 2009040110, 10, 'ON', 2009, 4, '2009-04', 2 );
[ 1	]
#INSERT INTO time( data_id, header_id, data_item, opr_date, opr_hr, opr_min, yyyymmddhh, interval_num, svalue, years, months, yyyymm, quarter)
#    VALUES
#    (110, 14, 'ATL_PEAK_ON_OFF_FLG', '2009-04-01', 11, 0, 2009040111, 11, 'ON', 2009, 4, '2009-04', 2 );
[ 1	]
#select t1.opr_date, t1.opr_hr, t1.svalue,  t1.yyyymmddhh - t2.avg_yyyymmddhh
#from time t1
#left join -- works
#(select extract(year from opr_date) as y, extract(month from opr_date) as m, svalue, avg(yyyymmddhh) as avg_yyyymmddhh from time group by y, m, svalue) as t2
#on extract(year from t1.opr_date) = t2.y
#and extract(month from t1.opr_date) = t2.m
#and t1.svalue = t2.svalue
#order by t1.opr_hr;
% .t1,	.t1,	.t1,	.%7 # table_name
% opr_date,	opr_hr,	svalue,	%7 # name
% date,	int,	varchar,	double # type
% 10,	2,	3,	24 # length
[ 2009-04-01,	1,	"OFF",	-2.5	]
[ 2009-04-01,	2,	"OFF",	-1.5	]
[ 2009-04-01,	3,	"OFF",	-0.5	]
[ 2009-04-01,	4,	"OFF",	0.5	]
[ 2009-04-01,	5,	"OFF",	1.5	]
[ 2009-04-01,	6,	"OFF",	2.5	]
[ 2009-04-01,	7,	"ON",	-2	]
[ 2009-04-01,	8,	"ON",	-1	]
[ 2009-04-01,	9,	"ON",	0	]
[ 2009-04-01,	10,	"ON",	1	]
[ 2009-04-01,	11,	"ON",	2	]
#select t1.opr_date, t1.opr_hr, t1.svalue,  t1.yyyymmddhh - t2.avg_yyyymmddhh
#from time t1
#join       -- crashes (assertion fails)
#(select extract(year from opr_date) as y, extract(month from opr_date) as m, svalue, avg(yyyymmddhh) as avg_yyyymmddhh from time group by y, m, svalue) as t2
#on extract(year from t1.opr_date) = t2.y
#and extract(month from t1.opr_date) = t2.m
#and t1.svalue = t2.svalue
#order by t1.opr_hr;
% sys.t1,	sys.t1,	sys.t1,	sys.%7 # table_name
% opr_date,	opr_hr,	svalue,	%7 # name
% date,	int,	varchar,	double # type
% 10,	2,	3,	24 # length
[ 2009-04-01,	1,	"OFF",	-2.5	]
[ 2009-04-01,	2,	"OFF",	-1.5	]
[ 2009-04-01,	3,	"OFF",	-0.5	]
[ 2009-04-01,	4,	"OFF",	0.5	]
[ 2009-04-01,	5,	"OFF",	1.5	]
[ 2009-04-01,	6,	"OFF",	2.5	]
[ 2009-04-01,	7,	"ON",	-2	]
[ 2009-04-01,	8,	"ON",	-1	]
[ 2009-04-01,	9,	"ON",	0	]
[ 2009-04-01,	10,	"ON",	1	]
[ 2009-04-01,	11,	"ON",	2	]

# 10:39:58 >  
# 10:39:58 >  Done.
# 10:39:58 >  

