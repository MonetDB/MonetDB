stdout of test 'type_resolution_error_in_SQL_procedural_code.Bug-3143` in directory 'sql/test/BugTracker-2012` itself:


# 15:17:51 >  
# 15:17:51 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/ufs/goncalve/scratch/MonetDB/current/debug/MonetDB/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=35055" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_test_BugTracker-2012" "--set" "mal_listing=0"
# 15:17:51 >  

# MonetDB 5 server v11.13.6
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2012', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.629 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://lyon.ins.cwi.nl:35055/
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_history.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 39_analytics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:17:51 >  
# 15:17:51 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=lyon" "--port=35055"
# 15:17:51 >  

#CREATE TABLE istream(
#	ip        INET,
#	location  VARCHAR(5),
#	kind      VARCHAR(50),
#	value     DOUBLE
#);
#CREATE TABLE area(
#	ip INET,
#	location varchar(5),
#	primary key(ip)
#); 
#CREATE TABLE sensors(
#	like istream,
#	time timestamp default now()
#);
#CREATE TABLE states(
#	location varchar(5),
#	time timestamp default now(),
#	status varchar(20) default 'normal'
#);
#CREATE TABLE warden(
#	location varchar(5),
#	message  varchar(20)
#);
#CREATE TABLE observations(
#	location varchar(5),
#	message  varchar(20) 
#);
#CREATE PROCEDURE enrich_a()
#BEGIN
#    INSERT INTO sensors(ip, location, kind,value)
#        SELECT ip, substring(location,0,3), kind, value FROM istream;
#    IF TRUE
#    THEN
#        INSERT INTO area SELECT ip, substring(location,0,3) FROM
#istream;
#    END IF;
#END;
#CREATE PROCEDURE enrich_c()
#BEGIN
#    DECLARE cnt INTEGER;
#    SET cnt = (SELECT count(*) FROM area ) ;
#    INSERT INTO sensors(ip, location, kind,value)
#        SELECT ip, substring(location,0,3), kind, value FROM istream;
#    IF cnt = 0
#    THEN
#        INSERT INTO area SELECT ip, substring(location,0,3) FROM
#istream;
#    END IF;
#END;
#drop procedure enrich_a();
#drop procedure enrich_b();
#drop procedure enrich_c();
#drop TABLE istream;
#drop TABLE area;
#drop TABLE sensors;
#drop TABLE states;
#drop TABLE warden;
#drop TABLE observations;

# 15:17:52 >  
# 15:17:52 >  "Done."
# 15:17:52 >  

