stdout of test 'conditions_when_for_triggers_do_not_work.Bug-2073` in directory 'sql/test/BugTracker-2012` itself:


# 12:54:56 >  
# 12:54:56 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/ufs/goncalve/scratch/MonetDB/current/debug/MonetDB/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=31615" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_test_BugTracker-2012" "--set" "mal_listing=0"
# 12:54:56 >  

# MonetDB 5 server v11.13.6
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2012', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.629 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://lyon.ins.cwi.nl:31615/
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_history.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 39_analytics.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 12:54:56 >  
# 12:54:56 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=lyon" "--port=31615"
# 12:54:56 >  

#create table t1_2073 (id serial, toggle boolean);
#create table t2_2073 (id serial, ref bigint);
#insert into t1_2073 (toggle) values (false);
[ 1	]
#insert into t1_2073 (toggle) values (false);
[ 1	]
#create trigger updateMe
#        after update on t1_2073 referencing new row new_row
#        for each row when new_row.toggle = true
#                insert into t2_2073 (ref) values (new_row.id);
#update t1_2073 set toggle = true where id = 1;
[ 1	]
#select * from t2_2073;
% sys.t2_2073,	sys.t2_2073 # table_name
% id,	ref # name
% int,	bigint # type
% 1,	1 # length
[ 1,	1	]
#drop table t1_2073 CASCADE;
#drop table t2_2073 CASCADE;
#create table t1_2073 (id serial, toggle boolean);
#create table t2_2073 (id serial, ref bigint);
#insert into t1_2073 (toggle) values (false);
[ 1	]
#insert into t1_2073 (toggle) values (false);
[ 1	]
#create trigger updateMe2
#        after update on t1_2073 referencing new row new_row
#        for each row insert into t2_2073 (ref) values (new_row.id);
#update t1_2073 set toggle = true where id = 1;
[ 1	]
#select * from t2_2073;
% sys.t2_2073,	sys.t2_2073 # table_name
% id,	ref # name
% int,	bigint # type
% 1,	1 # length
[ 1,	1	]
#drop table t1_2073 CASCADE;
#drop table t2_2073 CASCADE;

# 12:54:56 >  
# 12:54:56 >  "Done."
# 12:54:56 >  

