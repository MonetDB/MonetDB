stdout of test 'predicate_select.Bug-3090` in directory 'sql/test/BugTracker-2012` itself:


# 18:53:13 >  
# 18:53:13 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/home/niels/scratch/rc-clean/Linux-x86_64/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=32323" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_test_BugTracker-2012" "--set" "mal_listing=0"
# 18:53:13 >  

# MonetDB 5 server v11.9.2
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2012', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 3.778 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://niels.nesco.mine.nu:32323/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 18:53:13 >  
# 18:53:13 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=niels" "--port=32323"
# 18:53:13 >  

#CREATE TABLE "sys"."tbls" (
#	"id"            INTEGER,
#	"name"          VARCHAR(1024),
#	"schema_id"     INTEGER,
#	"query"         VARCHAR(2048),
#	"type"          SMALLINT,
#	"system"        BOOLEAN,
#	"commit_action" SMALLINT,
#	"readonly"      BOOLEAN,
#	"temporary"     SMALLINT
#);
#COPY 40 RECORDS INTO "sys"."tbls" FROM stdin USING DELIMITERS '\t','\n','"';
#2001	"schemas"	2000	NULL	0	true	0	false	0
#2007	"types"	2000	NULL	0	true	0	false	0
#2016	"functions"	2000	NULL	0	true	0	false	0
#2027	"args"	2000	NULL	0	true	0	false	0
#2036	"sequences"	2000	NULL	0	true	0	false	0
#2046	"dependencies"	2000	NULL	0	true	0	false	0
#2050	"connections"	2000	NULL	0	true	0	false	0
#2059	"_tables"	2000	NULL	0	true	0	false	0
#2068	"_columns"	2000	NULL	0	true	0	false	0
#2079	"keys"	2000	NULL	0	true	0	false	0
#2086	"idxs"	2000	NULL	0	true	0	false	0
[ 40	]
#select name, schema_id, query, type, system, commit_action, readonly, temporary from tbls where 1;
% sys.tbls,	sys.tbls,	sys.tbls,	sys.tbls,	sys.tbls,	sys.tbls,	sys.tbls,	sys.tbls # table_name
% name,	schema_id,	query,	type,	system,	commit_action,	readonly,	temporary # name
% varchar,	int,	varchar,	smallint,	boolean,	smallint,	boolean,	smallint # type
% 17,	4,	526,	1,	5,	1,	5,	1 # length
[ "schemas",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "types",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "functions",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "args",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "sequences",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "dependencies",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "connections",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "_tables",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "_columns",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "keys",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "idxs",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "triggers",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "objects",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "_tables",	2106,	NULL,	0,	true,	2,	false,	0	]
[ "_columns",	2106,	NULL,	0,	true,	2,	false,	0	]
[ "keys",	2106,	NULL,	0,	true,	2,	false,	0	]
[ "idxs",	2106,	NULL,	0,	true,	2,	false,	0	]
[ "triggers",	2106,	NULL,	0,	true,	2,	false,	0	]
[ "objects",	2106,	NULL,	0,	true,	2,	false,	0	]
[ "tables",	2000,	"SELECT * FROM (SELECT p.*, 0 AS \"temporary\" FROM \"sys\".\"_tables\" AS p UNION ALL SELECT t.*, 1 AS \"temporary\" FROM \"tmp\".\"_tables\" AS t) AS tables where tables.type <> 2;",	1,	true,	0,	false,	0	]
[ "columns",	2000,	"SELECT * FROM (SELECT p.* FROM \"sys\".\"_columns\" AS p UNION ALL SELECT t.* FROM \"tmp\".\"_columns\" AS t) AS columns;",	1,	true,	0,	false,	0	]
[ "db_user_info",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "users",	2000,	"SELECT u.\"name\" AS \"name\", ui.\"fullname\", ui.\"default_schema\" FROM db_users() AS u LEFT JOIN \"sys\".\"db_user_info\" AS ui ON u.\"name\" = ui.\"name\" ;",	1,	true,	0,	false,	0	]
[ "user_role",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "auths",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "privileges",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "querylog_catalog",	2000,	"-- create table views for convenience\ncreate view sys.querylog_catalog as select * from sys.querylog_catalog();",	1,	true,	0,	false,	0	]
[ "querylog_calls",	2000,	"create view sys.querylog_calls as select * from sys.querylog_calls();",	1,	true,	0,	false,	0	]
[ "querylog_history",	2000,	"create view sys.querylog_history as\nselect qd.*, ql.\"start\",ql.\"stop\", ql.arguments, ql.tuples, ql.run, ql.ship, ql.cpu, ql.space, ql.io \nfrom sys.querylog_catalog() qd, sys.querylog_calls() ql\nwhere qd.id = ql.id and qd.owner = user;",	1,	true,	0,	false,	0	]
[ "tracelog",	2000,	"create view sys.tracelog as select * from sys.tracelog();",	1,	true,	0,	false,	0	]
[ "sessions",	2000,	"create view sys.sessions as select * from sys.sessions();",	1,	true,	0,	false,	0	]
[ "optimizers",	2000,	"create view sys.optimizers as select * from sys.optimizers();",	1,	true,	0,	false,	0	]
[ "environment",	2000,	"create view sys.environment as select * from sys.environment();",	1,	true,	0,	false,	0	]
[ "queue",	2000,	"create view sys.queue as select * from sys.queue();",	1,	true,	0,	false,	0	]
[ "storage",	2000,	"create view sys.storage as select * from sys.storage();",	1,	true,	0,	false,	0	]
[ "storagemodelinput",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "storagemodel",	2000,	"create view sys.storagemodel as select * from sys.storagemodel();",	1,	true,	0,	false,	0	]
[ "tablestoragemodel",	2000,	"-- A summary of the table storage requirement is is available as a table view.\n-- The auxiliary column denotes the maximum space if all non-sorted columns\n-- would be augmented with a hash (rare situation)\ncreate view sys.tablestoragemodel\nas select \"schema\",\"table\",max(count) as \"count\",\n\tsum(columnsize) as columnsize,\n\tsum(heapsize) as heapsize,\n\tsum(hashes) as hashes,\n\tsum(\"imprints\") as \"imprints\",\n\tsum(case when sorted = false then 8 * count else 0 end) as auxiliary\nfrom sys.storagemodel() group by \"schema\",\"table\";",	1,	true,	0,	false,	0	]
[ "statistics",	2000,	NULL,	0,	true,	0,	false,	0	]
[ "systemfunctions",	2000,	NULL,	0,	true,	0,	false,	0	]

# 18:53:13 >  
# 18:53:13 >  "Done."
# 18:53:13 >  

