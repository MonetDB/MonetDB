stdout of test 'correlated_groupby_in_selection.Bug-3011` in directory 'sql/test/BugTracker-2012` itself:


# 10:56:32 >  
# 10:56:32 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/home/niels/scratch/rc-clean/Linux-x86_64/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=38171" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_test_BugTracker-2012" "--set" "mal_listing=0"
# 10:56:32 >  

# MonetDB 5 server v11.7.8
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2012', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 3.779 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://niels.nesco.mine.nu:38171/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 10:56:33 >  
# 10:56:33 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=niels" "--port=38171"
# 10:56:33 >  

#CREATE TABLE "sys"."test" (
#        "version"            DECIMAL(2)    NOT NULL,
#        "implicit"           BOOLEAN       NOT NULL,
#        "dataownercode"      VARCHAR(10)   NOT NULL,
#        "lineplanningnumber" VARCHAR(10)   NOT NULL,
#        "journeypatterncode" VARCHAR(10)   NOT NULL,
#        "timinglinkorder"    DECIMAL(3)    NOT NULL,
#        "userstopcodebegin"  VARCHAR(10)   NOT NULL,
#        "userstopcodeend"    VARCHAR(10)   NOT NULL,
#        "confinrelcode"      VARCHAR(10)   NOT NULL,
#        "destcode"           VARCHAR(10)   NOT NULL,
#select dataownercode, lineplanningnumber, journeypatterncode, timinglinkorder,
#userstopcodebegin, istimingstop,
#       (select count(*) from test as counter where
#            counter.dataownercode = test.dataownercode and
#            counter.lineplanningnumber = test.lineplanningnumber and
#            counter.journeypatterncode = test.journeypatterncode and
#            counter.timinglinkorder < test.timinglinkorder and
#            counter.userstopcodebegin = test.userstopcodebegin
#            group by dataownercode, lineplanningnumber, journeypatterncode) as
% .test,	.test,	.test,	.test,	.test,	.test,	. # table_name
% dataownercode,	lineplanningnumber,	journeypatterncode,	timinglinkorder,	userstopcodebegin,	istimingstop,	passagesequencenumber # name
% varchar,	varchar,	varchar,	decimal,	varchar,	boolean,	bigint # type
% 0,	0,	0,	4,	0,	5,	1 # length
#select dataownercode, lineplanningnumber, journeypatterncode, timinglinkorder,
#userstopcodebegin, istimingstop,
#       (select count(*) from test as counter where
#            counter.dataownercode = test.dataownercode and
#            counter.lineplanningnumber = test.lineplanningnumber and
#            counter.journeypatterncode = test.journeypatterncode and
#            counter.timinglinkorder < test.timinglinkorder and
#            counter.userstopcodebegin = test.userstopcodebegin) as
#passagesequencenumber 
% .test,	.test,	.test,	.test,	.test,	.test,	. # table_name
% dataownercode,	lineplanningnumber,	journeypatterncode,	timinglinkorder,	userstopcodebegin,	istimingstop,	passagesequencenumber # name
% varchar,	varchar,	varchar,	decimal,	varchar,	boolean,	bigint # type
% 0,	0,	0,	4,	0,	5,	1 # length
#COPY 10 RECORDS INTO "test" FROM STDIN USING DELIMITERS ',', '\n';
#1,true,CXX,A001,0,0,40000010,40004015,santro,A00100998,true,,34
#1,true,CXX,A001,0,1,40004015,40004021,santro,A00100998,false,,34
#1,true,CXX,A001,0,2,40004021,40002570,santro,A00100998,false,,34
#1,true,CXX,A001,0,3,40002570,40002550,santro,A00100998,false,,34
#1,true,CXX,A001,0,4,40002550,40002590,santro,A00100998,false,,34
#1,true,CXX,A001,0,5,40002590,40002610,santro,A00100998,false,,34
#1,true,CXX,A001,0,6,40002610,40002630,santro,A00100998,false,,34
[ 10	]
#select dataownercode, lineplanningnumber, journeypatterncode, timinglinkorder,
#userstopcodebegin, istimingstop,
#       (select count(*) from test as counter where
#            counter.dataownercode = test.dataownercode and
#            counter.lineplanningnumber = test.lineplanningnumber and
#            counter.journeypatterncode = test.journeypatterncode and
#            counter.timinglinkorder < test.timinglinkorder and
#            counter.userstopcodebegin = test.userstopcodebegin
#            group by dataownercode, lineplanningnumber, journeypatterncode) as
% .test,	.test,	.test,	.test,	.test,	.test,	. # table_name
% dataownercode,	lineplanningnumber,	journeypatterncode,	timinglinkorder,	userstopcodebegin,	istimingstop,	passagesequencenumber # name
% varchar,	varchar,	varchar,	decimal,	varchar,	boolean,	bigint # type
% 3,	4,	1,	4,	8,	5,	1 # length
[ "CXX",	"A001",	"0",	0,	"40000010",	true,	NULL	]
[ "CXX",	"A001",	"0",	1,	"40004015",	false,	NULL	]
[ "CXX",	"A001",	"0",	2,	"40004021",	false,	NULL	]
[ "CXX",	"A001",	"0",	3,	"40002570",	false,	NULL	]
[ "CXX",	"A001",	"0",	4,	"40002550",	false,	NULL	]
[ "CXX",	"A001",	"0",	5,	"40002590",	false,	NULL	]
[ "CXX",	"A001",	"0",	6,	"40002610",	false,	NULL	]
[ "CXX",	"A001",	"0",	7,	"40002630",	false,	NULL	]
[ "CXX",	"A001",	"0",	8,	"40002690",	false,	NULL	]
[ "CXX",	"A001",	"0",	9,	"40002770",	false,	NULL	]
#select dataownercode, lineplanningnumber, journeypatterncode, timinglinkorder,
#userstopcodebegin, istimingstop,
#       (select count(*) from test as counter where
#            counter.dataownercode = test.dataownercode and
#            counter.lineplanningnumber = test.lineplanningnumber and
#            counter.journeypatterncode = test.journeypatterncode and
#            counter.timinglinkorder < test.timinglinkorder and
#            counter.userstopcodebegin = test.userstopcodebegin) as
#passagesequencenumber 
% .test,	.test,	.test,	.test,	.test,	.test,	. # table_name
% dataownercode,	lineplanningnumber,	journeypatterncode,	timinglinkorder,	userstopcodebegin,	istimingstop,	passagesequencenumber # name
% varchar,	varchar,	varchar,	decimal,	varchar,	boolean,	bigint # type
% 3,	4,	1,	4,	8,	5,	1 # length
[ "CXX",	"A001",	"0",	0,	"40000010",	true,	0	]
[ "CXX",	"A001",	"0",	1,	"40004015",	false,	0	]
[ "CXX",	"A001",	"0",	2,	"40004021",	false,	0	]
[ "CXX",	"A001",	"0",	3,	"40002570",	false,	0	]
[ "CXX",	"A001",	"0",	4,	"40002550",	false,	0	]
[ "CXX",	"A001",	"0",	5,	"40002590",	false,	0	]
[ "CXX",	"A001",	"0",	6,	"40002610",	false,	0	]
[ "CXX",	"A001",	"0",	7,	"40002630",	false,	0	]
[ "CXX",	"A001",	"0",	8,	"40002690",	false,	0	]
[ "CXX",	"A001",	"0",	9,	"40002770",	false,	0	]
#DROP table test;

# 10:56:33 >  
# 10:56:33 >  "Done."
# 10:56:33 >  

