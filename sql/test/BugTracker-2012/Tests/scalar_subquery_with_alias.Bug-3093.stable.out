stdout of test 'scalar_subquery_with_alias.Bug-3093` in directory 'sql/test/BugTracker-2012` itself:


# 15:14:27 >  
# 15:14:27 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/export/scratch2/bscheers/databases/MonetDB-BugTest/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=30915" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_test_BugTracker-2012" "--set" "mal_listing=0"
# 15:14:27 >  

# MonetDB 5 server v11.13.6
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2012', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 15.629 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://napels.ins.cwi.nl:30915/
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded

# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_history.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_compress.sql
# loading sql script: 18_dictionary.sql
# loading sql script: 19_cluster.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 39_analytics.sql
# loading sql script: 40_geom.sql
# loading sql script: 80_udf.sql
# loading sql script: 99_system.sql

# 15:14:27 >  
# 15:14:27 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=napels" "--port=30915"
# 15:14:27 >  

#CREATE TABLE test1 ( id INT, name VARCHAR(20));
#CREATE TABLE test2 ( id INT, name VARCHAR(20));
#SELECT (SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       ) AS c1
#      ,(SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       ) AS c2
#  FROM test1 a
#;
% .,	. # table_name
% c1,	c2 # name
% bigint,	bigint # type
% 1,	1 # length
#SELECT (SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       )
#      ,(SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       )
#  FROM test1 a
#;
% .,	. # table_name
% %2,	%4 # name
% bigint,	bigint # type
% 1,	1 # length
#SELECT (SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       )
#      ,(SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       ) AS c2
#  FROM test1 a
#;
% .,	. # table_name
% %2,	c2 # name
% bigint,	bigint # type
% 1,	1 # length
#SELECT (SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       ) AS c2
#      ,(SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       ) AS c1
#  FROM test1 a
#;
% .,	. # table_name
% c2,	c1 # name
% bigint,	bigint # type
% 1,	1 # length
#SELECT (SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       ) AS c1
#      ,(SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       ) AS c2
#  FROM test1 a
#;
% .,	. # table_name
% c1,	c2 # name
% bigint,	bigint # type
% 1,	1 # length
#DROP TABLE test1;
#DROP TABLE test2;
#CREATE TABLE test1 ( id INT, name VARCHAR(20));
#insert INTO test1 values (1,'name1'),(2,'name2'),(3,'name3');
[ 3	]
#CREATE TABLE test2 ( id INT, name VARCHAR(20));
#insert INTO test2 values (3,'name3'),(4,'name4');
[ 2	]
#SELECT (SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       ) AS c1
#      ,(SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       ) AS c2
#  FROM test1 a
#;
% .,	. # table_name
% c1,	c2 # name
% bigint,	bigint # type
% 1,	1 # length
[ 3,	0	]
[ 3,	0	]
[ 3,	1	]
#SELECT (SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       )
#      ,(SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       )
#  FROM test1 a
#;
% .,	. # table_name
% %2,	%4 # name
% bigint,	bigint # type
% 1,	1 # length
[ 3,	0	]
[ 3,	0	]
[ 3,	1	]
#SELECT (SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       )
#      ,(SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       ) AS c2
#  FROM test1 a
#;
% .,	. # table_name
% %2,	c2 # name
% bigint,	bigint # type
% 1,	1 # length
[ 3,	0	]
[ 3,	0	]
[ 3,	1	]
#SELECT (SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       ) AS c2
#      ,(SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       ) AS c1
#  FROM test1 a
#;
% .,	. # table_name
% c2,	c1 # name
% bigint,	bigint # type
% 1,	1 # length
[ 0,	3	]
[ 0,	3	]
[ 1,	3	]
#SELECT (SELECT COUNT(id) AS cnt1 
#          FROM test1 
#       ) AS c1
#      ,(SELECT COUNT(b.id) AS cnt2 
#          FROM test2 b 
#         WHERE a.id = b.id
#       ) AS c2
#  FROM test1 a
#;
% .,	. # table_name
% c1,	c2 # name
% bigint,	bigint # type
% 1,	1 # length
[ 3,	0	]
[ 3,	0	]
[ 3,	1	]
#DROP TABLE test1;
#DROP TABLE test2;

# 15:14:27 >  
# 15:14:27 >  "Done."
# 15:14:27 >  

