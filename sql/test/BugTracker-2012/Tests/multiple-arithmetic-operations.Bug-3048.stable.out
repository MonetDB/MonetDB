stdout of test 'multiple-arithmetic-operations.Bug-3048` in directory 'sql/test/BugTracker-2012` itself:


# 14:56:17 >  
# 14:56:17 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "gdk_dbfarm=/home/niels/scratch/rc-clean/Linux-x86_64/var/MonetDB" "--set" "mapi_open=true" "--set" "mapi_port=36593" "--set" "monet_prompt=" "--trace" "--forcemito" "--set" "mal_listing=2" "--dbname=mTests_test_BugTracker-2012" "--set" "mal_listing=0"
# 14:56:17 >  

# MonetDB 5 server v11.9.2
# This is an unreleased version
# Serving database 'mTests_test_BugTracker-2012', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 3.778 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://niels.nesco.mine.nu:36593/
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 14:56:17 >  
# 14:56:17 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=niels" "--port=36593"
# 14:56:17 >  

#START TRANSACTION;
#CREATE TABLE "productfeature" (
#  "nr" int primary key,
#  "label" varchar(100) default NULL,
#  "comment" varchar(2000) default NULL,
#  "publisher" int,
#  "publishDate" date
#);
#CREATE TABLE "producttype" (
#  "nr" int primary key,
#  "label" varchar(100) default NULL,
#  "comment" varchar(2000) default NULL,
#  "parent" int,
#  "publisher" int,
#  "publishDate" date
#);
#CREATE TABLE "producer" (
#  "nr" int primary key,
#  "label" varchar(100) default NULL,
#  "comment" varchar(2000) default NULL,
#  "homepage" varchar(100) default NULL,
#  "country" char(2) ,
#  "publisher" int,
#  "publishDate" date
#);
#CREATE TABLE "product" (
#  "nr" int primary key,
#  "label" varchar(100) default NULL,
#  "comment" varchar(2000) default NULL,
#  "producer" int default NULL,
#  "propertyNum1" int default NULL,
#  "propertyNum2" int default NULL,
#  "propertyNum3" int default NULL,
#  "propertyNum4" int default NULL,
#  "propertyNum5" int default NULL,
#  "propertyNum6" int default NULL,
#  "propertyTex1" varchar(250) default NULL,
#  "propertyTex2" varchar(250) default NULL,
#  "propertyTex3" varchar(250) default NULL,
#  "propertyTex4" varchar(250) default NULL,
#CREATE TABLE "producttypeproduct" (
#  "product" int not null,
#  "productType" int not null,
#  PRIMARY KEY ("product", "productType")
#);
#CREATE TABLE "productfeatureproduct" (
#  "product" int not null,
#  "productFeature" int not null,
#  PRIMARY KEY ("product", "productFeature")
#);
#CREATE TABLE "vendor" (
#  "nr" int primary key,
#  "label" varchar(100) default NULL,
#  "comment" varchar(2000) default NULL,
#  "homepage" varchar(100) default NULL,
#  "country" char(2) ,
#  "publisher" int,
#  "publishDate" date
#);
#CREATE TABLE "offer" (
#  "nr" int primary key,
#  "product" int,
#  "producer" int,
#  "vendor" int,
#  "price" double default null,
#  "validFrom" date default null,
#  "validTo" date default null,
#  "deliveryDays" int default null,
#  "offerWebpage" varchar(100) ,
#  "publisher" int,
#  "publishDate" date
#);
#CREATE TABLE "person" (
#  "nr" int primary key,
#  "name" varchar(30) default NULL,
#  "mbox_sha1sum" char(40) ,
#  "country" char(2) ,
#  "publisher" int,
#  "publishDate" date
#);
#CREATE TABLE "review" (
#  "nr" int primary key,
#  "product" int,
#  "producer" int,
#  "person" int,
#  "reviewDate" date default NULL,
#  "title" varchar(200) default NULL,
#  "text" text ,
#  "language" char(2) ,
#  "rating1" int default NULL,
#  "rating2" int default NULL,
#  "rating3" int default NULL,
#  "rating4" int default NULL,
#  "publisher" int,
#  "publishDate" date
#);
#SELECT distinct p.nr, p.label
#  FROM product p, product po,
#   (Select distinct pfp1.product FROM productfeatureproduct pfp1, 
#   (SELECT "productFeature" FROM productfeatureproduct WHERE product=2) pfp2 
#      WHERE pfp2."productFeature"=pfp1."productFeature") pfp
#    WHERE p.nr=pfp.product AND po.nr=2 AND p.nr <> po.nr
#    AND p."propertyNum1" < (po."propertyNum1"+120) AND p."propertyNum1" >
#(po."propertyNum1"-120)
#    AND p."propertyNum2" < (po."propertyNum2"+170) AND p."propertyNum2" >
#(po."propertyNum2"-170);
% sys.p,	sys.p # table_name
% nr,	label # name
% int,	varchar # type
% 1,	0 # length
#ROLLBACK;

# 14:56:17 >  
# 14:56:17 >  "Done."
# 14:56:17 >  

