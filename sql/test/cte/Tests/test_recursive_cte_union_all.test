# simple recursive CTE
query I nosort
with recursive t as (select 1 as x union all select x+1 from t where x < 3) select * from t
----
1
2
3

# simple recursive CTE with an alias
query I nosort
with recursive t as (select 1 as x union all select x+1 from t as m where m.x < 3) select * from t
----
1
2
3

# recursive CTE with multiple references and aliases
query I nosort
with recursive t as (select 1 as x union all select m.x+f.x from t as m, t as f where m.x < 3) select * from t
----
1
2
4

# strings and multiple columns
query IT nosort
with recursive t as (select 1 as x, cast('hello' as varchar) as y union all select x+1, y || '-' || 'hello' from t where x < 3) select * from t
----
1
hello
2
hello-hello
3
hello-hello-hello

# referencing same CTE multiple times
query I nosort
with recursive t as (select 1 as x union all select x+1 from t where x < 3) select min(a1.x) from t a1, t a2
----
1

# nested uncorrelated subquery
query I nosort
with recursive t as (select 1 as x union all select x+(SELECT 1) from t where x < 3) select * from t
----
1
2
3

# use with recursive in table creation
statement ok
create table integers as with recursive t as (select 1 as x union all select x+1 from t where x < 3) select * from t

# more complex uncorrelated subquery
query I nosort
with recursive t as (select (select min(x) from integers) as x union all select x+1 from t where x < 3) select * from t
----
1
2
3

# aggregate function
query I nosort
with recursive t as (select 1 as x union all select sum(x+1) AS x from t where x < 3 group by x) select * from t
----
1
2
3

# need topn push down.
# infinite aggregate function: will result in timeout if pipelining is not implemented
# query I
# with recursive t as (select 1 as x union all select sum(x+1) AS x from t where x < 3)
# select * from (select * from t limit 10) t1(x) order by x nulls last
# ----
# 1
# 2
# 3
# NULL
# NULL
# NULL
# NULL
# NULL
# NULL
# NULL

# recursive CTE with table-producing function
query I nosort
WITH RECURSIVE t AS (
	SELECT 1 AS i
	UNION ALL
	SELECT j
	FROM t, generate_series(0, 11, 1) series(j)
	WHERE j=i+1
)
SELECT * FROM t
----
1
2
3
4
5
6
7
8
9
10

# order by is not allowed in the recursive term of ctes
statement error
with recursive t as (select 1 as x union all select x+1 from t where x < 3 order by x) select * from t
----

# limit is not allowed in the recursive term of ctes
statement error
with recursive t as (select 1 as x union all select x+1 from t where x < 3 LIMIT 1) select * from t
----

# offset is not allowed in the recursive term of ctes
statement error
with recursive t as (select 1 as x union all select x+1 from t where x < 3 OFFSET 1) select * from t
----

# offset is not allowed in the recursive term of ctes
statement error
with recursive t as (select 1 as x union all select x+1 from t where x < 3 LIMIT 1 OFFSET 1) select * from t
----

