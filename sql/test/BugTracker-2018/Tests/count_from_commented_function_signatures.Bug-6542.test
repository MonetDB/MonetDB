statement ok
START TRANSACTION

statement ok
CREATE TABLE sys.myfunctions ("id" INTEGER,"name" VARCHAR(256),"func" VARCHAR(8196),"mod" VARCHAR(8196),"language" INTEGER,	"type" INTEGER,"side_effect" BOOLEAN,"varres" BOOLEAN,"vararg" BOOLEAN,
	"schema_id" INTEGER,"system" BOOLEAN,"semantics" BOOLEAN)

statement ok
CREATE VIEW sys.commented_function_signatures_6542 AS
SELECT f.id AS fid,
       s.name AS schema,
       f.name AS fname,
       f.type AS category,
       f.system AS system,
       CASE RANK() OVER (PARTITION BY f.id ORDER BY p.number ASC) WHEN 1 THEN f.name ELSE NULL END AS name,
       CASE RANK() OVER (PARTITION BY f.id ORDER BY p.number DESC) WHEN 1 THEN c.remark ELSE NULL END AS remark,
       p.type, p.type_digits, p.type_scale,
       ROW_NUMBER() OVER (ORDER BY f.id, p.number) AS line
  FROM sys.myfunctions f
  JOIN sys.comments c ON f.id = c.id
  JOIN sys.schemas s ON f.schema_id = s.id
  LEFT OUTER JOIN sys.args p ON f.id = p.func_id AND p.inout = 1
 WHERE f.system
 ORDER BY line

query ITTIITTTIII rowsort
select * from sys.commented_function_signatures_6542
----

query T nosort
plan select count (*) from sys.commented_function_signatures_6542
----
project (
| group by (
| | project (
| | | project (
| | | | project (
| | | | | project (
| | | | | | project (
| | | | | | | project (
| | | | | | | | project (
| | | | | | | | | left outer join (
| | | | | | | | | | join (
| | | | | | | | | | | semijoin (
| | | | | | | | | | | | select (
| | | | | | | | | | | | | table("sys"."myfunctions") [ "myfunctions"."id" NOT NULL UNIQUE as "f"."id", "myfunctions"."schema_id" NOT NULL UNIQUE as "f"."schema_id", "myfunctions"."system" NOT NULL UNIQUE as "f"."system" ]
| | | | | | | | | | | | ) [ ("f"."system" NOT NULL UNIQUE) = (boolean(1) "true") ],
| | | | | | | | | | | | table("sys"."comments") [ "comments"."id" NOT NULL UNIQUE HASHCOL  as "c"."id" ]
| | | | | | | | | | | ) [ ("f"."id" NOT NULL UNIQUE) = ("c"."id" NOT NULL UNIQUE HASHCOL ) ],
| | | | | | | | | | | table("sys"."schemas") [ "schemas"."id" UNIQUE as "s"."id" ]
| | | | | | | | | | ) [ ("f"."schema_id" NOT NULL UNIQUE) = ("s"."id" UNIQUE) ],
| | | | | | | | | | select (
| | | | | | | | | | | table("sys"."args") [ "args"."func_id" as "p"."func_id", "args"."inout" as "p"."inout", "args"."number" as "p"."number" ]
| | | | | | | | | | ) [ ("p"."inout") = (tinyint(1) "1") ]
| | | | | | | | | ) [ ("f"."id" NOT NULL) = ("p"."func_id") ]
| | | | | | | | ) [ "f"."id" NOT NULL, "p"."number" ] [ "f"."id" ASC NOT NULL, "p"."number" ASC ]
| | | | | | | ) [ "f"."id" NOT NULL, "p"."number" ] [ "f"."id" ASC NOT NULL, "p"."number" NULLS LAST ]
| | | | | | ) [ "f"."id" NOT NULL, "p"."number" ] [ "f"."id" ASC NOT NULL, "p"."number" ASC ]
| | | | | ) [ "f"."id" NOT NULL, "sys"."row_number"("sys"."star"(), boolean(1) "false", "sys"."diff"("sys"."diff"("f"."id" NOT NULL), "p"."number")) as "line" ]
| | | | ) [ "f"."id" NOT NULL as "fid", "line" ]
| | | ) [ "fid" NOT NULL ] [ "line" ASC ]
| | ) [ "fid" NOT NULL as "commented_function_signatures_6542"."fid" ]
| ) [  ] [ "sys"."count"() NOT NULL UNIQUE as "%1"."%1" ]
) [ "%1"."%1" NOT NULL UNIQUE ]

query I rowsort
select count (*) from sys.commented_function_signatures_6542
----
0

statement ok
DROP VIEW sys.commented_function_signatures_6542

statement ok
DROP TABLE sys.myfunctions

statement ok
ROLLBACK

