statement ok
start transaction

statement ok
create table segments (meter int, distance int, speed int)

statement ok
insert into segments values (1,1,1),(9,9,9)

query I rowsort
select t.*                          from segments as s, lateral generate_series(s.meter, cast(s.meter+s.distance+1 as int)) as t
----
1
10
11
12
13
14
15
16
17
18
2
9

query III rowsort
select t.value, s.distance, s.speed from segments as s, lateral generate_series(s.meter, cast(s.meter+s.distance+1 as int)) as t
----
1
1
1
10
9
9
11
9
9
12
9
9
13
9
9
14
9
9
15
9
9
16
9
9
17
9
9
18
9
9
2
1
1
9
9
9

query IIII rowsort
select *                            from segments as s, lateral generate_series(s.meter, cast(s.meter+s.distance+1 as int))
----
1
1
1
1
1
1
1
2
9
9
9
10
9
9
9
11
9
9
9
12
9
9
9
13
9
9
9
14
9
9
9
15
9
9
9
16
9
9
9
17
9
9
9
18
9
9
9
9

query III rowsort
select t.*, s.distance, s.speed     from segments as s, lateral generate_series(s.meter, cast(s.meter+s.distance+1 as int)) as t
----
1
1
1
10
9
9
11
9
9
12
9
9
13
9
9
14
9
9
15
9
9
16
9
9
17
9
9
18
9
9
2
1
1
9
9
9

query III rowsort
select t.meter, s.distance, s.speed from segments as s, lateral generate_series(s.meter, cast(s.meter+s.distance+1 as int)) as t(meter)
----
1
1
1
10
9
9
11
9
9
12
9
9
13
9
9
14
9
9
15
9
9
16
9
9
17
9
9
18
9
9
2
1
1
9
9
9

query III rowsort
select t.*, s.distance, s.speed     from segments as s, lateral generate_series(s.meter, cast(s.meter+s.distance+1 as int)) as t(meter)
----
1
1
1
10
9
9
11
9
9
12
9
9
13
9
9
14
9
9
15
9
9
16
9
9
17
9
9
18
9
9
2
1
1
9
9
9

statement ok
rollback

