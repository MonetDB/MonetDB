stdout of test 'components` in directory 'sql/test/json` itself:


# 18:41:53 >  
# 18:41:53 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35514" "--set" "mapi_usock=/var/tmp/mtest-1955/.s.monetdb.35514" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_json" "--set" "mal_listing=0"
# 18:41:53 >  

# MonetDB 5 server v11.18.0
# This is an unreleased version
# Serving database 'mTests_sql_test_json', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 3.777 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:35514/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1955/.s.monetdb.35514
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded


# 18:41:54 >  
# 18:41:54 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-1955" "--port=35514"
# 18:41:54 >  

#create table jsoncomp(j json);
#insert into jsoncomp values( '{"myBoolean":true,"myList":["a","b"],"myMap":{"c":"d","a":"b"},"myObject":"myClass","myJsonObject":{"myString":"myStringValue"}}');
[ 1	]
#select * from jsoncomp;
% sys.jsoncomp # table_name
% j # name
% json # type
% 128 # length
[ "{\"myBoolean\":true,\"myList\":[\"a\",\"b\"],\"myMap\":{\"c\":\"d\",\"a\":\"b\"},\"myObject\":\"myClass\",\"myJsonObject\":{\"myString\":\"myStringValue\"}}"	]
#declare js json;
#set js = '{"myBoolean":true,"myList":["a","b"],"myMap":{"c":"d","a":"b"},"myObject":"myClass","myJsonObject":{"myString":"myStringValue"}}';
#select json.keyarray(js);
% . # table_name
% %1 # name
% json # type
% 56 # length
[ "[\"myBoolean\",\"myList\",\"myMap\",\"myObject\",\"myJsonObject\"]"	]
#select json.valuearray(js);
% . # table_name
% %1 # name
% json # type
% 73 # length
[ "[true,[\"a\",\"b\"],{\"c\":\"d\",\"a\":\"b\"},\"myClass\",{\"myString\":\"myStringValue\"}]"	]
#select json.keyarray(j) from jsoncomp;
% sys. # table_name
% %1 # name
% json # type
% 56 # length
[ "[\"myBoolean\",\"myList\",\"myMap\",\"myObject\",\"myJsonObject\"]"	]
#select json.valuearray(j) from jsoncomp;
% sys. # table_name
% %1 # name
% json # type
% 73 # length
[ "[true,[\"a\",\"b\"],{\"c\":\"d\",\"a\":\"b\"},\"myClass\",{\"myString\":\"myStringValue\"}]"	]
#drop table jsoncomp;

# 18:41:54 >  
# 18:41:54 >  "Done."
# 18:41:54 >  

