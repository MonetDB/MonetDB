stdout of test 'jsonvalidity.Bug-3753` in directory 'sql/test/json` itself:


# 23:37:49 >
# 23:37:49 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30311" "--set" "mapi_usock=/var/tmp/mtest-17553/.s.monetdb.30311" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/Jul2015//Linux/var/MonetDB/mTests_sql_test_json" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 23:37:49 >

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_sql_test_json', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30311/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17553/.s.monetdb.30311
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.16'
# Finished reading the write-ahead log 'sql_logs/sql/log.16'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded


# 23:37:49 >
# 23:37:49 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-17553" "--port=30311"
# 23:37:49 >

#SELECT json.isvalid('[0,1]');
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isvalid('[0,,1]');
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid(null); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ NULL	]
#SELECT json.isValid(''); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid('null'); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('"'); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid('""'); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('"""'); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid(E'"\\""'); 		-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('""""'); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid(E'"\\"\\""');	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('[]'); 	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('[null]'); 	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('[""]'); 	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('["""]'); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid(E'["\\""]');	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('[""""]'); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid(E'["\\"\\""]'); 	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('{}'); 	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('{"test":null}'); 	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('{"test":""}'); 	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('{"test":"""}'); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid(E'{"test":"\\""}');	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid('{"test":""""}'); 	-- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid(E'{"test":"\\"\\""}'); -- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid(R'"\u003c\""');	-- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid(R'01');             -- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid(R'[01]');           -- false
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ false	]
#SELECT json.isValid(r'0.001');          -- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid(r'-0.001');         -- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid(r'0.001e12');        -- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]
#SELECT json.isValid(r'-0.001e-12');      -- true
% . # table_name
% %1 # name
% boolean # type
% 5 # length
[ true	]

# 16:25:22 >  
# 16:25:22 >  "Done."
# 16:25:22 >  

# 23:37:50 >
# 23:37:50 >  "Done."
# 23:37:50 >
