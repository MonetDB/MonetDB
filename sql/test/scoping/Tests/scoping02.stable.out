stdout of test 'scoping02` in directory 'sql/test/scoping` itself:


# 11:27:58 >  
# 11:27:58 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=36616" "--set" "mapi_usock=/var/tmp/mtest-192174/.s.monetdb.36616" "--forcemito" "--dbpath=/home/ferreira/repositories/MonetDB-scoping/BUILD/var/MonetDB/mTests_sql_test_scoping" "--set" "embedded_c=true"
# 11:27:58 >  

# MonetDB 5 server v11.38.0 (hg id: 59e3c603bbb3+)
# This is an unreleased version
# Serving database 'mTests_sql_test_scoping', using 8 threads
# Compiled for x86_64-pc-linux-gnu/64bit with 128bit integers
# Found 15.498 GiB available main-memory of which we use 12.631 GiB
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2020 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.localdomain:36616/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-192174/.s.monetdb.36616
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded

# 11:27:58 >  
# 11:27:58 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-192174" "--port=36616"
# 11:27:58 >  

#DECLARE TABLE atest (a int);
#INSERT INTO atest VALUES (1);
[ 1	]
#SELECT a FROM atest;
% sys.atest # table_name
% a # name
% int # type
% 1 # length
[ 1	]
#DROP TABLE atest;
#CREATE TABLE sys.mytable (a int);
#INSERT INTO sys.mytable VALUES (1);
[ 1	]
#CREATE OR REPLACE FUNCTION scoping01(i INT) RETURNS INT
#BEGIN
#	DECLARE TABLE mytable (a int);
#	INSERT INTO mytable VALUES (2);
#	IF i = 1 THEN
#		RETURN SELECT a FROM sys.mytable;
#	ELSE
#		RETURN SELECT a FROM mytable;
#	END IF;
#END;
#SELECT scoping01(vals) FROM (VALUES (1), (2)) AS vals(vals);
% . # table_name
% %4 # name
% int # type
% 1 # length
[ 1	]
[ 2	]
#DROP FUNCTION scoping01(INT);
#DROP TABLE sys.mytable;
#CREATE OR REPLACE FUNCTION scoping02(i INT) RETURNS INT 
#BEGIN
#	IF i = 1 THEN
#		DECLARE i int; --valid, i is redeclared on another scope
#		RETURN i;
#	END IF;
#	RETURN i;
#END;
#SELECT scoping02(vals) FROM (VALUES (1), (2)) AS vals(vals);
% . # table_name
% %4 # name
% int # type
% 1 # length
[ NULL	]
[ 2	]
#DROP FUNCTION scoping02(INT);
#CREATE TABLE "sys" ("current_schema" string);
#INSERT INTO "sys" VALUES ('astring');
[ 1	]
#SELECT "sys"."current_schema" FROM "sys";
% sys.sys # table_name
% current_schema # name
% clob # type
% 7 # length
[ "astring"	]
#DROP TABLE "sys";
#SELECT * from sys.var() where "name" not in ('debug', 'cache', 'last_id', 'current_timezone');
% .%1,	.%1,	.%1,	.%1 # table_name
% schema,	name,	type,	value # name
% char,	char,	char,	char # type
% 3,	14,	7,	12 # length
[ "sys",	"current_schema",	"varchar",	"sys"	]
[ "sys",	"current_user",	"varchar",	"monetdb"	]
[ "sys",	"current_role",	"varchar",	"monetdb"	]
[ "sys",	"optimizer",	"varchar",	"default_pipe"	]
[ "sys",	"rowcnt",	"bigint",	"1"	]

# 11:27:58 >  
# 11:27:58 >  "Done."
# 11:27:58 >  

