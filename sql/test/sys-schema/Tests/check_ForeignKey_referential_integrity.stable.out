stdout of test 'check_ForeignKey_referential_integrity` in directory 'sql/test/sys-schema` itself:


# 12:34:36 >  
# 12:34:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31305" "--set" "mapi_usock=/var/tmp/mtest-4387/.s.monetdb.31305" "--set" "monet_prompt=" "--forcemito" "--dbpath=/ufs/sjoerd/Monet-devel/var/MonetDB/mTests_sql_test_sys-schema"
# 12:34:36 >  

# MonetDB 5 server v11.26.0 (hg id: 4402dbd26688)
# This is an unreleased version
# Serving database 'mTests_sql_test_sys-schema', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2017 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://madrid.da.cwi.nl:31305/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-4387/.s.monetdb.31305
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 12:34:37 >  
# 12:34:37 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-4387" "--port=31305"
# 12:34:37 >  

#SELECT * FROM sys.schemas WHERE authorization NOT IN (SELECT id FROM sys.auths);
% sys.schemas,	sys.schemas,	sys.schemas,	sys.schemas,	sys.schemas # table_name
% id,	name,	authorization,	owner,	system # name
% int,	varchar,	int,	int,	boolean # type
% 1,	0,	1,	1,	5 # length
#SELECT * FROM sys.schemas WHERE owner NOT IN (SELECT id FROM sys.auths);
% sys.schemas,	sys.schemas,	sys.schemas,	sys.schemas,	sys.schemas # table_name
% id,	name,	authorization,	owner,	system # name
% int,	varchar,	int,	int,	boolean # type
% 1,	0,	1,	1,	5 # length
#SELECT * FROM sys.tables WHERE schema_id NOT IN (SELECT id FROM sys.schemas);
% .tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables # table_name
% id,	name,	schema_id,	query,	type,	system,	commit_action,	access,	temporary # name
% int,	varchar,	int,	varchar,	smallint,	boolean,	smallint,	smallint,	tinyint # type
% 1,	0,	1,	0,	1,	5,	1,	1,	1 # length
#SELECT * FROM sys._tables WHERE schema_id NOT IN (SELECT id FROM sys.schemas);
% sys._tables,	sys._tables,	sys._tables,	sys._tables,	sys._tables,	sys._tables,	sys._tables,	sys._tables # table_name
% id,	name,	schema_id,	query,	type,	system,	commit_action,	access # name
% int,	varchar,	int,	varchar,	smallint,	boolean,	smallint,	smallint # type
% 1,	0,	1,	0,	1,	5,	1,	1 # length
#SELECT * FROM tmp._tables WHERE schema_id NOT IN (SELECT id FROM sys.schemas);
% tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables # table_name
% id,	name,	schema_id,	query,	type,	system,	commit_action,	access # name
% int,	varchar,	int,	varchar,	smallint,	boolean,	smallint,	smallint # type
% 1,	0,	1,	0,	1,	5,	1,	1 # length
#SELECT * FROM sys.tables WHERE type NOT IN (SELECT table_type_id FROM sys.table_types);
% .tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables,	.tables # table_name
% id,	name,	schema_id,	query,	type,	system,	commit_action,	access,	temporary # name
% int,	varchar,	int,	varchar,	smallint,	boolean,	smallint,	smallint,	tinyint # type
% 1,	0,	1,	0,	1,	5,	1,	1,	1 # length
#SELECT * FROM sys._tables WHERE type NOT IN (SELECT table_type_id FROM sys.table_types);
% sys._tables,	sys._tables,	sys._tables,	sys._tables,	sys._tables,	sys._tables,	sys._tables,	sys._tables # table_name
% id,	name,	schema_id,	query,	type,	system,	commit_action,	access # name
% int,	varchar,	int,	varchar,	smallint,	boolean,	smallint,	smallint # type
% 1,	0,	1,	0,	1,	5,	1,	1 # length
#SELECT * FROM tmp._tables WHERE type NOT IN (SELECT table_type_id FROM sys.table_types);
% tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables,	tmp._tables # table_name
% id,	name,	schema_id,	query,	type,	system,	commit_action,	access # name
% int,	varchar,	int,	varchar,	smallint,	boolean,	smallint,	smallint # type
% 1,	0,	1,	0,	1,	5,	1,	1 # length
#SELECT * FROM sys.columns WHERE table_id NOT IN (SELECT id FROM sys.tables);
% .columns,	.columns,	.columns,	.columns,	.columns,	.columns,	.columns,	.columns,	.columns,	.columns # table_name
% id,	name,	type,	type_digits,	type_scale,	table_id,	default,	null,	number,	storage # name
% int,	varchar,	varchar,	int,	int,	int,	varchar,	boolean,	int,	varchar # type
% 1,	0,	0,	1,	1,	1,	0,	5,	1,	0 # length
#SELECT * FROM sys._columns WHERE table_id NOT IN (SELECT id FROM sys._tables);
% sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns # table_name
% id,	name,	type,	type_digits,	type_scale,	table_id,	default,	null,	number,	storage # name
% int,	varchar,	varchar,	int,	int,	int,	varchar,	boolean,	int,	varchar # type
% 1,	0,	0,	1,	1,	1,	0,	5,	1,	0 # length
#SELECT * FROM tmp._columns WHERE table_id NOT IN (SELECT id FROM tmp._tables);
% tmp._columns,	tmp._columns,	tmp._columns,	tmp._columns,	tmp._columns,	tmp._columns,	tmp._columns,	tmp._columns,	tmp._columns,	tmp._columns # table_name
% id,	name,	type,	type_digits,	type_scale,	table_id,	default,	null,	number,	storage # name
% int,	varchar,	varchar,	int,	int,	int,	varchar,	boolean,	int,	varchar # type
% 1,	0,	0,	1,	1,	1,	0,	5,	1,	0 # length
#SELECT * FROM sys.columns WHERE type NOT IN (SELECT sqlname FROM sys.types);
% .columns,	.columns,	.columns,	.columns,	.columns,	.columns,	.columns,	.columns,	.columns,	.columns # table_name
% id,	name,	type,	type_digits,	type_scale,	table_id,	default,	null,	number,	storage # name
% int,	varchar,	varchar,	int,	int,	int,	varchar,	boolean,	int,	varchar # type
% 1,	0,	0,	1,	1,	1,	0,	5,	1,	0 # length
#SELECT * FROM sys._columns WHERE type NOT IN (SELECT sqlname FROM sys.types);
% sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns # table_name
% id,	name,	type,	type_digits,	type_scale,	table_id,	default,	null,	number,	storage # name
% int,	varchar,	varchar,	int,	int,	int,	varchar,	boolean,	int,	varchar # type
% 1,	0,	0,	1,	1,	1,	0,	5,	1,	0 # length
#SELECT * FROM sys._columns WHERE type NOT IN (SELECT sqlname FROM sys.types);
% sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns,	sys._columns # table_name
% id,	name,	type,	type_digits,	type_scale,	table_id,	default,	null,	number,	storage # name
% int,	varchar,	varchar,	int,	int,	int,	varchar,	boolean,	int,	varchar # type
% 1,	0,	0,	1,	1,	1,	0,	5,	1,	0 # length
#SELECT * FROM sys.functions WHERE schema_id NOT IN (SELECT id FROM sys.schemas);
% sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions # table_name
% id,	name,	func,	mod,	language,	type,	side_effect,	varres,	vararg,	schema_id,	system # name
% int,	varchar,	varchar,	varchar,	int,	int,	boolean,	boolean,	boolean,	int,	boolean # type
% 1,	0,	0,	0,	1,	1,	5,	5,	5,	1,	5 # length
#SELECT * FROM sys.functions WHERE type NOT IN (SELECT function_type_id FROM sys.function_types);
% sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions # table_name
% id,	name,	func,	mod,	language,	type,	side_effect,	varres,	vararg,	schema_id,	system # name
% int,	varchar,	varchar,	varchar,	int,	int,	boolean,	boolean,	boolean,	int,	boolean # type
% 1,	0,	0,	0,	1,	1,	5,	5,	5,	1,	5 # length
#SELECT * FROM sys.functions WHERE language NOT IN (SELECT language_id FROM sys.function_languages);
% sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions # table_name
% id,	name,	func,	mod,	language,	type,	side_effect,	varres,	vararg,	schema_id,	system # name
% int,	varchar,	varchar,	varchar,	int,	int,	boolean,	boolean,	boolean,	int,	boolean # type
% 1,	0,	0,	0,	1,	1,	5,	5,	5,	1,	5 # length
#SELECT * FROM sys.functions WHERE system AND schema_id NOT IN (SELECT id FROM sys.schemas WHERE system);
% sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions,	sys.functions # table_name
% id,	name,	func,	mod,	language,	type,	side_effect,	varres,	vararg,	schema_id,	system # name
% int,	varchar,	varchar,	varchar,	int,	int,	boolean,	boolean,	boolean,	int,	boolean # type
% 1,	0,	0,	0,	1,	1,	5,	5,	5,	1,	5 # length
#SELECT * FROM sys.args WHERE func_id NOT IN (SELECT id FROM sys.functions);
% sys.args,	sys.args,	sys.args,	sys.args,	sys.args,	sys.args,	sys.args,	sys.args # table_name
% id,	func_id,	name,	type,	type_digits,	type_scale,	inout,	number # name
% int,	int,	varchar,	varchar,	int,	int,	tinyint,	int # type
% 1,	1,	0,	0,	1,	1,	1,	1 # length
#SELECT * FROM sys.args WHERE type NOT IN (SELECT sqlname FROM sys.types);
% sys.args,	sys.args,	sys.args,	sys.args,	sys.args,	sys.args,	sys.args,	sys.args # table_name
% id,	func_id,	name,	type,	type_digits,	type_scale,	inout,	number # name
% int,	int,	varchar,	varchar,	int,	int,	tinyint,	int # type
% 1,	1,	0,	0,	1,	1,	1,	1 # length
#SELECT * FROM sys.types WHERE schema_id NOT IN (SELECT id FROM sys.schemas);
% sys.types,	sys.types,	sys.types,	sys.types,	sys.types,	sys.types,	sys.types,	sys.types # table_name
% id,	systemname,	sqlname,	digits,	scale,	radix,	eclass,	schema_id # name
% int,	varchar,	varchar,	int,	int,	int,	int,	int # type
% 1,	0,	0,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.types WHERE schema_id NOT IN (SELECT id FROM sys.schemas) AND schema_id <> 0;
% sys.types,	sys.types,	sys.types,	sys.types,	sys.types,	sys.types,	sys.types,	sys.types # table_name
% id,	systemname,	sqlname,	digits,	scale,	radix,	eclass,	schema_id # name
% int,	varchar,	varchar,	int,	int,	int,	int,	int # type
% 1,	0,	0,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.objects WHERE id NOT IN (SELECT id FROM sys.ids);
% sys.objects,	sys.objects,	sys.objects # table_name
% id,	name,	nr # name
% int,	varchar,	int # type
% 1,	0,	1 # length
#SELECT * FROM sys.ids WHERE obj_type IN ('key', 'index') AND id NOT IN (SELECT id FROM sys.objects);
% .ids,	.ids,	.ids,	.ids,	.ids,	.ids,	.ids # table_name
% id,	name,	schema_id,	table_id,	table_name,	obj_type,	sys_table # name
% int,	varchar,	int,	int,	varchar,	char,	char # type
% 1,	0,	1,	1,	0,	13,	13 # length
#SELECT * FROM sys.keys WHERE id NOT IN (SELECT id FROM sys.objects);
% sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys # table_name
% id,	table_id,	type,	name,	rkey,	action # name
% int,	int,	int,	varchar,	int,	int # type
% 1,	1,	1,	0,	1,	1 # length
#SELECT * FROM sys.keys WHERE table_id NOT IN (SELECT id FROM sys.tables);
% sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys # table_name
% id,	table_id,	type,	name,	rkey,	action # name
% int,	int,	int,	varchar,	int,	int # type
% 1,	1,	1,	0,	1,	1 # length
#SELECT * FROM sys.keys WHERE table_id NOT IN (SELECT id FROM sys._tables);
% sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys # table_name
% id,	table_id,	type,	name,	rkey,	action # name
% int,	int,	int,	varchar,	int,	int # type
% 1,	1,	1,	0,	1,	1 # length
#SELECT * FROM tmp.keys WHERE table_id NOT IN (SELECT id FROM tmp._tables);
% tmp.keys,	tmp.keys,	tmp.keys,	tmp.keys,	tmp.keys,	tmp.keys # table_name
% id,	table_id,	type,	name,	rkey,	action # name
% int,	int,	int,	varchar,	int,	int # type
% 1,	1,	1,	0,	1,	1 # length
#SELECT * FROM sys.keys WHERE type NOT IN (SELECT key_type_id FROM sys.key_types);
% sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys # table_name
% id,	table_id,	type,	name,	rkey,	action # name
% int,	int,	int,	varchar,	int,	int # type
% 1,	1,	1,	0,	1,	1 # length
#SELECT * FROM tmp.keys WHERE type NOT IN (SELECT key_type_id FROM sys.key_types);
% tmp.keys,	tmp.keys,	tmp.keys,	tmp.keys,	tmp.keys,	tmp.keys # table_name
% id,	table_id,	type,	name,	rkey,	action # name
% int,	int,	int,	varchar,	int,	int # type
% 1,	1,	1,	0,	1,	1 # length
#SELECT * FROM sys.keys WHERE rkey <> -1 AND rkey NOT IN (SELECT id FROM sys.keys);
% sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys,	sys.keys # table_name
% id,	table_id,	type,	name,	rkey,	action # name
% int,	int,	int,	varchar,	int,	int # type
% 1,	1,	1,	0,	1,	1 # length
#SELECT * FROM tmp.keys WHERE rkey <> -1 AND rkey NOT IN (SELECT id FROM tmp.keys);
% tmp.keys,	tmp.keys,	tmp.keys,	tmp.keys,	tmp.keys,	tmp.keys # table_name
% id,	table_id,	type,	name,	rkey,	action # name
% int,	int,	int,	varchar,	int,	int # type
% 1,	1,	1,	0,	1,	1 # length
#SELECT * FROM sys.idxs WHERE id NOT IN (SELECT id FROM sys.objects);
% sys.idxs,	sys.idxs,	sys.idxs,	sys.idxs # table_name
% id,	table_id,	type,	name # name
% int,	int,	int,	varchar # type
% 1,	1,	1,	0 # length
#SELECT * FROM sys.idxs WHERE table_id NOT IN (SELECT id FROM sys.tables);
% sys.idxs,	sys.idxs,	sys.idxs,	sys.idxs # table_name
% id,	table_id,	type,	name # name
% int,	int,	int,	varchar # type
% 1,	1,	1,	0 # length
#SELECT * FROM sys.idxs WHERE table_id NOT IN (SELECT id FROM sys._tables);
% sys.idxs,	sys.idxs,	sys.idxs,	sys.idxs # table_name
% id,	table_id,	type,	name # name
% int,	int,	int,	varchar # type
% 1,	1,	1,	0 # length
#SELECT * FROM tmp.idxs WHERE table_id NOT IN (SELECT id FROM tmp._tables);
% tmp.idxs,	tmp.idxs,	tmp.idxs,	tmp.idxs # table_name
% id,	table_id,	type,	name # name
% int,	int,	int,	varchar # type
% 1,	1,	1,	0 # length
#SELECT * FROM sys.idxs WHERE type NOT IN (SELECT index_type_id FROM sys.index_types);
% sys.idxs,	sys.idxs,	sys.idxs,	sys.idxs # table_name
% id,	table_id,	type,	name # name
% int,	int,	int,	varchar # type
% 1,	1,	1,	0 # length
#SELECT * FROM tmp.idxs WHERE type NOT IN (SELECT index_type_id FROM sys.index_types);
% tmp.idxs,	tmp.idxs,	tmp.idxs,	tmp.idxs # table_name
% id,	table_id,	type,	name # name
% int,	int,	int,	varchar # type
% 1,	1,	1,	0 # length
#SELECT * FROM sys.sequences WHERE schema_id NOT IN (SELECT id FROM sys.schemas);
% sys.sequences,	sys.sequences,	sys.sequences,	sys.sequences,	sys.sequences,	sys.sequences,	sys.sequences,	sys.sequences,	sys.sequences # table_name
% id,	schema_id,	name,	start,	minvalue,	maxvalue,	increment,	cacheinc,	cycle # name
% int,	int,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	boolean # type
% 1,	1,	0,	1,	1,	1,	1,	1,	5 # length
#SELECT * FROM sys.triggers WHERE table_id NOT IN (SELECT id FROM sys.tables);
% sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers # table_name
% id,	name,	table_id,	time,	orientation,	event,	old_name,	new_name,	condition,	statement # name
% int,	varchar,	int,	smallint,	smallint,	smallint,	varchar,	varchar,	varchar,	varchar # type
% 1,	0,	1,	1,	1,	1,	0,	0,	0,	0 # length
#SELECT * FROM sys.triggers WHERE table_id NOT IN (SELECT id FROM sys._tables);
% sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers,	sys.triggers # table_name
% id,	name,	table_id,	time,	orientation,	event,	old_name,	new_name,	condition,	statement # name
% int,	varchar,	int,	smallint,	smallint,	smallint,	varchar,	varchar,	varchar,	varchar # type
% 1,	0,	1,	1,	1,	1,	0,	0,	0,	0 # length
#SELECT * FROM tmp.triggers WHERE table_id NOT IN (SELECT id FROM tmp._tables);
% tmp.triggers,	tmp.triggers,	tmp.triggers,	tmp.triggers,	tmp.triggers,	tmp.triggers,	tmp.triggers,	tmp.triggers,	tmp.triggers,	tmp.triggers # table_name
% id,	name,	table_id,	time,	orientation,	event,	old_name,	new_name,	condition,	statement # name
% int,	varchar,	int,	smallint,	smallint,	smallint,	varchar,	varchar,	varchar,	varchar # type
% 1,	0,	1,	1,	1,	1,	0,	0,	0,	0 # length
#SELECT * FROM sys.comments WHERE id NOT IN (SELECT id FROM sys.ids);
% sys.comments,	sys.comments # table_name
% id,	remark # name
% int,	varchar # type
% 1,	0 # length
#SELECT * FROM sys.dependencies WHERE id NOT IN (SELECT id FROM sys.ids);
% sys.dependencies,	sys.dependencies,	sys.dependencies # table_name
% id,	depend_id,	depend_type # name
% int,	int,	smallint # type
% 1,	1,	1 # length
#SELECT * FROM sys.dependencies WHERE depend_id NOT IN (SELECT id FROM sys.ids);
% sys.dependencies,	sys.dependencies,	sys.dependencies # table_name
% id,	depend_id,	depend_type # name
% int,	int,	smallint # type
% 1,	1,	1 # length
#SELECT * FROM sys.dependencies WHERE depend_type NOT IN (SELECT dependency_type_id FROM sys.dependency_types);
% sys.dependencies,	sys.dependencies,	sys.dependencies # table_name
% id,	depend_id,	depend_type # name
% int,	int,	smallint # type
% 1,	1,	1 # length
#SELECT * FROM sys.dependencies WHERE (id, depend_id, depend_type) NOT IN (SELECT v.id, v.used_by_id, v.depend_type FROM sys.dependencies_vw v);
% sys.dependencies,	sys.dependencies,	sys.dependencies # table_name
% id,	depend_id,	depend_type # name
% int,	int,	smallint # type
% 1,	1,	1 # length
#SELECT * FROM sys.auths WHERE grantor NOT IN (SELECT id FROM sys.auths) AND grantor > 0;
% sys.auths,	sys.auths,	sys.auths # table_name
% id,	name,	grantor # name
% int,	varchar,	int # type
% 1,	0,	1 # length
#SELECT * FROM sys.users WHERE name NOT IN (SELECT name FROM sys.auths);
% .users,	.users,	.users # table_name
% name,	fullname,	default_schema # name
% varchar,	varchar,	int # type
% 0,	0,	1 # length
#SELECT * FROM sys.users WHERE default_schema NOT IN (SELECT id FROM sys.schemas);
% .users,	.users,	.users # table_name
% name,	fullname,	default_schema # name
% varchar,	varchar,	int # type
% 0,	0,	1 # length
#SELECT * FROM sys.db_user_info WHERE name NOT IN (SELECT name FROM sys.auths);
% sys.db_user_info,	sys.db_user_info,	sys.db_user_info # table_name
% name,	fullname,	default_schema # name
% varchar,	varchar,	int # type
% 0,	0,	1 # length
#SELECT * FROM sys.db_user_info WHERE default_schema NOT IN (SELECT id FROM sys.schemas);
% sys.db_user_info,	sys.db_user_info,	sys.db_user_info # table_name
% name,	fullname,	default_schema # name
% varchar,	varchar,	int # type
% 0,	0,	1 # length
#SELECT * FROM sys.user_role WHERE login_id NOT IN (SELECT id FROM sys.auths);
% sys.user_role,	sys.user_role # table_name
% login_id,	role_id # name
% int,	int # type
% 1,	1 # length
#SELECT * FROM sys.user_role WHERE login_id NOT IN (SELECT a.id FROM sys.auths a WHERE a.name IN (SELECT u.name FROM sys.users u));
% sys.user_role,	sys.user_role # table_name
% login_id,	role_id # name
% int,	int # type
% 1,	1 # length
#SELECT * FROM sys.user_role WHERE role_id NOT IN (SELECT id FROM sys.auths);
% sys.user_role,	sys.user_role # table_name
% login_id,	role_id # name
% int,	int # type
% 1,	1 # length
#SELECT * FROM sys.user_role WHERE role_id NOT IN (SELECT a.id FROM sys.auths a WHERE a.name NOT IN (SELECT u.name FROM sys.users u));
% sys.user_role,	sys.user_role # table_name
% login_id,	role_id # name
% int,	int # type
% 1,	1 # length
#SELECT * FROM sys.user_role WHERE role_id NOT IN (SELECT id FROM sys.roles);
% sys.user_role,	sys.user_role # table_name
% login_id,	role_id # name
% int,	int # type
% 1,	1 # length
#SELECT * FROM sys.privileges WHERE obj_id NOT IN (SELECT id FROM sys.schemas UNION ALL SELECT id FROM sys._tables UNION ALL SELECT id FROM sys._columns UNION ALL SELECT id FROM sys.functions);
% sys.privileges,	sys.privileges,	sys.privileges,	sys.privileges,	sys.privileges # table_name
% obj_id,	auth_id,	privileges,	grantor,	grantable # name
% int,	int,	int,	int,	int # type
% 1,	1,	1,	1,	1 # length
#SELECT * FROM sys.privileges WHERE auth_id NOT IN (SELECT id FROM sys.auths);
% sys.privileges,	sys.privileges,	sys.privileges,	sys.privileges,	sys.privileges # table_name
% obj_id,	auth_id,	privileges,	grantor,	grantable # name
% int,	int,	int,	int,	int # type
% 1,	1,	1,	1,	1 # length
#SELECT * FROM sys.privileges WHERE grantor NOT IN (SELECT id FROM sys.auths) AND grantor > 0;
% sys.privileges,	sys.privileges,	sys.privileges,	sys.privileges,	sys.privileges # table_name
% obj_id,	auth_id,	privileges,	grantor,	grantable # name
% int,	int,	int,	int,	int # type
% 1,	1,	1,	1,	1 # length
#SELECT * FROM sys.privileges WHERE privileges NOT IN (SELECT privilege_code_id FROM sys.privilege_codes);
% sys.privileges,	sys.privileges,	sys.privileges,	sys.privileges,	sys.privileges # table_name
% obj_id,	auth_id,	privileges,	grantor,	grantable # name
% int,	int,	int,	int,	int # type
% 1,	1,	1,	1,	1 # length
#SELECT * FROM sys.querylog_catalog WHERE owner NOT IN (SELECT name FROM sys.users);
% .querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog # table_name
% id,	owner,	defined,	query,	pipe,	plan,	mal,	optimize # name
% oid,	clob,	timestamp,	clob,	clob,	clob,	int,	bigint # type
% 3,	0,	26,	0,	0,	0,	1,	1 # length
#SELECT * FROM sys.querylog_catalog WHERE pipe NOT IN (SELECT name FROM sys.optimizers);
% .querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog,	.querylog_catalog # table_name
% id,	owner,	defined,	query,	pipe,	plan,	mal,	optimize # name
% oid,	clob,	timestamp,	clob,	clob,	clob,	int,	bigint # type
% 3,	0,	26,	0,	0,	0,	1,	1 # length
#SELECT * FROM sys.querylog_calls   WHERE id NOT IN (SELECT id FROM sys.querylog_catalog);
% .querylog_calls,	.querylog_calls,	.querylog_calls,	.querylog_calls,	.querylog_calls,	.querylog_calls,	.querylog_calls,	.querylog_calls,	.querylog_calls # table_name
% id,	start,	stop,	arguments,	tuples,	run,	ship,	cpu,	io # name
% oid,	timestamp,	timestamp,	clob,	bigint,	bigint,	bigint,	int,	int # type
% 3,	26,	26,	0,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.querylog_history WHERE id NOT IN (SELECT id FROM sys.querylog_catalog);
% .querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history # table_name
% id,	owner,	defined,	query,	pipe,	plan,	mal,	optimize,	start,	stop,	arguments,	tuples,	run,	ship,	cpu,	io # name
% oid,	clob,	timestamp,	clob,	clob,	clob,	int,	bigint,	timestamp,	timestamp,	clob,	bigint,	bigint,	bigint,	int,	int # type
% 3,	0,	26,	0,	0,	0,	1,	1,	26,	26,	0,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.querylog_history WHERE owner NOT IN (SELECT name FROM sys.users);
% .querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history # table_name
% id,	owner,	defined,	query,	pipe,	plan,	mal,	optimize,	start,	stop,	arguments,	tuples,	run,	ship,	cpu,	io # name
% oid,	clob,	timestamp,	clob,	clob,	clob,	int,	bigint,	timestamp,	timestamp,	clob,	bigint,	bigint,	bigint,	int,	int # type
% 3,	0,	26,	0,	0,	0,	1,	1,	26,	26,	0,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.querylog_history WHERE pipe NOT IN (SELECT name FROM sys.optimizers);
% .querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history,	.querylog_history # table_name
% id,	owner,	defined,	query,	pipe,	plan,	mal,	optimize,	start,	stop,	arguments,	tuples,	run,	ship,	cpu,	io # name
% oid,	clob,	timestamp,	clob,	clob,	clob,	int,	bigint,	timestamp,	timestamp,	clob,	bigint,	bigint,	bigint,	int,	int # type
% 3,	0,	26,	0,	0,	0,	1,	1,	26,	26,	0,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.queue WHERE tag > cast(0 as oid) AND tag NOT IN (SELECT tag FROM sys.queue);
% .queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue # table_name
% tag,	sessionid,	username,	started,	status,	query,	progress,	workers,	memory # name
% bigint,	int,	clob,	timestamp,	clob,	clob,	int,	int,	int # type
% 1,	1,	0,	26,	0,	0,	1,	1,	1 # length
#SELECT * FROM sys.queue WHERE tag > cast(0 as oid) AND tag NOT IN (SELECT cast(tag as oid) FROM sys.queue);
% .queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue # table_name
% tag,	sessionid,	username,	started,	status,	query,	progress,	workers,	memory # name
% bigint,	int,	clob,	timestamp,	clob,	clob,	int,	int,	int # type
% 1,	1,	0,	26,	0,	0,	1,	1,	1 # length
#SELECT * FROM sys.queue WHERE tag NOT IN (SELECT cast(tag as oid) FROM sys.queue); 
% .queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue # table_name
% tag,	sessionid,	username,	started,	status,	query,	progress,	workers,	memory # name
% bigint,	int,	clob,	timestamp,	clob,	clob,	int,	int,	int # type
% 1,	1,	0,	26,	0,	0,	1,	1,	1 # length
#SELECT * FROM sys.queue WHERE "user" NOT IN (SELECT name FROM sys.users);
% .queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue,	.queue # table_name
% tag,	sessionid,	username,	started,	status,	query,	progress,	workers,	memory # name
% bigint,	int,	clob,	timestamp,	clob,	clob,	int,	int,	int # type
% 1,	1,	0,	26,	0,	0,	1,	1,	1 # length
#SELECT * FROM sys.sessions WHERE "user" NOT IN (SELECT name FROM sys.users);
% .sessions,	.sessions,	.sessions,	.sessions,	.sessions,	.sessions,	.sessions,	.sessions,	.sessions # table_name
% sessionid,	username,	login,	idle,	optimizer,	sessiontimeout,	querytimeout,	workerlimit,	memorylimit # name
% int,	clob,	timestamp,	timestamp,	clob,	int,	int,	int,	int # type
% 1,	0,	26,	26,	0,	1,	1,	1,	1 # length
#SELECT * FROM sys.statistics WHERE column_id NOT IN (SELECT id FROM sys._columns UNION ALL SELECT id FROM tmp._columns);
% sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics # table_name
% column_id,	type,	width,	stamp,	sample,	count,	unique,	nils,	minval,	maxval,	sorted,	revsorted # name
% int,	clob,	int,	timestamp,	bigint,	bigint,	bigint,	bigint,	clob,	clob,	boolean,	boolean # type
% 1,	0,	1,	26,	1,	1,	1,	1,	0,	0,	5,	5 # length
#SELECT * FROM sys.statistics WHERE type NOT IN (SELECT sqlname FROM sys.types);
% sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics,	sys.statistics # table_name
% column_id,	type,	width,	stamp,	sample,	count,	unique,	nils,	minval,	maxval,	sorted,	revsorted # name
% int,	clob,	int,	timestamp,	bigint,	bigint,	bigint,	bigint,	clob,	clob,	boolean,	boolean # type
% 1,	0,	1,	26,	1,	1,	1,	1,	0,	0,	5,	5 # length
#SELECT * FROM sys.storage() WHERE schema NOT IN (SELECT name FROM sys.schemas);
% .%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1 # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.storage() WHERE table NOT IN (SELECT name FROM sys._tables UNION ALL SELECT name FROM tmp._tables);
% .%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1 # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.storage() WHERE (schema, table) NOT IN (SELECT sch.name, tbl.name FROM sys.schemas AS sch JOIN sys.tables AS tbl ON sch.id = tbl.schema_id);
% .%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1 # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.storage() WHERE column NOT IN (SELECT name FROM sys._columns UNION ALL SELECT name FROM tmp._columns UNION ALL SELECT name FROM sys.keys UNION ALL SELECT name FROM tmp.keys UNION ALL SELECT name FROM sys.idxs UNION ALL SELECT name FROM tmp.idxs);
% .%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1 # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.storage() WHERE type NOT IN (SELECT sqlname FROM sys.types);
% .%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1,	.%1 # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.storage WHERE schema NOT IN (SELECT name FROM sys.schemas);
% .storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.storage WHERE table NOT IN (SELECT name FROM sys._tables UNION ALL SELECT name FROM tmp._tables);
% .storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.storage WHERE (schema, table) NOT IN (SELECT sch.name, tbl.name FROM sys.schemas AS sch JOIN sys.tables AS tbl ON sch.id = tbl.schema_id);
% .storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.storage WHERE column NOT IN (SELECT name FROM sys._columns UNION ALL SELECT name FROM tmp._columns UNION ALL SELECT name FROM sys.keys UNION ALL SELECT name FROM tmp.keys UNION ALL SELECT name FROM sys.idxs UNION ALL SELECT name FROM tmp.idxs);
% .storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.storage WHERE type NOT IN (SELECT sqlname FROM sys.types);
% .storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage,	.storage # table_name
% schema,	table,	column,	type,	mode,	location,	count,	typewidth,	columnsize,	heapsize,	hashes,	phash,	imprints,	sorted,	revsorted,	unique,	orderidx # name
% varchar,	varchar,	varchar,	varchar,	varchar,	varchar,	bigint,	int,	bigint,	bigint,	bigint,	boolean,	bigint,	boolean,	boolean,	boolean,	bigint # type
% 0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	5,	1,	5,	5,	5,	1 # length
#SELECT * FROM sys.tablestorage WHERE schema NOT IN (SELECT name FROM sys.schemas);
% .tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage # table_name
% schema,	table,	rowcount,	storages,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize # name
% varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 0,	0,	1,	1,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.tablestorage WHERE table NOT IN (SELECT name FROM sys._tables UNION ALL SELECT name FROM tmp._tables);
% .tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage # table_name
% schema,	table,	rowcount,	storages,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize # name
% varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 0,	0,	1,	1,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.tablestorage WHERE (schema, table) NOT IN (SELECT sch.name, tbl.name FROM sys.schemas AS sch JOIN sys.tables AS tbl ON sch.id = tbl.schema_id);
% .tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage,	.tablestorage # table_name
% schema,	table,	rowcount,	storages,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize # name
% varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 0,	0,	1,	1,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.schemastorage WHERE schema NOT IN (SELECT name FROM sys.schemas);
% .schemastorage,	.schemastorage,	.schemastorage,	.schemastorage,	.schemastorage,	.schemastorage,	.schemastorage # table_name
% schema,	storages,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize # name
% varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 0,	1,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.storagemodel WHERE schema NOT IN (SELECT name FROM sys.schemas);
% sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel # table_name
% schema,	table,	column,	type,	count,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	5,	5,	5 # length
#SELECT * FROM sys.storagemodel WHERE table NOT IN (SELECT name FROM sys._tables UNION ALL SELECT name FROM tmp._tables);
% sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel # table_name
% schema,	table,	column,	type,	count,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	5,	5,	5 # length
#SELECT * FROM sys.storagemodel WHERE (schema, table) NOT IN (SELECT sch.name, tbl.name FROM sys.schemas AS sch JOIN sys.tables AS tbl ON sch.id = tbl.schema_id);
% sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel # table_name
% schema,	table,	column,	type,	count,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	5,	5,	5 # length
#SELECT * FROM sys.storagemodel WHERE column NOT IN (SELECT name FROM sys._columns UNION ALL SELECT name FROM tmp._columns UNION ALL SELECT name FROM sys.keys UNION ALL SELECT name FROM tmp.keys UNION ALL SELECT name FROM sys.idxs UNION ALL SELECT name FROM tmp.idxs);
% sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel # table_name
% schema,	table,	column,	type,	count,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	5,	5,	5 # length
#SELECT * FROM sys.storagemodel WHERE type NOT IN (SELECT sqlname FROM sys.types);
% sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel,	sys.storagemodel # table_name
% schema,	table,	column,	type,	count,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	5,	5,	5 # length
#SELECT * FROM sys.storagemodelinput WHERE schema NOT IN (SELECT name FROM sys.schemas);
% sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput # table_name
% schema,	table,	column,	type,	typewidth,	count,	distinct,	atomwidth,	reference,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	int,	bigint,	bigint,	int,	boolean,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	5,	5,	5,	5 # length
#SELECT * FROM sys.storagemodelinput WHERE table NOT IN (SELECT name FROM sys._tables UNION ALL SELECT name FROM tmp._tables);
% sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput # table_name
% schema,	table,	column,	type,	typewidth,	count,	distinct,	atomwidth,	reference,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	int,	bigint,	bigint,	int,	boolean,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	5,	5,	5,	5 # length
#SELECT * FROM sys.storagemodelinput WHERE (schema, table) NOT IN (SELECT sch.name, tbl.name FROM sys.schemas AS sch JOIN sys.tables AS tbl ON sch.id = tbl.schema_id);
% sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput # table_name
% schema,	table,	column,	type,	typewidth,	count,	distinct,	atomwidth,	reference,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	int,	bigint,	bigint,	int,	boolean,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	5,	5,	5,	5 # length
#SELECT * FROM sys.storagemodelinput WHERE column NOT IN (SELECT name FROM sys._columns UNION ALL SELECT name FROM tmp._columns UNION ALL SELECT name FROM sys.keys UNION ALL SELECT name FROM tmp.keys UNION ALL SELECT name FROM sys.idxs UNION ALL SELECT name FROM tmp.idxs);
% sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput # table_name
% schema,	table,	column,	type,	typewidth,	count,	distinct,	atomwidth,	reference,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	int,	bigint,	bigint,	int,	boolean,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	5,	5,	5,	5 # length
#SELECT * FROM sys.storagemodelinput WHERE type NOT IN (SELECT sqlname FROM sys.types);
% sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput,	sys.storagemodelinput # table_name
% schema,	table,	column,	type,	typewidth,	count,	distinct,	atomwidth,	reference,	sorted,	unique,	isacolumn # name
% varchar,	varchar,	varchar,	varchar,	int,	bigint,	bigint,	int,	boolean,	boolean,	boolean,	boolean # type
% 0,	0,	0,	0,	1,	1,	1,	1,	5,	5,	5,	5 # length
#SELECT schema, table, rowcount, columnsize, heapsize, hashsize, imprintsize, orderidxsize FROM sys.tablestoragemodel WHERE schema NOT IN (SELECT name FROM sys.schemas);
% sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel # table_name
% schema,	table,	rowcount,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize # name
% varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 0,	0,	1,	1,	1,	1,	1,	1 # length
#SELECT schema, table, rowcount, columnsize, heapsize, hashsize, imprintsize, orderidxsize FROM sys.tablestoragemodel WHERE table NOT IN (SELECT name FROM sys._tables UNION ALL SELECT name FROM tmp._tables);
% sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel # table_name
% schema,	table,	rowcount,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize # name
% varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 0,	0,	1,	1,	1,	1,	1,	1 # length
#SELECT schema, table, rowcount, columnsize, heapsize, hashsize, imprintsize, orderidxsize FROM sys.tablestoragemodel WHERE (schema, table) NOT IN (SELECT sch.name, tbl.name FROM sys.schemas AS sch JOIN sys.tables AS tbl ON sch.id = tbl.schema_id);
% sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel,	sys.tablestoragemodel # table_name
% schema,	table,	rowcount,	columnsize,	heapsize,	hashsize,	imprintsize,	orderidxsize # name
% varchar,	varchar,	bigint,	bigint,	bigint,	bigint,	bigint,	bigint # type
% 0,	0,	1,	1,	1,	1,	1,	1 # length
#SELECT * FROM sys.table_partitions WHERE "table_id" NOT IN (SELECT id FROM sys._tables);
% sys.table_partitions,	sys.table_partitions,	sys.table_partitions,	sys.table_partitions,	sys.table_partitions # table_name
% id,	table_id,	column_id,	expression,	type # name
% int,	int,	int,	varchar,	tinyint # type
% 1,	1,	1,	0,	1 # length
#SELECT * FROM sys.table_partitions WHERE "column_id" IS NOT NULL AND "column_id" NOT IN (SELECT id FROM sys._columns);
% sys.table_partitions,	sys.table_partitions,	sys.table_partitions,	sys.table_partitions,	sys.table_partitions # table_name
% id,	table_id,	column_id,	expression,	type # name
% int,	int,	int,	varchar,	tinyint # type
% 1,	1,	1,	0,	1 # length
#SELECT * FROM sys.table_partitions WHERE "type" NOT IN (5,6,9,10);	-- 5=By Column Range (1+4), 6=By Expression Range (2+4), 9=By Column Value (1+8), 10=By Expression Value (2+8), see sql_catalog.h #define PARTITION_*
% sys.table_partitions,	sys.table_partitions,	sys.table_partitions,	sys.table_partitions,	sys.table_partitions # table_name
% id,	table_id,	column_id,	expression,	type # name
% int,	int,	int,	varchar,	tinyint # type
% 1,	1,	1,	0,	1 # length
#SELECT * FROM sys.range_partitions WHERE "table_id" NOT IN (SELECT id FROM sys._tables);
% sys.range_partitions,	sys.range_partitions,	sys.range_partitions,	sys.range_partitions,	sys.range_partitions # table_name
% table_id,	partition_id,	minimum,	maximum,	with_nulls # name
% int,	int,	varchar,	varchar,	boolean # type
% 1,	1,	0,	0,	5 # length
#SELECT * FROM sys.range_partitions WHERE "partition_id" NOT IN (SELECT id FROM sys.table_partitions);
% sys.range_partitions,	sys.range_partitions,	sys.range_partitions,	sys.range_partitions,	sys.range_partitions # table_name
% table_id,	partition_id,	minimum,	maximum,	with_nulls # name
% int,	int,	varchar,	varchar,	boolean # type
% 1,	1,	0,	0,	5 # length
#SELECT * FROM sys.value_partitions WHERE "table_id" NOT IN (SELECT id FROM sys._tables);
% sys.value_partitions,	sys.value_partitions,	sys.value_partitions # table_name
% table_id,	partition_id,	value # name
% int,	int,	varchar # type
% 1,	1,	0 # length
#SELECT * FROM sys.value_partitions WHERE "partition_id" NOT IN (SELECT id FROM sys.table_partitions);
% sys.value_partitions,	sys.value_partitions,	sys.value_partitions # table_name
% table_id,	partition_id,	value # name
% int,	int,	varchar # type
% 1,	1,	0 # length

# 12:34:37 >  
# 12:34:37 >  "Done."
# 12:34:37 >  

