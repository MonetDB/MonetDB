stdout of test 'check_AlternateKey_uniqueness` in directory 'sql/test/sys-schema` itself:


# 16:31:35 >  
# 16:31:35 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31486" "--set" "mapi_usock=/var/tmp/mtest-10384/.s.monetdb.31486" "--set" "monet_prompt=" "--forcemito" "--dbpath=/export/scratch2/dinther/INSTALL/var/MonetDB/mTests_sql_test_sys-schema"
# 16:31:35 >  

# MonetDB 5 server v11.25.2
# This is an unreleased version
# Serving database 'mTests_sql_test_sys-schema', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2016 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://toulouse.da.cwi.nl:31486/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-10384/.s.monetdb.31486
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


# 16:31:35 >  
# 16:31:35 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-10384" "--port=31486"
# 16:31:35 >  

#SELECT COUNT(*) AS duplicates, name FROM sys.schemas GROUP BY name HAVING COUNT(*) > 1;
% sys.,	sys.schemas # table_name
% duplicates,	name # name
% bigint,	varchar # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, table_type_name FROM sys.table_types GROUP BY table_type_name HAVING COUNT(*) > 1;
% sys.,	sys.table_types # table_name
% duplicates,	table_type_name # name
% bigint,	varchar # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, schema_id, name FROM sys._tables GROUP BY schema_id, name HAVING COUNT(*) > 1;
% sys.,	sys._tables,	sys._tables # table_name
% duplicates,	schema_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, schema_id, name FROM tmp._tables GROUP BY schema_id, name HAVING COUNT(*) > 1;
% tmp.,	tmp._tables,	tmp._tables # table_name
% duplicates,	schema_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, schema_id, name FROM sys.tables GROUP BY schema_id, name HAVING COUNT(*) > 1;
% .,	.tables,	.tables # table_name
% duplicates,	schema_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, name FROM sys._columns GROUP BY table_id, name HAVING COUNT(*) > 1;
% sys.,	sys._columns,	sys._columns # table_name
% duplicates,	table_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, name FROM tmp._columns GROUP BY table_id, name HAVING COUNT(*) > 1;
% tmp.,	tmp._columns,	tmp._columns # table_name
% duplicates,	table_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, name FROM sys.columns GROUP BY table_id, name HAVING COUNT(*) > 1;
% .,	.columns,	.columns # table_name
% duplicates,	table_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, number FROM sys._columns GROUP BY table_id, number HAVING COUNT(*) > 1;
% sys.,	sys._columns,	sys._columns # table_name
% duplicates,	table_id,	number # name
% bigint,	int,	int # type
% 1,	1,	1 # length
#SELECT COUNT(*) AS duplicates, table_id, number FROM tmp._columns GROUP BY table_id, number HAVING COUNT(*) > 1;
% tmp.,	tmp._columns,	tmp._columns # table_name
% duplicates,	table_id,	number # name
% bigint,	int,	int # type
% 1,	1,	1 # length
#SELECT COUNT(*) AS duplicates, table_id, number FROM sys.columns GROUP BY table_id, number HAVING COUNT(*) > 1;
% .,	.columns,	.columns # table_name
% duplicates,	table_id,	number # name
% bigint,	int,	int # type
% 1,	1,	1 # length
#SELECT COUNT(*) AS duplicates, T.id FROM (SELECT id FROM sys.schemas UNION ALL SELECT id FROM sys._tables UNION ALL SELECT id FROM sys._columns UNION ALL SELECT id FROM sys.functions) T GROUP BY T.id HAVING COUNT(*) > 1;
% .,	.t # table_name
% duplicates,	id # name
% bigint,	int # type
% 1,	1 # length
#SELECT COUNT(*) AS duplicates, T.id FROM (SELECT id FROM sys.schemas UNION ALL SELECT id FROM sys.tables UNION ALL SELECT id FROM sys.columns UNION ALL SELECT id FROM sys.functions) T GROUP BY T.id HAVING COUNT(*) > 1;
% .,	.t # table_name
% duplicates,	id # name
% bigint,	int # type
% 1,	1 # length
#SELECT COUNT(*) AS duplicates, func_id, name FROM sys.args GROUP BY func_id, name HAVING COUNT(*) > 1;
% sys.,	sys.args,	sys.args # table_name
% duplicates,	func_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, schema_id, systemname, sqlname FROM sys.types GROUP BY schema_id, systemname, sqlname HAVING COUNT(*) > 1;
% sys.,	sys.types,	sys.types,	sys.types # table_name
% duplicates,	schema_id,	systemname,	sqlname # name
% bigint,	int,	varchar,	varchar # type
% 1,	1,	0,	0 # length
#SELECT COUNT(*) AS duplicates, id, name FROM sys.objects GROUP BY id, name HAVING COUNT(*) > 1;
% sys.,	sys.objects,	sys.objects # table_name
% duplicates,	id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, id, name FROM tmp.objects GROUP BY id, name HAVING COUNT(*) > 1;
% tmp.,	tmp.objects,	tmp.objects # table_name
% duplicates,	id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, name FROM sys.keys GROUP BY table_id, name HAVING COUNT(*) > 1;
% sys.,	sys.keys,	sys.keys # table_name
% duplicates,	table_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, name FROM tmp.keys GROUP BY table_id, name HAVING COUNT(*) > 1;
% tmp.,	tmp.keys,	tmp.keys # table_name
% duplicates,	table_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, name FROM sys.idxs GROUP BY table_id, name HAVING COUNT(*) > 1;
% sys.,	sys.idxs,	sys.idxs # table_name
% duplicates,	table_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, name FROM tmp.idxs GROUP BY table_id, name HAVING COUNT(*) > 1;
% tmp.,	tmp.idxs,	tmp.idxs # table_name
% duplicates,	table_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, name FROM sys.triggers GROUP BY table_id, name HAVING COUNT(*) > 1;
% sys.,	sys.triggers,	sys.triggers # table_name
% duplicates,	table_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, name FROM tmp.triggers GROUP BY table_id, name HAVING COUNT(*) > 1;
% tmp.,	tmp.triggers,	tmp.triggers # table_name
% duplicates,	table_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, schema_id, name FROM sys.sequences GROUP BY schema_id, name HAVING COUNT(*) > 1;
% sys.,	sys.sequences,	sys.sequences # table_name
% duplicates,	schema_id,	name # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, dependency_type_name FROM sys.dependency_types GROUP BY dependency_type_name HAVING COUNT(*) > 1;
% sys.,	sys.dependency_types # table_name
% duplicates,	dependency_type_name # name
% bigint,	varchar # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, function_type_name FROM sys.function_types GROUP BY function_type_name HAVING COUNT(*) > 1;
% sys.,	sys.function_types # table_name
% duplicates,	function_type_name # name
% bigint,	varchar # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, language_name FROM sys.function_languages GROUP BY language_name HAVING COUNT(*) > 1;
% sys.,	sys.function_languages # table_name
% duplicates,	language_name # name
% bigint,	varchar # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, key_type_name FROM sys.key_types GROUP BY key_type_name HAVING COUNT(*) > 1;
% sys.,	sys.key_types # table_name
% duplicates,	key_type_name # name
% bigint,	varchar # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, index_type_name FROM sys.index_types GROUP BY index_type_name HAVING COUNT(*) > 1;
% sys.,	sys.index_types # table_name
% duplicates,	index_type_name # name
% bigint,	varchar # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, privilege_code_name FROM sys.privilege_codes GROUP BY privilege_code_name HAVING COUNT(*) > 1;
% sys.,	sys.privilege_codes # table_name
% duplicates,	privilege_code_name # name
% bigint,	varchar # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, name FROM sys.auths GROUP BY name HAVING COUNT(*) > 1;
% sys.,	sys.auths # table_name
% duplicates,	name # name
% bigint,	varchar # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, def FROM sys.optimizers GROUP BY def HAVING COUNT(*) > 1;
% .,	.optimizers # table_name
% duplicates,	def # name
% bigint,	clob # type
% 1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, column_id FROM sys.table_partitions WHERE "column_id" IS NOT NULL GROUP BY table_id, column_id HAVING COUNT(*) >1;
% sys.,	sys.table_partitions,	sys.table_partitions # table_name
% duplicates,	table_id,	column_id # name
% bigint,	int,	int # type
% 1,	1,	1 # length
#SELECT COUNT(*) AS duplicates, table_id, "expression" FROM sys.table_partitions WHERE "expression" IS NOT NULL GROUP BY table_id, "expression" HAVING COUNT(*) >1;
% sys.,	sys.table_partitions,	sys.table_partitions # table_name
% duplicates,	table_id,	expression # name
% bigint,	int,	varchar # type
% 1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, partition_id, "maximum" FROM sys.range_partitions GROUP BY table_id, partition_id, "maximum" HAVING COUNT(*) >1;
% sys.,	sys.range_partitions,	sys.range_partitions,	sys.range_partitions # table_name
% duplicates,	table_id,	partition_id,	maximum # name
% bigint,	int,	int,	varchar # type
% 1,	1,	1,	0 # length
#SELECT COUNT(*) AS duplicates, table_id, partition_id, "minimum" FROM sys.range_partitions GROUP BY table_id, partition_id, "minimum"  HAVING COUNT(*) >1;
% sys.,	sys.range_partitions,	sys.range_partitions,	sys.range_partitions # table_name
% duplicates,	table_id,	partition_id,	minimum # name
% bigint,	int,	int,	varchar # type
% 1,	1,	1,	0 # length

# 16:31:36 >  
# 16:31:36 >  "Done."
# 16:31:36 >  

