statement ok
set optimizer = 'sequential_pipe'

query T python .explain.function_histogram
explain select count(*) from fk left outer join pk1 on fk.fk1 = pk1.pk1 left outer join pk2 on fk.fk2 = pk2.pk2
----
querylog.define
1
sql.count
1
sql.resultSet
1
user.main
1

query T python .explain.function_histogram
explain select id       from fk left outer join pk1 on fk.fk1 = pk1.pk1 left outer join pk2 on fk.fk2 = pk2.pk2 order by id
----
algebra.projection
2
algebra.sort
1
bat.pack
5
querylog.define
1
sql.bind
1
sql.mvc
1
sql.resultSet
1
sql.tid
1
user.main
1

query T python .explain.function_histogram
explain select id , v1  from fk left outer join pk1 on fk.fk1 = pk1.pk1 left outer join pk2 on fk.fk2 = pk2.pk2 order by id
----
algebra.difference
1
algebra.join
1
algebra.project
1
algebra.projection
6
algebra.projectionpath
1
algebra.sort
1
bat.append
4
bat.mirror
1
bat.new
2
bat.pack
5
querylog.define
1
sql.bind
2
sql.bind_idxbat
1
sql.mvc
1
sql.resultSet
1
sql.tid
2
user.main
1

query T python .explain.function_histogram
explain select id , v2  from fk left outer join pk1 on fk.fk1 = pk1.pk1 left outer join pk2 on fk.fk2 = pk2.pk2 order by id
----
algebra.difference
2
algebra.join
2
algebra.project
1
algebra.projection
11
algebra.projectionpath
1
algebra.sort
1
bat.append
8
bat.mirror
2
bat.new
4
bat.pack
5
querylog.define
1
sql.bind
2
sql.bind_idxbat
2
sql.mvc
1
sql.resultSet
1
sql.tid
3
user.main
1

statement ok
set optimizer = 'default_pipe'

