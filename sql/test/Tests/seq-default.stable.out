stdout of test 'seq-default` in directory 'sql/test` itself:


# 18:28:18 >  
# 18:28:18 >   mserver5 "--config=/ufs/niels/scratch/monetdb/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=4 --set "monet_mod_path=/ufs/niels/scratch/monetdb/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/monetdb/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/monetdb/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/monetdb/Linux-x86_64/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/niels/scratch/monetdb/Linux-x86_64/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=39921 --set xrpc_port=45986 --set monet_prompt= --trace  "--dbname=mTests_src_test" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 18:28:18 >  

# MonetDB server v5.9.0, based on kernel v1.27.0
# Serving database 'mTests_src_test', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008- MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:39921/
# MonetDB/SQL module v2.27.0 loaded


# 12:37:18 >  
# 12:37:18 >  Mtimeout -timeout 60 MapiClient -lsql -u monetdb -P monetdb --host=localhost --port=45579  < seq-default.sql
# 12:37:18 >  

[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
% sys.seqdeftest,	sys.seqdeftest # table_name
% ts,	i # name
% timestamp,	int # type
% 26,	1 # length
[ 2005-09-23 12:34:26.736000,	1	]
[ 2005-09-23 12:34:26.736000,	2	]
[ 2005-09-23 12:34:26.736000,	3	]
[ 2005-09-23 12:34:26.736000,	4	]
[ 2005-09-23 12:34:26.736000,	5	]
[ 2005-09-23 12:34:26.736000,	6	]
#drop table seqdeftest;
#drop sequence test_seq;
#create table seqdeftest (
#	d date,
#	id serial,
#	count int auto_increment,
#	bla int generated always as identity (
#		start with 100 increment by 2 no minvalue maxvalue 1000
#		cache 2 cycle)
#);
#insert into seqdeftest(d) values ('2005-10-01');
[ 1	]
#insert into seqdeftest(d) values ('2005-10-01');
[ 1	]
#insert into seqdeftest(d) values ('2005-10-01');
[ 1	]
[ 1	]
[ 1	]
[ 1	]
#select * from seqdeftest;
% sys.seqdeftest,	sys.seqdeftest,	sys.seqdeftest,	sys.seqdeftest # table_name
% d,	id,	count,	bla # name
% date,	int,	int,	int # type
% 10,	1,	1,	3 # length
[ 2005-10-01,	1,	1,	100	]
[ 2005-10-01,	2,	2,	102	]
[ 2005-10-01,	3,	3,	104	]
[ 2005-10-01,	4,	4,	106	]
[ 2005-10-01,	5,	5,	108	]
[ 2005-10-01,	6,	6,	110	]
#drop table seqdeftest;
#CREATE SEQUENCE seq_5700 AS INTEGER;
#CREATE TABLE kvk (
#        id                INTEGER       NOT NULL       DEFAULT next value for seq_5700,
#        kvk               BIGINT,
#        bedrijfsnaam      VARCHAR(256),
#        CONSTRAINT kvk_id_pkey PRIMARY KEY (id)
#);
#insert into kvk(kvk, bedrijfsnaam) values (1, 'ones');
[ 1	]
#insert into kvk(kvk, bedrijfsnaam) values (2, 'toos');
[ 1	]
#select * from kvk;
% sys.kvk,	sys.kvk,	sys.kvk # table_name
% id,	kvk,	bedrijfsnaam # name
% int,	bigint,	varchar # type
% 1,	1,	4 # length
[ 1,	1,	"ones"	]
[ 2,	2,	"toos"	]
#CREATE TABLE kvk_cp (
#        id                INTEGER       NOT NULL       DEFAULT next value for seq_5700,
#        kvk               BIGINT,
#        bedrijfsnaam      VARCHAR(256),
#        CONSTRAINT kvk_cp_id_pkey PRIMARY KEY (id)
#);
#insert into kvk_cp(kvk, bedrijfsnaam) values (3, 'dries');
[ 1	]
#insert into kvk_cp(kvk, bedrijfsnaam) values (4, 'viers');
[ 1	]
#select * from kvk_cp;
% sys.kvk_cp,	sys.kvk_cp,	sys.kvk_cp # table_name
% id,	kvk,	bedrijfsnaam # name
% int,	bigint,	varchar # type
% 1,	1,	5 # length
[ 3,	3,	"dries"	]
[ 4,	4,	"viers"	]
#drop TABLE kvk;
#insert into kvk_cp(kvk, bedrijfsnaam) values (5, 'vijfs');
[ 1	]
#select * from kvk_cp;
% sys.kvk_cp,	sys.kvk_cp,	sys.kvk_cp # table_name
% id,	kvk,	bedrijfsnaam # name
% int,	bigint,	varchar # type
% 1,	1,	5 # length
[ 3,	3,	"dries"	]
[ 4,	4,	"viers"	]
[ 5,	5,	"vijfs"	]
#drop TABLE kvk_cp;
#drop SEQUENCE seq_5700;
#ROLLBACK;

# 12:44:28 >  
# 12:44:28 >  "Done."
# 12:44:28 >  

