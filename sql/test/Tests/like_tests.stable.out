stdout of test 'like_tests` in directory 'sql/test` itself:


# 10:09:58 >  
# 10:09:58 >   mserver5 "--config=/export/scratch/stripe/fabian/monetdb/stable/program-i86pc/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/export/scratch/stripe/fabian/monetdb/stable/program-i86pc/lib/MonetDB5:/export/scratch/stripe/fabian/monetdb/stable/program-i86pc/lib/MonetDB5/lib:/export/scratch/stripe/fabian/monetdb/stable/program-i86pc/lib/MonetDB5/bin" --set "gdk_dbfarm=/export/scratch/stripe/fabian/monetdb/stable/mtest-pegasus.ins.cwi.nl/sql/dbfarm" --set "sql_logdir=/export/scratch/stripe/fabian/monetdb/stable/mtest-pegasus.ins.cwi.nl/sql/sqllog" --set "xquery_logdir=/export/scratch/stripe/fabian/monetdb/stable/mtest-pegasus.ins.cwi.nl/sql/xquerylog"  --set mapi_open=true --set xrpc_open=true --set mapi_port=39831 --set xrpc_port=46825 --set monet_prompt= --trace  "--dbname=mTests_src_test" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 10:09:58 >  

# MonetDB server v5.12.0, based on kernel v1.30.0
# Serving database 'mTests_src_test', using 1 thread
# Compiled for x86_64-pc-solaris2.11/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2009 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://pegasus.ins.cwi.nl:39831/
# MonetDB/SQL module v2.30.0 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 10:09:59 >  
# 10:09:59 >  ./like_tests.SQL.sh like_tests 
# 10:09:59 >  

#START TRANSACTION;
#-- create our table to test with
#CREATE TABLE like_test (
#-- insert some dull values
[ 1	]
[ 1	]
[ 1	]
[ 1	]
#-- insert some interesting values
[ 1	]
[ 1	]
#-- insert some non-normal life values
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
#-- see if everything is in the table
#SELECT * FROM liketable;
% sys.liketable # table_name
% str # name
% varchar # type
% 18 # length
[ ""	]
[ "t"	]
[ "ts"	]
[ "tsz"	]
[ "a math assignment"	]
[ "pathfinder is fun!"	]
[ "123123123"	]
[ "123123456123"	]
[ "199993456123"	]
[ "123456123456"	]
[ "123454321"	]
#-- check for a string that starts with a 't' and is two chars long
#SELECT * FROM liketable WHERE str LIKE 't_';
% sys.liketable # table_name
% str # name
% varchar # type
% 2 # length
[ "ts"	]
#-- simple, this should only match the first interesting value
#SELECT * FROM liketable WHERE str LIKE '%math%';
% sys.liketable # table_name
% str # name
% varchar # type
% 17 # length
[ "a math assignment"	]
#-- more complicated; find values that match the given patterns
#SELECT * FROM liketable WHERE str LIKE 'a%math%';
% sys.liketable # table_name
% str # name
% varchar # type
% 17 # length
[ "a math assignment"	]
#SELECT * FROM liketable WHERE str LIKE 'a_math%';
% sys.liketable # table_name
% str # name
% varchar # type
% 17 # length
[ "a math assignment"	]
#SELECT * FROM liketable WHERE str LIKE '%m_th_a%t';
% sys.liketable # table_name
% str # name
% varchar # type
% 17 # length
[ "a math assignment"	]
#SELECT * FROM liketable WHERE str LIKE '%at%_!';
% sys.liketable # table_name
% str # name
% varchar # type
% 18 # length
[ "pathfinder is fun!"	]
#-- exhaustive?
#-- head match
#SELECT * FROM liketable WHERE str LIKE '1%';
% sys.liketable # table_name
% str # name
% varchar # type
% 12 # length
[ "123123123"	]
[ "123123456123"	]
[ "199993456123"	]
[ "123456123456"	]
[ "123454321"	]
#SELECT * FROM liketable WHERE str LIKE '3%';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#-- tail match
#SELECT * FROM liketable WHERE str LIKE '%1';
% sys.liketable # table_name
% str # name
% varchar # type
% 9 # length
[ "123454321"	]
#SELECT * FROM liketable WHERE str LIKE '%3';
% sys.liketable # table_name
% str # name
% varchar # type
% 12 # length
[ "123123123"	]
[ "123123456123"	]
[ "199993456123"	]
#-- head/tail match
#SELECT * FROM liketable WHERE str LIKE '1%1';	
% sys.liketable # table_name
% str # name
% varchar # type
% 9 # length
[ "123454321"	]
#SELECT * FROM liketable WHERE str LIKE '1%3';
% sys.liketable # table_name
% str # name
% varchar # type
% 12 # length
[ "123123123"	]
[ "123123456123"	]
[ "199993456123"	]
#SELECT * FROM liketable WHERE str LIKE '3%1';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#SELECT * FROM liketable WHERE str LIKE '3%3';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#-- body match
#SELECT * FROM liketable WHERE str LIKE '%1%';
% sys.liketable # table_name
% str # name
% varchar # type
% 12 # length
[ "123123123"	]
[ "123123456123"	]
[ "199993456123"	]
[ "123456123456"	]
[ "123454321"	]
#SELECT * FROM liketable WHERE str LIKE '%12%';
% sys.liketable # table_name
% str # name
% varchar # type
% 12 # length
[ "123123123"	]
[ "123123456123"	]
[ "199993456123"	]
[ "123456123456"	]
[ "123454321"	]
#SELECT * FROM liketable WHERE str LIKE '%13%';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#SELECT * FROM liketable WHERE str LIKE '%454%';
% sys.liketable # table_name
% str # name
% varchar # type
% 9 # length
[ "123454321"	]
#-- float match
#SELECT * FROM liketable WHERE str LIKE '%2%2%';
% sys.liketable # table_name
% str # name
% varchar # type
% 12 # length
[ "123123123"	]
[ "123123456123"	]
[ "123456123456"	]
[ "123454321"	]
#-- deeper insights, fairly specific matches
#SELECT * FROM liketable WHERE str LIKE '_2_3%123';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#SELECT * FROM liketable WHERE str LIKE '_123%3';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#-- attention: this one should match on 123123456123, it is tricky because
#--            if you match the first 1, it won't match...
#SELECT * FROM liketable WHERE str LIKE '%1_3456%';
% sys.liketable # table_name
% str # name
% varchar # type
% 12 # length
[ "123123456123"	]
[ "123456123456"	]
#-- attention: this one shows why the above like expression returns the
#--            correct answer... the _ is treated as {1,*} not {1}
#SELECT * FROM liketable WHERE str LIKE '_3456%';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#-- another simple way to give the like processor a hard time
#SELECT * FROM liketable WHERE str LIKE '%23';
% sys.liketable # table_name
% str # name
% varchar # type
% 12 # length
[ "123123123"	]
[ "123123456123"	]
[ "199993456123"	]
#-- test the ESCAPE statement
#SELECT * FROM liketable WHERE str LIKE '%' ESCAPE '?';
% sys.liketable # table_name
% str # name
% varchar # type
% 18 # length
[ ""	]
[ "t"	]
[ "ts"	]
[ "tsz"	]
[ "a math assignment"	]
[ "pathfinder is fun!"	]
[ "123123123"	]
[ "123123456123"	]
[ "199993456123"	]
[ "123456123456"	]
[ "123454321"	]
#SELECT * FROM liketable WHERE str LIKE '?%' ESCAPE '?';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#-- test with an ESCAPE character that has a special meaning in a reg exp
#SELECT * FROM liketable WHERE str LIKE '.%' ESCAPE '.';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#SELECT * FROM liketable WHERE str LIKE '..' ESCAPE '.';
% sys.liketable # table_name
% str # name
% varchar # type
% 0 # length
#-- test whether escaping the ESCAPE character actually works
#SELECT * FROM liketable WHERE str LIKE 'tt' ESCAPE 't';
% sys.liketable # table_name
% str # name
% varchar # type
% 1 # length
[ "t"	]
#-- clean up mess we made
#ROLLBACK;

# 10:09:59 >  
# 10:09:59 >  Done.
# 10:09:59 >  

