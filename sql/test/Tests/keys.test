statement ok
START TRANSACTION

statement ok
CREATE TABLE allnewtriples (id integer NOT NULL, subject integer NOT
NULL, predicate integer NOT NULL, "object" integer NOT NULL, explicit
boolean NOT NULL, CONSTRAINT unique_key UNIQUE(subject, predicate, "object"))

statement ok
CREATE INDEX allnewtriples_subject_idx ON allnewtriples (subject)

statement ok
CREATE INDEX allnewtriples_predicate_idx ON allnewtriples (predicate)

statement ok
CREATE INDEX allnewtriples_object_idx ON allnewtriples ("object")

query TITI rowsort
SELECT idxs.name, idxs."type", keys.name, keys."type"
FROM sys.idxs LEFT JOIN sys.keys on idxs.name = keys.name
ORDER BY idxs.name, keys.name
----
allnewtriples_object_idx
0
NULL
NULL
allnewtriples_predicate_idx
0
NULL
NULL
allnewtriples_subject_idx
0
NULL
NULL
comments_id_pkey
0
comments_id_pkey
0
dependency_types_dependency_type_id_pkey
0
dependency_types_dependency_type_id_pkey
0
dependency_types_dependency_type_name_unique
0
dependency_types_dependency_type_name_unique
1
function_languages_language_id_pkey
0
function_languages_language_id_pkey
0
function_languages_language_name_unique
0
function_languages_language_name_unique
1
function_types_function_type_id_pkey
0
function_types_function_type_id_pkey
0
function_types_function_type_name_unique
0
function_types_function_type_name_unique
1
index_types_index_type_id_pkey
0
index_types_index_type_id_pkey
0
index_types_index_type_name_unique
0
index_types_index_type_name_unique
1
key_types_key_type_id_pkey
0
key_types_key_type_id_pkey
0
key_types_key_type_name_unique
0
key_types_key_type_name_unique
1
keywords_keyword_pkey
0
keywords_keyword_pkey
0
privilege_codes_privilege_code_id_pkey
0
privilege_codes_privilege_code_id_pkey
0
privilege_codes_privilege_code_name_unique
0
privilege_codes_privilege_code_name_unique
1
spatial_ref_sys_srid_pkey
0
spatial_ref_sys_srid_pkey
0
table_types_table_type_id_pkey
0
table_types_table_type_id_pkey
0
table_types_table_type_name_unique
0
table_types_table_type_name_unique
1
unique_key
0
unique_key
1

query TITI rowsort
SELECT idxs.name, idxs."type", keys.name, keys."type"
FROM sys.idxs JOIN sys.keys on idxs.name = keys.name
ORDER BY idxs.name, keys.name
----
comments_id_pkey
0
comments_id_pkey
0
dependency_types_dependency_type_id_pkey
0
dependency_types_dependency_type_id_pkey
0
dependency_types_dependency_type_name_unique
0
dependency_types_dependency_type_name_unique
1
function_languages_language_id_pkey
0
function_languages_language_id_pkey
0
function_languages_language_name_unique
0
function_languages_language_name_unique
1
function_types_function_type_id_pkey
0
function_types_function_type_id_pkey
0
function_types_function_type_name_unique
0
function_types_function_type_name_unique
1
index_types_index_type_id_pkey
0
index_types_index_type_id_pkey
0
index_types_index_type_name_unique
0
index_types_index_type_name_unique
1
key_types_key_type_id_pkey
0
key_types_key_type_id_pkey
0
key_types_key_type_name_unique
0
key_types_key_type_name_unique
1
keywords_keyword_pkey
0
keywords_keyword_pkey
0
privilege_codes_privilege_code_id_pkey
0
privilege_codes_privilege_code_id_pkey
0
privilege_codes_privilege_code_name_unique
0
privilege_codes_privilege_code_name_unique
1
spatial_ref_sys_srid_pkey
0
spatial_ref_sys_srid_pkey
0
table_types_table_type_id_pkey
0
table_types_table_type_id_pkey
0
table_types_table_type_name_unique
0
table_types_table_type_name_unique
1
unique_key
0
unique_key
1

statement ok
create table dummyme (a int primary key, b int)

statement ok
insert into dummyme values (1,1), (2,1), (3,1)

query T nosort
/* eliminated */
plan select count(distinct a) from dummyme
----
project (
| group by (
| | table("sys"."dummyme") [ "dummyme"."a" NOT NULL HASHCOL  ] COUNT 
| ) [  ] [ "sys"."count" no nil ("dummyme"."a" NOT NULL HASHCOL ) NOT NULL as "%1"."%1" ]
) [ "%1"."%1" NOT NULL ]

query T nosort
PLAN select count(distinct a) from dummyme group by b
----
project (
| group by (
| | table("sys"."dummyme") [ "dummyme"."a" NOT NULL HASHCOL , "dummyme"."b" ] COUNT 
| ) [ "dummyme"."b" ] [ "sys"."count" no nil ("dummyme"."a" NOT NULL HASHCOL ) NOT NULL as "%1"."%1" ]
) [ "%1"."%1" NOT NULL ]

query T nosort
/* not eliminated */
plan select count(distinct b) from dummyme
----
project (
| group by (
| | table("sys"."dummyme") [ "dummyme"."b" ] COUNT 
| ) [  ] [ "sys"."count" unique  no nil ("dummyme"."b") NOT NULL as "%1"."%1" ]
) [ "%1"."%1" NOT NULL ]

query T nosort
PLAN select count(distinct a + 1) from dummyme
----
project (
| group by (
| | project (
| | | table("sys"."dummyme") [ "dummyme"."a" NOT NULL HASHCOL  ] COUNT 
| | ) [ bigint["dummyme"."a" NOT NULL HASHCOL ] NOT NULL as "%3"."%3", "sys"."sql_add"("%3"."%3" NOT NULL, bigint "1") NOT NULL as "%2"."%2" ]
| ) [  ] [ "sys"."count" unique  no nil ("%2"."%2" NOT NULL) NOT NULL as "%1"."%1" ]
) [ "%1"."%1" NOT NULL ]

query T nosort
PLAN select count(distinct a + b) from dummyme
----
project (
| group by (
| | project (
| | | table("sys"."dummyme") [ "dummyme"."a" NOT NULL HASHCOL , "dummyme"."b" ] COUNT 
| | ) [ bigint["dummyme"."a" NOT NULL HASHCOL ] NOT NULL as "%3"."%3", bigint["dummyme"."b"] as "%4"."%4", "sys"."sql_add"("%3"."%3" NOT NULL, "%4"."%4") as "%2"."%2" ]
| ) [  ] [ "sys"."count" unique  no nil ("%2"."%2") NOT NULL as "%1"."%1" ]
) [ "%1"."%1" NOT NULL ]

query T nosort
PLAN select count(distinct abs(a)) from dummyme
----
project (
| group by (
| | project (
| | | table("sys"."dummyme") [ "dummyme"."a" NOT NULL HASHCOL  ] COUNT 
| | ) [ "sys"."abs"("dummyme"."a" NOT NULL HASHCOL ) NOT NULL as "%2"."%2" ]
| ) [  ] [ "sys"."count" unique  no nil ("%2"."%2" NOT NULL) NOT NULL as "%1"."%1" ]
) [ "%1"."%1" NOT NULL ]

statement ok
ROLLBACK

