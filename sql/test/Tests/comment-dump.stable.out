stdout of test 'comment-dump` in directory 'sql/test` itself:


# 17:19:14 >  
# 17:19:14 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31727" "--set" "mapi_usock=/var/tmp/mtest-32446/.s.monetdb.31727" "--set" "monet_prompt=" "--forcemito" "--dbpath=/Users/joeri/monets/default/var/MonetDB/mTests_sql_test" "--set" "embedded_r=yes"
# 17:19:14 >  

# MonetDB 5 server v11.28.0
# This is an unreleased version
# Serving database 'mTests_sql_test', using 8 threads
# Compiled for x86_64-apple-darwin17.3.0/64bit with 128bit integers
# Found 16.000 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2017 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://MacBook-Pro.local:31727/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-32446/.s.monetdb.31727
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 97_comments.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded


# 17:19:14 >  
# 17:19:14 >  "/usr/local/opt/python/bin/python2.7" "comment-dump.SQL.py" "comment-dump"
# 17:19:14 >  


# 17:19:14 >  
# 17:19:14 >  Mtimeout -timeout 60 mclient -lsql -ftest -tnone -Eutf-8 -i -e --host=/var/tmp/mtest-32446 --port=31727 --database=mTests_sql_test < "/Users/joeri/extr/monet/MonetDB/sql/test/Tests/comment-dump.sql"
# 17:19:14 >  

#DROP SCHEMA IF EXISTS foo;
#CREATE SCHEMA foo;
#SET SCHEMA foo;
#CREATE TABLE tab(i INT, j DECIMAL(4,2));
#CREATE VIEW vivi AS SELECT * FROM tab;
#CREATE INDEX idx ON tab(j,i);
#CREATE SEQUENCE counter AS INT;
#CREATE FUNCTION f() RETURNS INT BEGIN RETURN 42; END;
#CREATE FUNCTION f(i INT) RETURNS INT BEGIN RETURN 43; END;
#CREATE FUNCTION f(i INT, j INT) RETURNS INT BEGIN RETURN 44; END;
#CREATE FUNCTION f(i INT, j INT, k INT) RETURNS INT BEGIN RETURN 45; END;
#CREATE FUNCTION f(i INT, j INT, k INT, l INT) RETURNS INT BEGIN RETURN 45; END;
#CREATE PROCEDURE g() BEGIN DELETE FROM tab WHERE FALSE; END;

# 17:19:15 >  
# 17:19:15 >  Mtimeout -timeout 60 msqldump -q --host=/var/tmp/mtest-32446 --port=31727 --database=mTests_sql_test
# 17:19:15 >  

START TRANSACTION;
CREATE SCHEMA "foo" AUTHORIZATION "monetdb";
COMMENT ON SCHEMA "foo" IS 'foo foo';
CREATE SEQUENCE "foo"."counter" AS INTEGER;
COMMENT ON SEQUENCE "foo"."counter" IS 'counting';
SET SCHEMA "foo";
CREATE TABLE "foo"."tab" (
	"i" INTEGER,
	"j" DECIMAL(4,2)
);
COMMENT ON TABLE "foo"."tab" IS 'table';
CREATE INDEX "idx" ON "foo"."tab" ("j", "i");
COMMENT ON INDEX "foo"."idx" IS 'index on j';
COMMENT ON COLUMN "foo"."tab"."i" IS 'ii';
COMMENT ON COLUMN "foo"."tab"."j" IS 'jj';
create view vivi as select * from tab;
COMMENT ON VIEW "foo"."vivi" IS 'phew';
create function f() returns int begin return 42; end;
COMMENT ON FUNCTION "foo"."f"() IS '0 parms';
create function f(i int) returns int begin return 43; end;
COMMENT ON FUNCTION "foo"."f"(INTEGER) IS '1 parm';
create function f(i int, j int) returns int begin return 44; end;
COMMENT ON FUNCTION "foo"."f"(INTEGER, INTEGER) IS '2 parms';
create function f(i int, j int, k int) returns int begin return 45; end;
create function f(i int, j int, k int, l int) returns int begin return 45; end;
create procedure g() begin delete from tab where false; end;
COMMENT ON PROCEDURE "foo"."g"() IS 'proc';
ALTER SEQUENCE "foo"."counter" RESTART WITH 1 NO CYCLE;
SET SCHEMA "sys";
COMMIT;

# 17:23:05 >  
# 17:23:05 >  Mtimeout -timeout 60 msqldump -q --host=/var/tmp/mtest-32624 --port=37130 --database=mTests_sql_test -f
# 17:23:05 >  

START TRANSACTION;
SET SCHEMA "foo";
create function f() returns int begin return 42; end;
COMMENT ON FUNCTION "foo"."f"() IS '0 parms';
create function f(i int) returns int begin return 43; end;
COMMENT ON FUNCTION "foo"."f"(INTEGER) IS '1 parm';
create function f(i int, j int) returns int begin return 44; end;
COMMENT ON FUNCTION "foo"."f"(INTEGER, INTEGER) IS '2 parms';
create function f(i int, j int, k int) returns int begin return 45; end;
create function f(i int, j int, k int, l int) returns int begin return 45; end;
create procedure g() begin delete from tab where false; end;
COMMENT ON PROCEDURE "foo"."g"() IS 'proc';
COMMIT;

# 17:23:05 >  
# 17:23:05 >  "Done."
# 17:23:05 >  

