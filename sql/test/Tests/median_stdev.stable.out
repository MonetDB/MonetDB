stdout of test 'median_stdev` in directory 'sql/test` itself:


# 20:38:18 >  
# 20:38:18 >   mserver5 "--config=/ufs/niels/scratch/monetdb/Linux-x86_64/etc/monetdb5.conf" --debug=10 --set "monet_mod_path=/ufs/niels/scratch/monetdb/Linux-x86_64/lib/MonetDB5:/ufs/niels/scratch/monetdb/Linux-x86_64/lib/MonetDB5/lib:/ufs/niels/scratch/monetdb/Linux-x86_64/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/niels/scratch/monetdb/Linux-x86_64/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/niels/scratch/monetdb/Linux-x86_64/var/MonetDB5/sql_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=36991 --set xrpc_port=46066 --set monet_prompt= --trace  "--dbname=mTests_src_test" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 20:38:18 >  

# MonetDB server v5.5.0, based on kernel v1.25.0
# Serving database 'mTests_src_test'
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-2008 CWI, all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://alf.ins.cwi.nl:36991/
# MonetDB/SQL module v2.23.0 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 20:38:18 >  
# 20:38:18 >  mclient -lsql -umonetdb -Pmonetdb --host=alf --port=36991 
# 20:38:18 >  

[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
[ 1	]
#INSERT INTO sampleData VALUES ( 5,   0 );
[ 1	]
#SELECT count(*) from sampleData;
% .%1 # table_name
% %1 # name
% bigint # type
% 2 # length
[ 17	]
#SELECT median(numValue) FROM sampleData;  -- should return 6
% sys.%1 # table_name
% %1 # name
% int # type
% 1 # length
[ 6	]
#SELECT median(groupID) FROM sampleData;  -- should return 2
% sys.%1 # table_name
% %1 # name
% int # type
% 1 # length
[ 2	]
#SELECT groupID, median(numValue) FROM sampleData GROUP BY groupID ORDER BY groupId;  -- should return (6, 5, 17, 18,  0)
% sys.sampledata,	sys.%1 # table_name
% groupid,	%1 # name
% int,	int # type
% 1,	2 # length
[ 1,	6	]
[ 2,	5	]
[ 3,	17	]
[ 4,	18	]
[ 5,	0	]
#SELECT R.groupID, AVG(1.0*R.numValue) AS medianValue
#FROM
#(    SELECT GroupID, numValue, ROW_NUMBER() OVER(PARTITION BY groupID ORDER BY NumValue) AS rowno
#    FROM sampleData
#) R
#INNER JOIN
#(    SELECT GroupID, 1+count(*) as N
#    FROM sampleData
#    GROUP BY GroupID
#) G
#ON R.GroupID = G.GroupID AND R.rowNo BETWEEN N/2 AND N/2+N%2
#GROUP BY R.groupID ORDER by R.groupID;
% sys.r,	sys. # table_name
% groupid,	medianvalue # name
% int,	double # type
% 1,	24 # length
[ 1,	6	]
[ 2,	5	]
[ 3,	34.5	]
[ 4,	18	]
[ 5,	0	]
#SELECT R.groupID, sqrt(SUM((R.n-G.a)*(R.n-G.a))/count(*)) AS stdev
#FROM
#(    SELECT GroupID, NumValue as n
#    FROM sampleData
#) R
#INNER JOIN
#(    SELECT GroupID, AVG(numValue) as a
#    FROM sampleData
#    GROUP BY GroupID
#) G
#ON R.GroupID = G.GroupID 
#GROUP BY R.groupID ORDER BY R.groupID;
% sys.r,	sys. # table_name
% groupid,	stdev # name
% int,	double # type
% 1,	24 # length
[ 1,	5.314132102	]
[ 2,	2.598076211	]
[ 3,	23.41340428	]
[ 4,	0	]
[ 5,	0	]

# 20:38:18 >  
# 20:38:18 >  Done.
# 20:38:18 >  

