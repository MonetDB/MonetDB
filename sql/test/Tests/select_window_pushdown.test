# init
statement ok
CREATE TABLE Test (k int, v int)

statement ok
INSERT INTO Test SELECT value % 10 as k, value as v FROM generate_series(1, 100)

# simple eq filter on the partition key, must be pushed down,
# while the flag filter cannot be safely pushed down
query T nosort
plan SELECT *
FROM (
    SELECT *, rank() OVER (PARTITION BY k ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND NOT flag AND k = 10
----
project (
| select (
| | project (
| | | project (
| | | | project (
| | | | | select (
| | | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | | ) [ ("test"."k" NOT NULL) = (int(32) "10") ]
| | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%1"."%1", "sys"."="("%1"."%1" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."k" ASC NOT NULL, "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("t1"."k" NOT NULL), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| ) [ ("t1"."flag" NOT NULL) = (boolean(1) "false"), ("t2"."rank") = (int(32) "1") ]
) [ "t1"."k" NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]

# simple range filter on the partition key
query T nosort
plan SELECT *
FROM (
    SELECT *, rank() OVER (PARTITION BY k ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND NOT flag AND k >= 10 AND k <= 50
----
project (
| select (
| | project (
| | | project (
| | | | project (
| | | | | select (
| | | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | | ) [ (int(32) "10") <= ("test"."k" NOT NULL) <= (int(32) "50") ]
| | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%1"."%1", "sys"."="("%1"."%1" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."k" ASC NOT NULL, "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("t1"."k" NOT NULL), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| ) [ ("t1"."flag" NOT NULL) = (boolean(1) "false"), ("t2"."rank") = (int(32) "1") ]
) [ "t1"."k" NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]

# simple not in filter on the partition key
query T nosort
plan SELECT *
FROM (
    SELECT *, rank() OVER (PARTITION BY k ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND NOT flag AND k NOT IN (10, 20, 30)
----
project (
| select (
| | project (
| | | project (
| | | | project (
| | | | | select (
| | | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | | ) [ ("test"."k" NOT NULL) notin (int(32) "10", int(32) "20", int(32) "30") ]
| | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%2"."%2", "sys"."="("%2"."%2" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."k" ASC NOT NULL, "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("t1"."k" NOT NULL), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| ) [ ("t1"."flag" NOT NULL) = (boolean(1) "false"), ("t2"."rank") = (int(32) "1") ]
) [ "t1"."k" NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]

# another filter also not on the partition key, must not be pushed down
query T nosort
plan SELECT *
FROM (
    SELECT *, rank() OVER (PARTITION BY k ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND NOT flag AND k = 10 AND v = 15
----
project (
| select (
| | project (
| | | project (
| | | | project (
| | | | | select (
| | | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | | ) [ ("test"."k" NOT NULL) = (int(32) "10") ]
| | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%1"."%1", "sys"."="("%1"."%1" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."k" ASC NOT NULL, "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("t1"."k" NOT NULL), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| ) [ ("t1"."v" NOT NULL UNIQUE) = (int(32) "15"), ("t1"."flag" NOT NULL) = (boolean(1) "false"), ("t2"."rank") = (int(32) "1") ]
) [ "t1"."k" NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]

# swapping k with v just to test for hardcoded optimizations,
# v is pushed down but not k
query T nosort
plan SELECT *
FROM (
    SELECT *, rank() OVER (PARTITION BY v ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND NOT flag AND k = 10 AND v = 15
----
project (
| select (
| | project (
| | | project (
| | | | project (
| | | | | select (
| | | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | | ) [ ("test"."v" NOT NULL UNIQUE) = (int(32) "15") ]
| | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%1"."%1", "sys"."="("%1"."%1" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("t1"."v" NOT NULL UNIQUE), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| ) [ ("t1"."flag" NOT NULL) = (boolean(1) "false"), ("t2"."rank") = (int(32) "1"), ("t1"."k" NOT NULL) = (int(32) "10") ]
) [ "t1"."k" NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]

# performing some additional computation on the partition key,
# filter cannot be pushed down
query T nosort
plan SELECT *
FROM (
    SELECT k * 10 as k, v, flag, rank() OVER (PARTITION BY k ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND NOT flag AND k = 10
----
project (
| select (
| | project (
| | | select (
| | | | project (
| | | | | project (
| | | | | | project (
| | | | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%1"."%1", "sys"."="("%1"."%1" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."k" ASC NOT NULL, "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("t1"."k" NOT NULL), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| | | ) [ ("t1"."flag" NOT NULL) = (boolean(1) "false"), ("t2"."rank") = (int(32) "1") ]
| | ) [ "sys"."sql_mul"("t1"."k" NOT NULL, tinyint(4) "10") NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]
| ) [ ("t2"."k" NOT NULL) = (bigint(36) "10") ]
) [ "t2"."k" NOT NULL, "t2"."v" NOT NULL UNIQUE, "t2"."flag" NOT NULL, "t2"."rank" NOT NULL ]

# filter [partition column OR flag], cannot be safely pushed down
query T nosort
plan SELECT *
FROM (
    SELECT *, rank() OVER (PARTITION BY k ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND (NOT flag OR k = 10)
----
project (
| select (
| | project (
| | | project (
| | | | project (
| | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%1"."%1", "sys"."="("%1"."%1" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."k" ASC NOT NULL, "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("t1"."k" NOT NULL), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| ) [ ("t2"."rank") = (int(32) "1"), (("t1"."flag" NOT NULL) = (boolean(1) "false")) or (("t1"."k" NOT NULL) = (int(32) "10")) ]
) [ "t1"."k" NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]

# filter on k and v and both are partition columns, both filters can be pushed down 
query T nosort
plan SELECT *
FROM (
    SELECT *, rank() OVER (PARTITION BY k, v ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND NOT flag AND k <= 10 AND v IN (1, 2, 3)
----
project (
| select (
| | project (
| | | project (
| | | | project (
| | | | | select (
| | | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | | ) [ ("test"."k" NOT NULL) <= (int(32) "10"), ("test"."v" NOT NULL UNIQUE) in (int(32) "1", int(32) "2", int(32) "3") ]
| | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%2"."%2", "sys"."="("%2"."%2" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."k" ASC NOT NULL, "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("sys"."diff"("t1"."k" NOT NULL), "t1"."v" NOT NULL UNIQUE), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| ) [ ("t1"."flag" NOT NULL) = (boolean(1) "false"), ("t2"."rank") = (int(32) "1") ]
) [ "t1"."k" NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]

statement ok
DROP TABLE Test

# test with string filters
# (previously e_convert were not being considered)
statement ok
CREATE TABLE Test (k varchar(100), v int)

statement ok
INSERT INTO Test SELECT value % 10 as k, value as v FROM generate_series(1, 100)

query T nosort
plan SELECT *
FROM (
    SELECT *, rank() OVER (PARTITION BY k ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND NOT flag AND k = '10'
----
project (
| select (
| | project (
| | | project (
| | | | project (
| | | | | select (
| | | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | | ) [ (char(100)["test"."k" NOT NULL] NOT NULL) = (char(100) "10") ]
| | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%1"."%1", "sys"."="("%1"."%1" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."k" ASC NOT NULL, "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("t1"."k" NOT NULL), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| ) [ ("t1"."flag" NOT NULL) = (boolean(1) "false"), ("t2"."rank") = (int(32) "1") ]
) [ "t1"."k" NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]

# test with like-type filters
query T nosort
plan SELECT *
FROM (
    SELECT *, rank() OVER (PARTITION BY k ORDER BY v DESC) AS rank
    FROM (
        SELECT k, v, v % 2 = 0 AS flag
        FROM Test
    ) t1
) t2
WHERE rank = 1 AND NOT flag AND k like '%10%'
----
project (
| select (
| | project (
| | | project (
| | | | project (
| | | | | select (
| | | | | | table("sys"."test") [ "test"."k" NOT NULL, "test"."v" NOT NULL UNIQUE ]
| | | | | ) [ (clob["test"."k" NOT NULL] NOT NULL) FILTER "sys"."like"(clob "%10%", clob "", boolean(1) "false") ]
| | | | ) [ "test"."k" NOT NULL as "t1"."k", "test"."v" NOT NULL UNIQUE as "t1"."v", "sys"."mod"("test"."v" NOT NULL UNIQUE, int(32) "2") NOT NULL as "%1"."%1", "sys"."="("%1"."%1" NOT NULL, int(32) "0") NOT NULL as "t1"."flag" ]
| | | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL ] [ "t1"."k" ASC NOT NULL, "t1"."v" NULLS LAST NOT NULL UNIQUE ]
| | ) [ "t1"."k" NOT NULL, "t1"."v" NOT NULL UNIQUE, "t1"."flag" NOT NULL, "sys"."rank"("sys"."star"(), "sys"."diff"("t1"."k" NOT NULL), "sys"."diff"("t1"."v" NOT NULL UNIQUE)) as "t2"."rank" ]
| ) [ ("t1"."flag" NOT NULL) = (boolean(1) "false"), ("t2"."rank") = (int(32) "1") ]
) [ "t1"."k" NOT NULL as "t2"."k", "t1"."v" NOT NULL UNIQUE as "t2"."v", "t1"."flag" NOT NULL as "t2"."flag", "t2"."rank" NOT NULL ]

statement ok
DROP TABLE Test

