stdout of test 'sqlsmith.Bug-6423` in directory 'sql/test/BugTracker-2017` itself:


# 13:47:15 >  
# 13:47:15 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35547" "--set" "mapi_usock=/var/tmp/mtest-16781/.s.monetdb.35547" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/rc-monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2017"
# 13:47:15 >  

# MonetDB 5 server v11.27.6
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2017', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 7.330 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2017 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:35547/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-16781/.s.monetdb.35547
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


#START TRANSACTION;
#CREATE TABLE another_T (col1 INT, col2 INT, col3 INT, col4 INT, col5 INT, col6 INT, col7 INT, col8 INT);
#INSERT INTO another_T VALUES (1,2,3,4,5,6,7,8), (11,22,33,44,55,66,77,88), (111,222,333,444,555,666,777,888), (1111,2222,3333,4444,5555,6666,7777,8888);
[ 4	]
#CREATE TABLE LongTable (col1 INT, col2 INT, col3 INT, col4 INT, col5 INT, col6 INT, col7 INT, col8 INT);
#INSERT INTO LongTable VALUES (1,7,2,1,1,909,1,1), (2,7,2,2,3,4,4,6), (NULL,5,4,81,NULL,5,-10,1), (-90,NULL,0,NULL,2,0,1,NULL);
[ 4	]
#CREATE TABLE integers(i INTEGER);
#INSERT INTO integers VALUES (1), (2), (3), (NULL);
[ 4	]
#CREATE TABLE tbl_ProductSales (col1 INT, col2 varchar(64), col3 varchar(64), col4 INT, col5 REAL, col6 date); 
#INSERT INTO tbl_ProductSales VALUES (1,'Game','Mobo Game',200, 1.2, date '2015-12-12'),(2,'Game','PKO Game',400, -1.0, date '2012-02-10'),(3,'Fashion','Shirt',500, NULL, date '1990-01-01'),
#(4,'Fashion','Shorts',100, 102.45, date '2000-03-08'),(5,'Sport','Ball',0, 224.78, NULL);
[ 5	]
#CREATE TABLE analytics (aa INT, bb INT, cc BIGINT);
#INSERT INTO analytics VALUES (15, 3, 15), (3, 1, 3), (2, 1, 2), (5, 3, 5), (NULL, 2, NULL), (3, 2, 3), (4, 1, 4), (6, 3, 6), (8, 2, 8), (NULL, 4, NULL);
[ 10	]
#CREATE TABLE tab0(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab0 VALUES (97,1,99), (15,81,47),(87,21,10);
[ 3	]
#CREATE TABLE tab1(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab1 VALUES (51,14,96), (85,5,59), (91,47,68);
[ 3	]
#CREATE TABLE tab2(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab2 VALUES (64,77,40), (75,67,58),(46,51,23);
[ 3	]
#select  
#  cast(nullif(sample_4.id,
#    ref_5.name) as clob) as c0, 
#  ref_7.type as c1, 
#  sample_4.ds as c2, 
#  65 as c3
#from 
#  tmp.objects as sample_0
#    inner join sys.environment as ref_5
#        left join sys.tables as ref_6
#        on ((76 is not NULL) 
#            or ((true) 
#              and ((ref_6.name is NULL) 
#                or (ref_6.access is NULL))))
#      inner join sys.storagemodel as ref_7
#        left join bam.rg as sample_4
#          right join sys.key_types as ref_8
#          on (true)
#      on (ref_6.col2 = ref_8.col1 )
% .,	.,	.,	. # table_name
% c0,	c1,	c2,	c3 # name
% varchar,	int,	int,	tinyint # type
% 0,	1,	1,	1 # length
#ROLLBACK;

# 13:47:16 >  
# 13:47:16 >  "Done."
# 13:47:16 >  

