stdout of test 'sqlsmith.Bug-6424` in directory 'sql/test/BugTracker-2017` itself:


# 08:07:16 >  
# 08:07:16 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37745" "--set" "mapi_usock=/var/tmp/mtest-10220/.s.monetdb.37745" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/rc-monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2017"
# 08:07:16 >  

# MonetDB 5 server v11.27.6
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2017', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 7.330 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2017 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:37745/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-10220/.s.monetdb.37745
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


#START TRANSACTION;
#CREATE TABLE another_T (col1 INT, col2 INT, col3 INT, col4 INT, col5 INT, col6 INT, col7 INT, col8 INT);
#INSERT INTO another_T VALUES (1,2,3,4,5,6,7,8), (11,22,33,44,55,66,77,88), (111,222,333,444,555,666,777,888), (1111,2222,3333,4444,5555,6666,7777,8888);
[ 4	]
#CREATE TABLE integers(i INTEGER);
#INSERT INTO integers VALUES (1), (2), (3), (NULL);
[ 4	]
#CREATE TABLE analytics (aa INT, bb INT, cc BIGINT);
#INSERT INTO analytics VALUES (15, 3, 15), (3, 1, 3), (2, 1, 2), (5, 3, 5), (NULL, 2, NULL), (3, 2, 3), (4, 1, 4), (6, 3, 6), (8, 2, 8), (NULL, 4, NULL);
[ 10	]
#CREATE TABLE tab0(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab0 VALUES (97,1,99), (15,81,47),(87,21,10);
[ 3	]
#CREATE TABLE tab1(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab1 VALUES (51,14,96), (85,5,59), (91,47,68);
[ 3	]
#select  
#  ref_2.name as c0, 
#  case when true then ref_3.dimpos else ref_3.dimpos end
#     as c1
#from 
#  sys.tables as ref_0
#      inner join sys.dependencies as ref_1
#          right join sys.tables as ref_2
#          on ((ref_2.temporary is NULL) 
#              or (ref_2.system is not NULL))
#        inner join bam.pg as sample_1
#        on (false)
#      on (ref_0.system = ref_2.system )
#    inner join sys.netcdf_vardim as ref_3
#    on (true)
#where ref_2.col4 is NULL;
% .,	sys. # table_name
% c0,	c1 # name
% int,	int # type
% 1,	1 # length
#ROLLBACK;

# 08:07:16 >  
# 08:07:16 >  "Done."
# 08:07:16 >  

