stdout of test 'sqlsmith.Bug-6477` in directory 'sql/test/BugTracker-2017` itself:


# 14:26:12 >  
# 14:26:12 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=39335" "--set" "mapi_usock=/var/tmp/mtest-23479/.s.monetdb.39335" "--set" "monet_prompt=" "--forcemito" "--dbpath=/home/niels/scratch/rc-monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2017"
# 14:26:12 >  

# MonetDB 5 server v11.27.6
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2017', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 7.330 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2017 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:39335/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-23479/.s.monetdb.39335
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded


#START TRANSACTION;
#CREATE TABLE another_T (col1 timestamp, col2 INT, col3 INT, col4 INT, col5 INT, col6 INT, col7 INT, col8 INT);
#INSERT INTO another_T VALUES (timestamp '2018-01-02 08:00:10',2,3,4,5,6,7,8), (timestamp '2018-02-04 19:02:01',22,33,44,55,66,77,88), 
#(timestamp '2018-04-19 15:49:45',222,333,444,555,666,777,888), (timestamp '2018-05-03 05:12:04',2222,3333,4444,5555,6666,7777,8888);
[ 4	]
#CREATE TABLE tab0(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab0 VALUES (97,1,99), (15,81,47),(87,21,10);
[ 3	]
#CREATE TABLE tab1(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab1 VALUES (51,14,96), (85,5,59), (91,47,68);
[ 3	]
#CREATE TABLE tab2(col0 INTEGER, col1 INTEGER, col2 INTEGER);
#INSERT INTO tab2 VALUES (64,77,40), (75,67,58),(46,51,23);
[ 3	]
#select
#  cast(coalesce(ref_0.stop,
#    ref_0.stop) as timestamp) as c0,
#  ref_0.id as c1,
#  cast(coalesce(ref_0.cpu,
#    ref_0.io) as int) as c2,
#  ref_0.run as c3,
#  ref_0.stop as c4,
#  ref_0.cpu as c5,
#  case when cast(nullif(ref_0.tuples,
#        ref_0.tuples) as bigint) is not NULL then ref_0.io else ref_0.io end
#     as c6
#from
#  sys.querylog_calls as ref_0
#where cast(coalesce(ref_0.tuples,
#    case when EXISTS (
#        select
#            ref_1.id as c0
#          from
#            tab0 as ref_1
#              left join tab1 as ref_2
% .,	.,	.,	.,	.,	.,	. # table_name
% c0,	c1,	c2,	c3,	c4,	c5,	c6 # name
% timestamp,	int,	int,	int,	timestamp,	int,	int # type
% 26,	4,	4,	4,	26,	4,	4 # length
[ 2018-01-02 08:00:10.000000,	2,	4,	3,	2018-01-02 08:00:10.000000,	4,	5	]
[ 2018-02-04 19:02:01.000000,	22,	44,	33,	2018-02-04 19:02:01.000000,	44,	55	]
[ 2018-04-19 15:49:45.000000,	222,	444,	333,	2018-04-19 15:49:45.000000,	444,	555	]
[ 2018-05-03 05:12:04.000000,	2222,	4444,	3333,	2018-05-03 05:12:04.000000,	4444,	5555	]
#ROLLBACK;

# 14:26:12 >  
# 14:26:12 >  "Done."
# 14:26:12 >  

