statement ok
set optimizer = 'sequential_pipe'

statement ok
start transaction

statement ok
CREATE FUNCTION my_generate_series(start INT, finish INT)
RETURNS TABLE (value INT)
BEGIN
    DECLARE TABLE tmp_generate_series(value INT);
    DECLARE i INT;
    SET i = start;
    WHILE (i <= finish) DO
        INSERT INTO tmp_generate_series VALUES(i);
        SET i = i + 1;
    END WHILE;
    RETURN tmp_generate_series;
END

query T python .explain.function_histogram
explain select count(*) from my_generate_series(1,5) as t1,
my_generate_series(1,100) as t2
----
user.main
1
querylog.define
1
sql.my_generate_series
2
aggr.count
2
bat.single
2
algebra.crossproduct
1
algebra.projection
2
bat.pack
5
sql.resultSet
1

query I rowsort
select count(*) from my_generate_series(1,5) as t1,
my_generate_series(1,100) as t2
----
500

query I rowsort
select count(*) from my_generate_series(1,5) as t1,
my_generate_series(1,100) as t2
----
500

query I rowsort
select count(*) from my_generate_series(1,5) as t1,
my_generate_series(1,100) as t2
----
500

statement ok
rollback

statement ok
set optimizer = 'default_pipe'

