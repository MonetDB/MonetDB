stdout of test 'create` in directory 'sql/test/UserDump` itself:


# 13:57:12 >  
# 13:57:12 >   mserver5 "--config=/ufs/sjoerd/Monet-virgin-stable/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/sjoerd/src/MonetDB/virgin-stable/sql/x86_64-unknown-linux-gnu/src/backends/monet5/.libs:/ufs/sjoerd/src/MonetDB/virgin-stable/sql/x86_64-unknown-linux-gnu/src/backends/monet5:/ufs/sjoerd/Monet-virgin-stable/lib64/MonetDB5:/ufs/sjoerd/Monet-virgin-stable/lib64/MonetDB5/lib:/ufs/sjoerd/Monet-virgin-stable/lib64/MonetDB5/bin" --set "gdk_dbfarm=/ufs/sjoerd/src/MonetDB/virgin-stable/sql/x86_64-unknown-linux-gnu/dbfarm" --set "sql_logdir=/ufs/sjoerd/src/MonetDB/virgin-stable/sql/x86_64-unknown-linux-gnu/sql_logs" --set "xquery_logdir=/ufs/sjoerd/src/MonetDB/virgin-stable/sql/x86_64-unknown-linux-gnu/xquery_logs"  --set mapi_open=true --set xrpc_open=true --set mapi_port=31535 --set xrpc_port=42257 --set monet_prompt= --trace  "--dbname=mTests_src_test_UserDump" --set mal_listing=0 "--dbinit= include sql;" ; echo ; echo Over..
# 13:57:12 >  

# MonetDB server v5.12.0, based on kernel v1.30.0
# Serving database 'mTests_src_test_UserDump', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2009 MonetDB B.V., all rights reserved
# Visit http://monetdb.cwi.nl/ for further information
# Listening for connection requests on mapi:monetdb://ottar.ins.cwi.nl:31535/
# MonetDB/SQL module v2.30.0 loaded

#function user.main():void;
#    clients.quit();
#end main;


# 13:57:12 >  
# 13:57:12 >  /usr/bin/python create.SQL.py create 
# 13:57:12 >  

START TRANSACTION;
CREATE USER "test" WITH ENCRYPTED PASSWORD 'ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff' NAME 'Test User' SCHEMA "sys";
CREATE USER "voc" WITH ENCRYPTED PASSWORD 'ea45cf4e124b215a28631ec7ff0bf06e82fc26b2be7a066c9594855690fb5d42438be58d6523132384a1738cb4e5139caa1f970ebdfb422d65834d9a4ef61c0e' NAME 'VOC Explorer' SCHEMA "sys";
CREATE SCHEMA "test" AUTHORIZATION "test";
CREATE SCHEMA "voc" AUTHORIZATION "voc";
ALTER USER "test" SET SCHEMA "test";
ALTER USER "voc" SET SCHEMA "voc";
SET SCHEMA "voc";
CREATE TABLE "voc"."foo" (
	"id" INTEGER       NOT NULL,
	"v"  INTEGER,
	CONSTRAINT "foo_id_pkey" PRIMARY KEY ("id")
);
create view bar as select * from foo;
create function b(i int) returns int begin return select v from bar where id = i; end;
CREATE TABLE "voc"."a" (
	"id" INTEGER
);
create trigger a after insert on foo insert into a values (1);
SET SCHEMA "test";
CREATE TABLE "test"."foo" (
	"id" INTEGER       NOT NULL,
	"v"  INTEGER,
	CONSTRAINT "foo_id_pkey" PRIMARY KEY ("id")
);
create view bar as select * from foo;
create function b(i int) returns int begin return select v from bar where id = i; end;
CREATE TABLE "test"."a" (
	"id" INTEGER
);
create trigger a after insert on foo insert into a values (1);
create trigger test.x after insert on foo insert into a values (1);
create trigger "test"."z" after insert on "foo" insert into a values (1);
SET SCHEMA "sys";
COMMIT;
START TRANSACTION;
SET SCHEMA "voc";
CREATE TABLE "voc"."foo" (
	"id" INTEGER       NOT NULL,
	"v"  INTEGER,
	CONSTRAINT "foo_id_pkey" PRIMARY KEY ("id")
);
create view bar as select * from foo;
create function b(i int) returns int begin return select v from bar where id = i; end;
CREATE TABLE "voc"."a" (
	"id" INTEGER
);
create trigger a after insert on foo insert into a values (1);
COMMIT;
START TRANSACTION;
SET SCHEMA "test";
CREATE TABLE "test"."foo" (
	"id" INTEGER       NOT NULL,
	"v"  INTEGER,
	CONSTRAINT "foo_id_pkey" PRIMARY KEY ("id")
);
create view bar as select * from foo;
create function b(i int) returns int begin return select v from bar where id = i; end;
CREATE TABLE "test"."a" (
	"id" INTEGER
);
create trigger a after insert on foo insert into a values (1);
create trigger test.x after insert on foo insert into a values (1);
create trigger "test"."z" after insert on "foo" insert into a values (1);
COMMIT;

# 13:57:13 >  
# 13:57:13 >  Done.
# 13:57:13 >  

