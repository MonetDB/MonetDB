START TRANSACTION;
CREATE USER "test" WITH ENCRYPTED PASSWORD 'ee26b0dd4af7e749aa1a8ee3c10ae9923f618980772e473f8819a5d4940e0db27ac185f8a0e1d5f84f88bc887fd67b143732c304cc5fa9ad8e6f57f50028a8ff' NAME 'Test User' SCHEMA "sys";
CREATE USER "voc" WITH ENCRYPTED PASSWORD 'ea45cf4e124b215a28631ec7ff0bf06e82fc26b2be7a066c9594855690fb5d42438be58d6523132384a1738cb4e5139caa1f970ebdfb422d65834d9a4ef61c0e' NAME 'VOC Explorer' SCHEMA "sys";
CREATE SCHEMA "test" AUTHORIZATION "test";
CREATE SCHEMA "voc" AUTHORIZATION "voc";
ALTER USER "test" SET SCHEMA "test";
ALTER USER "voc" SET SCHEMA "voc";
SET SCHEMA "voc";
CREATE TABLE "voc"."foo" (
	"id" INTEGER       NOT NULL,
	"v"  INTEGER,
	CONSTRAINT "foo_id_pkey" PRIMARY KEY ("id")
);
CREATE TABLE "voc"."a" (
	"id" INTEGER
);
SET SCHEMA "test";
CREATE TABLE "test"."foo" (
	"id" INTEGER       NOT NULL,
	"v"  INTEGER,
	CONSTRAINT "foo_id_pkey" PRIMARY KEY ("id")
);
CREATE TABLE "test"."a" (
	"id" INTEGER
);
SET SCHEMA "voc";
create view bar as select * from foo
;
create function b(i int) returns int begin return select v from bar where id = i; end
;
create trigger a after insert on foo insert into a values (1)
;
SET SCHEMA "test";
create view bar as select * from foo
;
create function b(i int) returns int begin return select v from bar where id = i; end
;
create trigger a after insert on foo insert into a values (1)
;
create trigger x after insert on foo insert into a values (1)
;
create trigger "z" after insert on "foo" insert into a values (1)
;
SET SCHEMA "sys";
COMMIT;
