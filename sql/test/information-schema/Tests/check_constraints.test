query TTTT rowsort
SELECT
  CONSTRAINT_CATALOG,
  CONSTRAINT_SCHEMA,
  CONSTRAINT_NAME,
  CHECK_CLAUSE
FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
WHERE CONSTRAINT_SCHEMA = '' OR CONSTRAINT_NAME = ''
----

query TTTTIITI rowsort
SELECT
  CONSTRAINT_CATALOG,
  CONSTRAINT_SCHEMA,
  CONSTRAINT_NAME,
  CHECK_CLAUSE,
  schema_id,
  table_id,
  table_name,
  key_id
FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
WHERE CONSTRAINT_SCHEMA IS NULL
   OR CONSTRAINT_SCHEMA = ''
   OR CONSTRAINT_NAME IS NULL
   OR CONSTRAINT_NAME = ''
   OR CHECK_CLAUSE IS NULL
   OR CHECK_CLAUSE = ''
   OR schema_id IS NULL
   OR table_id IS NULL
   OR table_name IS NULL
   OR table_name = ''
   OR key_id IS NULL
----

-- entity integrity checks
query ITTT rowsort
SELECT COUNT(*) AS duplicates, CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 GROUP BY CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME
 HAVING COUNT(*) > 1
----

-- as CONSTRAINT_CATALOG is always NULL the CONSTRAINT_SCHEMA, CONSTRAINT_NAME combo should be unique also
query ITT rowsort
SELECT COUNT(*) AS duplicates, CONSTRAINT_SCHEMA, CONSTRAINT_NAME
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 GROUP BY CONSTRAINT_SCHEMA, CONSTRAINT_NAME
 HAVING COUNT(*) > 1
----

-- it should also be unique when using schema_id instead of CONSTRAINT_SCHEMA
query IIT rowsort
SELECT COUNT(*) AS duplicates, schema_id, CONSTRAINT_NAME
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 GROUP BY schema_id, CONSTRAINT_NAME
 HAVING COUNT(*) > 1
----

-- key_id alone should be unique also
query II rowsort
SELECT COUNT(*) AS duplicates, key_id
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 GROUP BY key_id
 HAVING COUNT(*) > 1
----

-- referential integrity checks
query TTT rowsort
SELECT CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA, CONSTRAINT_NAME
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 WHERE (CONSTRAINT_CATALOG, CONSTRAINT_SCHEMA)
 NOT IN (SELECT CATALOG_NAME, SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA)
----

-- as CONSTRAINT_CATALOG is always NULL leave it out of the check
query TT rowsort
SELECT CONSTRAINT_SCHEMA, CONSTRAINT_NAME
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 WHERE (CONSTRAINT_SCHEMA)
 NOT IN (SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA)
----

-- it should also be correct when using schema_id instead of CONSTRAINT_SCHEMA
query ITT rowsort
SELECT schema_id, CONSTRAINT_SCHEMA, CONSTRAINT_NAME
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 WHERE (schema_id)
 NOT IN (SELECT schema_id FROM INFORMATION_SCHEMA.SCHEMATA)
----

-- check schema_id reference
query TTI rowsort
SELECT CONSTRAINT_SCHEMA, CONSTRAINT_NAME, schema_id
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 WHERE (schema_id) NOT IN (SELECT id FROM sys.schemas)
----

-- check table_id reference
query TTI rowsort
SELECT CONSTRAINT_SCHEMA, CONSTRAINT_NAME, table_id
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 WHERE (table_id) NOT IN (SELECT id FROM sys.tables)
----

-- check key_id reference
query TTI rowsort
SELECT CONSTRAINT_SCHEMA, CONSTRAINT_NAME, key_id
 FROM INFORMATION_SCHEMA.CHECK_CONSTRAINTS
 WHERE (key_id) NOT IN (SELECT id FROM sys.keys UNION ALL SELECT id FROM tmp.keys)
----

