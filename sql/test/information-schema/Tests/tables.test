query TTTTTTTTTTTT rowsort
SELECT
  TABLE_CATALOG,
  TABLE_SCHEMA,
  TABLE_NAME,
  TABLE_TYPE,
  SELF_REFERENCING_COLUMN_NAME,
  REFERENCE_GENERATION,
  USER_DEFINED_TYPE_CATALOG,
  USER_DEFINED_TYPE_SCHEMA,
  USER_DEFINED_TYPE_NAME,
  IS_INSERTABLE_INTO,
  IS_TYPED,
  COMMIT_ACTION
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA = 'information_schema' AND TABLE_NAME = 'tables'
----
NULL
information_schema
tables
SYSTEM VIEW
NULL
NULL
NULL
NULL
NULL
NO
NO
NULL

-- check for NULL and empty string value violations on NOT NULL columns
query TTTTTTTTTTTTIIIIIITT rowsort
SELECT
  TABLE_CATALOG,
  TABLE_SCHEMA,
  TABLE_NAME,
  TABLE_TYPE,
  SELF_REFERENCING_COLUMN_NAME,
  REFERENCE_GENERATION,
  USER_DEFINED_TYPE_CATALOG,
  USER_DEFINED_TYPE_SCHEMA,
  USER_DEFINED_TYPE_NAME,
  IS_INSERTABLE_INTO,
  IS_TYPED,
  COMMIT_ACTION,
  schema_id,
  table_id,
  table_type_id,
  row_count,
  is_system,
  is_view,
  query_def,
  comments
FROM INFORMATION_SCHEMA.TABLES
WHERE TABLE_SCHEMA IS NULL
   OR TABLE_SCHEMA = ''
   OR TABLE_NAME IS NULL
   OR TABLE_NAME = ''
   OR TABLE_TYPE IS NULL
   OR TABLE_TYPE = ''
   OR schema_id IS NULL
   OR table_id IS NULL
   OR table_type_id IS NULL
   OR is_system IS NULL
   OR is_view IS NULL
----

-- entity integrity checks
query ITTT rowsort
SELECT COUNT(*) AS duplicates, TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME
 FROM INFORMATION_SCHEMA.TABLES
 GROUP BY TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME
 HAVING COUNT(*) > 1
----

-- as TABLE_CATALOG is always NULL the TABLE_SCHEMA, TABLE_NAME combo should be unique also
query ITT rowsort
SELECT COUNT(*) AS duplicates, TABLE_SCHEMA, TABLE_NAME
 FROM INFORMATION_SCHEMA.TABLES
 GROUP BY TABLE_SCHEMA, TABLE_NAME
 HAVING COUNT(*) > 1
----

-- it should also be unique when using schema_id instead of TABLE_SCHEMA
query IIT rowsort
SELECT COUNT(*) AS duplicates, schema_id, TABLE_NAME
 FROM INFORMATION_SCHEMA.TABLES
 GROUP BY schema_id, TABLE_NAME
 HAVING COUNT(*) > 1
----

-- table_id alone should be unique also
query II rowsort
SELECT COUNT(*) AS duplicates, table_id
 FROM INFORMATION_SCHEMA.TABLES
 GROUP BY table_id
 HAVING COUNT(*) > 1
----

-- referential integrity checks
query TTT rowsort
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (TABLE_CATALOG, TABLE_SCHEMA)
 NOT IN (SELECT CATALOG_NAME, SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA)
----

-- as TABLE_CATALOG is always NULL leave it out of the check
query TT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (TABLE_SCHEMA)
 NOT IN (SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA)
----

-- it should also be correct when using schema_id instead of TABLE_SCHEMA
query ITT rowsort
SELECT schema_id, TABLE_SCHEMA, TABLE_NAME
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (schema_id)
 NOT IN (SELECT schema_id FROM INFORMATION_SCHEMA.SCHEMATA)
----

-- check schema_id reference
query TTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, schema_id
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (schema_id) NOT IN (SELECT id FROM sys.schemas)
----

-- check table_id reference
query TTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, table_id
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (table_id) NOT IN (SELECT id FROM sys.tables)
----

-- check table_type_id reference
query TTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, table_type_id
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (table_type_id) NOT IN (SELECT table_type_id FROM sys.table_types)
----

-- check TABLE_TYPE consistency
query TTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (TABLE_TYPE) NOT IN (SELECT table_type_name FROM sys.table_types)
----

-- check IS_INSERTABLE_INTO allowed values
query TTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, IS_INSERTABLE_INTO
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (IS_INSERTABLE_INTO) NOT IN ('NO', 'YES')
----

-- check IS_TYPED allowed values
query TTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, IS_TYPED
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (IS_TYPED) NOT IN ('NO', 'YES')
----

-- check COMMIT_ACTION allowed values
query TTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COMMIT_ACTION
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (COMMIT_ACTION) NOT IN ('DELETE', 'PRESERVE', 'DROP', NULL)
----

-- check is_system allowed boolean values
query TTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, is_system
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (is_system) NOT IN (FALSE, TRUE)
----

-- check is_view allowed boolean values
query TTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, is_view
 FROM INFORMATION_SCHEMA.TABLES
 WHERE (is_view) NOT IN (FALSE, TRUE)
----

