query TTTTITTTIIIIIITITTTTTTTTTTTTTTTITTTTIIIITTTTTTTTII rowsort
SELECT
  TABLE_CATALOG,
  TABLE_SCHEMA,
  TABLE_NAME,
  COLUMN_NAME,
  ORDINAL_POSITION,
  COLUMN_DEFAULT,
  IS_NULLABLE,
  DATA_TYPE,
  CHARACTER_MAXIMUM_LENGTH,
  CHARACTER_OCTET_LENGTH,
  NUMERIC_PRECISION,
  NUMERIC_PRECISION_RADIX,
  NUMERIC_SCALE,
  DATETIME_PRECISION,
  INTERVAL_TYPE,
  INTERVAL_PRECISION,
  CHARACTER_SET_CATALOG,
  CHARACTER_SET_SCHEMA,
  CHARACTER_SET_NAME,
  COLLATION_CATALOG,
  COLLATION_SCHEMA,
  COLLATION_NAME,
  DOMAIN_CATALOG,
  DOMAIN_SCHEMA,
  DOMAIN_NAME,
  UDT_CATALOG,
  UDT_SCHEMA,
  UDT_NAME,
  SCOPE_CATALOG,
  SCOPE_SCHEMA,
  SCOPE_NAME,
  MAXIMUM_CARDINALITY,
  DTD_IDENTIFIER,
  IS_SELF_REFERENCING,
  IS_IDENTITY,
  IDENTITY_GENERATION,
  IDENTITY_START,
  IDENTITY_INCREMENT,
  IDENTITY_MAXIMUM,
  IDENTITY_MINIMUM,
  IDENTITY_CYCLE,
  IS_GENERATED,
  GENERATION_EXPRESSION,
  IS_SYSTEM_TIME_PERIOD_START,
  IS_SYSTEM_TIME_PERIOD_END,
  SYSTEM_TIME_PERIOD_TIMESTAMP_GENERATION,
  IS_UPDATABLE,
  DECLARED_DATA_TYPE,
  DECLARED_NUMERIC_PRECISION,
  DECLARED_NUMERIC_SCALE
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA = 'information_schema' AND TABLE_NAME = 'columns' AND COLUMN_NAME = 'column_name'
----
NULL
information_schema
columns
column_name
4
NULL
YES
VARCHAR
1024
4096
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
UTF-8
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NULL
NO
NO
NULL
NULL
NULL
NULL
NULL
NULL
NO
NULL
NO
NO
NO
NO
NULL
NULL
NULL

-- check for NULL and empty string value violations on NOT NULL columns
query TTTTITTTIIIIIITITTTTTTTTTTTTTTTITTTTIIIITTTTTTTTIIIIIIIT rowsort
SELECT
  TABLE_CATALOG,
  TABLE_SCHEMA,
  TABLE_NAME,
  COLUMN_NAME,
  ORDINAL_POSITION,
  COLUMN_DEFAULT,
  IS_NULLABLE,
  DATA_TYPE,
  CHARACTER_MAXIMUM_LENGTH,
  CHARACTER_OCTET_LENGTH,
  NUMERIC_PRECISION,
  NUMERIC_PRECISION_RADIX,
  NUMERIC_SCALE,
  DATETIME_PRECISION,
  INTERVAL_TYPE,
  INTERVAL_PRECISION,
  CHARACTER_SET_CATALOG,
  CHARACTER_SET_SCHEMA,
  CHARACTER_SET_NAME,
  COLLATION_CATALOG,
  COLLATION_SCHEMA,
  COLLATION_NAME,
  DOMAIN_CATALOG,
  DOMAIN_SCHEMA,
  DOMAIN_NAME,
  UDT_CATALOG,
  UDT_SCHEMA,
  UDT_NAME,
  SCOPE_CATALOG,
  SCOPE_SCHEMA,
  SCOPE_NAME,
  MAXIMUM_CARDINALITY,
  DTD_IDENTIFIER,
  IS_SELF_REFERENCING,
  IS_IDENTITY,
  IDENTITY_GENERATION,
  IDENTITY_START,
  IDENTITY_INCREMENT,
  IDENTITY_MAXIMUM,
  IDENTITY_MINIMUM,
  IDENTITY_CYCLE,
  IS_GENERATED,
  GENERATION_EXPRESSION,
  IS_SYSTEM_TIME_PERIOD_START,
  IS_SYSTEM_TIME_PERIOD_END,
  SYSTEM_TIME_PERIOD_TIMESTAMP_GENERATION,
  IS_UPDATABLE,
  DECLARED_DATA_TYPE,
  DECLARED_NUMERIC_PRECISION,
  DECLARED_NUMERIC_SCALE,
  schema_id,
  table_id,
  column_id,
  sequence_id,
  is_system,
  comments
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_SCHEMA IS NULL
   OR TABLE_SCHEMA = ''
   OR TABLE_NAME IS NULL
   OR TABLE_NAME = ''
   OR COLUMN_NAME IS NULL
   OR COLUMN_NAME = ''
   OR DATA_TYPE IS NULL
   OR DATA_TYPE = ''
   OR ORDINAL_POSITION IS NULL
   OR schema_id IS NULL
   OR table_id IS NULL
   OR column_id IS NULL
   OR is_system IS NULL
----

query ITTTT rowsort
SELECT COUNT(*) AS duplicates, TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
 FROM INFORMATION_SCHEMA.COLUMNS
 GROUP BY TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
 HAVING COUNT(*) > 1
----

statement ok
CREATE TEMP TABLE tlargechar (c1 varchar(2147483647), c2 char(2147483646), c3 clob(2147483645), c4 json(2147483644), c5 url(2147483643)) ON COMMIT PRESERVE ROWS

query TTTITII rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, CHARACTER_OCTET_LENGTH
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE NOT is_system AND TABLE_NAME = 'tlargechar'
----
tmp
tlargechar
c1
1
VARCHAR
2147483647
8589934588
tmp
tlargechar
c2
2
CHAR
2147483646
8589934584
tmp
tlargechar
c3
3
VARCHAR
2147483645
8589934580
tmp
tlargechar
c4
4
JSON
2147483644
8589934576
tmp
tlargechar
c5
5
URL
2147483643
8589934572

-- entity integrity checks
query ITTTT rowsort
SELECT COUNT(*) AS duplicates, TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
 FROM INFORMATION_SCHEMA.COLUMNS
 GROUP BY TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
 HAVING COUNT(*) > 1
----

-- as TABLE_CATALOG is always NULL the TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME combo should be unique also
query ITTT rowsort
SELECT COUNT(*) AS duplicates, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
 FROM INFORMATION_SCHEMA.COLUMNS
 GROUP BY TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
 HAVING COUNT(*) > 1
----

-- it should also be unique when using schema_id instead of TABLE_SCHEMA
query IITT rowsort
SELECT COUNT(*) AS duplicates, schema_id, TABLE_NAME, COLUMN_NAME
 FROM INFORMATION_SCHEMA.COLUMNS
 GROUP BY schema_id, TABLE_NAME, COLUMN_NAME
 HAVING COUNT(*) > 1
----

-- it should also be unique when using table_id instead of TABLE_SCHEMA, TABLE_NAME
query IIT rowsort
SELECT COUNT(*) AS duplicates, table_id, COLUMN_NAME
 FROM INFORMATION_SCHEMA.COLUMNS
 GROUP BY table_id, COLUMN_NAME
 HAVING COUNT(*) > 1
----

-- column_id alone should be unique also
query II rowsort
SELECT COUNT(*) AS duplicates, column_id
 FROM INFORMATION_SCHEMA.COLUMNS
 GROUP BY column_id
 HAVING COUNT(*) > 1
----

-- referential integrity checks
query TTTT rowsort
SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME)
 NOT IN (SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES)
----

-- as TABLE_CATALOG is always NULL leave it out of the check
query TTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (TABLE_SCHEMA, TABLE_NAME)
 NOT IN (SELECT TABLE_SCHEMA, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES)
----

-- it should also be correct when using schema_id instead of TABLE_SCHEMA
query ITTT rowsort
SELECT schema_id, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (schema_id, TABLE_NAME)
 NOT IN (SELECT schema_id, TABLE_NAME FROM INFORMATION_SCHEMA.TABLES)
----

-- it should also be correct when using table_id instead of TABLE_SCHEMA, TABLE_NAME
query TITT rowsort
SELECT TABLE_SCHEMA, table_id, TABLE_NAME, COLUMN_NAME
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (table_id)
 NOT IN (SELECT table_id FROM INFORMATION_SCHEMA.TABLES)
----

-- check schema_id reference
query TTTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, schema_id
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (schema_id) NOT IN (SELECT id FROM sys.schemas)
----

-- check table_id reference
query TTTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, table_id
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (table_id) NOT IN (SELECT id FROM sys.tables)
----

-- check column_id reference
query TTTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, column_id
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (column_id) NOT IN (SELECT id FROM sys.columns)
----

-- check sequence_id reference
query TTTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, sequence_id
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (sequence_id) NOT IN (SELECT id FROM sys.sequences)
   AND (sequence_id IS NOT NULL OR IS_IDENTITY = 'YES')
----

-- check ORDINAL_POSITION allowed values, should be NOT NULL and >= 1
query TTTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE ORDINAL_POSITION IS NULL
    OR ORDINAL_POSITION < 1
----

-- check DATA_TYPE, should be NOT NULL and not empty
query TTTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, DATA_TYPE
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE DATA_TYPE IS NULL
    OR LENGTH(DATA_TYPE) < 1
----

-- check IS_NULLABLE allowed values
query TTTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, IS_NULLABLE
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (IS_NULLABLE) NOT IN ('NO', 'YES')
----

-- check IS_SELF_REFERENCING allowed values
query TTTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, IS_SELF_REFERENCING
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (IS_SELF_REFERENCING) NOT IN ('NO', 'YES')
----

-- check IS_IDENTITY allowed values
query TTTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, IS_IDENTITY
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (IS_IDENTITY) NOT IN ('NO', 'YES')
----

-- check IDENTITY_GENERATION allowed values
query TTTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, IDENTITY_GENERATION
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (IDENTITY_GENERATION) NOT IN ('NO', 'YES')
----

-- check IS_GENERATED allowed values
query TTTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, IS_GENERATED
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (IS_GENERATED) NOT IN ('NO', 'YES')
----

query TTTI rowsort
SELECT TABLE_NAME, COLUMN_NAME, "is_generated", length("is_generated") as data_length
  FROM "information_schema"."columns"
 WHERE "is_generated" IS NOT NULL AND length("is_generated") > 2
----

-- check IS_UPDATABLE allowed values
query TTTT rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, IS_UPDATABLE
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (IS_UPDATABLE) NOT IN ('NO', 'YES')
----

-- check is_system allowed boolean values
query TTTI rowsort
SELECT TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, is_system
 FROM INFORMATION_SCHEMA.COLUMNS
 WHERE (is_system) NOT IN (FALSE, TRUE)
----

