stdout of test 'correlated_select.Bug-3250` in directory 'sql/test/BugTracker-2013` itself:


# 22:53:24 >  
# 22:53:24 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32026" "--set" "mapi_usock=/var/tmp/mtest-19817/.s.monetdb.32026" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/rc-clean/Linux-x86_64/var/MonetDB/mTests_sql_test_BugTracker-2013" "--set" "mal_listing=0"
# 22:53:24 >  

# MonetDB 5 server v11.15.4
# This is an unreleased version
# Serving database 'mTests_sql_test_BugTracker-2013', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Found 3.778 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://niels.nesco.mine.nu:32026/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-19817/.s.monetdb.32026
# MonetDB/GIS module loaded
# MonetDB/JAQL module loaded
# MonetDB/SQL module loaded


# 22:53:24 >  
# 22:53:24 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-19817" "--port=32026"
# 22:53:24 >  

#start transaction;
#create table mytest (
#	id int,
#	n int,
#	flag int
#);
#insert into mytest values (1,1,null), 
#	(2 ,    1 , null ),
#	(3 ,    1 , null ),
#	(4 ,    2 , null ),
#	(5 ,    1 ,   42 ),
#	(6 ,    1 ,   42 );
[ 6	]
#select * from mytest;
% sys.mytest,	sys.mytest,	sys.mytest # table_name
% id,	n,	flag # name
% int,	int,	int # type
% 1,	1,	2 # length
[ 1,	1,	NULL	]
[ 2,	1,	NULL	]
[ 3,	1,	NULL	]
[ 4,	2,	NULL	]
[ 5,	1,	42	]
[ 6,	1,	42	]
#select id, n, flag, (select count(*) from mytest as i where i.id <
#	mytest.id and i.n = mytest.n) from mytest order by id;
% .mytest,	.mytest,	.mytest,	.%1 # table_name
% id,	n,	flag,	%1 # name
% int,	int,	int,	bigint # type
% 1,	1,	2,	1 # length
[ 1,	1,	NULL,	0	]
[ 2,	1,	NULL,	1	]
[ 3,	1,	NULL,	2	]
[ 4,	2,	NULL,	0	]
[ 5,	1,	42,	3	]
[ 6,	1,	42,	4	]
#select id, n, flag, (select count(*) from mytest as i where i.id <
#	mytest.id and i.n = mytest.n and flag is not null) from mytest order by id;
% .mytest,	.mytest,	.mytest,	.%1 # table_name
% id,	n,	flag,	%1 # name
% int,	int,	int,	bigint # type
% 1,	1,	2,	1 # length
[ 1,	1,	NULL,	0	]
[ 2,	1,	NULL,	0	]
[ 3,	1,	NULL,	0	]
[ 4,	2,	NULL,	0	]
[ 5,	1,	42,	0	]
[ 6,	1,	42,	1	]
#rollback;

# 22:53:24 >  
# 22:53:24 >  "Done."
# 22:53:24 >  

