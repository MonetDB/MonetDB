statement ok
START TRANSACTION

statement ok
CREATE TABLE victim (
    name varchar(100),
    murderdate varchar(100),
    dateofbirth varchar(100),
    eyes varchar(100),
    features varchar(1000),
    hair varchar(100),
    length varchar(100),
    location varchar(100),
    picture varchar(100)
)

statement ok
CREATE TABLE victimtimeline (
    victim varchar(100),
    time varchar(100),
    event varchar(1000)
)

statement ok
CREATE TABLE scenedoctors (
    victim varchar(100),
    doctor varchar(100)
)

statement ok
CREATE TABLE sceneinspectors (
    victim varchar(100),
    inspector varchar(100)
)

statement ok
CREATE TABLE scenesuspects (
    victim varchar(100),
    suspect varchar(100)
)

statement ok
CREATE TABLE scenewitnesses (
    victim varchar(100),
    witness varchar(100)
)

statement ok
CREATE TABLE suspect (
    name varchar(100),
    picture varchar(100)
)

statement ok
CREATE TABLE suspectnotes (
    suspect varchar(100),
    notes varchar(1000)
)

statement ok
CREATE TABLE suspectvictims (
    suspect varchar(100),
    victims varchar(100)
)

statement ok
CREATE TABLE inspector (
    name varchar(100),
    picture varchar(100),
    casevictim varchar(100)
)

statement ok
CREATE TABLE inspectorsuspects (
    inspector varchar(100),
    suspect varchar(100)
)

statement ok
CREATE TABLE doctor (
    name varchar(100),
    picture varchar(100)
)

statement ok
CREATE TABLE witness (
    name varchar(100),
    time varchar(100),
    appearance varchar(1000),
    diction varchar(100)
)

statement ok
COMMIT

query TT rowsort
SELECT * FROM sceneinspectors
----

query TT rowsort
SELECT inspector.name, victim.name
    FROM inspector, victim, sceneinspectors
    WHERE inspector.name = sceneinspectors.inspector
        AND sceneinspectors.victim = victim.name
----

query I rowsort
SELECT CAST(substring(murderdate,1,4) AS integer) - CAST(substring(dateofbirth,1,4) AS integer)
    FROM victim
    WHERE murderdate LIKE '1___%'
        AND dateofbirth LIKE '1___%'
----

query R rowsort
SELECT AVG(num)
    FROM (SELECT COUNT(victim) AS num
            FROM sceneinspectors
            GROUP BY victim
          UNION ALL
          SELECT 0 AS num
            FROM victim
            WHERE name NOT IN
                (SELECT victim FROM sceneinspectors)
         ) AS numbers
----
NULL

query TT rowsort
SELECT name,features
    FROM victim
    WHERE features LIKE '%teeth%'
        AND features LIKE '%missing%'
----

query TT rowsort
SELECT MIN(murderdate),MAX(murderdate)
    FROM victim
    WHERE murderdate LIKE '1%'
----
NULL
NULL

query T rowsort
SELECT DISTINCT(doctor)
    FROM scenedoctors
----

query T nosort
SELECT DISTINCT(name) FROM (
    SELECT name FROM suspect
    UNION
    SELECT name FROM victim
    UNION
    SELECT name FROM inspector
    UNION
    SELECT doctor AS name FROM scenedoctors
) AS allnames
ORDER BY name
----

statement ok
DROP TABLE victim

statement ok
DROP TABLE victimtimeline

statement ok
DROP TABLE scenedoctors

statement ok
DROP TABLE sceneinspectors

statement ok
DROP TABLE scenesuspects

statement ok
DROP TABLE scenewitnesses

statement ok
DROP TABLE suspect

statement ok
DROP TABLE suspectnotes

statement ok
DROP TABLE suspectvictims

statement ok
DROP TABLE inspector

statement ok
DROP TABLE inspectorsuspects

statement ok
DROP TABLE doctor

statement ok
DROP TABLE witness

