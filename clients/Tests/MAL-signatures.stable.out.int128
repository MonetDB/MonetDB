stdout of test 'MAL-signatures` in directory 'clients` itself:


# 21:44:50 >  
# 21:44:50 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33053" "--set" "mapi_usock=/var/tmp/mtest-13793/.s.monetdb.33053" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/sjoerd/Monet-devel/var/MonetDB/mTests_clients" "--set" "mal_listing=2" "--set" "embedded_r=yes"
# 21:44:50 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_clients', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 128bit integers
# Found 15.386 GiB available main-memory.
# Copyright (c) 1993 - July 2008 CWI.
# Copyright (c) August 2008 - 2018 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://xps13:39285/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-1158/.s.monetdb.39285
# MonetDB/GIS module loaded
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_shp.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
# MonetDB/SQL module loaded
# MonetDB/Python2 module loaded
# MonetDB/R   module loaded

# 16:10:29 >  
# 16:10:29 >  "mclient" "-lsql" "-ftest" "-tnone" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-29643" "--port=32888"
# 16:10:29 >  

#select * from sys.malfunctions() order by module, "function", address, signature, comment;
% .%1,	.%1,	.%1,	.%1,	.%1 # table_name
% module,	function,	signature,	address,	comment # name
% clob,	clob,	clob,	clob,	clob # type
% 12,	28,	243,	42,	0 # length
[ "aggr",	"all",	"command aggr.all(:bat[:any_1]):any_1 ",	"SQLall;",	""	]
[ "aggr",	"allnotequal",	"pattern aggr.allnotequal(:bat[:any_1], :bat[:any_1]):bit ",	"SQLallnotequal;",	""	]
[ "aggr",	"anyequal",	"pattern aggr.anyequal(:any_1, :any_1):bit ",	"CMDvarEQ;",	""	]
[ "aggr",	"anyequal",	"pattern aggr.anyequal(:bat[:any_1], :bat[:any_1]):bit ",	"SQLanyequal;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRavg13_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRavg13_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRavg13_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:hge], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRavg13_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRavg13_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRavg13_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRavg13_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:bte], :bat[:oid], :bat[:any_1], :int):bat[:dbl] ",	"AGGRavg14_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:dbl], :bat[:oid], :bat[:any_1], :int):bat[:dbl] ",	"AGGRavg14_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:flt], :bat[:oid], :bat[:any_1], :int):bat[:dbl] ",	"AGGRavg14_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:int], :bat[:oid], :bat[:any_1], :int):bat[:dbl] ",	"AGGRavg14_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:lng], :bat[:oid], :bat[:any_1], :int):bat[:dbl] ",	"AGGRavg14_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:sht], :bat[:oid], :bat[:any_1], :int):bat[:dbl] ",	"AGGRavg14_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:bte], :bat[:oid], :bat[:any_1]) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg23_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:dbl], :bat[:oid], :bat[:any_1]) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg23_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:flt], :bat[:oid], :bat[:any_1]) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg23_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:hge], :bat[:oid], :bat[:any_1]) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg23_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:int], :bat[:oid], :bat[:any_1]) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg23_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:lng], :bat[:oid], :bat[:any_1]) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg23_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:sht], :bat[:oid], :bat[:any_1]) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg23_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:bte], :bat[:oid], :bat[:any_1], :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg24_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:dbl], :bat[:oid], :bat[:any_1], :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg24_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:flt], :bat[:oid], :bat[:any_1], :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg24_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:int], :bat[:oid], :bat[:any_1], :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg24_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:lng], :bat[:oid], :bat[:any_1], :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg24_dbl;",	""	]
[ "aggr",	"avg",	"command aggr.avg(:bat[:sht], :bat[:oid], :bat[:any_1], :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRavg24_dbl;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:bte], :bat[:oid], :bit) (:bte, :lng, :lng) ",	"CMDBATavg3;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:hge], :bat[:oid], :bit) (:hge, :lng, :lng) ",	"CMDBATavg3;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:int], :bat[:oid], :bit) (:int, :lng, :lng) ",	"CMDBATavg3;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:lng], :bat[:oid], :bit) (:lng, :lng, :lng) ",	"CMDBATavg3;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:sht], :bat[:oid], :bit) (:sht, :lng, :lng) ",	"CMDBATavg3;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:bte], :bat[:lng], :bat[:lng]):bte ",	"CMDBATavg3comb;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:hge], :bat[:lng], :bat[:lng]):hge ",	"CMDBATavg3comb;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:int], :bat[:lng], :bat[:lng]):int ",	"CMDBATavg3comb;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:lng], :bat[:lng], :bat[:lng]):lng ",	"CMDBATavg3comb;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:sht], :bat[:lng], :bat[:lng]):sht ",	"CMDBATavg3comb;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:any_2]):dbl ",	"CMDcalcavg;",	""	]
[ "aggr",	"avg",	"pattern aggr.avg(:bat[:any_2], :int):dbl ",	"CMDcalcavg;",	""	]
[ "aggr",	"cardinality",	"command aggr.cardinality(:bat[:any_2]):lng ",	"ALGcard;",	""	]
[ "aggr",	"corr",	"command aggr.corr(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcorr;",	""	]
[ "aggr",	"corr",	"command aggr.corr(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcorr;",	""	]
[ "aggr",	"corr",	"command aggr.corr(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcorr;",	""	]
[ "aggr",	"corr",	"command aggr.corr(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcorr;",	""	]
[ "aggr",	"corr",	"command aggr.corr(:bat[:int], :bat[:int], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcorr;",	""	]
[ "aggr",	"corr",	"command aggr.corr(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcorr;",	""	]
[ "aggr",	"corr",	"command aggr.corr(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcorr;",	""	]
[ "aggr",	"corr",	"command aggr.corr(:bat[:any_2], :bat[:any_2]):dbl ",	"ALGcorr;",	""	]
[ "aggr",	"count",	"command aggr.count(:bat[:any_1], :bat[:oid], :bat[:any_2], :bit):bat[:lng] ",	"AGGRcount3;",	""	]
[ "aggr",	"count",	"command aggr.count(:bat[:any_1], :bat[:oid], :bat[:any_2]):bat[:lng] ",	"AGGRcount3nils;",	""	]
[ "aggr",	"count",	"command aggr.count(:bat[:any], :bat[:oid]):lng ",	"ALGcountCND_bat;",	""	]
[ "aggr",	"count",	"command aggr.count(:bat[:any], :bat[:oid], :bit):lng ",	"ALGcountCND_nil;",	""	]
[ "aggr",	"count",	"command aggr.count(:bat[:any]):lng ",	"ALGcount_bat;",	""	]
[ "aggr",	"count",	"command aggr.count(:bat[:any], :bit):lng ",	"ALGcount_nil;",	""	]
[ "aggr",	"count_no_nil",	"command aggr.count_no_nil(:bat[:any_1], :bat[:oid], :bat[:any_2]):bat[:lng] ",	"AGGRcount3nonils;",	""	]
[ "aggr",	"count_no_nil",	"command aggr.count_no_nil(:bat[:any_2], :bat[:oid]):lng ",	"ALGcountCND_no_nil;",	""	]
[ "aggr",	"count_no_nil",	"command aggr.count_no_nil(:bat[:any_2]):lng ",	"ALGcount_no_nil;",	""	]
[ "aggr",	"covariance",	"command aggr.covariance(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariance;",	""	]
[ "aggr",	"covariance",	"command aggr.covariance(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariance;",	""	]
[ "aggr",	"covariance",	"command aggr.covariance(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariance;",	""	]
[ "aggr",	"covariance",	"command aggr.covariance(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariance;",	""	]
[ "aggr",	"covariance",	"command aggr.covariance(:bat[:int], :bat[:int], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariance;",	""	]
[ "aggr",	"covariance",	"command aggr.covariance(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariance;",	""	]
[ "aggr",	"covariance",	"command aggr.covariance(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariance;",	""	]
[ "aggr",	"covariance",	"command aggr.covariance(:bat[:any_2], :bat[:any_2]):dbl ",	"ALGcovariance;",	""	]
[ "aggr",	"covariancep",	"command aggr.covariancep(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariancep;",	""	]
[ "aggr",	"covariancep",	"command aggr.covariancep(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariancep;",	""	]
[ "aggr",	"covariancep",	"command aggr.covariancep(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariancep;",	""	]
[ "aggr",	"covariancep",	"command aggr.covariancep(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariancep;",	""	]
[ "aggr",	"covariancep",	"command aggr.covariancep(:bat[:int], :bat[:int], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariancep;",	""	]
[ "aggr",	"covariancep",	"command aggr.covariancep(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariancep;",	""	]
[ "aggr",	"covariancep",	"command aggr.covariancep(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRcovariancep;",	""	]
[ "aggr",	"covariancep",	"command aggr.covariancep(:bat[:any_2], :bat[:any_2]):dbl ",	"ALGcovariancep;",	""	]
[ "aggr",	"exist",	"command aggr.exist(:bat[:any_2], :any_1):bit ",	"ALGexist;",	""	]
[ "aggr",	"exist",	"pattern aggr.exist(:any_1):bit ",	"SQLexist;",	""	]
[ "aggr",	"jsonaggr",	"command aggr.jsonaggr(:bat[:dbl]):str ",	"JSONgroupStr;",	""	]
[ "aggr",	"jsonaggr",	"command aggr.jsonaggr(:bat[:str]):str ",	"JSONgroupStr;",	""	]
[ "aggr",	"max",	"command aggr.max(:bat[:any_1], :bat[:oid], :bat[:any_2]):bat[:any_1] ",	"AGGRmax3;",	""	]
[ "aggr",	"max",	"command aggr.max(:bat[:any_2]):any_2 ",	"ALGmaxany;",	""	]
[ "aggr",	"max",	"command aggr.max(:bat[:any_2], :bit):any_2 ",	"ALGmaxany_skipnil;",	""	]
[ "aggr",	"median",	"command aggr.median(:bat[:any_1]):any_1 ",	"AGGRmedian;",	""	]
[ "aggr",	"median_avg",	"command aggr.median_avg(:bat[:any_1]):dbl ",	"AGGRmedian_avg;",	""	]
[ "aggr",	"min",	"command aggr.min(:bat[:any_1], :bat[:oid], :bat[:any_2]):bat[:any_1] ",	"AGGRmin3;",	""	]
[ "aggr",	"min",	"command aggr.min(:bat[:any_2]):any_2 ",	"ALGminany;",	""	]
[ "aggr",	"min",	"command aggr.min(:bat[:any_2], :bit):any_2 ",	"ALGminany_skipnil;",	""	]
[ "aggr",	"not_anyequal",	"pattern aggr.not_anyequal(:any_1, :any_1):bit ",	"CMDvarNE;",	""	]
[ "aggr",	"not_exist",	"pattern aggr.not_exist(:any_1):bit ",	"SQLnot_exist;",	""	]
[ "aggr",	"not_unique",	"command aggr.not_unique(:bat[:oid]):bit ",	"not_unique;",	""	]
[ "aggr",	"null",	"command aggr.null(:bat[:any_1]):bit ",	"SQLnil;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:bte] ",	"AGGRprod3_bte;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRprod3_dbl;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRprod3_dbl;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:flt], :bat[:oid], :bat[:any_1]):bat[:flt] ",	"AGGRprod3_flt;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRprod3_hge;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:hge], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRprod3_hge;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRprod3_hge;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRprod3_hge;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRprod3_hge;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:int] ",	"AGGRprod3_int;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:int] ",	"AGGRprod3_int;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:int] ",	"AGGRprod3_int;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:lng] ",	"AGGRprod3_lng;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:lng] ",	"AGGRprod3_lng;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:lng] ",	"AGGRprod3_lng;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:lng] ",	"AGGRprod3_lng;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:sht] ",	"AGGRprod3_sht;",	""	]
[ "aggr",	"prod",	"command aggr.prod(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:sht] ",	"AGGRprod3_sht;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte]):bte ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte]):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte]):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte]):sht ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid]):bte ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid]):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid]):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid]):sht ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid], :bit):bte ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid], :bit):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid], :bit):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bat[:oid], :bit):sht ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bit):bte ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bit):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bit):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:bte], :bit):sht ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:dbl]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:dbl], :bat[:oid]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:dbl], :bat[:oid], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:dbl], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:flt]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:flt]):flt ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:flt], :bat[:oid]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:flt], :bat[:oid]):flt ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:flt], :bat[:oid], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:flt], :bat[:oid], :bit):flt ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:flt], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:flt], :bit):flt ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:hge]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:hge]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:hge], :bat[:oid]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:hge], :bat[:oid]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:hge], :bat[:oid], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:hge], :bat[:oid], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:hge], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:hge], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int]):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int]):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bat[:oid]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bat[:oid]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bat[:oid]):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bat[:oid]):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bat[:oid], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bat[:oid], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bat[:oid], :bit):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bat[:oid], :bit):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bit):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:int], :bit):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng]):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng], :bat[:oid]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng], :bat[:oid]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng], :bat[:oid]):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng], :bat[:oid], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng], :bat[:oid], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng], :bat[:oid], :bit):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:lng], :bit):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht]):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht]):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht]):sht ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid]):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid]):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid]):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid]):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid]):sht ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid], :bit):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid], :bit):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bat[:oid], :bit):sht ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bit):dbl ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bit):hge ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bit):int ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bit):lng ",	"CMDBATprod;",	""	]
[ "aggr",	"prod",	"pattern aggr.prod(:bat[:sht], :bit):sht ",	"CMDBATprod;",	""	]
[ "aggr",	"quantile",	"command aggr.quantile(:bat[:any_1], :bat[:dbl]):any_1 ",	"AGGRquantile;",	""	]
[ "aggr",	"quantile_avg",	"command aggr.quantile_avg(:bat[:any_1], :bat[:dbl]):dbl ",	"AGGRquantile_avg;",	""	]
[ "aggr",	"stdev",	"command aggr.stdev(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdev3_dbl;",	""	]
[ "aggr",	"stdev",	"command aggr.stdev(:bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdev3_dbl;",	""	]
[ "aggr",	"stdev",	"command aggr.stdev(:bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdev3_dbl;",	""	]
[ "aggr",	"stdev",	"command aggr.stdev(:bat[:hge], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdev3_dbl;",	""	]
[ "aggr",	"stdev",	"command aggr.stdev(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdev3_dbl;",	""	]
[ "aggr",	"stdev",	"command aggr.stdev(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdev3_dbl;",	""	]
[ "aggr",	"stdev",	"command aggr.stdev(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdev3_dbl;",	""	]
[ "aggr",	"stdev",	"command aggr.stdev(:bat[:any_2]):dbl ",	"ALGstdev;",	""	]
[ "aggr",	"stdevp",	"command aggr.stdevp(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdevp3_dbl;",	""	]
[ "aggr",	"stdevp",	"command aggr.stdevp(:bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdevp3_dbl;",	""	]
[ "aggr",	"stdevp",	"command aggr.stdevp(:bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdevp3_dbl;",	""	]
[ "aggr",	"stdevp",	"command aggr.stdevp(:bat[:hge], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdevp3_dbl;",	""	]
[ "aggr",	"stdevp",	"command aggr.stdevp(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdevp3_dbl;",	""	]
[ "aggr",	"stdevp",	"command aggr.stdevp(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdevp3_dbl;",	""	]
[ "aggr",	"stdevp",	"command aggr.stdevp(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRstdevp3_dbl;",	""	]
[ "aggr",	"stdevp",	"command aggr.stdevp(:bat[:any_2]):dbl ",	"ALGstdevp;",	""	]
[ "aggr",	"str_group_concat",	"command aggr.str_group_concat(:bat[:str], :bat[:oid], :bat[:any_1]):bat[:str] ",	"AGGRstr_group_concat;",	""	]
[ "aggr",	"str_group_concat",	"command aggr.str_group_concat(:bat[:str], :bat[:str], :bat[:oid], :bat[:any_1]):bat[:str] ",	"AGGRstr_group_concat_sep;",	""	]
[ "aggr",	"str_group_concat",	"pattern aggr.str_group_concat(:bat[:str]):str ",	"CMDBATstr_group_concat;",	""	]
[ "aggr",	"str_group_concat",	"pattern aggr.str_group_concat(:bat[:str], :bat[:oid]):str ",	"CMDBATstr_group_concat;",	""	]
[ "aggr",	"str_group_concat",	"pattern aggr.str_group_concat(:bat[:str], :bat[:oid], :bit):str ",	"CMDBATstr_group_concat;",	""	]
[ "aggr",	"str_group_concat",	"pattern aggr.str_group_concat(:bat[:str], :bat[:str]):str ",	"CMDBATstr_group_concat;",	""	]
[ "aggr",	"str_group_concat",	"pattern aggr.str_group_concat(:bat[:str], :bat[:str], :bat[:oid]):str ",	"CMDBATstr_group_concat;",	""	]
[ "aggr",	"str_group_concat",	"pattern aggr.str_group_concat(:bat[:str], :bat[:str], :bat[:oid], :bit):str ",	"CMDBATstr_group_concat;",	""	]
[ "aggr",	"str_group_concat",	"pattern aggr.str_group_concat(:bat[:str], :bat[:str], :bit):str ",	"CMDBATstr_group_concat;",	""	]
[ "aggr",	"str_group_concat",	"pattern aggr.str_group_concat(:bat[:str], :bit):str ",	"CMDBATstr_group_concat;",	""	]
[ "aggr",	"suball",	"pattern aggr.suball(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:any_1] ",	"SQLall_grp;",	""	]
[ "aggr",	"suball",	"pattern aggr.suball(:bat[:any_1], :bat[:oid], :bat[:oid], :bit):bat[:any_1] ",	"SQLall_grp;",	""	]
[ "aggr",	"suballnotequal",	"pattern aggr.suballnotequal(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLallnotequal_grp2;",	""	]
[ "aggr",	"suballnotequal",	"pattern aggr.suballnotequal(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLallnotequal_grp2;",	""	]
[ "aggr",	"suballnotequal",	"pattern aggr.suballnotequal(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLallnotequal_grp;",	""	]
[ "aggr",	"suballnotequal",	"pattern aggr.suballnotequal(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLallnotequal_grp;",	""	]
[ "aggr",	"subanyequal",	"pattern aggr.subanyequal(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLanyequal_grp2;",	""	]
[ "aggr",	"subanyequal",	"pattern aggr.subanyequal(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLanyequal_grp2;",	""	]
[ "aggr",	"subanyequal",	"pattern aggr.subanyequal(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLanyequal_grp;",	""	]
[ "aggr",	"subanyequal",	"pattern aggr.subanyequal(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLanyequal_grp;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit) (:bat[:bte], :bat[:lng], :bat[:lng]) ",	"AGGRavg3;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit) (:bat[:hge], :bat[:lng], :bat[:lng]) ",	"AGGRavg3;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit) (:bat[:int], :bat[:lng], :bat[:lng]) ",	"AGGRavg3;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit) (:bat[:lng], :bat[:lng], :bat[:lng]) ",	"AGGRavg3;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit) (:bat[:sht], :bat[:lng], :bat[:lng]) ",	"AGGRavg3;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bit):bat[:bte] ",	"AGGRavg3comb;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:hge], :bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bit):bat[:hge] ",	"AGGRavg3comb;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bit):bat[:int] ",	"AGGRavg3comb;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bit):bat[:lng] ",	"AGGRavg3comb;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bit):bat[:sht] ",	"AGGRavg3comb;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubavg1cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int):bat[:dbl] ",	"AGGRsubavg1scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2cand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2s_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2scand_dbl;",	""	]
[ "aggr",	"subavg",	"command aggr.subavg(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit, :int) (:bat[:dbl], :bat[:lng]) ",	"AGGRsubavg2scand_dbl;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcorr;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcorr;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcorr;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcorr;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:int], :bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcorr;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcorr;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcorr;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcorrcand;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcorrcand;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcorrcand;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcorrcand;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:int], :bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcorrcand;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcorrcand;",	""	]
[ "aggr",	"subcorr",	"command aggr.subcorr(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcorrcand;",	""	]
[ "aggr",	"subcount",	"command aggr.subcount(:bat[:any_1], :bat[:oid], :bat[:any_2], :bit):bat[:lng] ",	"AGGRsubcount;",	""	]
[ "aggr",	"subcount",	"command aggr.subcount(:bat[:any_1], :bat[:oid], :bat[:any_2], :bat[:oid], :bit):bat[:lng] ",	"AGGRsubcountcand;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariance;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariance;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariance;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariance;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:int], :bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariance;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariance;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariance;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancecand;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancecand;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancecand;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancecand;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:int], :bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancecand;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancecand;",	""	]
[ "aggr",	"subcovariance",	"command aggr.subcovariance(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancecand;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancep;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancep;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancep;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancep;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:int], :bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancep;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancep;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancep;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancepcand;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancepcand;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancepcand;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancepcand;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:int], :bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancepcand;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancepcand;",	""	]
[ "aggr",	"subcovariancep",	"command aggr.subcovariancep(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubcovariancepcand;",	""	]
[ "aggr",	"subexist",	"pattern aggr.subexist(:bat[:any], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLsubexist;",	""	]
[ "aggr",	"subexist",	"pattern aggr.subexist(:bat[:any], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLsubexist;",	""	]
[ "aggr",	"subjsonaggr",	"command aggr.subjsonaggr(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit):bat[:str] ",	"JSONsubjson;",	""	]
[ "aggr",	"subjsonaggr",	"command aggr.subjsonaggr(:bat[:str], :bat[:oid], :bat[:any_1], :bit):bat[:str] ",	"JSONsubjson;",	""	]
[ "aggr",	"subjsonaggr",	"command aggr.subjsonaggr(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit):bat[:str] ",	"JSONsubjsoncand;",	""	]
[ "aggr",	"subjsonaggr",	"command aggr.subjsonaggr(:bat[:str], :bat[:oid], :bat[:any_1], :bat[:oid], :bit):bat[:str] ",	"JSONsubjsoncand;",	""	]
[ "aggr",	"submax",	"command aggr.submax(:bat[:any_1], :bat[:oid], :bat[:any_2], :bit):bat[:oid] ",	"AGGRsubmax;",	""	]
[ "aggr",	"submax",	"command aggr.submax(:bat[:any_1], :bat[:oid], :bat[:any_2], :bit):bat[:any_1] ",	"AGGRsubmax_val;",	""	]
[ "aggr",	"submax",	"command aggr.submax(:bat[:any_1], :bat[:oid], :bat[:any_2], :bat[:oid], :bit):bat[:oid] ",	"AGGRsubmaxcand;",	""	]
[ "aggr",	"submax",	"command aggr.submax(:bat[:any_1], :bat[:oid], :bat[:any_2], :bat[:oid], :bit):bat[:any_1] ",	"AGGRsubmaxcand_val;",	""	]
[ "aggr",	"submedian",	"command aggr.submedian(:bat[:any_1], :bat[:oid], :bat[:any_2], :bit):bat[:any_1] ",	"AGGRsubmedian;",	""	]
[ "aggr",	"submedian",	"command aggr.submedian(:bat[:any_1], :bat[:oid], :bat[:any_2], :bat[:oid], :bit):bat[:any_1] ",	"AGGRsubmediancand;",	""	]
[ "aggr",	"submedian_avg",	"command aggr.submedian_avg(:bat[:any_1], :bat[:oid], :bat[:any_2], :bit):bat[:dbl] ",	"AGGRsubmedian_avg;",	""	]
[ "aggr",	"submedian_avg",	"command aggr.submedian_avg(:bat[:any_1], :bat[:oid], :bat[:any_2], :bat[:oid], :bit):bat[:dbl] ",	"AGGRsubmediancand_avg;",	""	]
[ "aggr",	"submin",	"command aggr.submin(:bat[:any_1], :bat[:oid], :bat[:any_2], :bit):bat[:oid] ",	"AGGRsubmin;",	""	]
[ "aggr",	"submin",	"command aggr.submin(:bat[:any_1], :bat[:oid], :bat[:any_2], :bit):bat[:any_1] ",	"AGGRsubmin_val;",	""	]
[ "aggr",	"submin",	"command aggr.submin(:bat[:any_1], :bat[:oid], :bat[:any_2], :bat[:oid], :bit):bat[:oid] ",	"AGGRsubmincand;",	""	]
[ "aggr",	"submin",	"command aggr.submin(:bat[:any_1], :bat[:oid], :bat[:any_2], :bat[:oid], :bit):bat[:any_1] ",	"AGGRsubmincand_val;",	""	]
[ "aggr",	"subnot_exist",	"pattern aggr.subnot_exist(:bat[:any], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLsubnot_exist;",	""	]
[ "aggr",	"subnot_exist",	"pattern aggr.subnot_exist(:bat[:any], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLsubnot_exist;",	""	]
[ "aggr",	"subnull",	"pattern aggr.subnull(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLnil_grp;",	""	]
[ "aggr",	"subnull",	"pattern aggr.subnull(:bat[:any_1], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"SQLnil_grp;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:bte] ",	"AGGRsubprod_bte;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubprod_dbl;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubprod_dbl;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:flt] ",	"AGGRsubprod_flt;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubprod_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubprod_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubprod_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubprod_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubprod_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:int] ",	"AGGRsubprod_int;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:int] ",	"AGGRsubprod_int;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:int] ",	"AGGRsubprod_int;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:lng] ",	"AGGRsubprod_lng;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:lng] ",	"AGGRsubprod_lng;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:lng] ",	"AGGRsubprod_lng;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:lng] ",	"AGGRsubprod_lng;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:sht] ",	"AGGRsubprod_sht;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:sht] ",	"AGGRsubprod_sht;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:bte] ",	"AGGRsubprodcand_bte;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubprodcand_dbl;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubprodcand_dbl;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:flt] ",	"AGGRsubprodcand_flt;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubprodcand_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubprodcand_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubprodcand_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubprodcand_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubprodcand_hge;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:int] ",	"AGGRsubprodcand_int;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:int] ",	"AGGRsubprodcand_int;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:int] ",	"AGGRsubprodcand_int;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:lng] ",	"AGGRsubprodcand_lng;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:lng] ",	"AGGRsubprodcand_lng;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:lng] ",	"AGGRsubprodcand_lng;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:lng] ",	"AGGRsubprodcand_lng;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:sht] ",	"AGGRsubprodcand_sht;",	""	]
[ "aggr",	"subprod",	"command aggr.subprod(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:sht] ",	"AGGRsubprodcand_sht;",	""	]
[ "aggr",	"subquantile",	"command aggr.subquantile(:bat[:any_1], :bat[:dbl], :bat[:oid], :bat[:any_2], :bit):bat[:any_1] ",	"AGGRsubquantile;",	""	]
[ "aggr",	"subquantile",	"command aggr.subquantile(:bat[:any_1], :bat[:dbl], :bat[:oid], :bat[:any_2], :bat[:oid], :bit):bat[:any_1] ",	"AGGRsubquantilecand;",	""	]
[ "aggr",	"subquantile_avg",	"command aggr.subquantile_avg(:bat[:any_1], :bat[:dbl], :bat[:oid], :bat[:any_2], :bit):bat[:dbl] ",	"AGGRsubquantile_avg;",	""	]
[ "aggr",	"subquantile_avg",	"command aggr.subquantile_avg(:bat[:any_1], :bat[:dbl], :bat[:oid], :bat[:any_2], :bat[:oid], :bit):bat[:dbl] ",	"AGGRsubquantilecand_avg;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdev_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdev_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdev_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdev_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdev_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdev_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdev_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevcand_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevcand_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevcand_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevcand_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevcand_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevcand_dbl;",	""	]
[ "aggr",	"substdev",	"command aggr.substdev(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevcand_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevp_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevp_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevp_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevp_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevp_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevp_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevp_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevpcand_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevpcand_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevpcand_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevpcand_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevpcand_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevpcand_dbl;",	""	]
[ "aggr",	"substdevp",	"command aggr.substdevp(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubstdevpcand_dbl;",	""	]
[ "aggr",	"substr_group_concat",	"command aggr.substr_group_concat(:bat[:str], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:str] ",	"AGGRsubstr_group_concat;",	""	]
[ "aggr",	"substr_group_concat",	"command aggr.substr_group_concat(:bat[:str], :bat[:str], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:str] ",	"AGGRsubstr_group_concat_sep;",	""	]
[ "aggr",	"substr_group_concat",	"command aggr.substr_group_concat(:bat[:str], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:str] ",	"AGGRsubstr_group_concatcand;",	""	]
[ "aggr",	"substr_group_concat",	"command aggr.substr_group_concat(:bat[:str], :bat[:str], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:str] ",	"AGGRsubstr_group_concatcand_sep;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:bte] ",	"AGGRsubsum_bte;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubsum_dbl;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubsum_dbl;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:flt] ",	"AGGRsubsum_flt;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubsum_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubsum_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubsum_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubsum_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:hge] ",	"AGGRsubsum_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:int] ",	"AGGRsubsum_int;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:int] ",	"AGGRsubsum_int;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:int] ",	"AGGRsubsum_int;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:lng] ",	"AGGRsubsum_lng;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:lng] ",	"AGGRsubsum_lng;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:lng] ",	"AGGRsubsum_lng;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:lng] ",	"AGGRsubsum_lng;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:sht] ",	"AGGRsubsum_sht;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:sht] ",	"AGGRsubsum_sht;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:bte] ",	"AGGRsubsumcand_bte;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubsumcand_dbl;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubsumcand_dbl;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:flt] ",	"AGGRsubsumcand_flt;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubsumcand_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubsumcand_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubsumcand_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubsumcand_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:hge] ",	"AGGRsubsumcand_hge;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:int] ",	"AGGRsubsumcand_int;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:int] ",	"AGGRsubsumcand_int;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:int] ",	"AGGRsubsumcand_int;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:lng] ",	"AGGRsubsumcand_lng;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:lng] ",	"AGGRsubsumcand_lng;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:lng] ",	"AGGRsubsumcand_lng;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:lng] ",	"AGGRsubsumcand_lng;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:sht] ",	"AGGRsubsumcand_sht;",	""	]
[ "aggr",	"subsum",	"command aggr.subsum(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:sht] ",	"AGGRsubsumcand_sht;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariance_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariance_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariance_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariance_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariance_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariance_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariance_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancecand_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancecand_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancecand_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancecand_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancecand_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancecand_dbl;",	""	]
[ "aggr",	"subvariance",	"command aggr.subvariance(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancecand_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:bte], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancep_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:dbl], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancep_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:flt], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancep_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:hge], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancep_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:int], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancep_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:lng], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancep_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:sht], :bat[:oid], :bat[:any_1], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancep_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:bte], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancepcand_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:dbl], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancepcand_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:flt], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancepcand_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:hge], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancepcand_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:int], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancepcand_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:lng], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancepcand_dbl;",	""	]
[ "aggr",	"subvariancep",	"command aggr.subvariancep(:bat[:sht], :bat[:oid], :bat[:any_1], :bat[:oid], :bit, :bit):bat[:dbl] ",	"AGGRsubvariancepcand_dbl;",	""	]
[ "aggr",	"subzero_or_one",	"command aggr.subzero_or_one(:bat[:any_1], :bat[:oid], :bat[:oid], :bit):bat[:any_1] ",	"SQLsubzero_or_one;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:bte] ",	"AGGRsum3_bte;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRsum3_dbl;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRsum3_dbl;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRsum3_dbl;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRsum3_dbl;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRsum3_dbl;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRsum3_dbl;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:flt], :bat[:oid], :bat[:any_1]):bat[:flt] ",	"AGGRsum3_flt;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRsum3_hge;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:hge], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRsum3_hge;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRsum3_hge;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRsum3_hge;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:hge] ",	"AGGRsum3_hge;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:int] ",	"AGGRsum3_int;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:int] ",	"AGGRsum3_int;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:int] ",	"AGGRsum3_int;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:lng] ",	"AGGRsum3_lng;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:lng] ",	"AGGRsum3_lng;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:lng] ",	"AGGRsum3_lng;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:lng] ",	"AGGRsum3_lng;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:sht] ",	"AGGRsum3_sht;",	""	]
[ "aggr",	"sum",	"command aggr.sum(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:sht] ",	"AGGRsum3_sht;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte]):bte ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte]):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte]):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid]):bte ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid]):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid]):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid], :bit):bte ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid], :bit):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bat[:oid], :bit):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bit):bte ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bit):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:bte], :bit):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:dbl]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:dbl], :bat[:oid]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:dbl], :bat[:oid], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:dbl], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:flt]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:flt]):flt ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:flt], :bat[:oid]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:flt], :bat[:oid]):flt ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:flt], :bat[:oid], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:flt], :bat[:oid], :bit):flt ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:flt], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:flt], :bit):flt ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:hge]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:hge]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:hge], :bat[:oid]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:hge], :bat[:oid]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:hge], :bat[:oid], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:hge], :bat[:oid], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:hge], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:hge], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int]):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bat[:oid]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bat[:oid]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bat[:oid]):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bat[:oid]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bat[:oid], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bat[:oid], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bat[:oid], :bit):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bat[:oid], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bit):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:int], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng], :bat[:oid]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng], :bat[:oid]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng], :bat[:oid]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng], :bat[:oid], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng], :bat[:oid], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng], :bat[:oid], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:lng], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk]):bte ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk]):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk]):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid]):bte ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid]):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid]):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid], :bit):bte ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid], :bit):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bat[:oid], :bit):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bit):bte ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bit):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:msk], :bit):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht]):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht]):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid]):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid]):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid]):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid]):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid]):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid], :bit):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bat[:oid], :bit):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bit):dbl ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bit):hge ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bit):int ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bit):lng ",	"CMDBATsum;",	""	]
[ "aggr",	"sum",	"pattern aggr.sum(:bat[:sht], :bit):sht ",	"CMDBATsum;",	""	]
[ "aggr",	"variance",	"command aggr.variance(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariance3_dbl;",	""	]
[ "aggr",	"variance",	"command aggr.variance(:bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariance3_dbl;",	""	]
[ "aggr",	"variance",	"command aggr.variance(:bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariance3_dbl;",	""	]
[ "aggr",	"variance",	"command aggr.variance(:bat[:hge], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariance3_dbl;",	""	]
[ "aggr",	"variance",	"command aggr.variance(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariance3_dbl;",	""	]
[ "aggr",	"variance",	"command aggr.variance(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariance3_dbl;",	""	]
[ "aggr",	"variance",	"command aggr.variance(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariance3_dbl;",	""	]
[ "aggr",	"variance",	"command aggr.variance(:bat[:any_2]):dbl ",	"ALGvariance;",	""	]
[ "aggr",	"variancep",	"command aggr.variancep(:bat[:bte], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariancep3_dbl;",	""	]
[ "aggr",	"variancep",	"command aggr.variancep(:bat[:dbl], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariancep3_dbl;",	""	]
[ "aggr",	"variancep",	"command aggr.variancep(:bat[:flt], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariancep3_dbl;",	""	]
[ "aggr",	"variancep",	"command aggr.variancep(:bat[:hge], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariancep3_dbl;",	""	]
[ "aggr",	"variancep",	"command aggr.variancep(:bat[:int], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariancep3_dbl;",	""	]
[ "aggr",	"variancep",	"command aggr.variancep(:bat[:lng], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariancep3_dbl;",	""	]
[ "aggr",	"variancep",	"command aggr.variancep(:bat[:sht], :bat[:oid], :bat[:any_1]):bat[:dbl] ",	"AGGRvariancep3_dbl;",	""	]
[ "aggr",	"variancep",	"command aggr.variancep(:bat[:any_2]):dbl ",	"ALGvariancep;",	""	]
[ "aggr",	"zero_or_one",	"command aggr.zero_or_one(:bat[:any_1]):any_1 ",	"zero_or_one;",	""	]
[ "aggr",	"zero_or_one",	"command aggr.zero_or_one(:bat[:any_1], :bit):any_1 ",	"zero_or_one_error;",	""	]
[ "aggr",	"zero_or_one",	"command aggr.zero_or_one(:bat[:any_1], :bat[:bit]):any_1 ",	"zero_or_one_error_bat;",	""	]
[ "alarm",	"ctime",	"unsafe command alarm.ctime():str ",	"ALARMctime;",	""	]
[ "alarm",	"epoch",	"unsafe command alarm.epoch():int ",	"ALARMepoch;",	""	]
[ "alarm",	"sleep",	"unsafe pattern alarm.sleep(:any_1):any_1 ",	"ALARMsleep;",	""	]
[ "alarm",	"sleep",	"unsafe pattern alarm.sleep(:any_1):void ",	"ALARMsleep;",	""	]
[ "alarm",	"sleep",	"unsafe pattern alarm.sleep(:bat[:any_1]):bat[:any_1] ",	"ALARMsleep;",	""	]
[ "alarm",	"time",	"unsafe command alarm.time():int ",	"ALARMtime;",	""	]
[ "alarm",	"usec",	"unsafe command alarm.usec():lng ",	"ALARMusec;",	""	]
[ "algebra",	"bandjoin",	"command algebra.bandjoin(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :any_1, :any_1, :bit, :bit, :lng):bat[:oid] ",	"ALGbandjoin1;",	""	]
[ "algebra",	"bandjoin",	"command algebra.bandjoin(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :any_1, :any_1, :bit, :bit, :lng) (:bat[:oid], :bat[:oid]) ",	"ALGbandjoin;",	""	]
[ "algebra",	"copy",	"command algebra.copy(:bat[:any_1]):bat[:any_1] ",	"ALGcopy;",	""	]
[ "algebra",	"crossproduct",	"command algebra.crossproduct(:bat[:any_1], :bat[:any_2], :bit):bat[:oid] ",	"ALGcrossproduct1;",	""	]
[ "algebra",	"crossproduct",	"command algebra.crossproduct(:bat[:any_1], :bat[:any_2], :bit) (:bat[:oid], :bat[:oid]) ",	"ALGcrossproduct2;",	""	]
[ "algebra",	"crossproduct",	"command algebra.crossproduct(:bat[:any_1], :bat[:any_2], :bat[:oid], :bat[:oid], :bit) (:bat[:oid], :bat[:oid]) ",	"ALGcrossproduct3;",	""	]
[ "algebra",	"crossproduct",	"command algebra.crossproduct(:bat[:any_1], :bat[:any_2], :bat[:oid], :bat[:oid], :bit):bat[:oid] ",	"ALGcrossproduct4;",	""	]
[ "algebra",	"difference",	"command algebra.difference(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :lng):bat[:oid] ",	"ALGdifference;",	""	]
[ "algebra",	"exist",	"command algebra.exist(:bat[:any_1], :any_1):bit ",	"ALGexist;",	""	]
[ "algebra",	"fetch",	"command algebra.fetch(:bat[:any_1], :oid):any_1 ",	"ALGfetchoid;",	""	]
[ "algebra",	"find",	"command algebra.find(:bat[:any_1], :any_1):oid ",	"ALGfind;",	""	]
[ "algebra",	"firstn",	"pattern algebra.firstn(:bat[:any], :bat[:oid], :bat[:oid], :lng, :bit, :bit, :bit) (:bat[:oid], :bat[:oid]) ",	"ALGfirstn;",	""	]
[ "algebra",	"firstn",	"pattern algebra.firstn(:bat[:any], :bat[:oid], :bat[:oid], :lng, :bit, :bit, :bit):bat[:oid] ",	"ALGfirstn;",	""	]
[ "algebra",	"groupby",	"command algebra.groupby(:bat[:oid], :bat[:lng]):bat[:oid] ",	"ALGgroupby;",	""	]
[ "algebra",	"ilike",	"command algebra.ilike(:str, :str):bit ",	"PCREilike2;",	""	]
[ "algebra",	"ilike",	"command algebra.ilike(:str, :str, :str):bit ",	"PCREilike3;",	""	]
[ "algebra",	"ilikejoin",	"command algebra.ilikejoin(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid], :bit, :lng, :bit):bat[:oid] ",	"ILIKEjoin1;",	""	]
[ "algebra",	"ilikejoin",	"command algebra.ilikejoin(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid], :bit, :lng, :bit) (:bat[:oid], :bat[:oid]) ",	"ILIKEjoin;",	""	]
[ "algebra",	"ilikejoin",	"command algebra.ilikejoin(:bat[:str], :bat[:str], :bat[:str], :bat[:oid], :bat[:oid], :bit, :lng, :bit):bat[:oid] ",	"ILIKEjoin_esc1;",	""	]
[ "algebra",	"ilikejoin",	"command algebra.ilikejoin(:bat[:str], :bat[:str], :bat[:str], :bat[:oid], :bat[:oid], :bit, :lng, :bit) (:bat[:oid], :bat[:oid]) ",	"ILIKEjoin_esc;",	""	]
[ "algebra",	"ilikeselect",	"command algebra.ilikeselect(:bat[:str], :bat[:oid], :str, :str, :bit):bat[:oid] ",	"PCRElikeselect1;",	""	]
[ "algebra",	"ilikeselect",	"command algebra.ilikeselect(:bat[:str], :bat[:oid], :str, :bit):bat[:oid] ",	"PCRElikeselect4;",	""	]
[ "algebra",	"intersect",	"command algebra.intersect(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :lng):bat[:oid] ",	"ALGintersect;",	""	]
[ "algebra",	"join",	"command algebra.join(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :lng):bat[:oid] ",	"ALGjoin1;",	""	]
[ "algebra",	"join",	"command algebra.join(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :lng) (:bat[:oid], :bat[:oid]) ",	"ALGjoin;",	""	]
[ "algebra",	"leftjoin",	"command algebra.leftjoin(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :lng):bat[:oid] ",	"ALGleftjoin1;",	""	]
[ "algebra",	"leftjoin",	"command algebra.leftjoin(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :lng) (:bat[:oid], :bat[:oid]) ",	"ALGleftjoin;",	""	]
[ "algebra",	"like",	"command algebra.like(:str, :str):bit ",	"PCRElike2;",	""	]
[ "algebra",	"like",	"command algebra.like(:str, :str, :str):bit ",	"PCRElike3;",	""	]
[ "algebra",	"likejoin",	"command algebra.likejoin(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid], :bit, :lng, :bit):bat[:oid] ",	"LIKEjoin1;",	""	]
[ "algebra",	"likejoin",	"command algebra.likejoin(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid], :bit, :lng, :bit) (:bat[:oid], :bat[:oid]) ",	"LIKEjoin;",	""	]
[ "algebra",	"likejoin",	"command algebra.likejoin(:bat[:str], :bat[:str], :bat[:str], :bat[:oid], :bat[:oid], :bit, :lng, :bit):bat[:oid] ",	"LIKEjoin_esc1;",	""	]
[ "algebra",	"likejoin",	"command algebra.likejoin(:bat[:str], :bat[:str], :bat[:str], :bat[:oid], :bat[:oid], :bit, :lng, :bit) (:bat[:oid], :bat[:oid]) ",	"LIKEjoin_esc;",	""	]
[ "algebra",	"likeselect",	"command algebra.likeselect(:bat[:str], :bat[:oid], :str, :str, :bit, :bit):bat[:oid] ",	"PCRElikeselect2;",	""	]
[ "algebra",	"likeselect",	"command algebra.likeselect(:bat[:str], :bat[:oid], :str, :str, :bit):bat[:oid] ",	"PCRElikeselect3;",	""	]
[ "algebra",	"likeselect",	"command algebra.likeselect(:bat[:str], :bat[:oid], :str, :bit):bat[:oid] ",	"PCRElikeselect5;",	""	]
[ "algebra",	"not_ilike",	"command algebra.not_ilike(:str, :str):bit ",	"PCREnotilike2;",	""	]
[ "algebra",	"not_ilike",	"command algebra.not_ilike(:str, :str, :str):bit ",	"PCREnotilike3;",	""	]
[ "algebra",	"not_like",	"command algebra.not_like(:str, :str):bit ",	"PCREnotlike2;",	""	]
[ "algebra",	"not_like",	"command algebra.not_like(:str, :str, :str):bit ",	"PCREnotlike3;",	""	]
[ "algebra",	"orderidx",	"command algebra.orderidx(:bat[:any_1], :bit):bat[:any_1] ",	"OIDXorderidx;",	""	]
[ "algebra",	"outerjoin",	"command algebra.outerjoin(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :lng):bat[:oid] ",	"ALGouterjoin1;",	""	]
[ "algebra",	"outerjoin",	"command algebra.outerjoin(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :lng) (:bat[:oid], :bat[:oid]) ",	"ALGouterjoin;",	""	]
[ "algebra",	"project",	"pattern algebra.project(:bat[:any_1], :any_3):bat[:any_3] ",	"ALGprojecttail;",	""	]
[ "algebra",	"projection",	"command algebra.projection(:bat[:oid], :bat[:any_3], :bat[:any_3]):bat[:any_3] ",	"ALGprojection2;",	""	]
[ "algebra",	"projection",	"command algebra.projection(:bat[:oid], :bat[:any_3]):bat[:any_3] ",	"ALGprojection;",	""	]
[ "algebra",	"projectionpath",	"pattern algebra.projectionpath(:bat[:any]...):bat[:any] ",	"ALGprojectionpath;",	""	]
[ "algebra",	"rangejoin",	"command algebra.rangejoin(:bat[:any_1], :bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :bit, :bit, :lng):bat[:oid] ",	"ALGrangejoin1;",	""	]
[ "algebra",	"rangejoin",	"command algebra.rangejoin(:bat[:any_1], :bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :bit, :bit, :lng) (:bat[:oid], :bat[:oid]) ",	"ALGrangejoin;",	""	]
[ "algebra",	"reuse",	"command algebra.reuse(:bat[:any_1]):bat[:any_1] ",	"ALGreuse;",	""	]
[ "algebra",	"select",	"command algebra.select(:bat[:any_1], :any_1, :any_1, :bit, :bit, :bit):bat[:oid] ",	"ALGselect1;",	""	]
[ "algebra",	"select",	"command algebra.select(:bat[:any_1], :any_1, :any_1, :bit, :bit, :bit, :bit):bat[:oid] ",	"ALGselect1nil;",	""	]
[ "algebra",	"select",	"command algebra.select(:bat[:any_1], :bat[:oid], :any_1, :any_1, :bit, :bit, :bit):bat[:oid] ",	"ALGselect2;",	""	]
[ "algebra",	"select",	"command algebra.select(:bat[:any_1], :bat[:oid], :any_1, :any_1, :bit, :bit, :bit, :bit):bat[:oid] ",	"ALGselect2nil;",	""	]
[ "algebra",	"selectNotNil",	"command algebra.selectNotNil(:bat[:any_2]):bat[:any_2] ",	"ALGselectNotNil;",	""	]
[ "algebra",	"semijoin",	"command algebra.semijoin(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :lng) (:bat[:oid], :bat[:oid]) ",	"ALGsemijoin;",	""	]
[ "algebra",	"slice",	"command algebra.slice(:bat[:any_1], :lng, :lng):bat[:any_1] ",	"ALGslice;",	""	]
[ "algebra",	"slice",	"command algebra.slice(:bat[:any_1], :int, :int):bat[:any_1] ",	"ALGslice_int;",	""	]
[ "algebra",	"slice",	"command algebra.slice(:bat[:any_1], :lng, :lng):bat[:any_1] ",	"ALGslice_lng;",	""	]
[ "algebra",	"slice",	"command algebra.slice(:bat[:any_1], :oid, :oid):bat[:any_1] ",	"ALGslice_oid;",	""	]
[ "algebra",	"sort",	"command algebra.sort(:bat[:any_1], :bit, :bit, :bit):bat[:any_1] ",	"ALGsort11;",	""	]
[ "algebra",	"sort",	"command algebra.sort(:bat[:any_1], :bit, :bit, :bit) (:bat[:any_1], :bat[:oid]) ",	"ALGsort12;",	""	]
[ "algebra",	"sort",	"command algebra.sort(:bat[:any_1], :bit, :bit, :bit) (:bat[:any_1], :bat[:oid], :bat[:oid]) ",	"ALGsort13;",	""	]
[ "algebra",	"sort",	"command algebra.sort(:bat[:any_1], :bat[:oid], :bit, :bit, :bit):bat[:any_1] ",	"ALGsort21;",	""	]
[ "algebra",	"sort",	"command algebra.sort(:bat[:any_1], :bat[:oid], :bit, :bit, :bit) (:bat[:any_1], :bat[:oid]) ",	"ALGsort22;",	""	]
[ "algebra",	"sort",	"command algebra.sort(:bat[:any_1], :bat[:oid], :bit, :bit, :bit) (:bat[:any_1], :bat[:oid], :bat[:oid]) ",	"ALGsort23;",	""	]
[ "algebra",	"sort",	"command algebra.sort(:bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :bit):bat[:any_1] ",	"ALGsort31;",	""	]
[ "algebra",	"sort",	"command algebra.sort(:bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :bit) (:bat[:any_1], :bat[:oid]) ",	"ALGsort32;",	""	]
[ "algebra",	"sort",	"command algebra.sort(:bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :bit) (:bat[:any_1], :bat[:oid], :bat[:oid]) ",	"ALGsort33;",	""	]
[ "algebra",	"subslice",	"command algebra.subslice(:bat[:any_1], :lng, :lng):bat[:oid] ",	"ALGsubslice_lng;",	""	]
[ "algebra",	"thetajoin",	"command algebra.thetajoin(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :int, :bit, :lng):bat[:oid] ",	"ALGthetajoin1;",	""	]
[ "algebra",	"thetajoin",	"command algebra.thetajoin(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :int, :bit, :lng) (:bat[:oid], :bat[:oid]) ",	"ALGthetajoin;",	""	]
[ "algebra",	"thetaselect",	"command algebra.thetaselect(:bat[:any_1], :bat[:oid], :any_1, :str):bat[:oid] ",	"ALGthetaselect2;",	""	]
[ "algebra",	"unique",	"command algebra.unique(:bat[:any_1], :bat[:oid]):bat[:oid] ",	"ALGunique;",	""	]
[ "bat",	"append",	"command bat.append(:bat[:any_1], :bat[:any_1], :bat[:oid], :bit):bat[:any_1] ",	"BKCappend_cand_force_wrap;",	""	]
[ "bat",	"append",	"command bat.append(:bat[:any_1], :bat[:any_1], :bat[:oid]):bat[:any_1] ",	"BKCappend_cand_wrap;",	""	]
[ "bat",	"append",	"command bat.append(:bat[:any_1], :bat[:any_1], :bit):bat[:any_1] ",	"BKCappend_force_wrap;",	""	]
[ "bat",	"append",	"command bat.append(:bat[:any_1], :any_1, :bit):bat[:any_1] ",	"BKCappend_val_force_wrap;",	""	]
[ "bat",	"append",	"command bat.append(:bat[:any_1], :any_1):bat[:any_1] ",	"BKCappend_val_wrap;",	""	]
[ "bat",	"append",	"command bat.append(:bat[:any_1], :bat[:any_1]):bat[:any_1] ",	"BKCappend_wrap;",	""	]
[ "bat",	"appendBulk",	"pattern bat.appendBulk(:bat[:any_1], :bit, :any_1...):bat[:any_1] ",	"CMDBATappend_bulk;",	""	]
[ "bat",	"appendBulk",	"pattern bat.appendBulk(:bat[:any_1], :bit, :bat[:any_1]...):bat[:any_1] ",	"CMDBATappend_bulk;",	""	]
[ "bat",	"attach",	"command bat.attach(:int, :str):bat[:any_1] ",	"BKCattach;",	""	]
[ "bat",	"delete",	"command bat.delete(:bat[:any_1], :oid):bat[:any_1] ",	"BKCdelete;",	""	]
[ "bat",	"delete",	"command bat.delete(:bat[:any_1]):bat[:any_1] ",	"BKCdelete_all;",	""	]
[ "bat",	"delete",	"command bat.delete(:bat[:any_1], :bat[:oid]):bat[:any_1] ",	"BKCdelete_multi;",	""	]
[ "bat",	"densebat",	"command bat.densebat(:lng):bat[:oid] ",	"BKCdensebat;",	""	]
[ "bat",	"diffcand",	"command bat.diffcand(:bat[:oid], :bat[:oid]):bat[:oid] ",	"BKCdiffcand;",	""	]
[ "bat",	"getAccess",	"command bat.getAccess(:bat[:any_1]):str ",	"BKCgetAccess;",	""	]
[ "bat",	"getCapacity",	"command bat.getCapacity(:bat[:any_1]):lng ",	"BKCgetCapacity;",	""	]
[ "bat",	"getColumnType",	"command bat.getColumnType(:bat[:any_1]):str ",	"BKCgetColumnType;",	""	]
[ "bat",	"getName",	"command bat.getName(:bat[:any_1]):str ",	"BKCgetBBPname;",	""	]
[ "bat",	"getRole",	"command bat.getRole(:bat[:any_1]):str ",	"BKCgetRole;",	""	]
[ "bat",	"getSequenceBase",	"command bat.getSequenceBase(:bat[:any_1]):oid ",	"BKCgetSequenceBase;",	""	]
[ "bat",	"getSize",	"command bat.getSize(:bat[:any_1]):lng ",	"BKCgetSize;",	""	]
[ "bat",	"getorderidx",	"pattern bat.getorderidx(:bat[:any_1]):bat[:oid] ",	"OIDXgetorderidx;",	""	]
[ "bat",	"hasorderidx",	"pattern bat.hasorderidx(:bat[:any_1]):bit ",	"OIDXhasorderidx;",	""	]
[ "bat",	"imprints",	"command bat.imprints(:bat[:bte]):void ",	"CMDBATimprints;",	""	]
[ "bat",	"imprints",	"command bat.imprints(:bat[:dbl]):void ",	"CMDBATimprints;",	""	]
[ "bat",	"imprints",	"command bat.imprints(:bat[:flt]):void ",	"CMDBATimprints;",	""	]
[ "bat",	"imprints",	"command bat.imprints(:bat[:hge]):void ",	"CMDBATimprints;",	""	]
[ "bat",	"imprints",	"command bat.imprints(:bat[:int]):void ",	"CMDBATimprints;",	""	]
[ "bat",	"imprints",	"command bat.imprints(:bat[:lng]):void ",	"CMDBATimprints;",	""	]
[ "bat",	"imprints",	"command bat.imprints(:bat[:sht]):void ",	"CMDBATimprints;",	""	]
[ "bat",	"imprintsize",	"command bat.imprintsize(:bat[:bte]):lng ",	"CMDBATimprintsize;",	""	]
[ "bat",	"imprintsize",	"command bat.imprintsize(:bat[:dbl]):lng ",	"CMDBATimprintsize;",	""	]
[ "bat",	"imprintsize",	"command bat.imprintsize(:bat[:flt]):lng ",	"CMDBATimprintsize;",	""	]
[ "bat",	"imprintsize",	"command bat.imprintsize(:bat[:hge]):lng ",	"CMDBATimprintsize;",	""	]
[ "bat",	"imprintsize",	"command bat.imprintsize(:bat[:int]):lng ",	"CMDBATimprintsize;",	""	]
[ "bat",	"imprintsize",	"command bat.imprintsize(:bat[:lng]):lng ",	"CMDBATimprintsize;",	""	]
[ "bat",	"imprintsize",	"command bat.imprintsize(:bat[:sht]):lng ",	"CMDBATimprintsize;",	""	]
[ "bat",	"info",	"command bat.info(:bat[:any_1]) (:bat[:str], :bat[:str]) ",	"BKCinfo;",	""	]
[ "bat",	"intersectcand",	"command bat.intersectcand(:bat[:oid], :bat[:oid]):bat[:oid] ",	"BKCintersectcand;",	""	]
[ "bat",	"isPersistent",	"command bat.isPersistent(:bat[:any_1]):bit ",	"BKCisPersistent;",	""	]
[ "bat",	"isSorted",	"command bat.isSorted(:bat[:any_1]):bit ",	"BKCisSorted;",	""	]
[ "bat",	"isSortedReverse",	"command bat.isSortedReverse(:bat[:any_1]):bit ",	"BKCisSortedReverse;",	""	]
[ "bat",	"isSynced",	"command bat.isSynced(:bat[:any_1], :bat[:any_2]):bit ",	"BKCisSynced;",	""	]
[ "bat",	"isTransient",	"command bat.isTransient(:bat[:any_1]):bit ",	"BKCisTransient;",	""	]
[ "bat",	"isaKey",	"command bat.isaKey(:bat[:any_1]):bit ",	"BKCgetKey;",	""	]
[ "bat",	"mergecand",	"command bat.mergecand(:bat[:oid], :bat[:oid]):bat[:oid] ",	"BKCmergecand;",	""	]
[ "bat",	"mirror",	"command bat.mirror(:bat[:any_2]):bat[:oid] ",	"BKCmirror;",	""	]
[ "bat",	"new",	"pattern bat.new(:any_1):bat[:any_1] ",	"CMDBATnew;",	""	]
[ "bat",	"new",	"pattern bat.new(:any_1, :int):bat[:any_1] ",	"CMDBATnew;",	""	]
[ "bat",	"new",	"pattern bat.new(:any_1, :int, :bit):bat[:any_1] ",	"CMDBATnew;",	""	]
[ "bat",	"new",	"pattern bat.new(:any_1, :lng):bat[:any_1] ",	"CMDBATnew;",	""	]
[ "bat",	"new",	"pattern bat.new(:any_1, :lng, :bit):bat[:any_1] ",	"CMDBATnew;",	""	]
[ "bat",	"orderidx",	"pattern bat.orderidx(:bat[:any_1]):void ",	"OIDXcreate;",	""	]
[ "bat",	"orderidx",	"pattern bat.orderidx(:bat[:any_1], :int):void ",	"OIDXcreate;",	""	]
[ "bat",	"orderidx",	"pattern bat.orderidx(:bat[:any_1], :bat[:any_1]...):void ",	"OIDXmerge;",	""	]
[ "bat",	"pack",	"pattern bat.pack(:any_2...):bat[:any_2] ",	"MATpackValues;",	""	]
[ "bat",	"partition",	"pattern bat.partition(:bat[:any_1], :int, :int):bat[:any_1] ",	"CMDBATpartition2;",	""	]
[ "bat",	"partition",	"pattern bat.partition(:bat[:any_1]):bat[:any_1]... ",	"CMDBATpartition;",	""	]
[ "bat",	"replace",	"command bat.replace(:bat[:any_1], :bat[:oid], :bat[:any_1]):bat[:any_1] ",	"BKCbat_inplace;",	""	]
[ "bat",	"replace",	"command bat.replace(:bat[:any_1], :bat[:oid], :bat[:any_1], :bit):bat[:any_1] ",	"BKCbat_inplace_force;",	""	]
[ "bat",	"replace",	"command bat.replace(:bat[:any_1], :oid, :any_1):bat[:any_1] ",	"BKCbun_inplace;",	""	]
[ "bat",	"replace",	"command bat.replace(:bat[:any_1], :oid, :any_1, :bit):bat[:any_1] ",	"BKCbun_inplace_force;",	""	]
[ "bat",	"reuse",	"command bat.reuse(:bat[:any_1], :bat[:oid]):bat[:any_1] ",	"BKCreuseBAT;",	""	]
[ "bat",	"reuseMap",	"command bat.reuseMap(:bat[:any_1], :bat[:oid]):bat[:oid] ",	"BKCreuseBATmap;",	""	]
[ "bat",	"save",	"command bat.save(:bat[:any_1]):void ",	"BKCsave2;",	""	]
[ "bat",	"save",	"command bat.save(:str):bit ",	"BKCsave;",	""	]
[ "bat",	"setAccess",	"command bat.setAccess(:bat[:any_1], :str):bat[:any_1] ",	"BKCsetAccess;",	""	]
[ "bat",	"setColumn",	"command bat.setColumn(:bat[:any_1], :str):void ",	"BKCsetColumn;",	""	]
[ "bat",	"setHash",	"command bat.setHash(:bat[:any_1]):bit ",	"BKCsetHash;",	""	]
[ "bat",	"setImprints",	"command bat.setImprints(:bat[:any_1]):bit ",	"BKCsetImprints;",	""	]
[ "bat",	"setName",	"command bat.setName(:bat[:any_1], :str):void ",	"BKCsetName;",	""	]
[ "bat",	"setPersistent",	"command bat.setPersistent(:bat[:any_1]):void ",	"BKCsetPersistent;",	""	]
[ "bat",	"setTransient",	"command bat.setTransient(:bat[:any_1]):void ",	"BKCsetTransient;",	""	]
[ "bat",	"single",	"pattern bat.single(:any_1):bat[:any_1] ",	"CMDBATsingle;",	""	]
[ "bataggr",	"allnotequal",	"pattern bataggr.allnotequal(:bat[:any_1], :bat[:any_1]):bit ",	"SQLallnotequal;",	""	]
[ "bataggr",	"anyequal",	"pattern bataggr.anyequal(:bat[:any_1], :bat[:any_1]):bat[:bit] ",	"SQLanyequal;",	""	]
[ "bataggr",	"exist",	"pattern bataggr.exist(:any_1):bat[:bit] ",	"SQLexist;",	""	]
[ "bataggr",	"exist",	"pattern bataggr.exist(:bat[:any_1]):bat[:bit] ",	"SQLexist;",	""	]
[ "bataggr",	"exist",	"pattern bataggr.exist(:bat[:any_1]):bit ",	"SQLexist;",	""	]
[ "bataggr",	"not_exist",	"pattern bataggr.not_exist(:any_1):bat[:bit] ",	"SQLnot_exist;",	""	]
[ "bataggr",	"not_exist",	"pattern bataggr.not_exist(:bat[:any_1]):bat[:bit] ",	"SQLnot_exist;",	""	]
[ "bataggr",	"not_exist",	"pattern bataggr.not_exist(:bat[:any_1]):bit ",	"SQLnot_exist;",	""	]
[ "batalgebra",	"ilike",	"pattern batalgebra.ilike(:bat[:str], :bat[:str]):bat[:bit] ",	"BATPCREilike2;",	""	]
[ "batalgebra",	"ilike",	"pattern batalgebra.ilike(:bat[:str], :str):bat[:bit] ",	"BATPCREilike2;",	""	]
[ "batalgebra",	"ilike",	"pattern batalgebra.ilike(:str, :bat[:str]):bat[:bit] ",	"BATPCREilike2;",	""	]
[ "batalgebra",	"ilike",	"pattern batalgebra.ilike(:bat[:str], :bat[:str], :str):bat[:bit] ",	"BATPCREilike;",	""	]
[ "batalgebra",	"ilike",	"pattern batalgebra.ilike(:bat[:str], :str, :str):bat[:bit] ",	"BATPCREilike;",	""	]
[ "batalgebra",	"ilike",	"pattern batalgebra.ilike(:str, :bat[:str], :str):bat[:bit] ",	"BATPCREilike;",	""	]
[ "batalgebra",	"like",	"pattern batalgebra.like(:bat[:str], :bat[:str]):bat[:bit] ",	"BATPCRElike2;",	""	]
[ "batalgebra",	"like",	"pattern batalgebra.like(:bat[:str], :str):bat[:bit] ",	"BATPCRElike2;",	""	]
[ "batalgebra",	"like",	"pattern batalgebra.like(:str, :bat[:str]):bat[:bit] ",	"BATPCRElike2;",	""	]
[ "batalgebra",	"like",	"pattern batalgebra.like(:bat[:str], :bat[:str], :str):bat[:bit] ",	"BATPCRElike;",	""	]
[ "batalgebra",	"like",	"pattern batalgebra.like(:bat[:str], :str, :str):bat[:bit] ",	"BATPCRElike;",	""	]
[ "batalgebra",	"like",	"pattern batalgebra.like(:str, :bat[:str], :str):bat[:bit] ",	"BATPCRElike;",	""	]
[ "batalgebra",	"not_ilike",	"pattern batalgebra.not_ilike(:bat[:str], :bat[:str]):bat[:bit] ",	"BATPCREnotilike2;",	""	]
[ "batalgebra",	"not_ilike",	"pattern batalgebra.not_ilike(:bat[:str], :str):bat[:bit] ",	"BATPCREnotilike2;",	""	]
[ "batalgebra",	"not_ilike",	"pattern batalgebra.not_ilike(:str, :bat[:str]):bat[:bit] ",	"BATPCREnotilike2;",	""	]
[ "batalgebra",	"not_ilike",	"pattern batalgebra.not_ilike(:bat[:str], :bat[:str], :str):bat[:bit] ",	"BATPCREnotilike;",	""	]
[ "batalgebra",	"not_ilike",	"pattern batalgebra.not_ilike(:bat[:str], :str, :str):bat[:bit] ",	"BATPCREnotilike;",	""	]
[ "batalgebra",	"not_ilike",	"pattern batalgebra.not_ilike(:str, :bat[:str], :str):bat[:bit] ",	"BATPCREnotilike;",	""	]
[ "batalgebra",	"not_like",	"pattern batalgebra.not_like(:bat[:str], :bat[:str]):bat[:bit] ",	"BATPCREnotlike2;",	""	]
[ "batalgebra",	"not_like",	"pattern batalgebra.not_like(:bat[:str], :str):bat[:bit] ",	"BATPCREnotlike2;",	""	]
[ "batalgebra",	"not_like",	"pattern batalgebra.not_like(:str, :bat[:str]):bat[:bit] ",	"BATPCREnotlike2;",	""	]
[ "batalgebra",	"not_like",	"pattern batalgebra.not_like(:bat[:str], :bat[:str], :str):bat[:bit] ",	"BATPCREnotlike;",	""	]
[ "batalgebra",	"not_like",	"pattern batalgebra.not_like(:bat[:str], :str, :str):bat[:bit] ",	"BATPCREnotlike;",	""	]
[ "batalgebra",	"not_like",	"pattern batalgebra.not_like(:str, :bat[:str], :str):bat[:bit] ",	"BATPCREnotlike;",	""	]
[ "batblob",	"nitems",	"pattern batblob.nitems(:bat[:blob]):bat[:int] ",	"BLOBnitems_bulk;",	""	]
[ "batblob",	"nitems",	"pattern batblob.nitems(:bat[:blob], :bat[:oid]):bat[:int] ",	"BLOBnitems_bulk;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:any_1, :bat[:any_1]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:any_1, :bat[:any_1], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:any_1, :bat[:any_1], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:any_1, :bat[:any_1], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:any_1], :any_1):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:any_1], :any_1, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:any_1], :any_1, :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:any_1], :any_1, :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:any_1], :bat[:any_1]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:any_1], :bat[:any_1], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :hge):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :hge):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :int):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :int):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :int, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :int, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :lng):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :lng):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :sht):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :sht):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:bte], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:date], :bat[:date]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:date], :bat[:date], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:date], :bat[:date], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:date], :bat[:date], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:date], :date):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:date], :date, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:date], :date, :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:date], :date, :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:daytime], :bat[:daytime]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:daytime], :bat[:daytime], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:daytime], :bat[:daytime], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:daytime], :bat[:daytime], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:daytime], :daytime):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:daytime], :daytime, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:daytime], :daytime, :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:daytime], :daytime, :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bte):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bte):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :int):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :int):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :int, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :int, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :lng):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :lng):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :sht):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :sht):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:hge], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bte):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bte):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :hge):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :hge):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :lng):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :lng):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :sht):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :sht):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:int], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:json], :bat[:json]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:json], :bat[:json], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:json], :bat[:json], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:json], :bat[:json], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:json], :json):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:json], :json, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:json], :json, :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:json], :json, :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bte):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bte):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :hge):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :hge):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :int):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :int):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :int, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :int, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :sht):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :sht):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:lng], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bte):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bte):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :hge):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :hge):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :int):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :int):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :int, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :int, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :lng):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :lng):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:sht], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:timestamp], :bat[:timestamp]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:timestamp], :bat[:timestamp], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:timestamp], :bat[:timestamp], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:timestamp], :bat[:timestamp], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:timestamp], :timestamp):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:timestamp], :timestamp, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:timestamp], :timestamp, :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:timestamp], :timestamp, :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:uuid], :bat[:uuid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:uuid], :bat[:uuid], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:uuid], :bat[:uuid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:uuid], :bat[:uuid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:uuid], :uuid):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:uuid], :uuid, :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:uuid], :uuid, :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bat[:uuid], :uuid, :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:bte, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:date, :bat[:date]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:date, :bat[:date], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:date, :bat[:date], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:date, :bat[:date], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:daytime, :bat[:daytime]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:daytime, :bat[:daytime], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:daytime, :bat[:daytime], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:daytime, :bat[:daytime], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:hge, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:int, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:json, :bat[:json]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:json, :bat[:json], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:json, :bat[:json], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:json, :bat[:json], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:sht]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:lng, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:bte]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:hge]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:int]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:lng]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:sht, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:timestamp, :bat[:timestamp]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:timestamp, :bat[:timestamp], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:timestamp, :bat[:timestamp], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:timestamp, :bat[:timestamp], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:uuid, :bat[:uuid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:uuid, :bat[:uuid], :bat[:oid]):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:uuid, :bat[:uuid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"!=",	"pattern batcalc.!=(:uuid, :bat[:uuid], :bit):bat[:bit] ",	"CMDbatNE;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :int, :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :int, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :int, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:hge], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:int], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :int, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:lng], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :int, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:hge, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:int, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:lng, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"%",	"pattern batcalc.%(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMODsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :int, :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :int, :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :int, :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMULenlarge;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :int, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :int, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :int, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:dbl], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :int, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :int, :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :int, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :int, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:flt], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:dbl, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:flt, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"*",	"pattern batcalc.*(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMULsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:str] ",	"CMDbatADD;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:str], :str, :bat[:oid]):bat[:str] ",	"CMDbatADD;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:str, :bat[:str], :bat[:oid]):bat[:str] ",	"CMDbatADD;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bte, :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :int, :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :int, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :int, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :sht, :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :int, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :int, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :int, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :int, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :int, :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :int, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :int, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :int, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bte, :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :int, :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :int, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :int, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :sht, :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatADDenlarge;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:dbl], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :int, :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:flt], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:dbl, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:flt, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"+",	"pattern batcalc.+(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatADDsignal;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:bte]):bat[:bte] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:dbl]):bat[:dbl] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:flt]):bat[:flt] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:hge]):bat[:hge] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:int]):bat[:int] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:lng]):bat[:lng] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:sht]):bat[:sht] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"++",	"pattern batcalc.++(:bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatINCR;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte]):bat[:bte] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl]):bat[:dbl] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt]):bat[:flt] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge]):bat[:hge] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int]):bat[:int] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng]):bat[:lng] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht]):bat[:sht] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatNEG;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bte, :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :int, :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :int, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :int, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :sht, :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :int, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :int, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :int, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :int, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :int, :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :int, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :int, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :int, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bte, :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :int, :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :int, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :int, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :sht, :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatSUBenlarge;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:dbl], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :int, :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:flt], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:dbl, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:flt, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"-",	"pattern batcalc.-(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatSUBsignal;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:bte]):bat[:bte] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:dbl]):bat[:dbl] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:flt]):bat[:flt] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:hge]):bat[:hge] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:int]):bat[:int] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:lng]):bat[:lng] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:sht]):bat[:sht] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"--",	"pattern batcalc.--(:bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatDECR;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :flt, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :int, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :int, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :int, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :int, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:dbl], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :int, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :int, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:flt], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :flt, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:int], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :flt, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :int, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:dbl, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:flt, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:int, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"/",	"pattern batcalc./(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatDIVsignal;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:any_1, :bat[:any_1]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:any_1, :bat[:any_1], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:any_1], :any_1):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:any_1], :any_1, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:any_1], :bat[:any_1]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :bat[:hge]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :bat[:int]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :bat[:lng]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :bat[:sht]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :hge):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :int):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :int, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :lng):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :sht):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:bte], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:date], :bat[:date]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:date], :bat[:date], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:date], :date):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:date], :date, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:daytime], :bat[:daytime]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:daytime], :bat[:daytime], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:daytime], :daytime):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:daytime], :daytime, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bat[:bte]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bat[:int]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bat[:lng]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bat[:sht]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bte):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :int):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :int, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :lng):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :sht):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:hge], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bat[:bte]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bat[:hge]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bat[:lng]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bat[:sht]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bte):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :hge):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :lng):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :sht):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:int], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:json], :bat[:json]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:json], :bat[:json], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:json], :json):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:json], :json, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bat[:bte]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bat[:hge]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bat[:int]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bat[:sht]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bte):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :hge):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :int):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :int, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :sht):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:lng], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bat[:bte]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bat[:hge]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bat[:int]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bat[:lng]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bte):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :hge):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :int):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :int, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :lng):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:sht], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:timestamp], :bat[:timestamp]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:timestamp], :bat[:timestamp], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:timestamp], :timestamp):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:timestamp], :timestamp, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:uuid], :bat[:uuid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:uuid], :bat[:uuid], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:uuid], :uuid):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bat[:uuid], :uuid, :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bte, :bat[:hge]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bte, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bte, :bat[:int]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bte, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bte, :bat[:lng]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bte, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bte, :bat[:sht]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:bte, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:date, :bat[:date]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:date, :bat[:date], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:daytime, :bat[:daytime]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:daytime, :bat[:daytime], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:hge, :bat[:bte]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:hge, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:hge, :bat[:int]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:hge, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:hge, :bat[:lng]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:hge, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:hge, :bat[:sht]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:hge, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:int, :bat[:bte]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:int, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:int, :bat[:hge]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:int, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:int, :bat[:lng]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:int, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:int, :bat[:sht]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:int, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:json, :bat[:json]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:json, :bat[:json], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:lng, :bat[:bte]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:lng, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:lng, :bat[:hge]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:lng, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:lng, :bat[:int]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:lng, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:lng, :bat[:sht]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:lng, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:sht, :bat[:bte]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:sht, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:sht, :bat[:hge]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:sht, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:sht, :bat[:int]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:sht, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:sht, :bat[:lng]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:sht, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:timestamp, :bat[:timestamp]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:timestamp, :bat[:timestamp], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:uuid, :bat[:uuid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<",	"pattern batcalc.<(:uuid, :bat[:uuid], :bat[:oid]):bat[:bit] ",	"CMDbatLT;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:bte]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:hge]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:int]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:lng]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:sht]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bte):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :hge):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :int):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :int, :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :lng):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :sht):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:bte], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:bte]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:hge]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:int]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:lng]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:sht]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bte):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :hge):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :int):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :lng):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :sht):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:bte]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:hge]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:int]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:lng]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:sht]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bte):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :hge):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :hge, :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :int):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :lng):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :lng, :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :sht):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:bte]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:hge]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:int]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:lng]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:sht]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bte):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :hge):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :int):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :lng):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :sht):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:bte]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:hge]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:int]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:lng]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:sht]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bte):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :hge):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :int):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :int, :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :lng):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :sht):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:bte]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:hge]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:int]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:lng]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:sht]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:bte, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:bte]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:hge]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:int]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:lng]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:sht]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:bte]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:hge]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:int]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:lng]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:sht]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:bte]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:hge]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:int]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:lng]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:sht]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:bte]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:hge]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:int]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:lng]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:sht]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<<",	"pattern batcalc.<<(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatLSHsignal;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:any_1, :bat[:any_1]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:any_1, :bat[:any_1], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:any_1], :any_1):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:any_1], :any_1, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:any_1], :bat[:any_1]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :bat[:hge]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :bat[:int]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :bat[:lng]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :bat[:sht]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :hge):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :int):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :int, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :lng):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :sht):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:bte], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:date], :bat[:date]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:date], :bat[:date], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:date], :date):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:date], :date, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:daytime], :bat[:daytime]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:daytime], :bat[:daytime], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:daytime], :daytime):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:daytime], :daytime, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bat[:bte]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bat[:int]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bat[:lng]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bat[:sht]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bte):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :int):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :int, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :lng):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :sht):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:hge], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bat[:bte]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bat[:hge]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bat[:lng]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bat[:sht]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bte):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :hge):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :lng):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :sht):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:int], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:json], :bat[:json]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:json], :bat[:json], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:json], :json):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:json], :json, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bat[:bte]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bat[:hge]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bat[:int]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bat[:sht]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bte):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :hge):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :int):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :int, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :sht):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:lng], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bat[:bte]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bat[:hge]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bat[:int]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bat[:lng]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bte):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :hge):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :int):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :int, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :lng):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:sht], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:timestamp], :bat[:timestamp]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:timestamp], :bat[:timestamp], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:timestamp], :timestamp):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:timestamp], :timestamp, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:uuid], :bat[:uuid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:uuid], :bat[:uuid], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:uuid], :uuid):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bat[:uuid], :uuid, :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bte, :bat[:hge]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bte, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bte, :bat[:int]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bte, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bte, :bat[:lng]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bte, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bte, :bat[:sht]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:bte, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:date, :bat[:date]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:date, :bat[:date], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:daytime, :bat[:daytime]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:daytime, :bat[:daytime], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:hge, :bat[:bte]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:hge, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:hge, :bat[:int]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:hge, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:hge, :bat[:lng]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:hge, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:hge, :bat[:sht]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:hge, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:int, :bat[:bte]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:int, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:int, :bat[:hge]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:int, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:int, :bat[:lng]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:int, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:int, :bat[:sht]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:int, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:json, :bat[:json]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:json, :bat[:json], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:lng, :bat[:bte]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:lng, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:lng, :bat[:hge]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:lng, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:lng, :bat[:int]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:lng, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:lng, :bat[:sht]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:lng, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:sht, :bat[:bte]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:sht, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:sht, :bat[:hge]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:sht, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:sht, :bat[:int]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:sht, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:sht, :bat[:lng]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:sht, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:timestamp, :bat[:timestamp]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:timestamp, :bat[:timestamp], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:uuid, :bat[:uuid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"<=",	"pattern batcalc.<=(:uuid, :bat[:uuid], :bat[:oid]):bat[:bit] ",	"CMDbatLE;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:any_1, :bat[:any_1]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:any_1, :bat[:any_1], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:any_1, :bat[:any_1], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:any_1, :bat[:any_1], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:any_1], :any_1):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:any_1], :any_1, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:any_1], :any_1, :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:any_1], :any_1, :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:any_1], :bat[:any_1]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:any_1], :bat[:any_1], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :hge):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :hge):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :int):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :int):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :int, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :int, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :lng):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :lng):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :sht):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :sht):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:bte], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:date], :bat[:date]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:date], :bat[:date], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:date], :bat[:date], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:date], :bat[:date], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:date], :date):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:date], :date, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:date], :date, :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:date], :date, :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:daytime], :bat[:daytime]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:daytime], :bat[:daytime], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:daytime], :bat[:daytime], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:daytime], :bat[:daytime], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:daytime], :daytime):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:daytime], :daytime, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:daytime], :daytime, :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:daytime], :daytime, :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bte):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bte):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :int):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :int):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :int, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :int, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :lng):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :lng):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :sht):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :sht):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:hge], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bte):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bte):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :hge):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :hge):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :lng):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :lng):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :sht):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :sht):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:int], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:json], :bat[:json]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:json], :bat[:json], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:json], :bat[:json], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:json], :bat[:json], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:json], :json):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:json], :json, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:json], :json, :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:json], :json, :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bte):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bte):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :hge):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :hge):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :int):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :int):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :int, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :int, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :sht):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :sht):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:lng], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bte):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bte):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :hge):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :hge):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :int):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :int):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :int, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :int, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :lng):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :lng):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:sht], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:timestamp], :bat[:timestamp]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:timestamp], :bat[:timestamp], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:timestamp], :bat[:timestamp], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:timestamp], :bat[:timestamp], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:timestamp], :timestamp):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:timestamp], :timestamp, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:timestamp], :timestamp, :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:timestamp], :timestamp, :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:uuid], :bat[:uuid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:uuid], :bat[:uuid], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:uuid], :bat[:uuid], :bat[:oid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:uuid], :bat[:uuid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:uuid], :uuid):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:uuid], :uuid, :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:uuid], :uuid, :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bat[:uuid], :uuid, :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:bte, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:date, :bat[:date]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:date, :bat[:date], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:date, :bat[:date], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:date, :bat[:date], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:daytime, :bat[:daytime]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:daytime, :bat[:daytime], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:daytime, :bat[:daytime], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:daytime, :bat[:daytime], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:hge, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:int, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:json, :bat[:json]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:json, :bat[:json], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:json, :bat[:json], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:json, :bat[:json], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:sht]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:lng, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:bte]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:hge]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:int]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:lng]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:sht, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:timestamp, :bat[:timestamp]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:timestamp, :bat[:timestamp], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:timestamp, :bat[:timestamp], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:timestamp, :bat[:timestamp], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:uuid, :bat[:uuid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:uuid, :bat[:uuid], :bat[:oid]):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:uuid, :bat[:uuid], :bat[:oid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	"==",	"pattern batcalc.==(:uuid, :bat[:uuid], :bit):bat[:bit] ",	"CMDbatEQ;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:any_1, :bat[:any_1]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:any_1, :bat[:any_1], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:any_1], :any_1):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:any_1], :any_1, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:any_1], :bat[:any_1]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :bat[:hge]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :bat[:int]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :bat[:lng]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :bat[:sht]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :hge):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :int):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :int, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :lng):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :sht):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:bte], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:date], :bat[:date]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:date], :bat[:date], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:date], :date):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:date], :date, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:daytime], :bat[:daytime]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:daytime], :bat[:daytime], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:daytime], :daytime):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:daytime], :daytime, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bat[:bte]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bat[:int]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bat[:lng]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bat[:sht]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bte):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :int):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :int, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :lng):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :sht):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:hge], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bat[:bte]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bat[:hge]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bat[:lng]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bat[:sht]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bte):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :hge):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :lng):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :sht):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:int], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:json], :bat[:json]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:json], :bat[:json], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:json], :json):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:json], :json, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bat[:bte]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bat[:hge]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bat[:int]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bat[:sht]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bte):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :hge):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :int):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :int, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :sht):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:lng], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bat[:bte]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bat[:hge]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bat[:int]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bat[:lng]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bte):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :hge):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :int):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :int, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :lng):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:sht], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:timestamp], :bat[:timestamp]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:timestamp], :bat[:timestamp], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:timestamp], :timestamp):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:timestamp], :timestamp, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:uuid], :bat[:uuid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:uuid], :bat[:uuid], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:uuid], :uuid):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bat[:uuid], :uuid, :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bte, :bat[:hge]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bte, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bte, :bat[:int]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bte, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bte, :bat[:lng]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bte, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bte, :bat[:sht]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:bte, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:date, :bat[:date]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:date, :bat[:date], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:daytime, :bat[:daytime]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:daytime, :bat[:daytime], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:hge, :bat[:bte]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:hge, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:hge, :bat[:int]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:hge, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:hge, :bat[:lng]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:hge, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:hge, :bat[:sht]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:hge, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:int, :bat[:bte]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:int, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:int, :bat[:hge]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:int, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:int, :bat[:lng]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:int, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:int, :bat[:sht]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:int, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:json, :bat[:json]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:json, :bat[:json], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:lng, :bat[:bte]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:lng, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:lng, :bat[:hge]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:lng, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:lng, :bat[:int]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:lng, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:lng, :bat[:sht]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:lng, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:sht, :bat[:bte]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:sht, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:sht, :bat[:hge]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:sht, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:sht, :bat[:int]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:sht, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:sht, :bat[:lng]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:sht, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:timestamp, :bat[:timestamp]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:timestamp, :bat[:timestamp], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:uuid, :bat[:uuid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">",	"pattern batcalc.>(:uuid, :bat[:uuid], :bat[:oid]):bat[:bit] ",	"CMDbatGT;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:any_1, :bat[:any_1]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:any_1, :bat[:any_1], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:any_1], :any_1):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:any_1], :any_1, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:any_1], :bat[:any_1]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :bat[:hge]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :bat[:int]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :bat[:lng]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :bat[:sht]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :hge):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :int):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :int, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :lng):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :sht):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:bte], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:date], :bat[:date]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:date], :bat[:date], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:date], :date):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:date], :date, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:daytime], :bat[:daytime]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:daytime], :bat[:daytime], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:daytime], :daytime):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:daytime], :daytime, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bat[:bte]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bat[:int]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bat[:lng]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bat[:sht]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bte):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :int):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :int, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :lng):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :sht):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:hge], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bat[:bte]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bat[:hge]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bat[:lng]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bat[:sht]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bte):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :hge):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :lng):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :sht):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:int], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:json], :bat[:json]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:json], :bat[:json], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:json], :json):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:json], :json, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bat[:bte]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bat[:hge]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bat[:int]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bat[:sht]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bte):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :hge):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :int):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :int, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :sht):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:lng], :sht, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bat[:bte]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bat[:hge]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bat[:int]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bat[:lng]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bte):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :bte, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :hge):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :hge, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :int):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :int, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :lng):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:sht], :lng, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:timestamp], :bat[:timestamp]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:timestamp], :bat[:timestamp], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:timestamp], :timestamp):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:timestamp], :timestamp, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:uuid], :bat[:uuid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:uuid], :bat[:uuid], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:uuid], :uuid):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bat[:uuid], :uuid, :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bte, :bat[:hge]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bte, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bte, :bat[:int]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bte, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bte, :bat[:lng]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bte, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bte, :bat[:sht]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:bte, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:date, :bat[:date]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:date, :bat[:date], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:daytime, :bat[:daytime]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:daytime, :bat[:daytime], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:hge, :bat[:bte]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:hge, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:hge, :bat[:int]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:hge, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:hge, :bat[:lng]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:hge, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:hge, :bat[:sht]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:hge, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:int, :bat[:bte]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:int, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:int, :bat[:hge]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:int, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:int, :bat[:lng]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:int, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:int, :bat[:sht]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:int, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:json, :bat[:json]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:json, :bat[:json], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:lng, :bat[:bte]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:lng, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:lng, :bat[:hge]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:lng, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:lng, :bat[:int]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:lng, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:lng, :bat[:sht]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:lng, :bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:sht, :bat[:bte]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:sht, :bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:sht, :bat[:hge]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:sht, :bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:sht, :bat[:int]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:sht, :bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:sht, :bat[:lng]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:sht, :bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:timestamp, :bat[:timestamp]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:timestamp, :bat[:timestamp], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:uuid, :bat[:uuid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">=",	"pattern batcalc.>=(:uuid, :bat[:uuid], :bat[:oid]):bat[:bit] ",	"CMDbatGE;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:bte]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:hge]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:int]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:lng]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:sht]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bte):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :hge):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :int):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :int, :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :lng):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :sht):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:bte], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:bte]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:hge]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:int]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:lng]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:sht]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bte):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :hge):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :int):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :lng):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :sht):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:bte]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:hge]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:int]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:lng]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:sht]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bte):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :hge):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :hge, :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :int):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :lng):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :lng, :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :sht):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:bte]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:hge]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:int]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:lng]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:sht]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bte):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :hge):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :int):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :lng):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :sht):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:bte]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:hge]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:int]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:lng]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:sht]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bte):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :hge):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :int):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :int, :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :lng):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :sht):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:bte]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:hge]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:int]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:lng]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:sht]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:bte, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:bte]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:hge]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:int]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:lng]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:sht]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:bte]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:hge]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:int]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:lng]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:sht]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:bte]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:hge]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:int]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:lng]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:sht]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:bte]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:hge]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:int]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:lng]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:sht]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	">>",	"pattern batcalc.>>(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatRSHsignal;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:bte]):bat[:bte] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:dbl]):bat[:dbl] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:flt]):bat[:flt] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:hge]):bat[:hge] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:int]):bat[:int] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:lng]):bat[:lng] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:sht]):bat[:sht] ",	"CMDbatABS;",	""	]
[ "batcalc",	"abs",	"pattern batcalc.abs(:bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatABS;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :int, :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:dbl, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:flt, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:flt, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:int, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatADD;",	""	]
[ "batcalc",	"add_noerror",	"pattern batcalc.add_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatADD;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:bit], :bat[:bit]):bat[:bit] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:bit], :bat[:bit], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:bit], :bit):bat[:bit] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:bit], :bit, :bat[:oid]):bat[:bit] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:bte], :bat[:bte]):bat[:bte] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:bte], :bte):bat[:bte] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:dbl], :bat[:dbl]):bat[:dbl] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:dbl], :dbl):bat[:dbl] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:flt], :bat[:flt]):bat[:flt] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:flt], :flt):bat[:flt] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:hge], :bat[:hge]):bat[:hge] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:hge], :hge):bat[:hge] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:int], :bat[:int]):bat[:int] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:int], :int):bat[:int] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:lng], :bat[:lng]):bat[:lng] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:lng], :lng):bat[:lng] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:sht], :bat[:sht]):bat[:sht] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:sht], :sht):bat[:sht] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bit, :bat[:bit]):bat[:bit] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bit, :bat[:bit], :bat[:oid]):bat[:bit] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bte, :bat[:bte]):bat[:bte] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:dbl, :bat[:dbl]):bat[:dbl] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:flt, :bat[:flt]):bat[:flt] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:hge, :bat[:hge]):bat[:hge] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:int, :bat[:int]):bat[:int] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:lng, :bat[:lng]):bat[:lng] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:sht, :bat[:sht]):bat[:sht] ",	"CMDbatAND;",	""	]
[ "batcalc",	"and",	"pattern batcalc.and(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatAND;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:bte]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:bte]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:bte], :bat[:oid]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:bte], :bat[:oid]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:bte], :bat[:oid], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:bte], :bat[:oid], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:bte], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:bte], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:dbl]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:dbl]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:dbl], :bat[:oid]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:dbl], :bat[:oid]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:dbl], :bat[:oid], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:dbl], :bat[:oid], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:dbl], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:dbl], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:flt]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:flt]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:flt], :bat[:oid]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:flt], :bat[:oid]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:flt], :bat[:oid], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:flt], :bat[:oid], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:flt], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:flt], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:hge]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:hge]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:hge], :bat[:oid]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:hge], :bat[:oid]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:hge], :bat[:oid], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:hge], :bat[:oid], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:hge], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:hge], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:int]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:int]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:int], :bat[:oid]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:int], :bat[:oid]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:int], :bat[:oid], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:int], :bat[:oid], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:int], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:int], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:lng]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:lng]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:lng], :bat[:oid]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:lng], :bat[:oid]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:lng], :bat[:oid], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:lng], :bat[:oid], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:lng], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:lng], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:sht]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:sht]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:sht], :bat[:oid]) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:sht], :bat[:oid]):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:sht], :bat[:oid], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:sht], :bat[:oid], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:sht], :int) (:dbl, :lng) ",	"CMDcalcavg;",	""	]
[ "batcalc",	"avg",	"pattern batcalc.avg(:bat[:sht], :int):dbl ",	"CMDcalcavg;",	""	]
[ "batcalc",	"between",	"pattern batcalc.between(:bat[:any_1], :any_1, :any_1, :bat[:oid], :bit, :bit, :bit, :bit, :bit):bat[:bit] ",	"CMDbatBETWEEN;",	""	]
[ "batcalc",	"between",	"pattern batcalc.between(:bat[:any_1], :any_1, :any_1, :bit, :bit, :bit, :bit, :bit):bat[:bit] ",	"CMDbatBETWEEN;",	""	]
[ "batcalc",	"between",	"pattern batcalc.between(:bat[:any_1], :any_1, :bat[:any_1], :bat[:oid], :bat[:oid], :bit, :bit, :bit, :bit, :bit):bat[:bit] ",	"CMDbatBETWEEN;",	""	]
[ "batcalc",	"between",	"pattern batcalc.between(:bat[:any_1], :any_1, :bat[:any_1], :bit, :bit, :bit, :bit, :bit):bat[:bit] ",	"CMDbatBETWEEN;",	""	]
[ "batcalc",	"between",	"pattern batcalc.between(:bat[:any_1], :bat[:any_1], :any_1, :bat[:oid], :bat[:oid], :bit, :bit, :bit, :bit, :bit):bat[:bit] ",	"CMDbatBETWEEN;",	""	]
[ "batcalc",	"between",	"pattern batcalc.between(:bat[:any_1], :bat[:any_1], :any_1, :bit, :bit, :bit, :bit, :bit):bat[:bit] ",	"CMDbatBETWEEN;",	""	]
[ "batcalc",	"between",	"pattern batcalc.between(:bat[:any_1], :bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bit, :bit, :bit, :bit, :bit):bat[:bit] ",	"CMDbatBETWEEN;",	""	]
[ "batcalc",	"between",	"pattern batcalc.between(:bat[:any_1], :bat[:any_1], :bat[:any_1], :bit, :bit, :bit, :bit, :bit):bat[:bit] ",	"CMDbatBETWEEN;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:bit]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:bit], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:bte]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:dbl]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:dbl], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:flt]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:flt], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:hge]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:int]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:int], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:lng]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:sht]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:str]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit",	"pattern batcalc.bit(:bat[:str], :bat[:oid]):bat[:bit] ",	"CMDconvertsignal_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:bit]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:bit], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:bte]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:dbl]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:dbl], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:flt]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:flt], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:hge]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:int]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:int], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:lng]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:sht]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:str]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"bit_noerror",	"pattern batcalc.bit_noerror(:bat[:str], :bat[:oid]):bat[:bit] ",	"CMDconvert_bit;",	""	]
[ "batcalc",	"blob",	"command batcalc.blob(:bat[:blob], :bat[:oid]):bat[:blob] ",	"BLOBblob_blob_bulk;",	""	]
[ "batcalc",	"blob",	"command batcalc.blob(:bat[:str], :bat[:oid]):bat[:blob] ",	"batstr_2_blob;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:bit]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:bit], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:bte]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:dbl]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:flt]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:hge]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:int]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:int], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:lng]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:sht]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:str]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:str], :bat[:oid]):bat[:bte] ",	"CMDconvertsignal_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:bte], :bat[:oid]):bat[:bte] ",	"batbte_dec2_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:bte], :bat[:oid], :int, :int):bat[:bte] ",	"batbte_dec2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:bat[:bte], :bat[:oid], :int, :int):bat[:bte] ",	"batbte_num2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:bat[:dbl], :bat[:oid], :int, :int):bat[:bte] ",	"batdbl_num2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:bat[:flt], :bat[:oid], :int, :int):bat[:bte] ",	"batflt_num2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:hge], :bat[:oid]):bat[:bte] ",	"bathge_dec2_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:hge], :bat[:oid], :int, :int):bat[:bte] ",	"bathge_dec2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:bat[:hge], :bat[:oid], :int, :int):bat[:bte] ",	"bathge_num2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:int], :bat[:oid]):bat[:bte] ",	"batint_dec2_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:int], :bat[:oid], :int, :int):bat[:bte] ",	"batint_dec2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:bat[:int], :bat[:oid], :int, :int):bat[:bte] ",	"batint_num2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:lng], :bat[:oid]):bat[:bte] ",	"batlng_dec2_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:lng], :bat[:oid], :int, :int):bat[:bte] ",	"batlng_dec2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:bat[:lng], :bat[:oid], :int, :int):bat[:bte] ",	"batlng_num2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:bat[:oid], :int, :int):bat[:bte] ",	"batnil_2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:sht], :bat[:oid]):bat[:bte] ",	"batsht_dec2_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:int, :bat[:sht], :bat[:oid], :int, :int):bat[:bte] ",	"batsht_dec2dec_bte;",	""	]
[ "batcalc",	"bte",	"command batcalc.bte(:bat[:sht], :bat[:oid], :int, :int):bat[:bte] ",	"batsht_num2dec_bte;",	""	]
[ "batcalc",	"bte",	"pattern batcalc.bte(:bat[:str], :bat[:oid], :int, :int):bat[:bte] ",	"batstr_2dec_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:bit]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:bit], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:bte]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:dbl]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:flt]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:hge]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:int]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:int], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:lng]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:sht]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:str]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"bte_noerror",	"pattern batcalc.bte_noerror(:bat[:str], :bat[:oid]):bat[:bte] ",	"CMDconvert_bte;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bit], :bat[:bit]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bit], :bat[:bit], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bit], :bit):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bit], :bit, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bte):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :dbl):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :flt):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :hge):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :int):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :int, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :lng):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :sht):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:bte], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bte):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :dbl):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :flt):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :hge):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :int):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :int, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :lng):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :sht):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:dbl], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bte):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :dbl):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :flt):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :hge):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :int):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :int, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :lng):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :sht):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:flt], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bte):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :dbl):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :flt):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :hge):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :int):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :int, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :lng):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :sht):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:hge], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bte):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :dbl):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :flt):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :hge):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :int):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :int, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :lng):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :sht):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:int], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bte):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :dbl):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :flt):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :hge):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :int):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :int, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :lng):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :sht):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:lng], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:oid], :bat[:oid], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:oid], :oid):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:oid], :oid, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bte):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :dbl):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :flt):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :hge):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :int):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :int, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :lng):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :sht):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:sht], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:str], :bat[:str]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:str], :str):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bat[:str], :str, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bit, :bat[:bit]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bit, :bat[:bit], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:bte, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:dbl, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:flt, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:hge, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:int, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:lng, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:oid, :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:oid, :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:bte]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:dbl]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:flt]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:hge]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:int]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:lng]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:sht]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:sht, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:str, :bat[:str]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"cmp",	"pattern batcalc.cmp(:str, :bat[:str], :bat[:oid]):bat[:bte] ",	"CMDbatCMP;",	""	]
[ "batcalc",	"date",	"pattern batcalc.date(:bat[:date], :bat[:oid]):bat[:date] ",	"MTIMEdate_date_bulk;",	""	]
[ "batcalc",	"date",	"pattern batcalc.date(:bat[:str], :bat[:oid]):bat[:date] ",	"MTIMEdate_fromstr_bulk;",	""	]
[ "batcalc",	"date",	"pattern batcalc.date(:bat[:timestamp], :bat[:oid]):bat[:date] ",	"MTIMEtimestamp_extract_date_bulk;",	""	]
[ "batcalc",	"date",	"command batcalc.date(:bat[:str], :bat[:oid]):bat[:date] ",	"batstr_2_date;",	""	]
[ "batcalc",	"date",	"pattern batcalc.date(:bat[:oid]):bat[:date] ",	"nil_2_date;",	""	]
[ "batcalc",	"daytime",	"pattern batcalc.daytime(:bat[:daytime], :bat[:oid]):bat[:daytime] ",	"MTIMEdaytime_daytime_bulk;",	""	]
[ "batcalc",	"daytime",	"pattern batcalc.daytime(:bat[:lng], :bat[:oid]):bat[:daytime] ",	"MTIMEdaytime_fromseconds_bulk;",	""	]
[ "batcalc",	"daytime",	"pattern batcalc.daytime(:bat[:str], :bat[:oid]):bat[:daytime] ",	"MTIMEdaytime_fromstr_bulk;",	""	]
[ "batcalc",	"daytime",	"pattern batcalc.daytime(:bat[:timestamp], :bat[:oid]):bat[:daytime] ",	"MTIMEtimestamp_extract_daytime_bulk;",	""	]
[ "batcalc",	"daytime",	"command batcalc.daytime(:bat[:str], :bat[:oid], :int):bat[:daytime] ",	"batstr_2time_daytime;",	""	]
[ "batcalc",	"daytime",	"pattern batcalc.daytime(:bat[:daytime], :bat[:oid], :int):bat[:daytime] ",	"daytime_2time_daytime;",	""	]
[ "batcalc",	"daytime",	"pattern batcalc.daytime(:bat[:oid], :int):bat[:daytime] ",	"nil_2time_daytime;",	""	]
[ "batcalc",	"daytime",	"pattern batcalc.daytime(:bat[:lng], :bat[:oid], :int):bat[:daytime] ",	"second_interval_2_daytime;",	""	]
[ "batcalc",	"daytime",	"pattern batcalc.daytime(:bat[:str], :bat[:oid], :int, :int):bat[:daytime] ",	"str_2time_daytimetz;",	""	]
[ "batcalc",	"daytime",	"pattern batcalc.daytime(:bat[:timestamp], :bat[:oid], :int):bat[:daytime] ",	"timestamp_2_daytime;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:bit]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:bit], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:bte]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:dbl]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:flt]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:hge]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:int]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:lng]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:sht]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:str]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"pattern batcalc.dbl(:bat[:str], :bat[:oid]):bat[:dbl] ",	"CMDconvertsignal_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"batbte_dec2_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:bte], :bat[:oid], :int, :int):bat[:dbl] ",	"batbte_dec2dec_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:bat[:bte], :bat[:oid], :int, :int):bat[:dbl] ",	"batbte_num2dec_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"bathge_dec2_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:hge], :bat[:oid], :int, :int):bat[:dbl] ",	"bathge_dec2dec_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:bat[:hge], :bat[:oid], :int, :int):bat[:dbl] ",	"bathge_num2dec_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:int], :bat[:oid]):bat[:dbl] ",	"batint_dec2_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:int], :bat[:oid], :int, :int):bat[:dbl] ",	"batint_dec2dec_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:bat[:int], :bat[:oid], :int, :int):bat[:dbl] ",	"batint_num2dec_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"batlng_dec2_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:lng], :bat[:oid], :int, :int):bat[:dbl] ",	"batlng_dec2dec_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:bat[:lng], :bat[:oid], :int, :int):bat[:dbl] ",	"batlng_num2dec_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"batsht_dec2_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:int, :bat[:sht], :bat[:oid], :int, :int):bat[:dbl] ",	"batsht_dec2dec_dbl;",	""	]
[ "batcalc",	"dbl",	"command batcalc.dbl(:bat[:sht], :bat[:oid], :int, :int):bat[:dbl] ",	"batsht_num2dec_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:bit]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:bit], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:bte]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:dbl]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:flt]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:hge]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:int]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:lng]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:sht]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:str]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dbl_noerror",	"pattern batcalc.dbl_noerror(:bat[:str], :bat[:oid]):bat[:dbl] ",	"CMDconvert_dbl;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:bte], :bte):bat[:bte] ",	"bte_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"bte_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bte, :bat[:bte]):bat[:bte] ",	"bte_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"bte_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:bte], :bat[:bte]):bat[:bte] ",	"bte_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"bte_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:dbl], :dbl):bat[:dbl] ",	"dbl_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"dbl_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:dbl, :bat[:dbl]):bat[:dbl] ",	"dbl_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"dbl_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:dbl], :bat[:dbl]):bat[:dbl] ",	"dbl_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"dbl_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:flt], :flt):bat[:flt] ",	"flt_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"flt_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:flt, :bat[:flt]):bat[:flt] ",	"flt_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"flt_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:flt], :bat[:flt]):bat[:flt] ",	"flt_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"flt_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:hge], :hge):bat[:hge] ",	"hge_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"hge_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:hge, :bat[:hge]):bat[:hge] ",	"hge_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"hge_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:hge], :bat[:hge]):bat[:hge] ",	"hge_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"hge_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:int], :int):bat[:int] ",	"int_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"int_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:int, :bat[:int]):bat[:int] ",	"int_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"int_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:int], :bat[:int]):bat[:int] ",	"int_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"int_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:lng], :lng):bat[:lng] ",	"lng_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"lng_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:lng, :bat[:lng]):bat[:lng] ",	"lng_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"lng_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:lng], :bat[:lng]):bat[:lng] ",	"lng_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"lng_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:sht], :sht):bat[:sht] ",	"sht_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"sht_bat_dec_round_wrap;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:sht, :bat[:sht]):bat[:sht] ",	"sht_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"sht_bat_dec_round_wrap_cst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:sht], :bat[:sht]):bat[:sht] ",	"sht_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"dec_round",	"pattern batcalc.dec_round(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"sht_bat_dec_round_wrap_nocst;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :int, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :int, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :int, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :int, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :flt, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:int], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :int, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :int, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :int, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :int, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:int, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"div_noerror",	"pattern batcalc.div_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatDIV;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:bit]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:bit], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:bte]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:dbl]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:flt]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:hge]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:int]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:int], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:lng]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:sht]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:str]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"pattern batcalc.flt(:bat[:str], :bat[:oid]):bat[:flt] ",	"CMDconvertsignal_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:bte], :bat[:oid]):bat[:flt] ",	"batbte_dec2_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:bte], :bat[:oid], :int, :int):bat[:flt] ",	"batbte_dec2dec_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:bat[:bte], :bat[:oid], :int, :int):bat[:flt] ",	"batbte_num2dec_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:hge], :bat[:oid]):bat[:flt] ",	"bathge_dec2_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:hge], :bat[:oid], :int, :int):bat[:flt] ",	"bathge_dec2dec_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:bat[:hge], :bat[:oid], :int, :int):bat[:flt] ",	"bathge_num2dec_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:int], :bat[:oid]):bat[:flt] ",	"batint_dec2_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:int], :bat[:oid], :int, :int):bat[:flt] ",	"batint_dec2dec_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:bat[:int], :bat[:oid], :int, :int):bat[:flt] ",	"batint_num2dec_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:lng], :bat[:oid]):bat[:flt] ",	"batlng_dec2_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:lng], :bat[:oid], :int, :int):bat[:flt] ",	"batlng_dec2dec_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:bat[:lng], :bat[:oid], :int, :int):bat[:flt] ",	"batlng_num2dec_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:sht], :bat[:oid]):bat[:flt] ",	"batsht_dec2_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:int, :bat[:sht], :bat[:oid], :int, :int):bat[:flt] ",	"batsht_dec2dec_flt;",	""	]
[ "batcalc",	"flt",	"command batcalc.flt(:bat[:sht], :bat[:oid], :int, :int):bat[:flt] ",	"batsht_num2dec_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:bit]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:bit], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:bte]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:dbl]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:dbl], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:flt]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:hge]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:hge], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:int]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:int], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:lng]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:lng], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:sht]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:str]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"flt_noerror",	"pattern batcalc.flt_noerror(:bat[:str], :bat[:oid]):bat[:flt] ",	"CMDconvert_flt;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:any_1]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:bte]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:dbl]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:flt]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:hge]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:int]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:lng]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:lng]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:oid]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hash",	"command batcalc.hash(:bat[:sht]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:bit]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:bit], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:bte]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:dbl]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:flt]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:hge]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:int]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:int], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:lng]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:sht]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:str]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:str], :bat[:oid]):bat[:hge] ",	"CMDconvertsignal_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:bte], :bat[:oid]):bat[:hge] ",	"batbte_dec2_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:bte], :bat[:oid], :int, :int):bat[:hge] ",	"batbte_dec2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:bat[:bte], :bat[:oid], :int, :int):bat[:hge] ",	"batbte_num2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:bat[:dbl], :bat[:oid], :int, :int):bat[:hge] ",	"batdbl_num2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:bat[:flt], :bat[:oid], :int, :int):bat[:hge] ",	"batflt_num2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"bathge_dec2_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:hge], :bat[:oid], :int, :int):bat[:hge] ",	"bathge_dec2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:bat[:hge], :bat[:oid], :int, :int):bat[:hge] ",	"bathge_num2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:int], :bat[:oid]):bat[:hge] ",	"batint_dec2_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:int], :bat[:oid], :int, :int):bat[:hge] ",	"batint_dec2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:bat[:int], :bat[:oid], :int, :int):bat[:hge] ",	"batint_num2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:lng], :bat[:oid]):bat[:hge] ",	"batlng_dec2_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:lng], :bat[:oid], :int, :int):bat[:hge] ",	"batlng_dec2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:bat[:lng], :bat[:oid], :int, :int):bat[:hge] ",	"batlng_num2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:bat[:void], :int, :int):bat[:hge] ",	"batnil_2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:sht], :bat[:oid]):bat[:hge] ",	"batsht_dec2_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:int, :bat[:sht], :bat[:oid], :int, :int):bat[:hge] ",	"batsht_dec2dec_hge;",	""	]
[ "batcalc",	"hge",	"command batcalc.hge(:bat[:sht], :bat[:oid], :int, :int):bat[:hge] ",	"batsht_num2dec_hge;",	""	]
[ "batcalc",	"hge",	"pattern batcalc.hge(:bat[:str], :bat[:oid], :int, :int):bat[:hge] ",	"batstr_2dec_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:bit]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:bit], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:bte]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:dbl]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:flt]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:hge]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:int]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:int], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:lng]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:sht]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:str]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"hge_noerror",	"pattern batcalc.hge_noerror(:bat[:str], :bat[:oid]):bat[:hge] ",	"CMDconvert_hge;",	""	]
[ "batcalc",	"identity",	"command batcalc.identity(:bat[:any]):bat[:oid] ",	"BATSQLidentity;",	""	]
[ "batcalc",	"identity",	"pattern batcalc.identity(:bat[:any], :oid) (:bat[:oid], :oid) ",	"PBATSQLidentity;",	""	]
[ "batcalc",	"ifthenelse",	"pattern batcalc.ifthenelse(:bat[:bit], :any_1, :any_1):bat[:any_1] ",	"CMDifthen;",	""	]
[ "batcalc",	"ifthenelse",	"pattern batcalc.ifthenelse(:bat[:bit], :any_1, :bat[:any_1]):bat[:any_1] ",	"CMDifthen;",	""	]
[ "batcalc",	"ifthenelse",	"pattern batcalc.ifthenelse(:bat[:bit], :bat[:any_1], :any_1):bat[:any_1] ",	"CMDifthen;",	""	]
[ "batcalc",	"ifthenelse",	"pattern batcalc.ifthenelse(:bat[:bit], :bat[:any_1], :bat[:any_1]):bat[:any_1] ",	"CMDifthen;",	""	]
[ "batcalc",	"ifthenelse",	"pattern batcalc.ifthenelse(:bit, :any_1, :bat[:any_1]):bat[:any_1] ",	"CMDifthen;",	""	]
[ "batcalc",	"ifthenelse",	"pattern batcalc.ifthenelse(:bit, :bat[:any_1], :any_1):bat[:any_1] ",	"CMDifthen;",	""	]
[ "batcalc",	"ifthenelse",	"pattern batcalc.ifthenelse(:bit, :bat[:any_1], :bat[:any_1]):bat[:any_1] ",	"CMDifthen;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:bit]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:bit], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:bte]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:bte], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:dbl]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:flt]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:flt], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:hge]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:hge], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:int]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:int], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:lng]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:lng], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:oid], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:sht]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:sht], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:str]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:str], :bat[:oid]):bat[:int] ",	"CMDconvertsignal_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"batbte_dec2_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:bte], :bat[:oid], :int, :int):bat[:int] ",	"batbte_dec2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:bat[:bte], :bat[:oid], :int, :int):bat[:int] ",	"batbte_num2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:bat[:dbl], :bat[:oid], :int, :int):bat[:int] ",	"batdbl_num2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:bat[:flt], :bat[:oid], :int, :int):bat[:int] ",	"batflt_num2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:hge], :bat[:oid]):bat[:int] ",	"bathge_dec2_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:hge], :bat[:oid], :int, :int):bat[:int] ",	"bathge_dec2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:bat[:hge], :bat[:oid], :int, :int):bat[:int] ",	"bathge_num2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"batint_dec2_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:int], :bat[:oid], :int, :int):bat[:int] ",	"batint_dec2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:bat[:int], :bat[:oid], :int, :int):bat[:int] ",	"batint_num2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:lng], :bat[:oid]):bat[:int] ",	"batlng_dec2_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:lng], :bat[:oid], :int, :int):bat[:int] ",	"batlng_dec2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:bat[:lng], :bat[:oid], :int, :int):bat[:int] ",	"batlng_num2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:bat[:oid], :int, :int):bat[:int] ",	"batnil_2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"batsht_dec2_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:int, :bat[:sht], :bat[:oid], :int, :int):bat[:int] ",	"batsht_dec2dec_int;",	""	]
[ "batcalc",	"int",	"command batcalc.int(:bat[:sht], :bat[:oid], :int, :int):bat[:int] ",	"batsht_num2dec_int;",	""	]
[ "batcalc",	"int",	"pattern batcalc.int(:bat[:str], :bat[:oid], :int, :int):bat[:int] ",	"batstr_2dec_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:bit]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:bit], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:bte]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:bte], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:dbl]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:flt]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:flt], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:hge]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:hge], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:int]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:int], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:lng]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:lng], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:oid], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:sht]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:sht], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:str]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"int_noerror",	"pattern batcalc.int_noerror(:bat[:str], :bat[:oid]):bat[:int] ",	"CMDconvert_int;",	""	]
[ "batcalc",	"isnil",	"pattern batcalc.isnil(:bat[:any]):bat[:bit] ",	"CMDbatISNIL;",	""	]
[ "batcalc",	"isnil",	"pattern batcalc.isnil(:bat[:any], :bat[:oid]):bat[:bit] ",	"CMDbatISNIL;",	""	]
[ "batcalc",	"isnotnil",	"pattern batcalc.isnotnil(:bat[:any]):bat[:bit] ",	"CMDbatISNOTNIL;",	""	]
[ "batcalc",	"isnotnil",	"pattern batcalc.isnotnil(:bat[:any], :bat[:oid]):bat[:bit] ",	"CMDbatISNOTNIL;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:bte]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:bte], :bat[:oid]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:dbl]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:dbl], :bat[:oid]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:flt]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:flt], :bat[:oid]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:hge]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:hge], :bat[:oid]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:int]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:int], :bat[:oid]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:lng]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:lng], :bat[:oid]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:sht]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"iszero",	"pattern batcalc.iszero(:bat[:sht], :bat[:oid]):bat[:bit] ",	"CMDbatISZERO;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:bit]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:bit], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:bte]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:dbl]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:flt]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:hge]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:int]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:int], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:lng]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:sht]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:str]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:str], :bat[:oid]):bat[:lng] ",	"CMDconvertsignal_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:bte], :bat[:oid]):bat[:lng] ",	"batbte_dec2_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:bte], :bat[:oid], :int, :int):bat[:lng] ",	"batbte_dec2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:bat[:bte], :bat[:oid], :int, :int):bat[:lng] ",	"batbte_num2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:bat[:dbl], :bat[:oid], :int, :int):bat[:lng] ",	"batdbl_num2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:bat[:flt], :bat[:oid], :int, :int):bat[:lng] ",	"batflt_num2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:hge], :bat[:oid]):bat[:lng] ",	"bathge_dec2_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:hge], :bat[:oid], :int, :int):bat[:lng] ",	"bathge_dec2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:bat[:hge], :bat[:oid], :int, :int):bat[:lng] ",	"bathge_num2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:int], :bat[:oid]):bat[:lng] ",	"batint_dec2_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:int], :bat[:oid], :int, :int):bat[:lng] ",	"batint_dec2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:bat[:int], :bat[:oid], :int, :int):bat[:lng] ",	"batint_num2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"batlng_dec2_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:lng], :bat[:oid], :int, :int):bat[:lng] ",	"batlng_dec2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:bat[:lng], :bat[:oid], :int, :int):bat[:lng] ",	"batlng_num2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:bat[:oid], :int, :int):bat[:lng] ",	"batnil_2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:sht], :bat[:oid]):bat[:lng] ",	"batsht_dec2_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:int, :bat[:sht], :bat[:oid], :int, :int):bat[:lng] ",	"batsht_dec2dec_lng;",	""	]
[ "batcalc",	"lng",	"command batcalc.lng(:bat[:sht], :bat[:oid], :int, :int):bat[:lng] ",	"batsht_num2dec_lng;",	""	]
[ "batcalc",	"lng",	"pattern batcalc.lng(:bat[:str], :bat[:oid], :int, :int):bat[:lng] ",	"batstr_2dec_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:bit]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:bit], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:bte]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:dbl]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:flt]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:hge]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:int]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:int], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:lng]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:sht]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:str]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lng_noerror",	"pattern batcalc.lng_noerror(:bat[:str], :bat[:oid]):bat[:lng] ",	"CMDconvert_lng;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:bte]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:hge]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:int]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:lng]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:sht]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bte):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :hge):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :int):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :int, :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :lng):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :sht):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:bte]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:hge]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:int]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:lng]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:sht]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bte):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :hge):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :int):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :lng):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :sht):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:bte]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:hge]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:int]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:lng]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:sht]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bte):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :hge):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :hge, :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :int):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :lng):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :lng, :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :sht):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:bte]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:hge]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:int]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:lng]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:sht]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bte):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :hge):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :int):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :lng):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :sht):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:bte]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:hge]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:int]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:lng]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:sht]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bte):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :hge):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :int):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :int, :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :lng):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :sht):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:bte]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:hge]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:int]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:lng]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:sht]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:bte]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:hge]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:int]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:lng]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:sht]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:bte]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:hge]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:int]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:lng]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:sht]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:bte]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:hge]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:int]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:lng]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:sht]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:bte]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:hge]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:int]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:lng]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:sht]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"lsh_noerror",	"pattern batcalc.lsh_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatLSH;",	""	]
[ "batcalc",	"max",	"pattern batcalc.max(:any_1, :bat[:any_1]):bat[:any_1] ",	"CMDbatMAX;",	""	]
[ "batcalc",	"max",	"pattern batcalc.max(:any_1, :bat[:any_1], :bat[:oid]):bat[:any_1] ",	"CMDbatMAX;",	""	]
[ "batcalc",	"max",	"pattern batcalc.max(:bat[:any_1], :any_1):bat[:any_1] ",	"CMDbatMAX;",	""	]
[ "batcalc",	"max",	"pattern batcalc.max(:bat[:any_1], :any_1, :bat[:oid]):bat[:any_1] ",	"CMDbatMAX;",	""	]
[ "batcalc",	"max",	"pattern batcalc.max(:bat[:any_1], :bat[:any_1]):bat[:any_1] ",	"CMDbatMAX;",	""	]
[ "batcalc",	"max",	"pattern batcalc.max(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:any_1] ",	"CMDbatMAX;",	""	]
[ "batcalc",	"max_no_nil",	"pattern batcalc.max_no_nil(:any_1, :bat[:any_1]):bat[:any_1] ",	"CMDbatMAX_no_nil;",	""	]
[ "batcalc",	"max_no_nil",	"pattern batcalc.max_no_nil(:any_1, :bat[:any_1], :bat[:oid]):bat[:any_1] ",	"CMDbatMAX_no_nil;",	""	]
[ "batcalc",	"max_no_nil",	"pattern batcalc.max_no_nil(:bat[:any_1], :any_1):bat[:any_1] ",	"CMDbatMAX_no_nil;",	""	]
[ "batcalc",	"max_no_nil",	"pattern batcalc.max_no_nil(:bat[:any_1], :any_1, :bat[:oid]):bat[:any_1] ",	"CMDbatMAX_no_nil;",	""	]
[ "batcalc",	"max_no_nil",	"pattern batcalc.max_no_nil(:bat[:any_1], :bat[:any_1]):bat[:any_1] ",	"CMDbatMAX_no_nil;",	""	]
[ "batcalc",	"max_no_nil",	"pattern batcalc.max_no_nil(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:any_1] ",	"CMDbatMAX_no_nil;",	""	]
[ "batcalc",	"min",	"pattern batcalc.min(:any_1, :bat[:any_1]):bat[:any_1] ",	"CMDbatMIN;",	""	]
[ "batcalc",	"min",	"pattern batcalc.min(:any_1, :bat[:any_1], :bat[:oid]):bat[:any_1] ",	"CMDbatMIN;",	""	]
[ "batcalc",	"min",	"pattern batcalc.min(:bat[:any_1], :any_1):bat[:any_1] ",	"CMDbatMIN;",	""	]
[ "batcalc",	"min",	"pattern batcalc.min(:bat[:any_1], :any_1, :bat[:oid]):bat[:any_1] ",	"CMDbatMIN;",	""	]
[ "batcalc",	"min",	"pattern batcalc.min(:bat[:any_1], :bat[:any_1]):bat[:any_1] ",	"CMDbatMIN;",	""	]
[ "batcalc",	"min",	"pattern batcalc.min(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:any_1] ",	"CMDbatMIN;",	""	]
[ "batcalc",	"min_no_nil",	"pattern batcalc.min_no_nil(:any_1, :bat[:any_1]):bat[:any_1] ",	"CMDbatMIN_no_nil;",	""	]
[ "batcalc",	"min_no_nil",	"pattern batcalc.min_no_nil(:any_1, :bat[:any_1], :bat[:oid]):bat[:any_1] ",	"CMDbatMIN_no_nil;",	""	]
[ "batcalc",	"min_no_nil",	"pattern batcalc.min_no_nil(:bat[:any_1], :any_1):bat[:any_1] ",	"CMDbatMIN_no_nil;",	""	]
[ "batcalc",	"min_no_nil",	"pattern batcalc.min_no_nil(:bat[:any_1], :any_1, :bat[:oid]):bat[:any_1] ",	"CMDbatMIN_no_nil;",	""	]
[ "batcalc",	"min_no_nil",	"pattern batcalc.min_no_nil(:bat[:any_1], :bat[:any_1]):bat[:any_1] ",	"CMDbatMIN_no_nil;",	""	]
[ "batcalc",	"min_no_nil",	"pattern batcalc.min_no_nil(:bat[:any_1], :bat[:any_1], :bat[:oid], :bat[:oid]):bat[:any_1] ",	"CMDbatMIN_no_nil;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :int, :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :int, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :int, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:int], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :int, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :int, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:int, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"mod_noerror",	"pattern batcalc.mod_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMOD;",	""	]
[ "batcalc",	"month_interval",	"pattern batcalc.month_interval(:bat[:bte], :bat[:oid], :int, :int):bat[:int] ",	"month_interval;",	""	]
[ "batcalc",	"month_interval",	"pattern batcalc.month_interval(:bat[:hge], :bat[:oid], :int, :int):bat[:int] ",	"month_interval;",	""	]
[ "batcalc",	"month_interval",	"pattern batcalc.month_interval(:bat[:int], :bat[:oid], :int, :int):bat[:int] ",	"month_interval;",	""	]
[ "batcalc",	"month_interval",	"pattern batcalc.month_interval(:bat[:lng], :bat[:oid], :int, :int):bat[:int] ",	"month_interval;",	""	]
[ "batcalc",	"month_interval",	"pattern batcalc.month_interval(:bat[:sht], :bat[:oid], :int, :int):bat[:int] ",	"month_interval;",	""	]
[ "batcalc",	"month_interval",	"pattern batcalc.month_interval(:bat[:str], :bat[:oid], :int, :int):bat[:int] ",	"month_interval_str;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :int, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :int, :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :int, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :int, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"mul_noerror",	"pattern batcalc.mul_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatMUL;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:bit]):bat[:bit] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:bit], :bat[:oid]):bat[:bit] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:bte]):bat[:bte] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:dbl]):bat[:dbl] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:flt]):bat[:flt] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:hge]):bat[:hge] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:int]):bat[:int] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:lng]):bat[:lng] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:sht]):bat[:sht] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"not",	"pattern batcalc.not(:bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatNOT;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:bit]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:bit], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:bte]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:bte], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:dbl]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:dbl], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:flt]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:flt], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:hge]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:hge], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:int]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:int], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:lng]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:lng], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:oid], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:sht]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:sht], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:str]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid",	"pattern batcalc.oid(:bat[:str], :bat[:oid]):bat[:oid] ",	"CMDconvertsignal_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:bit]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:bit], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:bte]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:bte], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:dbl]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:dbl], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:flt]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:flt], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:hge]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:hge], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:int]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:int], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:lng]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:lng], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:oid], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:sht]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:sht], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:str]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"oid_noerror",	"pattern batcalc.oid_noerror(:bat[:str], :bat[:oid]):bat[:oid] ",	"CMDconvert_oid;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:bit], :bat[:bit]):bat[:bit] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:bit], :bat[:bit], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:bit], :bit):bat[:bit] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:bit], :bit, :bat[:oid]):bat[:bit] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:bte], :bat[:bte]):bat[:bte] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:bte], :bte):bat[:bte] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:dbl], :bat[:dbl]):bat[:dbl] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:dbl], :dbl):bat[:dbl] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:flt], :bat[:flt]):bat[:flt] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:flt], :flt):bat[:flt] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:hge], :bat[:hge]):bat[:hge] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:hge], :hge):bat[:hge] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:int], :bat[:int]):bat[:int] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:int], :int):bat[:int] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:lng], :bat[:lng]):bat[:lng] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:lng], :lng):bat[:lng] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:sht], :bat[:sht]):bat[:sht] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:sht], :sht):bat[:sht] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bit, :bat[:bit]):bat[:bit] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bit, :bat[:bit], :bat[:oid]):bat[:bit] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bte, :bat[:bte]):bat[:bte] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:dbl, :bat[:dbl]):bat[:dbl] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:flt, :bat[:flt]):bat[:flt] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:hge, :bat[:hge]):bat[:hge] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:int, :bat[:int]):bat[:int] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:lng, :bat[:lng]):bat[:lng] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:sht, :bat[:sht]):bat[:sht] ",	"CMDbatOR;",	""	]
[ "batcalc",	"or",	"pattern batcalc.or(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatOR;",	""	]
[ "batcalc",	"rotate_xor_hash",	"command batcalc.rotate_xor_hash(:bat[:lng], :int, :bat[:any_1]):bat[:int] ",	"MKEYbulk_rotate_xor_hash;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:bte], :bte, :bat[:oid], :int, :int):bat[:bte] ",	"bte_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:bte], :bte, :int, :int):bat[:bte] ",	"bte_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bte, :bat[:bte], :bat[:oid], :int, :int):bat[:bte] ",	"bte_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bte, :bat[:bte], :int, :int):bat[:bte] ",	"bte_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid], :int, :int):bat[:bte] ",	"bte_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:bte], :bat[:bte], :int, :int):bat[:bte] ",	"bte_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:dbl], :bte):bat[:dbl] ",	"dbl_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:dbl], :bte, :bat[:oid]):bat[:dbl] ",	"dbl_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:dbl, :bat[:bte]):bat[:dbl] ",	"dbl_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:dbl, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"dbl_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:dbl], :bat[:bte]):bat[:dbl] ",	"dbl_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"dbl_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:flt], :bte):bat[:flt] ",	"flt_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:flt], :bte, :bat[:oid]):bat[:flt] ",	"flt_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:flt, :bat[:bte]):bat[:flt] ",	"flt_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:flt, :bat[:bte], :bat[:oid]):bat[:flt] ",	"flt_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:flt], :bat[:bte]):bat[:flt] ",	"flt_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"flt_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:hge], :bte, :bat[:oid], :int, :int):bat[:hge] ",	"hge_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:hge], :bte, :int, :int):bat[:hge] ",	"hge_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:hge, :bat[:bte], :bat[:oid], :int, :int):bat[:hge] ",	"hge_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:hge, :bat[:bte], :int, :int):bat[:hge] ",	"hge_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid], :int, :int):bat[:hge] ",	"hge_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:hge], :bat[:bte], :int, :int):bat[:hge] ",	"hge_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:int], :bte, :bat[:oid], :int, :int):bat[:int] ",	"int_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:int], :bte, :int, :int):bat[:int] ",	"int_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:int, :bat[:bte], :bat[:oid], :int, :int):bat[:int] ",	"int_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:int, :bat[:bte], :int, :int):bat[:int] ",	"int_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid], :int, :int):bat[:int] ",	"int_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:int], :bat[:bte], :int, :int):bat[:int] ",	"int_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:lng], :bte, :bat[:oid], :int, :int):bat[:lng] ",	"lng_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:lng], :bte, :int, :int):bat[:lng] ",	"lng_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:lng, :bat[:bte], :bat[:oid], :int, :int):bat[:lng] ",	"lng_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:lng, :bat[:bte], :int, :int):bat[:lng] ",	"lng_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid], :int, :int):bat[:lng] ",	"lng_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:lng], :bat[:bte], :int, :int):bat[:lng] ",	"lng_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:sht], :bte, :bat[:oid], :int, :int):bat[:sht] ",	"sht_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:sht], :bte, :int, :int):bat[:sht] ",	"sht_bat_round_wrap;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:sht, :bat[:bte], :bat[:oid], :int, :int):bat[:sht] ",	"sht_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:sht, :bat[:bte], :int, :int):bat[:sht] ",	"sht_bat_round_wrap_cst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid], :int, :int):bat[:sht] ",	"sht_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"round",	"pattern batcalc.round(:bat[:sht], :bat[:bte], :int, :int):bat[:sht] ",	"sht_bat_round_wrap_nocst;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:bte]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:hge]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:int]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:lng]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:sht]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bte):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :hge):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :int):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :int, :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :lng):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :sht):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:bte]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:hge]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:int]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:lng]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:sht]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bte):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :hge):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :int):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :lng):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :sht):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:bte]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:hge]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:int]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:lng]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:sht]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bte):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :hge):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :hge, :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :int):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :lng):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :lng, :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :sht):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:bte]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:hge]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:int]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:lng]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:sht]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bte):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :hge):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :int):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :lng):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :sht):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:bte]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:hge]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:int]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:lng]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:sht]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bte):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :hge):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :int):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :int, :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :lng):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :sht):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:bte]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:hge]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:int]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:lng]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:sht]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:bte]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:hge]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:int]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:lng]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:sht]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:bte]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:hge]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:hge], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:int]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:lng]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:lng], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:sht]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:bte]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:hge]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:int]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:lng]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:sht]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:bte]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:hge]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:int]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:int], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:lng]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:sht]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"rsh_noerror",	"pattern batcalc.rsh_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatRSH;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:int, :bat[:bte], :bat[:oid], :int, :int):bat[:lng] ",	"bte_batdec2second_interval;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:int, :bat[:hge], :bat[:oid], :int, :int):bat[:lng] ",	"hge_batdec2second_interval;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:int, :bat[:int], :bat[:oid], :int, :int):bat[:lng] ",	"int_batdec2second_interval;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:int, :bat[:lng], :bat[:oid], :int, :int):bat[:lng] ",	"lng_batdec2second_interval;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:bat[:bte], :bat[:oid], :int, :int):bat[:lng] ",	"second_interval;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:bat[:hge], :bat[:oid], :int, :int):bat[:lng] ",	"second_interval;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:bat[:int], :bat[:oid], :int, :int):bat[:lng] ",	"second_interval;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:bat[:lng], :bat[:oid], :int, :int):bat[:lng] ",	"second_interval;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:bat[:sht], :bat[:oid], :int, :int):bat[:lng] ",	"second_interval;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:bat[:daytime], :bat[:oid], :int, :int):bat[:lng] ",	"second_interval_daytime;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:bat[:str], :bat[:oid], :int, :int):bat[:lng] ",	"second_interval_str;",	""	]
[ "batcalc",	"second_interval",	"pattern batcalc.second_interval(:int, :bat[:sht], :bat[:oid], :int, :int):bat[:lng] ",	"sht_batdec2second_interval;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:bit]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:bit], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:bte]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:dbl]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:flt]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:hge]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:int]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:int], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:lng]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:sht]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:str]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:str], :bat[:oid]):bat[:sht] ",	"CMDconvertsignal_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:bte], :bat[:oid]):bat[:sht] ",	"batbte_dec2_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:bte], :bat[:oid], :int, :int):bat[:sht] ",	"batbte_dec2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:bat[:bte], :bat[:oid], :int, :int):bat[:sht] ",	"batbte_num2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:bat[:dbl], :bat[:oid], :int, :int):bat[:sht] ",	"batdbl_num2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:bat[:flt], :bat[:oid], :int, :int):bat[:sht] ",	"batflt_num2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:hge], :bat[:oid]):bat[:sht] ",	"bathge_dec2_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:hge], :bat[:oid], :int, :int):bat[:sht] ",	"bathge_dec2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:bat[:hge], :bat[:oid], :int, :int):bat[:sht] ",	"bathge_num2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:int], :bat[:oid]):bat[:sht] ",	"batint_dec2_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:int], :bat[:oid], :int, :int):bat[:sht] ",	"batint_dec2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:bat[:int], :bat[:oid], :int, :int):bat[:sht] ",	"batint_num2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:lng], :bat[:oid]):bat[:sht] ",	"batlng_dec2_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:lng], :bat[:oid], :int, :int):bat[:sht] ",	"batlng_dec2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:bat[:lng], :bat[:oid], :int, :int):bat[:sht] ",	"batlng_num2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:bat[:oid], :int, :int):bat[:sht] ",	"batnil_2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:sht], :bat[:oid]):bat[:sht] ",	"batsht_dec2_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:int, :bat[:sht], :bat[:oid], :int, :int):bat[:sht] ",	"batsht_dec2dec_sht;",	""	]
[ "batcalc",	"sht",	"command batcalc.sht(:bat[:sht], :bat[:oid], :int, :int):bat[:sht] ",	"batsht_num2dec_sht;",	""	]
[ "batcalc",	"sht",	"pattern batcalc.sht(:bat[:str], :bat[:oid], :int, :int):bat[:sht] ",	"batstr_2dec_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:bit]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:bit], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:bte]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:dbl]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:dbl], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:flt]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:flt], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:hge]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:hge], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:int]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:int], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:lng]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:lng], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:sht]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:str]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sht_noerror",	"pattern batcalc.sht_noerror(:bat[:str], :bat[:oid]):bat[:sht] ",	"CMDconvert_sht;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:bte]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:dbl]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:dbl], :bat[:oid]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:flt]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:flt], :bat[:oid]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:hge]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:hge], :bat[:oid]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:int]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:int], :bat[:oid]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:lng]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:lng], :bat[:oid]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:sht]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"sign",	"pattern batcalc.sign(:bat[:sht], :bat[:oid]):bat[:bte] ",	"CMDbatSIGN;",	""	]
[ "batcalc",	"str",	"pattern batcalc.str(:bat[:any]):bat[:str] ",	"CMDconvertsignal_str;",	""	]
[ "batcalc",	"str",	"pattern batcalc.str(:bat[:any], :bat[:oid]):bat[:str] ",	"CMDconvertsignal_str;",	""	]
[ "batcalc",	"str",	"pattern batcalc.str(:int, :int, :int, :int, :bat[:any_1], :bat[:oid], :int):bat[:str] ",	"SQLbatstr_cast;",	""	]
[ "batcalc",	"str_noerror",	"pattern batcalc.str_noerror(:bat[:any]):bat[:str] ",	"CMDconvert_str;",	""	]
[ "batcalc",	"str_noerror",	"pattern batcalc.str_noerror(:bat[:any], :bat[:oid]):bat[:str] ",	"CMDconvert_str;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :int, :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:bte], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :bat[:int], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :bte, :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :flt, :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :int, :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:dbl], :sht, :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :bat[:int], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :bte, :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :int, :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:flt], :sht, :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :bat[:int], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :bte, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :dbl, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :flt, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :int, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :lng, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:hge], :sht, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :bte, :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:int], :sht, :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :bat[:int], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :bte, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :dbl, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :flt, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :int, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:lng], :sht, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :bte, :bat[:oid]):bat[:sht] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :int, :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bte, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bte, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bte, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bte, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bte, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:bte, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:dbl, :bat[:bte], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:dbl, :bat[:flt], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:dbl, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:dbl, :bat[:int], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:dbl, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:dbl, :bat[:sht], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:flt, :bat[:bte], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:flt, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:flt, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:flt, :bat[:int], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:flt, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:flt, :bat[:sht], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:hge, :bat[:bte], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:hge, :bat[:dbl], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:hge, :bat[:flt], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:hge, :bat[:int], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:hge, :bat[:lng], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:hge, :bat[:sht], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:int, :bat[:bte], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:int, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:int, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:int, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:int, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:int, :bat[:sht], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:lng, :bat[:bte], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:lng, :bat[:dbl], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:lng, :bat[:flt], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:lng, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:lng, :bat[:int], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:lng, :bat[:sht], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:sht, :bat[:bte], :bat[:oid]):bat[:sht] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:sht, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:sht, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:sht, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:sht, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:sht, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"sub_noerror",	"pattern batcalc.sub_noerror(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatSUB;",	""	]
[ "batcalc",	"timestamp",	"pattern batcalc.timestamp(:bat[:date], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_fromdate_bulk;",	""	]
[ "batcalc",	"timestamp",	"pattern batcalc.timestamp(:bat[:lng], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_frommsec_bulk;",	""	]
[ "batcalc",	"timestamp",	"pattern batcalc.timestamp(:bat[:int], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_fromsecond_bulk;",	""	]
[ "batcalc",	"timestamp",	"pattern batcalc.timestamp(:bat[:str], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_fromstr_bulk;",	""	]
[ "batcalc",	"timestamp",	"pattern batcalc.timestamp(:bat[:timestamp], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_timestamp_bulk;",	""	]
[ "batcalc",	"timestamp",	"command batcalc.timestamp(:bat[:str], :bat[:oid], :int):bat[:timestamp] ",	"batstr_2time_timestamp;",	""	]
[ "batcalc",	"timestamp",	"command batcalc.timestamp(:bat[:str], :bat[:oid], :int, :int):bat[:timestamp] ",	"batstr_2time_timestamptz;",	""	]
[ "batcalc",	"timestamp",	"pattern batcalc.timestamp(:bat[:date], :bat[:oid], :int):bat[:timestamp] ",	"date_2_timestamp;",	""	]
[ "batcalc",	"timestamp",	"pattern batcalc.timestamp(:bat[:oid], :int):bat[:timestamp] ",	"nil_2time_timestamp;",	""	]
[ "batcalc",	"timestamp",	"pattern batcalc.timestamp(:bat[:oid], :int, :bat[:BAT]):bat[:timestamp] ",	"nil_2time_timestamp;",	""	]
[ "batcalc",	"timestamp",	"pattern batcalc.timestamp(:bat[:timestamp], :bat[:oid], :int):bat[:timestamp] ",	"timestamp_2time_timestamp;",	""	]
[ "batcalc",	"wkb",	"command batcalc.wkb(:bat[:wkb], :int, :int):bat[:wkb] ",	"geom_2_geom_bat;",	""	]
[ "batcalc",	"xml",	"command batcalc.xml(:bat[:str]):bat[:xml] ",	"BATXMLstr2xml;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:bit], :bat[:bit]):bat[:bit] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:bit], :bat[:bit], :bat[:oid], :bat[:oid]):bat[:bit] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:bit], :bit):bat[:bit] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:bit], :bit, :bat[:oid]):bat[:bit] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:bte], :bat[:bte]):bat[:bte] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:bte], :bat[:bte], :bat[:oid], :bat[:oid]):bat[:bte] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:bte], :bte):bat[:bte] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:bte], :bte, :bat[:oid]):bat[:bte] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:dbl], :bat[:dbl]):bat[:dbl] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:dbl], :dbl):bat[:dbl] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:flt], :bat[:flt]):bat[:flt] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:flt], :flt):bat[:flt] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:hge], :bat[:hge]):bat[:hge] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:hge], :bat[:hge], :bat[:oid], :bat[:oid]):bat[:hge] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:hge], :hge):bat[:hge] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:hge], :hge, :bat[:oid]):bat[:hge] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:int], :bat[:int]):bat[:int] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:int], :int):bat[:int] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:int], :int, :bat[:oid]):bat[:int] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:lng], :bat[:lng]):bat[:lng] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:lng], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:lng] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:lng], :lng):bat[:lng] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:lng], :lng, :bat[:oid]):bat[:lng] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:sht], :bat[:sht]):bat[:sht] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:sht], :bat[:sht], :bat[:oid], :bat[:oid]):bat[:sht] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:sht], :sht):bat[:sht] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bat[:sht], :sht, :bat[:oid]):bat[:sht] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bit, :bat[:bit]):bat[:bit] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bit, :bat[:bit], :bat[:oid]):bat[:bit] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bte, :bat[:bte]):bat[:bte] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:bte, :bat[:bte], :bat[:oid]):bat[:bte] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:dbl, :bat[:dbl]):bat[:dbl] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:flt, :bat[:flt]):bat[:flt] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:hge, :bat[:hge]):bat[:hge] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:hge, :bat[:hge], :bat[:oid]):bat[:hge] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:int, :bat[:int]):bat[:int] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:int, :bat[:int], :bat[:oid]):bat[:int] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:lng, :bat[:lng]):bat[:lng] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:lng, :bat[:lng], :bat[:oid]):bat[:lng] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:sht, :bat[:sht]):bat[:sht] ",	"CMDbatXOR;",	""	]
[ "batcalc",	"xor",	"pattern batcalc.xor(:sht, :bat[:sht], :bat[:oid]):bat[:sht] ",	"CMDbatXOR;",	""	]
[ "batcapi",	"eval",	"pattern batcapi.eval(:ptr, :bit, :str, :any...):any... ",	"CUDFevalStd;",	""	]
[ "batcapi",	"eval_aggr",	"pattern batcapi.eval_aggr(:ptr, :bit, :str, :any...):any... ",	"CUDFevalAggr;",	""	]
[ "batcapi",	"subeval_aggr",	"pattern batcapi.subeval_aggr(:ptr, :bit, :str, :any...):any... ",	"CUDFevalAggr;",	""	]
[ "batcolor",	"blue",	"command batcolor.blue(:bat[:color]):bat[:int] ",	"CLRbatBlue;",	""	]
[ "batcolor",	"cb",	"command batcolor.cb(:bat[:color]):bat[:int] ",	"CLRbatCb;",	""	]
[ "batcolor",	"color",	"command batcolor.color(:bat[:str]):bat[:color] ",	"CLRbatColor;",	""	]
[ "batcolor",	"cr",	"command batcolor.cr(:bat[:color]):bat[:int] ",	"CLRbatCr;",	""	]
[ "batcolor",	"green",	"command batcolor.green(:bat[:color]):bat[:int] ",	"CLRbatGreen;",	""	]
[ "batcolor",	"hsv",	"command batcolor.hsv(:bat[:flt], :bat[:flt], :bat[:flt]):bat[:color] ",	"CLRbatHsv;",	""	]
[ "batcolor",	"hue",	"command batcolor.hue(:bat[:color]):bat[:flt] ",	"CLRbatHue;",	""	]
[ "batcolor",	"hue",	"command batcolor.hue(:bat[:color]):bat[:int] ",	"CLRbatHueInt;",	""	]
[ "batcolor",	"luminance",	"command batcolor.luminance(:bat[:color]):bat[:int] ",	"CLRbatLuminance;",	""	]
[ "batcolor",	"red",	"command batcolor.red(:bat[:color]):bat[:int] ",	"CLRbatRed;",	""	]
[ "batcolor",	"rgb",	"command batcolor.rgb(:bat[:int], :bat[:int], :bat[:int]):bat[:color] ",	"CLRbatRgb;",	""	]
[ "batcolor",	"saturation",	"command batcolor.saturation(:bat[:color]):bat[:flt] ",	"CLRbatSaturation;",	""	]
[ "batcolor",	"saturation",	"command batcolor.saturation(:bat[:color]):bat[:int] ",	"CLRbatSaturationInt;",	""	]
[ "batcolor",	"str",	"command batcolor.str(:bat[:color]):bat[:str] ",	"CLRbatStr;",	""	]
[ "batcolor",	"value",	"command batcolor.value(:bat[:color]):bat[:flt] ",	"CLRbatValue;",	""	]
[ "batcolor",	"value",	"command batcolor.value(:bat[:color]):bat[:int] ",	"CLRbatValueInt;",	""	]
[ "batcolor",	"ycc",	"command batcolor.ycc(:bat[:flt], :bat[:flt], :bat[:flt]):bat[:color] ",	"CLRbatycc;",	""	]
[ "batgeom",	"AsEWKT",	"function batgeom.AsEWKT(w:bat[:wkb]):bat[:str];",	"",	""	]
[ "batgeom",	"AsText",	"function batgeom.AsText(w:bat[:wkb]):bat[:str];",	"",	""	]
[ "batgeom",	"Boundary",	"command batgeom.Boundary(:bat[:wkb]):bat[:wkb] ",	"wkbBoundary_bat;",	""	]
[ "batgeom",	"Contains",	"command batgeom.Contains(:bat[:wkb], :bat[:wkb]):bat[:bit] ",	"wkbContains_bat;",	""	]
[ "batgeom",	"Contains",	"command batgeom.Contains(:bat[:wkb], :wkb):bat[:bit] ",	"wkbContains_bat_geom;",	""	]
[ "batgeom",	"Contains",	"command batgeom.Contains(:wkb, :bat[:wkb]):bat[:bit] ",	"wkbContains_geom_bat;",	""	]
[ "batgeom",	"Dimension",	"command batgeom.Dimension(:bat[:wkb]):bat[:int] ",	"wkbDimension_bat;",	""	]
[ "batgeom",	"Distance",	"command batgeom.Distance(:bat[:wkb], :bat[:wkb]):bat[:dbl] ",	"wkbDistance_bat;",	""	]
[ "batgeom",	"Distance",	"command batgeom.Distance(:bat[:wkb], :wkb):bat[:dbl] ",	"wkbDistance_bat_geom;",	""	]
[ "batgeom",	"Distance",	"command batgeom.Distance(:wkb, :bat[:wkb]):bat[:dbl] ",	"wkbDistance_geom_bat;",	""	]
[ "batgeom",	"Filter",	"command batgeom.Filter(:bat[:wkb], :wkb):bat[:wkb] ",	"wkbFilter_bat_geom;",	""	]
[ "batgeom",	"Filter",	"command batgeom.Filter(:wkb, :bat[:wkb]):bat[:wkb] ",	"wkbFilter_geom_bat;",	""	]
[ "batgeom",	"FromText",	"command batgeom.FromText(:bat[:str], :int, :int):bat[:wkb] ",	"wkbFromText_bat;",	""	]
[ "batgeom",	"GeomCollFromText",	"function batgeom.GeomCollFromText(wkt:bat[:str]):bat[:wkb];",	"",	""	]
[ "batgeom",	"GeomCollFromText",	"function batgeom.GeomCollFromText(wkt:bat[:str], srid:int):bat[:wkb];",	"",	""	]
[ "batgeom",	"GeomFromText",	"function batgeom.GeomFromText(wkt:bat[:str]):bat[:wkb];",	"",	""	]
[ "batgeom",	"GeomFromText",	"function batgeom.GeomFromText(wkt:bat[:str], srid:int):bat[:wkb];",	"",	""	]
[ "batgeom",	"GeometryN",	"command batgeom.GeometryN(:bat[:wkb], :int):bat[:wkb] ",	"wkbGeometryN_bat;",	""	]
[ "batgeom",	"GeometryType",	"command batgeom.GeometryType(:bat[:wkb], :int):bat[:str] ",	"wkbGeometryType_bat;",	""	]
[ "batgeom",	"GeometryType1",	"function batgeom.GeometryType1(w:bat[:wkb]):bat[:str];",	"",	""	]
[ "batgeom",	"GeometryType2",	"function batgeom.GeometryType2(w:bat[:wkb]):bat[:str];",	"",	""	]
[ "batgeom",	"GetCoordinate",	"command batgeom.GetCoordinate(:bat[:wkb], :int):bat[:dbl] ",	"wkbGetCoordinate_bat;",	""	]
[ "batgeom",	"IsClosed",	"command batgeom.IsClosed(:bat[:wkb]):bat[:bit] ",	"wkbIsClosed_bat;",	""	]
[ "batgeom",	"IsEmpty",	"command batgeom.IsEmpty(:bat[:wkb]):bat[:bit] ",	"wkbIsEmpty_bat;",	""	]
[ "batgeom",	"IsRing",	"command batgeom.IsRing(:bat[:wkb]):bat[:bit] ",	"wkbIsRing_bat;",	""	]
[ "batgeom",	"IsSimple",	"command batgeom.IsSimple(:bat[:wkb]):bat[:bit] ",	"wkbIsSimple_bat;",	""	]
[ "batgeom",	"IsValid",	"command batgeom.IsValid(:bat[:wkb]):bat[:bit] ",	"wkbIsValid_bat;",	""	]
[ "batgeom",	"LineFromText",	"function batgeom.LineFromText(wkt:bat[:str]):bat[:wkb];",	"",	""	]
[ "batgeom",	"LineFromText",	"function batgeom.LineFromText(wkt:bat[:str], srid:int):bat[:wkb];",	"",	""	]
[ "batgeom",	"MLineFromText",	"function batgeom.MLineFromText(wkt:bat[:str]):bat[:wkb];",	"",	""	]
[ "batgeom",	"MLineFromText",	"function batgeom.MLineFromText(wkt:bat[:str], srid:int):bat[:wkb];",	"",	""	]
[ "batgeom",	"MPointFromText",	"function batgeom.MPointFromText(wkt:bat[:str]):bat[:wkb];",	"",	""	]
[ "batgeom",	"MPointFromText",	"function batgeom.MPointFromText(wkt:bat[:str], srid:int):bat[:wkb];",	"",	""	]
[ "batgeom",	"MPolyFromText",	"function batgeom.MPolyFromText(wkt:bat[:str]):bat[:wkb];",	"",	""	]
[ "batgeom",	"MPolyFromText",	"function batgeom.MPolyFromText(wkt:bat[:str], srid:int):bat[:wkb];",	"",	""	]
[ "batgeom",	"MakeBox2D",	"command batgeom.MakeBox2D(:bat[:wkb], :bat[:wkb]):bat[:mbr] ",	"wkbBox2D_bat;",	""	]
[ "batgeom",	"MakeLine",	"command batgeom.MakeLine(:bat[:wkb], :bat[:wkb]):bat[:wkb] ",	"wkbMakeLine_bat;",	""	]
[ "batgeom",	"MakePoint",	"function batgeom.MakePoint(x:bat[:dbl], y:bat[:dbl]):bat[:wkb];",	"",	""	]
[ "batgeom",	"MakePoint",	"function batgeom.MakePoint(x:bat[:dbl], y:bat[:dbl], z:bat[:dbl]):bat[:wkb];",	"",	""	]
[ "batgeom",	"MakePoint",	"function batgeom.MakePoint(x:bat[:dbl], y:bat[:dbl], z:bat[:dbl], m:bat[:dbl]):bat[:wkb];",	"",	""	]
[ "batgeom",	"MakePointM",	"function batgeom.MakePointM(x:bat[:dbl], y:bat[:dbl], m:bat[:dbl]):bat[:wkb];",	"",	""	]
[ "batgeom",	"MakePointXYZM",	"command batgeom.MakePointXYZM(:bat[:dbl], :bat[:dbl], :bat[:dbl], :bat[:dbl], :int):bat[:wkb] ",	"wkbMakePoint_bat;",	""	]
[ "batgeom",	"NPoints",	"function batgeom.NPoints(w:bat[:wkb]):bat[:int];",	"",	""	]
[ "batgeom",	"NRings",	"function batgeom.NRings(w:bat[:wkb]):bat[:int];",	"",	""	]
[ "batgeom",	"NumGeometries",	"command batgeom.NumGeometries(:bat[:wkb]):bat[:int] ",	"wkbNumGeometries_bat;",	""	]
[ "batgeom",	"NumInteriorRings",	"function batgeom.NumInteriorRings(w:bat[:wkb]):bat[:int];",	"",	""	]
[ "batgeom",	"NumPoints",	"function batgeom.NumPoints(w:bat[:wkb]):bat[:int];",	"",	""	]
[ "batgeom",	"NumRings",	"command batgeom.NumRings(:bat[:wkb], :int):bat[:int] ",	"wkbNumRings_bat;",	""	]
[ "batgeom",	"PointFromText",	"function batgeom.PointFromText(wkt:bat[:str]):bat[:wkb];",	"",	""	]
[ "batgeom",	"PointFromText",	"function batgeom.PointFromText(wkt:bat[:str], srid:int):bat[:wkb];",	"",	""	]
[ "batgeom",	"PointsNum",	"command batgeom.PointsNum(:bat[:wkb], :int):bat[:int] ",	"wkbNumPoints_bat;",	""	]
[ "batgeom",	"PolygonFromText",	"function batgeom.PolygonFromText(wkt:bat[:str]):bat[:wkb];",	"",	""	]
[ "batgeom",	"PolygonFromText",	"function batgeom.PolygonFromText(wkt:bat[:str], srid:int):bat[:wkb];",	"",	""	]
[ "batgeom",	"ToText",	"command batgeom.ToText(:bat[:wkb], :int):bat[:str] ",	"wkbAsText_bat;",	""	]
[ "batgeom",	"Union",	"command batgeom.Union(:bat[:wkb], :bat[:wkb]):bat[:wkb] ",	"wkbUnion_bat;",	""	]
[ "batgeom",	"X",	"function batgeom.X(w:bat[:wkb]):bat[:dbl];",	"",	""	]
[ "batgeom",	"XMaxFromMBR",	"function batgeom.XMaxFromMBR(b:bat[:mbr]):bat[:dbl];",	"",	""	]
[ "batgeom",	"XMaxFromWKB",	"function batgeom.XMaxFromWKB(g:bat[:wkb]):bat[:dbl];",	"",	""	]
[ "batgeom",	"XMinFromMBR",	"function batgeom.XMinFromMBR(b:bat[:mbr]):bat[:dbl];",	"",	""	]
[ "batgeom",	"XMinFromWKB",	"function batgeom.XMinFromWKB(g:bat[:wkb]):bat[:dbl];",	"",	""	]
[ "batgeom",	"Y",	"function batgeom.Y(w:bat[:wkb]):bat[:dbl];",	"",	""	]
[ "batgeom",	"YMaxFromMBR",	"function batgeom.YMaxFromMBR(b:bat[:mbr]):bat[:dbl];",	"",	""	]
[ "batgeom",	"YMaxFromWKB",	"function batgeom.YMaxFromWKB(g:bat[:wkb]):bat[:dbl];",	"",	""	]
[ "batgeom",	"YMinFromMBR",	"function batgeom.YMinFromMBR(b:bat[:mbr]):bat[:dbl];",	"",	""	]
[ "batgeom",	"YMinFromWKB",	"function batgeom.YMinFromWKB(g:bat[:wkb]):bat[:dbl];",	"",	""	]
[ "batgeom",	"Z",	"function batgeom.Z(w:bat[:wkb]):bat[:dbl];",	"",	""	]
[ "batgeom",	"coordinateFromMBR",	"command batgeom.coordinateFromMBR(:bat[:mbr], :int):bat[:dbl] ",	"wkbCoordinateFromMBR_bat;",	""	]
[ "batgeom",	"coordinateFromWKB",	"command batgeom.coordinateFromWKB(:bat[:wkb], :int):bat[:dbl] ",	"wkbCoordinateFromWKB_bat;",	""	]
[ "batgeom",	"mbr",	"command batgeom.mbr(:bat[:wkb]):bat[:mbr] ",	"wkbMBR_bat;",	""	]
[ "batgeom",	"setSRID",	"command batgeom.setSRID(:bat[:wkb], :int):bat[:wkb] ",	"wkbSetSRID_bat;",	""	]
[ "batmal",	"multiplex",	"pattern batmal.multiplex(:str, :str, :any...):any... ",	"MANIFOLDremapMultiplex;",	""	]
[ "batmkey",	"hash",	"command batmkey.hash(:bat[:any_1]):bat[:lng] ",	"MKEYbathash;",	""	]
[ "batmmath",	"acos",	"pattern batmmath.acos(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_acos;",	""	]
[ "batmmath",	"acos",	"pattern batmmath.acos(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_acos;",	""	]
[ "batmmath",	"acos",	"pattern batmmath.acos(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_acos;",	""	]
[ "batmmath",	"acos",	"pattern batmmath.acos(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_acos;",	""	]
[ "batmmath",	"asin",	"pattern batmmath.asin(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_asin;",	""	]
[ "batmmath",	"asin",	"pattern batmmath.asin(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_asin;",	""	]
[ "batmmath",	"asin",	"pattern batmmath.asin(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_asin;",	""	]
[ "batmmath",	"asin",	"pattern batmmath.asin(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_asin;",	""	]
[ "batmmath",	"atan",	"pattern batmmath.atan(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_atan;",	""	]
[ "batmmath",	"atan",	"pattern batmmath.atan(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_atan;",	""	]
[ "batmmath",	"atan",	"pattern batmmath.atan(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_atan;",	""	]
[ "batmmath",	"atan",	"pattern batmmath.atan(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_atan;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:bat[:dbl], :bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:bat[:dbl], :dbl):bat[:dbl] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:bat[:flt], :bat[:flt]):bat[:flt] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:bat[:flt], :flt):bat[:flt] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:dbl, :bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:flt, :bat[:flt]):bat[:flt] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"atan2",	"pattern batmmath.atan2(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_atan2;",	""	]
[ "batmmath",	"cbrt",	"pattern batmmath.cbrt(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_cbrt;",	""	]
[ "batmmath",	"cbrt",	"pattern batmmath.cbrt(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_cbrt;",	""	]
[ "batmmath",	"cbrt",	"pattern batmmath.cbrt(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_cbrt;",	""	]
[ "batmmath",	"cbrt",	"pattern batmmath.cbrt(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_cbrt;",	""	]
[ "batmmath",	"ceil",	"pattern batmmath.ceil(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_ceil;",	""	]
[ "batmmath",	"ceil",	"pattern batmmath.ceil(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_ceil;",	""	]
[ "batmmath",	"ceil",	"pattern batmmath.ceil(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_ceil;",	""	]
[ "batmmath",	"ceil",	"pattern batmmath.ceil(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_ceil;",	""	]
[ "batmmath",	"cos",	"pattern batmmath.cos(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_cos;",	""	]
[ "batmmath",	"cos",	"pattern batmmath.cos(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_cos;",	""	]
[ "batmmath",	"cos",	"pattern batmmath.cos(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_cos;",	""	]
[ "batmmath",	"cos",	"pattern batmmath.cos(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_cos;",	""	]
[ "batmmath",	"cosh",	"pattern batmmath.cosh(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_cosh;",	""	]
[ "batmmath",	"cosh",	"pattern batmmath.cosh(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_cosh;",	""	]
[ "batmmath",	"cosh",	"pattern batmmath.cosh(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_cosh;",	""	]
[ "batmmath",	"cosh",	"pattern batmmath.cosh(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_cosh;",	""	]
[ "batmmath",	"cot",	"pattern batmmath.cot(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_cot;",	""	]
[ "batmmath",	"cot",	"pattern batmmath.cot(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_cot;",	""	]
[ "batmmath",	"cot",	"pattern batmmath.cot(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_cot;",	""	]
[ "batmmath",	"cot",	"pattern batmmath.cot(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_cot;",	""	]
[ "batmmath",	"degrees",	"pattern batmmath.degrees(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_degrees;",	""	]
[ "batmmath",	"degrees",	"pattern batmmath.degrees(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_degrees;",	""	]
[ "batmmath",	"degrees",	"pattern batmmath.degrees(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_degrees;",	""	]
[ "batmmath",	"degrees",	"pattern batmmath.degrees(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_degrees;",	""	]
[ "batmmath",	"exp",	"pattern batmmath.exp(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_exp;",	""	]
[ "batmmath",	"exp",	"pattern batmmath.exp(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_exp;",	""	]
[ "batmmath",	"exp",	"pattern batmmath.exp(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_exp;",	""	]
[ "batmmath",	"exp",	"pattern batmmath.exp(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_exp;",	""	]
[ "batmmath",	"fabs",	"pattern batmmath.fabs(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_fabs;",	""	]
[ "batmmath",	"fabs",	"pattern batmmath.fabs(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_fabs;",	""	]
[ "batmmath",	"fabs",	"pattern batmmath.fabs(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_fabs;",	""	]
[ "batmmath",	"fabs",	"pattern batmmath.fabs(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_fabs;",	""	]
[ "batmmath",	"floor",	"pattern batmmath.floor(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_floor;",	""	]
[ "batmmath",	"floor",	"pattern batmmath.floor(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_floor;",	""	]
[ "batmmath",	"floor",	"pattern batmmath.floor(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_floor;",	""	]
[ "batmmath",	"floor",	"pattern batmmath.floor(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_floor;",	""	]
[ "batmmath",	"fmod",	"pattern batmmath.fmod(:bat[:dbl], :dbl):bat[:dbl] ",	"CMDbatMODsignal;",	""	]
[ "batmmath",	"fmod",	"pattern batmmath.fmod(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDbatMODsignal;",	""	]
[ "batmmath",	"fmod",	"pattern batmmath.fmod(:bat[:flt], :flt):bat[:flt] ",	"CMDbatMODsignal;",	""	]
[ "batmmath",	"fmod",	"pattern batmmath.fmod(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDbatMODsignal;",	""	]
[ "batmmath",	"log",	"pattern batmmath.log(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_log;",	""	]
[ "batmmath",	"log",	"pattern batmmath.log(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_log;",	""	]
[ "batmmath",	"log",	"pattern batmmath.log(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_log;",	""	]
[ "batmmath",	"log",	"pattern batmmath.log(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_log;",	""	]
[ "batmmath",	"log10",	"pattern batmmath.log10(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_log10;",	""	]
[ "batmmath",	"log10",	"pattern batmmath.log10(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_log10;",	""	]
[ "batmmath",	"log10",	"pattern batmmath.log10(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_log10;",	""	]
[ "batmmath",	"log10",	"pattern batmmath.log10(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_log10;",	""	]
[ "batmmath",	"log2",	"pattern batmmath.log2(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_log2;",	""	]
[ "batmmath",	"log2",	"pattern batmmath.log2(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_log2;",	""	]
[ "batmmath",	"log2",	"pattern batmmath.log2(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_log2;",	""	]
[ "batmmath",	"log2",	"pattern batmmath.log2(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_log2;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:bat[:dbl], :bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:bat[:dbl], :dbl):bat[:dbl] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:bat[:flt], :bat[:flt]):bat[:flt] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:bat[:flt], :flt):bat[:flt] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:dbl, :bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:flt, :bat[:flt]):bat[:flt] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"log2arg",	"pattern batmmath.log2arg(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_logbs;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:bat[:dbl], :bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:bat[:dbl], :bat[:dbl], :bat[:oid], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:bat[:dbl], :dbl):bat[:dbl] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:bat[:dbl], :dbl, :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:bat[:flt], :bat[:flt]):bat[:flt] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:bat[:flt], :bat[:flt], :bat[:oid], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:bat[:flt], :flt):bat[:flt] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:bat[:flt], :flt, :bat[:oid]):bat[:flt] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:dbl, :bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:dbl, :bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:flt, :bat[:flt]):bat[:flt] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"pow",	"pattern batmmath.pow(:flt, :bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_pow;",	""	]
[ "batmmath",	"radians",	"pattern batmmath.radians(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_radians;",	""	]
[ "batmmath",	"radians",	"pattern batmmath.radians(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_radians;",	""	]
[ "batmmath",	"radians",	"pattern batmmath.radians(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_radians;",	""	]
[ "batmmath",	"radians",	"pattern batmmath.radians(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_radians;",	""	]
[ "batmmath",	"rand",	"unsafe pattern batmmath.rand(:bat[:int]):bat[:int] ",	"CMDscience_bat_randintarg;",	""	]
[ "batmmath",	"rand",	"unsafe pattern batmmath.rand(:bat[:int], :bat[:oid]):bat[:int] ",	"CMDscience_bat_randintarg;",	""	]
[ "batmmath",	"sin",	"pattern batmmath.sin(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_sin;",	""	]
[ "batmmath",	"sin",	"pattern batmmath.sin(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_sin;",	""	]
[ "batmmath",	"sin",	"pattern batmmath.sin(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_sin;",	""	]
[ "batmmath",	"sin",	"pattern batmmath.sin(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_sin;",	""	]
[ "batmmath",	"sinh",	"pattern batmmath.sinh(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_sinh;",	""	]
[ "batmmath",	"sinh",	"pattern batmmath.sinh(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_sinh;",	""	]
[ "batmmath",	"sinh",	"pattern batmmath.sinh(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_sinh;",	""	]
[ "batmmath",	"sinh",	"pattern batmmath.sinh(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_sinh;",	""	]
[ "batmmath",	"sqrt",	"pattern batmmath.sqrt(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_sqrt;",	""	]
[ "batmmath",	"sqrt",	"pattern batmmath.sqrt(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_sqrt;",	""	]
[ "batmmath",	"sqrt",	"pattern batmmath.sqrt(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_sqrt;",	""	]
[ "batmmath",	"sqrt",	"pattern batmmath.sqrt(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_sqrt;",	""	]
[ "batmmath",	"tan",	"pattern batmmath.tan(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_tan;",	""	]
[ "batmmath",	"tan",	"pattern batmmath.tan(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_tan;",	""	]
[ "batmmath",	"tan",	"pattern batmmath.tan(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_tan;",	""	]
[ "batmmath",	"tan",	"pattern batmmath.tan(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_tan;",	""	]
[ "batmmath",	"tanh",	"pattern batmmath.tanh(:bat[:dbl]):bat[:dbl] ",	"CMDscience_bat_tanh;",	""	]
[ "batmmath",	"tanh",	"pattern batmmath.tanh(:bat[:dbl], :bat[:oid]):bat[:dbl] ",	"CMDscience_bat_tanh;",	""	]
[ "batmmath",	"tanh",	"pattern batmmath.tanh(:bat[:flt]):bat[:flt] ",	"CMDscience_bat_tanh;",	""	]
[ "batmmath",	"tanh",	"pattern batmmath.tanh(:bat[:flt], :bat[:oid]):bat[:flt] ",	"CMDscience_bat_tanh;",	""	]
[ "batmtime",	"addmonths",	"pattern batmtime.addmonths(:bat[:date], :bat[:int]):bat[:date] ",	"MTIMEdate_addmonths_bulk;",	""	]
[ "batmtime",	"addmonths",	"pattern batmtime.addmonths(:bat[:date], :bat[:int], :bat[:oid], :bat[:oid]):bat[:date] ",	"MTIMEdate_addmonths_bulk;",	""	]
[ "batmtime",	"addmonths",	"pattern batmtime.addmonths(:date, :bat[:int]):bat[:date] ",	"MTIMEdate_addmonths_bulk_p1;",	""	]
[ "batmtime",	"addmonths",	"pattern batmtime.addmonths(:date, :bat[:int], :bat[:oid]):bat[:date] ",	"MTIMEdate_addmonths_bulk_p1;",	""	]
[ "batmtime",	"addmonths",	"pattern batmtime.addmonths(:bat[:date], :int):bat[:date] ",	"MTIMEdate_addmonths_bulk_p2;",	""	]
[ "batmtime",	"addmonths",	"pattern batmtime.addmonths(:bat[:date], :int, :bat[:oid]):bat[:date] ",	"MTIMEdate_addmonths_bulk_p2;",	""	]
[ "batmtime",	"century",	"pattern batmtime.century(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_century_bulk;",	""	]
[ "batmtime",	"century",	"pattern batmtime.century(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_century_bulk;",	""	]
[ "batmtime",	"century",	"pattern batmtime.century(:bat[:timestamp]):bat[:int] ",	"MTIMEtimestamp_century_bulk;",	""	]
[ "batmtime",	"century",	"pattern batmtime.century(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEtimestamp_century_bulk;",	""	]
[ "batmtime",	"date_add_msec_interval",	"pattern batmtime.date_add_msec_interval(:bat[:date], :bat[:lng]):bat[:date] ",	"MTIMEdate_add_msec_interval_bulk;",	""	]
[ "batmtime",	"date_add_msec_interval",	"pattern batmtime.date_add_msec_interval(:bat[:date], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:date] ",	"MTIMEdate_add_msec_interval_bulk;",	""	]
[ "batmtime",	"date_add_msec_interval",	"pattern batmtime.date_add_msec_interval(:date, :bat[:lng]):bat[:date] ",	"MTIMEdate_add_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"date_add_msec_interval",	"pattern batmtime.date_add_msec_interval(:date, :bat[:lng], :bat[:oid]):bat[:date] ",	"MTIMEdate_add_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"date_add_msec_interval",	"pattern batmtime.date_add_msec_interval(:bat[:date], :lng):bat[:date] ",	"MTIMEdate_add_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"date_add_msec_interval",	"pattern batmtime.date_add_msec_interval(:bat[:date], :lng, :bat[:oid]):bat[:date] ",	"MTIMEdate_add_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"date_sub_month_interval",	"pattern batmtime.date_sub_month_interval(:bat[:date], :bat[:int]):bat[:date] ",	"MTIMEdate_submonths_bulk;",	""	]
[ "batmtime",	"date_sub_month_interval",	"pattern batmtime.date_sub_month_interval(:bat[:date], :bat[:int], :bat[:oid], :bat[:oid]):bat[:date] ",	"MTIMEdate_submonths_bulk;",	""	]
[ "batmtime",	"date_sub_month_interval",	"pattern batmtime.date_sub_month_interval(:date, :bat[:int]):bat[:date] ",	"MTIMEdate_submonths_bulk_p1;",	""	]
[ "batmtime",	"date_sub_month_interval",	"pattern batmtime.date_sub_month_interval(:date, :bat[:int], :bat[:oid]):bat[:date] ",	"MTIMEdate_submonths_bulk_p1;",	""	]
[ "batmtime",	"date_sub_month_interval",	"pattern batmtime.date_sub_month_interval(:bat[:date], :int):bat[:date] ",	"MTIMEdate_submonths_bulk_p2;",	""	]
[ "batmtime",	"date_sub_month_interval",	"pattern batmtime.date_sub_month_interval(:bat[:date], :int, :bat[:oid]):bat[:date] ",	"MTIMEdate_submonths_bulk_p2;",	""	]
[ "batmtime",	"date_sub_msec_interval",	"pattern batmtime.date_sub_msec_interval(:bat[:date], :bat[:lng]):bat[:date] ",	"MTIMEdate_sub_msec_interval_bulk;",	""	]
[ "batmtime",	"date_sub_msec_interval",	"pattern batmtime.date_sub_msec_interval(:bat[:date], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:date] ",	"MTIMEdate_sub_msec_interval_bulk;",	""	]
[ "batmtime",	"date_sub_msec_interval",	"pattern batmtime.date_sub_msec_interval(:date, :bat[:lng]):bat[:date] ",	"MTIMEdate_sub_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"date_sub_msec_interval",	"pattern batmtime.date_sub_msec_interval(:date, :bat[:lng], :bat[:oid]):bat[:date] ",	"MTIMEdate_sub_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"date_sub_msec_interval",	"pattern batmtime.date_sub_msec_interval(:bat[:date], :lng):bat[:date] ",	"MTIMEdate_sub_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"date_sub_msec_interval",	"pattern batmtime.date_sub_msec_interval(:bat[:date], :lng, :bat[:oid]):bat[:date] ",	"MTIMEdate_sub_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"date_to_str",	"pattern batmtime.date_to_str(:bat[:str], :bat[:str]):bat[:str] ",	"MTIMEdate_to_str_bulk;",	""	]
[ "batmtime",	"date_to_str",	"pattern batmtime.date_to_str(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:str] ",	"MTIMEdate_to_str_bulk;",	""	]
[ "batmtime",	"date_to_str",	"pattern batmtime.date_to_str(:date, :bat[:str]):bat[:str] ",	"MTIMEdate_to_str_bulk_p1;",	""	]
[ "batmtime",	"date_to_str",	"pattern batmtime.date_to_str(:date, :bat[:str], :bat[:oid]):bat[:str] ",	"MTIMEdate_to_str_bulk_p1;",	""	]
[ "batmtime",	"date_to_str",	"pattern batmtime.date_to_str(:bat[:date], :str):bat[:str] ",	"MTIMEdate_to_str_bulk_p2;",	""	]
[ "batmtime",	"date_to_str",	"pattern batmtime.date_to_str(:bat[:date], :str, :bat[:oid]):bat[:str] ",	"MTIMEdate_to_str_bulk_p2;",	""	]
[ "batmtime",	"day",	"pattern batmtime.day(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_day_bulk;",	""	]
[ "batmtime",	"day",	"pattern batmtime.day(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_day_bulk;",	""	]
[ "batmtime",	"day",	"pattern batmtime.day(:bat[:lng]):bat[:lng] ",	"MTIMEsql_day_bulk;",	""	]
[ "batmtime",	"day",	"pattern batmtime.day(:bat[:lng], :bat[:oid]):bat[:lng] ",	"MTIMEsql_day_bulk;",	""	]
[ "batmtime",	"day",	"pattern batmtime.day(:bat[:timestamp]):bat[:int] ",	"MTIMEtimestamp_day_bulk;",	""	]
[ "batmtime",	"day",	"pattern batmtime.day(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEtimestamp_day_bulk;",	""	]
[ "batmtime",	"dayofweek",	"pattern batmtime.dayofweek(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_dayofweek_bulk;",	""	]
[ "batmtime",	"dayofweek",	"pattern batmtime.dayofweek(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_dayofweek_bulk;",	""	]
[ "batmtime",	"dayofyear",	"pattern batmtime.dayofyear(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_dayofyear_bulk;",	""	]
[ "batmtime",	"dayofyear",	"pattern batmtime.dayofyear(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_dayofyear_bulk;",	""	]
[ "batmtime",	"decade",	"pattern batmtime.decade(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_decade_bulk;",	""	]
[ "batmtime",	"decade",	"pattern batmtime.decade(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_decade_bulk;",	""	]
[ "batmtime",	"decade",	"pattern batmtime.decade(:bat[:timestamp]):bat[:int] ",	"MTIMEtimestamp_decade_bulk;",	""	]
[ "batmtime",	"decade",	"pattern batmtime.decade(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEtimestamp_decade_bulk;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:date], :bat[:date]):bat[:lng] ",	"MTIMEdate_diff_bulk;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:date], :bat[:date], :bat[:oid], :bat[:oid]):bat[:lng] ",	"MTIMEdate_diff_bulk;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:date, :bat[:date]):bat[:lng] ",	"MTIMEdate_diff_bulk_p1;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:date, :bat[:date], :bat[:oid]):bat[:lng] ",	"MTIMEdate_diff_bulk_p1;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:date], :date):bat[:lng] ",	"MTIMEdate_diff_bulk_p2;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:date], :date, :bat[:oid]):bat[:lng] ",	"MTIMEdate_diff_bulk_p2;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:daytime], :bat[:daytime]):bat[:lng] ",	"MTIMEdaytime_diff_msec_bulk;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:daytime], :bat[:daytime], :bat[:oid], :bat[:oid]):bat[:lng] ",	"MTIMEdaytime_diff_msec_bulk;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:daytime, :bat[:daytime]):bat[:lng] ",	"MTIMEdaytime_diff_msec_bulk_p1;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:daytime, :bat[:daytime], :bat[:oid]):bat[:lng] ",	"MTIMEdaytime_diff_msec_bulk_p1;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:daytime], :daytime):bat[:lng] ",	"MTIMEdaytime_diff_msec_bulk_p2;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:daytime], :daytime, :bat[:oid]):bat[:lng] ",	"MTIMEdaytime_diff_msec_bulk_p2;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:timestamp], :bat[:timestamp]):bat[:lng] ",	"MTIMEtimestamp_diff_msec_bulk;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:timestamp], :bat[:timestamp], :bat[:oid], :bat[:oid]):bat[:lng] ",	"MTIMEtimestamp_diff_msec_bulk;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:timestamp, :bat[:timestamp]):bat[:lng] ",	"MTIMEtimestamp_diff_msec_bulk_p1;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:timestamp, :bat[:timestamp], :bat[:oid]):bat[:lng] ",	"MTIMEtimestamp_diff_msec_bulk_p1;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:timestamp], :timestamp):bat[:lng] ",	"MTIMEtimestamp_diff_msec_bulk_p2;",	""	]
[ "batmtime",	"diff",	"pattern batmtime.diff(:bat[:timestamp], :timestamp, :bat[:oid]):bat[:lng] ",	"MTIMEtimestamp_diff_msec_bulk_p2;",	""	]
[ "batmtime",	"epoch",	"pattern batmtime.epoch(:bat[:timestamp]):bat[:int] ",	"MTIMEseconds_since_epoch_bulk;",	""	]
[ "batmtime",	"epoch",	"pattern batmtime.epoch(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEseconds_since_epoch_bulk;",	""	]
[ "batmtime",	"epoch",	"pattern batmtime.epoch(:bat[:lng]):bat[:timestamp] ",	"MTIMEtimestamp_frommsec_epoch_bulk;",	""	]
[ "batmtime",	"epoch",	"pattern batmtime.epoch(:bat[:int]):bat[:timestamp] ",	"MTIMEtimestamp_fromsecond_epoch_bulk;",	""	]
[ "batmtime",	"epoch",	"pattern batmtime.epoch(:bat[:int], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_fromsecond_epoch_bulk;",	""	]
[ "batmtime",	"epoch_ms",	"pattern batmtime.epoch_ms(:bat[:date]):bat[:lng] ",	"MTIMEdate_extract_epoch_ms_bulk;",	""	]
[ "batmtime",	"epoch_ms",	"pattern batmtime.epoch_ms(:bat[:date], :bat[:oid]):bat[:lng] ",	"MTIMEdate_extract_epoch_ms_bulk;",	""	]
[ "batmtime",	"epoch_ms",	"pattern batmtime.epoch_ms(:bat[:daytime]):bat[:lng] ",	"MTIMEdaytime_extract_epoch_ms_bulk;",	""	]
[ "batmtime",	"epoch_ms",	"pattern batmtime.epoch_ms(:bat[:daytime], :bat[:oid]):bat[:lng] ",	"MTIMEdaytime_extract_epoch_ms_bulk;",	""	]
[ "batmtime",	"epoch_ms",	"pattern batmtime.epoch_ms(:bat[:lng]):bat[:lng] ",	"MTIMEmsec_extract_epoch_ms_bulk;",	""	]
[ "batmtime",	"epoch_ms",	"pattern batmtime.epoch_ms(:bat[:lng], :bat[:oid]):bat[:lng] ",	"MTIMEmsec_extract_epoch_ms_bulk;",	""	]
[ "batmtime",	"epoch_ms",	"pattern batmtime.epoch_ms(:bat[:timestamp]):bat[:lng] ",	"MTIMEtimestamp_extract_epoch_ms_bulk;",	""	]
[ "batmtime",	"epoch_ms",	"pattern batmtime.epoch_ms(:bat[:timestamp], :bat[:oid]):bat[:lng] ",	"MTIMEtimestamp_extract_epoch_ms_bulk;",	""	]
[ "batmtime",	"hours",	"pattern batmtime.hours(:bat[:daytime]):bat[:int] ",	"MTIMEdaytime_extract_hours_bulk;",	""	]
[ "batmtime",	"hours",	"pattern batmtime.hours(:bat[:daytime], :bat[:oid]):bat[:int] ",	"MTIMEdaytime_extract_hours_bulk;",	""	]
[ "batmtime",	"hours",	"pattern batmtime.hours(:bat[:lng]):bat[:int] ",	"MTIMEsql_hours_bulk;",	""	]
[ "batmtime",	"hours",	"pattern batmtime.hours(:bat[:lng], :bat[:oid]):bat[:int] ",	"MTIMEsql_hours_bulk;",	""	]
[ "batmtime",	"hours",	"pattern batmtime.hours(:bat[:timestamp]):bat[:int] ",	"MTIMEtimestamp_hours_bulk;",	""	]
[ "batmtime",	"hours",	"pattern batmtime.hours(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEtimestamp_hours_bulk;",	""	]
[ "batmtime",	"minutes",	"pattern batmtime.minutes(:bat[:daytime]):bat[:int] ",	"MTIMEdaytime_extract_minutes_bulk;",	""	]
[ "batmtime",	"minutes",	"pattern batmtime.minutes(:bat[:daytime], :bat[:oid]):bat[:int] ",	"MTIMEdaytime_extract_minutes_bulk;",	""	]
[ "batmtime",	"minutes",	"pattern batmtime.minutes(:bat[:lng]):bat[:int] ",	"MTIMEsql_minutes_bulk;",	""	]
[ "batmtime",	"minutes",	"pattern batmtime.minutes(:bat[:lng], :bat[:oid]):bat[:int] ",	"MTIMEsql_minutes_bulk;",	""	]
[ "batmtime",	"minutes",	"pattern batmtime.minutes(:bat[:timestamp]):bat[:int] ",	"MTIMEtimestamp_minutes_bulk;",	""	]
[ "batmtime",	"minutes",	"pattern batmtime.minutes(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEtimestamp_minutes_bulk;",	""	]
[ "batmtime",	"month",	"pattern batmtime.month(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_month_bulk;",	""	]
[ "batmtime",	"month",	"pattern batmtime.month(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_month_bulk;",	""	]
[ "batmtime",	"month",	"pattern batmtime.month(:bat[:int]):bat[:int] ",	"MTIMEsql_month_bulk;",	""	]
[ "batmtime",	"month",	"pattern batmtime.month(:bat[:int], :bat[:oid]):bat[:int] ",	"MTIMEsql_month_bulk;",	""	]
[ "batmtime",	"month",	"pattern batmtime.month(:bat[:timestamp]):bat[:int] ",	"MTIMEtimestamp_month_bulk;",	""	]
[ "batmtime",	"month",	"pattern batmtime.month(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEtimestamp_month_bulk;",	""	]
[ "batmtime",	"quarter",	"pattern batmtime.quarter(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_quarter_bulk;",	""	]
[ "batmtime",	"quarter",	"pattern batmtime.quarter(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_quarter_bulk;",	""	]
[ "batmtime",	"quarter",	"pattern batmtime.quarter(:bat[:timestamp]):bat[:int] ",	"MTIMEtimestamp_quarter_bulk;",	""	]
[ "batmtime",	"quarter",	"pattern batmtime.quarter(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEtimestamp_quarter_bulk;",	""	]
[ "batmtime",	"seconds",	"pattern batmtime.seconds(:bat[:lng]):bat[:int] ",	"MTIMEsql_seconds_bulk;",	""	]
[ "batmtime",	"seconds",	"pattern batmtime.seconds(:bat[:lng], :bat[:oid]):bat[:int] ",	"MTIMEsql_seconds_bulk;",	""	]
[ "batmtime",	"sql_seconds",	"pattern batmtime.sql_seconds(:bat[:daytime]):bat[:int] ",	"MTIMEdaytime_extract_sql_seconds_bulk;",	""	]
[ "batmtime",	"sql_seconds",	"pattern batmtime.sql_seconds(:bat[:daytime], :bat[:oid]):bat[:int] ",	"MTIMEdaytime_extract_sql_seconds_bulk;",	""	]
[ "batmtime",	"sql_seconds",	"pattern batmtime.sql_seconds(:bat[:timestamp]):bat[:int] ",	"MTIMEtimestamp_sql_seconds_bulk;",	""	]
[ "batmtime",	"sql_seconds",	"pattern batmtime.sql_seconds(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEtimestamp_sql_seconds_bulk;",	""	]
[ "batmtime",	"str_to_date",	"pattern batmtime.str_to_date(:bat[:str], :bat[:str]):bat[:date] ",	"MTIMEstr_to_date_bulk;",	""	]
[ "batmtime",	"str_to_date",	"pattern batmtime.str_to_date(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:date] ",	"MTIMEstr_to_date_bulk;",	""	]
[ "batmtime",	"str_to_date",	"pattern batmtime.str_to_date(:str, :bat[:str]):bat[:date] ",	"MTIMEstr_to_date_bulk_p1;",	""	]
[ "batmtime",	"str_to_date",	"pattern batmtime.str_to_date(:str, :bat[:str], :bat[:oid]):bat[:date] ",	"MTIMEstr_to_date_bulk_p1;",	""	]
[ "batmtime",	"str_to_date",	"pattern batmtime.str_to_date(:bat[:str], :str):bat[:date] ",	"MTIMEstr_to_date_bulk_p2;",	""	]
[ "batmtime",	"str_to_date",	"pattern batmtime.str_to_date(:bat[:str], :str, :bat[:oid]):bat[:date] ",	"MTIMEstr_to_date_bulk_p2;",	""	]
[ "batmtime",	"str_to_time",	"pattern batmtime.str_to_time(:bat[:str], :bat[:str]):bat[:daytime] ",	"MTIMEstr_to_time_bulk;",	""	]
[ "batmtime",	"str_to_time",	"pattern batmtime.str_to_time(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:daytime] ",	"MTIMEstr_to_time_bulk;",	""	]
[ "batmtime",	"str_to_time",	"pattern batmtime.str_to_time(:str, :bat[:str]):bat[:daytime] ",	"MTIMEstr_to_time_bulk_p1;",	""	]
[ "batmtime",	"str_to_time",	"pattern batmtime.str_to_time(:str, :bat[:str], :bat[:oid]):bat[:daytime] ",	"MTIMEstr_to_time_bulk_p1;",	""	]
[ "batmtime",	"str_to_time",	"pattern batmtime.str_to_time(:bat[:str], :str):bat[:daytime] ",	"MTIMEstr_to_time_bulk_p2;",	""	]
[ "batmtime",	"str_to_time",	"pattern batmtime.str_to_time(:bat[:str], :str, :bat[:oid]):bat[:daytime] ",	"MTIMEstr_to_time_bulk_p2;",	""	]
[ "batmtime",	"str_to_timestamp",	"pattern batmtime.str_to_timestamp(:bat[:str], :bat[:str]):bat[:timestamp] ",	"MTIMEstr_to_timestamp_bulk;",	""	]
[ "batmtime",	"str_to_timestamp",	"pattern batmtime.str_to_timestamp(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:timestamp] ",	"MTIMEstr_to_timestamp_bulk;",	""	]
[ "batmtime",	"str_to_timestamp",	"pattern batmtime.str_to_timestamp(:str, :bat[:str]):bat[:timestamp] ",	"MTIMEstr_to_timestamp_bulk_p1;",	""	]
[ "batmtime",	"str_to_timestamp",	"pattern batmtime.str_to_timestamp(:str, :bat[:str], :bat[:oid]):bat[:timestamp] ",	"MTIMEstr_to_timestamp_bulk_p1;",	""	]
[ "batmtime",	"str_to_timestamp",	"pattern batmtime.str_to_timestamp(:bat[:str], :str):bat[:timestamp] ",	"MTIMEstr_to_timestamp_bulk_p2;",	""	]
[ "batmtime",	"str_to_timestamp",	"pattern batmtime.str_to_timestamp(:bat[:str], :str, :bat[:oid]):bat[:timestamp] ",	"MTIMEstr_to_timestamp_bulk_p2;",	""	]
[ "batmtime",	"time_add_msec_interval",	"pattern batmtime.time_add_msec_interval(:bat[:daytime], :bat[:lng]):bat[:daytime] ",	"MTIMEtime_add_msec_interval_bulk;",	""	]
[ "batmtime",	"time_add_msec_interval",	"pattern batmtime.time_add_msec_interval(:bat[:daytime], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:daytime] ",	"MTIMEtime_add_msec_interval_bulk;",	""	]
[ "batmtime",	"time_add_msec_interval",	"pattern batmtime.time_add_msec_interval(:daytime, :bat[:lng]):bat[:daytime] ",	"MTIMEtime_add_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"time_add_msec_interval",	"pattern batmtime.time_add_msec_interval(:daytime, :bat[:lng], :bat[:oid]):bat[:daytime] ",	"MTIMEtime_add_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"time_add_msec_interval",	"pattern batmtime.time_add_msec_interval(:bat[:daytime], :lng):bat[:daytime] ",	"MTIMEtime_add_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"time_add_msec_interval",	"pattern batmtime.time_add_msec_interval(:bat[:daytime], :lng, :bat[:oid]):bat[:daytime] ",	"MTIMEtime_add_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"time_sub_msec_interval",	"pattern batmtime.time_sub_msec_interval(:bat[:daytime], :bat[:lng]):bat[:daytime] ",	"MTIMEtime_sub_msec_interval_bulk;",	""	]
[ "batmtime",	"time_sub_msec_interval",	"pattern batmtime.time_sub_msec_interval(:bat[:daytime], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:daytime] ",	"MTIMEtime_sub_msec_interval_bulk;",	""	]
[ "batmtime",	"time_sub_msec_interval",	"pattern batmtime.time_sub_msec_interval(:daytime, :bat[:lng]):bat[:daytime] ",	"MTIMEtime_sub_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"time_sub_msec_interval",	"pattern batmtime.time_sub_msec_interval(:daytime, :bat[:lng], :bat[:oid]):bat[:daytime] ",	"MTIMEtime_sub_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"time_sub_msec_interval",	"pattern batmtime.time_sub_msec_interval(:bat[:daytime], :lng):bat[:daytime] ",	"MTIMEtime_sub_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"time_sub_msec_interval",	"pattern batmtime.time_sub_msec_interval(:bat[:daytime], :lng, :bat[:oid]):bat[:daytime] ",	"MTIMEtime_sub_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"time_to_str",	"pattern batmtime.time_to_str(:bat[:daytime], :bat[:str]):bat[:str] ",	"MTIMEtime_to_str_bulk;",	""	]
[ "batmtime",	"time_to_str",	"pattern batmtime.time_to_str(:bat[:daytime], :bat[:str], :bat[:oid], :bat[:oid]):bat[:str] ",	"MTIMEtime_to_str_bulk;",	""	]
[ "batmtime",	"time_to_str",	"pattern batmtime.time_to_str(:daytime, :bat[:str]):bat[:str] ",	"MTIMEtime_to_str_bulk_p1;",	""	]
[ "batmtime",	"time_to_str",	"pattern batmtime.time_to_str(:daytime, :bat[:str], :bat[:oid]):bat[:str] ",	"MTIMEtime_to_str_bulk_p1;",	""	]
[ "batmtime",	"time_to_str",	"pattern batmtime.time_to_str(:bat[:daytime], :str):bat[:str] ",	"MTIMEtime_to_str_bulk_p2;",	""	]
[ "batmtime",	"time_to_str",	"pattern batmtime.time_to_str(:bat[:daytime], :str, :bat[:oid]):bat[:str] ",	"MTIMEtime_to_str_bulk_p2;",	""	]
[ "batmtime",	"timestamp_add_month_interval",	"pattern batmtime.timestamp_add_month_interval(:bat[:timestamp], :bat[:int]):bat[:timestamp] ",	"MTIMEtimestamp_add_month_interval_bulk;",	""	]
[ "batmtime",	"timestamp_add_month_interval",	"pattern batmtime.timestamp_add_month_interval(:bat[:timestamp], :bat[:int], :bat[:oid], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_add_month_interval_bulk;",	""	]
[ "batmtime",	"timestamp_add_month_interval",	"pattern batmtime.timestamp_add_month_interval(:timestamp, :bat[:int]):bat[:timestamp] ",	"MTIMEtimestamp_add_month_interval_bulk_p1;",	""	]
[ "batmtime",	"timestamp_add_month_interval",	"pattern batmtime.timestamp_add_month_interval(:timestamp, :bat[:int], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_add_month_interval_bulk_p1;",	""	]
[ "batmtime",	"timestamp_add_month_interval",	"pattern batmtime.timestamp_add_month_interval(:bat[:timestamp], :int):bat[:timestamp] ",	"MTIMEtimestamp_add_month_interval_bulk_p2;",	""	]
[ "batmtime",	"timestamp_add_month_interval",	"pattern batmtime.timestamp_add_month_interval(:bat[:timestamp], :int, :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_add_month_interval_bulk_p2;",	""	]
[ "batmtime",	"timestamp_add_msec_interval",	"pattern batmtime.timestamp_add_msec_interval(:bat[:timestamp], :bat[:lng]):bat[:timestamp] ",	"MTIMEtimestamp_add_msec_interval_bulk;",	""	]
[ "batmtime",	"timestamp_add_msec_interval",	"pattern batmtime.timestamp_add_msec_interval(:bat[:timestamp], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_add_msec_interval_bulk;",	""	]
[ "batmtime",	"timestamp_add_msec_interval",	"pattern batmtime.timestamp_add_msec_interval(:timestamp, :bat[:lng]):bat[:timestamp] ",	"MTIMEtimestamp_add_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"timestamp_add_msec_interval",	"pattern batmtime.timestamp_add_msec_interval(:timestamp, :bat[:lng], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_add_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"timestamp_add_msec_interval",	"pattern batmtime.timestamp_add_msec_interval(:bat[:timestamp], :lng):bat[:timestamp] ",	"MTIMEtimestamp_add_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"timestamp_add_msec_interval",	"pattern batmtime.timestamp_add_msec_interval(:bat[:timestamp], :lng, :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_add_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"timestamp_sub_month_interval",	"pattern batmtime.timestamp_sub_month_interval(:bat[:timestamp], :bat[:int]):bat[:timestamp] ",	"MTIMEtimestamp_sub_month_interval_bulk;",	""	]
[ "batmtime",	"timestamp_sub_month_interval",	"pattern batmtime.timestamp_sub_month_interval(:bat[:timestamp], :bat[:int], :bat[:oid], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_sub_month_interval_bulk;",	""	]
[ "batmtime",	"timestamp_sub_month_interval",	"pattern batmtime.timestamp_sub_month_interval(:timestamp, :bat[:int]):bat[:timestamp] ",	"MTIMEtimestamp_sub_month_interval_bulk_p1;",	""	]
[ "batmtime",	"timestamp_sub_month_interval",	"pattern batmtime.timestamp_sub_month_interval(:timestamp, :bat[:int], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_sub_month_interval_bulk_p1;",	""	]
[ "batmtime",	"timestamp_sub_month_interval",	"pattern batmtime.timestamp_sub_month_interval(:bat[:timestamp], :int):bat[:timestamp] ",	"MTIMEtimestamp_sub_month_interval_bulk_p2;",	""	]
[ "batmtime",	"timestamp_sub_month_interval",	"pattern batmtime.timestamp_sub_month_interval(:bat[:timestamp], :int, :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_sub_month_interval_bulk_p2;",	""	]
[ "batmtime",	"timestamp_sub_msec_interval",	"pattern batmtime.timestamp_sub_msec_interval(:bat[:timestamp], :bat[:lng]):bat[:timestamp] ",	"MTIMEtimestamp_sub_msec_interval_bulk;",	""	]
[ "batmtime",	"timestamp_sub_msec_interval",	"pattern batmtime.timestamp_sub_msec_interval(:bat[:timestamp], :bat[:lng], :bat[:oid], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_sub_msec_interval_bulk;",	""	]
[ "batmtime",	"timestamp_sub_msec_interval",	"pattern batmtime.timestamp_sub_msec_interval(:timestamp, :bat[:lng]):bat[:timestamp] ",	"MTIMEtimestamp_sub_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"timestamp_sub_msec_interval",	"pattern batmtime.timestamp_sub_msec_interval(:timestamp, :bat[:lng], :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_sub_msec_interval_bulk_p1;",	""	]
[ "batmtime",	"timestamp_sub_msec_interval",	"pattern batmtime.timestamp_sub_msec_interval(:bat[:timestamp], :lng):bat[:timestamp] ",	"MTIMEtimestamp_sub_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"timestamp_sub_msec_interval",	"pattern batmtime.timestamp_sub_msec_interval(:bat[:timestamp], :lng, :bat[:oid]):bat[:timestamp] ",	"MTIMEtimestamp_sub_msec_interval_bulk_p2;",	""	]
[ "batmtime",	"timestamp_to_str",	"pattern batmtime.timestamp_to_str(:bat[:timestamp], :bat[:str]):bat[:str] ",	"MTIMEtimestamp_to_str_bulk;",	""	]
[ "batmtime",	"timestamp_to_str",	"pattern batmtime.timestamp_to_str(:bat[:timestamp], :bat[:str], :bat[:oid], :bat[:oid]):bat[:str] ",	"MTIMEtimestamp_to_str_bulk;",	""	]
[ "batmtime",	"timestamp_to_str",	"pattern batmtime.timestamp_to_str(:timestamp, :bat[:str]):bat[:str] ",	"MTIMEtimestamp_to_str_bulk_p1;",	""	]
[ "batmtime",	"timestamp_to_str",	"pattern batmtime.timestamp_to_str(:timestamp, :bat[:str], :bat[:oid]):bat[:str] ",	"MTIMEtimestamp_to_str_bulk_p1;",	""	]
[ "batmtime",	"timestamp_to_str",	"pattern batmtime.timestamp_to_str(:bat[:timestamp], :str):bat[:str] ",	"MTIMEtimestamp_to_str_bulk_p2;",	""	]
[ "batmtime",	"timestamp_to_str",	"pattern batmtime.timestamp_to_str(:bat[:timestamp], :str, :bat[:oid]):bat[:str] ",	"MTIMEtimestamp_to_str_bulk_p2;",	""	]
[ "batmtime",	"usweekofyear",	"pattern batmtime.usweekofyear(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_usweekofyear_bulk;",	""	]
[ "batmtime",	"usweekofyear",	"pattern batmtime.usweekofyear(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_usweekofyear_bulk;",	""	]
[ "batmtime",	"weekofyear",	"pattern batmtime.weekofyear(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_weekofyear_bulk;",	""	]
[ "batmtime",	"weekofyear",	"pattern batmtime.weekofyear(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_weekofyear_bulk;",	""	]
[ "batmtime",	"year",	"pattern batmtime.year(:bat[:date]):bat[:int] ",	"MTIMEdate_extract_year_bulk;",	""	]
[ "batmtime",	"year",	"pattern batmtime.year(:bat[:date], :bat[:oid]):bat[:int] ",	"MTIMEdate_extract_year_bulk;",	""	]
[ "batmtime",	"year",	"pattern batmtime.year(:bat[:int]):bat[:int] ",	"MTIMEsql_year_bulk;",	""	]
[ "batmtime",	"year",	"pattern batmtime.year(:bat[:int], :bat[:oid]):bat[:int] ",	"MTIMEsql_year_bulk;",	""	]
[ "batmtime",	"year",	"pattern batmtime.year(:bat[:timestamp]):bat[:int] ",	"MTIMEtimestamp_year_bulk;",	""	]
[ "batmtime",	"year",	"pattern batmtime.year(:bat[:timestamp], :bat[:oid]):bat[:int] ",	"MTIMEtimestamp_year_bulk;",	""	]
[ "batpcre",	"replace",	"command batpcre.replace(:bat[:str], :str, :str, :str):bat[:str] ",	"PCREreplace_bat_wrap;",	""	]
[ "batpcre",	"replace_first",	"command batpcre.replace_first(:bat[:str], :str, :str, :str):bat[:str] ",	"PCREreplacefirst_bat_wrap;",	""	]
[ "batpyapi3",	"eval",	"unsafe pattern batpyapi3.eval(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalStd;",	""	]
[ "batpyapi3",	"eval_aggr",	"unsafe pattern batpyapi3.eval_aggr(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalAggr;",	""	]
[ "batpyapi3",	"eval_loader",	"unsafe pattern batpyapi3.eval_loader(:ptr, :str):any... ",	"PYAPI3PyAPIevalLoader;",	""	]
[ "batpyapi3",	"eval_loader",	"unsafe pattern batpyapi3.eval_loader(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalLoader;",	""	]
[ "batpyapi3",	"subeval_aggr",	"unsafe pattern batpyapi3.subeval_aggr(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalAggr;",	""	]
[ "batpyapi3map",	"eval",	"pattern batpyapi3map.eval(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalStdMap;",	""	]
[ "batpyapi3map",	"eval_aggr",	"pattern batpyapi3map.eval_aggr(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalAggrMap;",	""	]
[ "batpyapi3map",	"subeval_aggr",	"pattern batpyapi3map.subeval_aggr(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalAggrMap;",	""	]
[ "batrapi",	"eval",	"pattern batrapi.eval(:ptr, :str, :any...):any... ",	"RAPIevalStd;",	""	]
[ "batrapi",	"eval_aggr",	"pattern batrapi.eval_aggr(:ptr, :str, :any...):any... ",	"RAPIevalAggr;",	""	]
[ "batrapi",	"subeval_aggr",	"pattern batrapi.subeval_aggr(:ptr, :str, :any...):any... ",	"RAPIevalAggr;",	""	]
[ "batsql",	"all",	"pattern batsql.all(:bat[:bit], :bat[:bit], :bat[:bit]):bat[:bit] ",	"SQLall_cmp;",	""	]
[ "batsql",	"all",	"pattern batsql.all(:bat[:bit], :bat[:bit], :bit):bat[:bit] ",	"SQLall_cmp;",	""	]
[ "batsql",	"all",	"pattern batsql.all(:bat[:bit], :bit, :bat[:bit]):bat[:bit] ",	"SQLall_cmp;",	""	]
[ "batsql",	"all",	"pattern batsql.all(:bat[:bit], :bit, :bit):bat[:bit] ",	"SQLall_cmp;",	""	]
[ "batsql",	"all",	"pattern batsql.all(:bit, :bat[:bit], :bat[:bit]):bat[:bit] ",	"SQLall_cmp;",	""	]
[ "batsql",	"all",	"pattern batsql.all(:bit, :bat[:bit], :bit):bat[:bit] ",	"SQLall_cmp;",	""	]
[ "batsql",	"all",	"pattern batsql.all(:bit, :bit, :bat[:bit]):bat[:bit] ",	"SQLall_cmp;",	""	]
[ "batsql",	"alpha",	"command batsql.alpha(:bat[:dbl], :dbl):bat[:dbl] ",	"SQLbat_alpha_cst;",	""	]
[ "batsql",	"alpha",	"command batsql.alpha(:dbl, :bat[:dbl]):bat[:dbl] ",	"SQLcst_alpha_bat;",	""	]
[ "batsql",	"any",	"pattern batsql.any(:bat[:bit], :bat[:bit], :bat[:bit]):bat[:bit] ",	"SQLany_cmp;",	""	]
[ "batsql",	"any",	"pattern batsql.any(:bat[:bit], :bat[:bit], :bit):bat[:bit] ",	"SQLany_cmp;",	""	]
[ "batsql",	"any",	"pattern batsql.any(:bat[:bit], :bit, :bat[:bit]):bat[:bit] ",	"SQLany_cmp;",	""	]
[ "batsql",	"any",	"pattern batsql.any(:bat[:bit], :bit, :bit):bat[:bit] ",	"SQLany_cmp;",	""	]
[ "batsql",	"any",	"pattern batsql.any(:bit, :bat[:bit], :bat[:bit]):bat[:bit] ",	"SQLany_cmp;",	""	]
[ "batsql",	"any",	"pattern batsql.any(:bit, :bat[:bit], :bit):bat[:bit] ",	"SQLany_cmp;",	""	]
[ "batsql",	"any",	"pattern batsql.any(:bit, :bit, :bat[:bit]):bat[:bit] ",	"SQLany_cmp;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLavg;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLavg;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLavg;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLavg;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLavg;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLavg;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLavg;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:bte], :any, :any, :int, :any, :any):bat[:bte] ",	"SQLavginteger;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:hge], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLavginteger;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:int], :any, :any, :int, :any, :any):bat[:int] ",	"SQLavginteger;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:lng], :any, :any, :int, :any, :any):bat[:lng] ",	"SQLavginteger;",	""	]
[ "batsql",	"avg",	"pattern batsql.avg(:bat[:sht], :any, :any, :int, :any, :any):bat[:sht] ",	"SQLavginteger;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:bte], :bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:bte], :bte, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:dbl], :bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:dbl], :dbl, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:flt], :bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:flt], :flt, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:hge], :bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:hge], :hge, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:int], :bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:int], :int, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:lng], :bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:lng], :lng, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:sht], :bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bat[:sht], :sht, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:bte, :bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:dbl, :bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:flt, :bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:hge, :bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:int, :bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:lng, :bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"corr",	"pattern batsql.corr(:sht, :bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcorr;",	""	]
[ "batsql",	"count",	"pattern batsql.count(:bat[:any_1], :bit, :any, :any, :int, :any, :any):bat[:lng] ",	"SQLcount;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:bte], :bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:bte], :bte, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:dbl], :bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:dbl], :dbl, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:flt], :bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:flt], :flt, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:hge], :bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:hge], :hge, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:int], :bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:int], :int, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:lng], :bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:lng], :lng, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:sht], :bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bat[:sht], :sht, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:bte, :bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:dbl, :bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:flt, :bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:hge, :bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:int, :bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:lng, :bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariance",	"pattern batsql.covariance(:sht, :bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_samp;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:bte], :bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:bte], :bte, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:dbl], :bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:dbl], :dbl, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:flt], :bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:flt], :flt, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:hge], :bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:hge], :hge, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:int], :bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:int], :int, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:lng], :bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:lng], :lng, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:sht], :bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bat[:sht], :sht, :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:bte, :bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:dbl, :bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:flt, :bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:hge, :bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:int, :bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:lng, :bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"covariancep",	"pattern batsql.covariancep(:sht, :bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLcovar_pop;",	""	]
[ "batsql",	"cume_dist",	"pattern batsql.cume_dist(:bat[:any_1], :any_2, :any_3):bat[:dbl] ",	"SQLcume_dist;",	""	]
[ "batsql",	"dense_rank",	"pattern batsql.dense_rank(:bat[:any_1], :any_2, :any_3):bat[:int] ",	"SQLdense_rank;",	""	]
[ "batsql",	"diff",	"pattern batsql.diff(:bat[:any_1]):bat[:bit] ",	"SQLdiff;",	""	]
[ "batsql",	"diff",	"pattern batsql.diff(:bat[:bit], :any_1):bat[:bit] ",	"SQLdiff;",	""	]
[ "batsql",	"diff",	"pattern batsql.diff(:bat[:bit], :bat[:any_1]):bat[:bit] ",	"SQLdiff;",	""	]
[ "batsql",	"diff",	"pattern batsql.diff(:bit, :bat[:any_1]):bat[:bit] ",	"SQLdiff;",	""	]
[ "batsql",	"first_value",	"pattern batsql.first_value(:bat[:any_1], :any, :any, :int, :any, :any):bat[:any_1] ",	"SQLfirst_value;",	""	]
[ "batsql",	"get_value",	"pattern batsql.get_value(:bat[:str], :bat[:str]):bat[:lng] ",	"mvc_bat_get_value;",	""	]
[ "batsql",	"get_value",	"pattern batsql.get_value(:bat[:str], :str):bat[:lng] ",	"mvc_bat_get_value;",	""	]
[ "batsql",	"get_value",	"pattern batsql.get_value(:str, :bat[:str]):bat[:lng] ",	"mvc_bat_get_value;",	""	]
[ "batsql",	"index",	"command batsql.index(:bat[:str], :bit):bat[:bte] ",	"BATSTRindex_bte;",	""	]
[ "batsql",	"index",	"command batsql.index(:bat[:str], :bit):bat[:int] ",	"BATSTRindex_int;",	""	]
[ "batsql",	"index",	"command batsql.index(:bat[:str], :bit):bat[:sht] ",	"BATSTRindex_sht;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:any_1, :any, :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:any_1, :bat[:any], :any_1, :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:any_1, :bat[:any], :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:any_1, :bat[:any], :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:bat[:any_1], :any, :any_1, :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:bat[:any_1], :any, :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:bat[:any_1], :any, :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:bat[:any_1], :bat[:any], :any_1, :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:bat[:any_1], :bat[:any], :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"lag",	"pattern batsql.lag(:bat[:any_1], :bat[:any], :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlag;",	""	]
[ "batsql",	"last_value",	"pattern batsql.last_value(:bat[:any_1], :any, :any, :int, :any, :any):bat[:any_1] ",	"SQLlast_value;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:any_1, :any, :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:any_1, :bat[:any], :any_1, :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:any_1, :bat[:any], :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:any_1, :bat[:any], :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:bat[:any_1], :any, :any_1, :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:bat[:any_1], :any, :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:bat[:any_1], :any, :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:bat[:any_1], :bat[:any], :any_1, :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:bat[:any_1], :bat[:any], :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"lead",	"pattern batsql.lead(:bat[:any_1], :bat[:any], :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLlead;",	""	]
[ "batsql",	"max",	"pattern batsql.max(:bat[:any_1], :any, :any, :int, :any, :any):bat[:any_1] ",	"SQLmax;",	""	]
[ "batsql",	"min",	"pattern batsql.min(:bat[:any_1], :any, :any, :int, :any, :any):bat[:any_1] ",	"SQLmin;",	""	]
[ "batsql",	"next_value",	"unsafe pattern batsql.next_value(:bat[:str], :bat[:str]):bat[:lng] ",	"mvc_bat_next_value;",	""	]
[ "batsql",	"next_value",	"unsafe pattern batsql.next_value(:bat[:str], :str):bat[:lng] ",	"mvc_bat_next_value;",	""	]
[ "batsql",	"next_value",	"unsafe pattern batsql.next_value(:str, :bat[:str]):bat[:lng] ",	"mvc_bat_next_value;",	""	]
[ "batsql",	"nth_value",	"pattern batsql.nth_value(:any_1, :bat[:lng], :any, :any, :int, :any, :any):bat[:any_1] ",	"SQLnth_value;",	""	]
[ "batsql",	"nth_value",	"pattern batsql.nth_value(:bat[:any_1], :bat[:lng], :any, :any, :int, :any, :any):bat[:any_1] ",	"SQLnth_value;",	""	]
[ "batsql",	"nth_value",	"pattern batsql.nth_value(:bat[:any_1], :lng, :any, :any, :int, :any, :any):bat[:any_1] ",	"SQLnth_value;",	""	]
[ "batsql",	"ntile",	"pattern batsql.ntile(:any, :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLntile;",	""	]
[ "batsql",	"ntile",	"pattern batsql.ntile(:bat[:any], :any_1, :any_2, :any_3):bat[:any_1] ",	"SQLntile;",	""	]
[ "batsql",	"ntile",	"pattern batsql.ntile(:bat[:any], :bat[:any_1], :any_2, :any_3):bat[:any_1] ",	"SQLntile;",	""	]
[ "batsql",	"password",	"pattern batsql.password(:bat[:str]):bat[:str] ",	"db_password_wrap;",	""	]
[ "batsql",	"percent_rank",	"pattern batsql.percent_rank(:bat[:any_1], :any_2, :any_3):bat[:dbl] ",	"SQLpercent_rank;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:bte], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:bte], :any, :any, :int, :any, :any):bat[:lng] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:flt], :any, :any, :int, :any, :any):bat[:flt] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:hge], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:int], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:int], :any, :any, :int, :any, :any):bat[:lng] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:lng], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:lng], :any, :any, :int, :any, :any):bat[:lng] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:sht], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLprod;",	""	]
[ "batsql",	"prod",	"pattern batsql.prod(:bat[:sht], :any, :any, :int, :any, :any):bat[:lng] ",	"SQLprod;",	""	]
[ "batsql",	"rank",	"pattern batsql.rank(:bat[:any_1], :any_2, :any_3):bat[:int] ",	"SQLrank;",	""	]
[ "batsql",	"restart",	"unsafe pattern batsql.restart(:bat[:str], :bat[:str], :bat[:lng]):bat[:lng] ",	"mvc_bat_restart_seq;",	""	]
[ "batsql",	"restart",	"unsafe pattern batsql.restart(:bat[:str], :bat[:str], :lng):bat[:lng] ",	"mvc_bat_restart_seq;",	""	]
[ "batsql",	"restart",	"unsafe pattern batsql.restart(:bat[:str], :str, :bat[:lng]):bat[:lng] ",	"mvc_bat_restart_seq;",	""	]
[ "batsql",	"restart",	"unsafe pattern batsql.restart(:bat[:str], :str, :lng):bat[:lng] ",	"mvc_bat_restart_seq;",	""	]
[ "batsql",	"restart",	"unsafe pattern batsql.restart(:str, :bat[:str], :bat[:lng]):bat[:lng] ",	"mvc_bat_restart_seq;",	""	]
[ "batsql",	"restart",	"unsafe pattern batsql.restart(:str, :bat[:str], :lng):bat[:lng] ",	"mvc_bat_restart_seq;",	""	]
[ "batsql",	"restart",	"unsafe pattern batsql.restart(:str, :str, :bat[:lng]):bat[:lng] ",	"mvc_bat_restart_seq;",	""	]
[ "batsql",	"row_number",	"pattern batsql.row_number(:bat[:any_1], :any_2, :any_3):bat[:int] ",	"SQLrow_number;",	""	]
[ "batsql",	"stdev",	"pattern batsql.stdev(:bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_samp;",	""	]
[ "batsql",	"stdev",	"pattern batsql.stdev(:bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_samp;",	""	]
[ "batsql",	"stdev",	"pattern batsql.stdev(:bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_samp;",	""	]
[ "batsql",	"stdev",	"pattern batsql.stdev(:bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_samp;",	""	]
[ "batsql",	"stdev",	"pattern batsql.stdev(:bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_samp;",	""	]
[ "batsql",	"stdev",	"pattern batsql.stdev(:bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_samp;",	""	]
[ "batsql",	"stdev",	"pattern batsql.stdev(:bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_samp;",	""	]
[ "batsql",	"stdevp",	"pattern batsql.stdevp(:bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_pop;",	""	]
[ "batsql",	"stdevp",	"pattern batsql.stdevp(:bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_pop;",	""	]
[ "batsql",	"stdevp",	"pattern batsql.stdevp(:bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_pop;",	""	]
[ "batsql",	"stdevp",	"pattern batsql.stdevp(:bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_pop;",	""	]
[ "batsql",	"stdevp",	"pattern batsql.stdevp(:bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_pop;",	""	]
[ "batsql",	"stdevp",	"pattern batsql.stdevp(:bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_pop;",	""	]
[ "batsql",	"stdevp",	"pattern batsql.stdevp(:bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLstddev_pop;",	""	]
[ "batsql",	"str_group_concat",	"pattern batsql.str_group_concat(:bat[:str], :any, :any, :int, :any, :any):bat[:str] ",	"SQLstrgroup_concat;",	""	]
[ "batsql",	"str_group_concat",	"pattern batsql.str_group_concat(:bat[:str], :bat[:str], :any, :any, :int, :any, :any):bat[:str] ",	"SQLstrgroup_concat;",	""	]
[ "batsql",	"str_group_concat",	"pattern batsql.str_group_concat(:bat[:str], :str, :any, :any, :int, :any, :any):bat[:str] ",	"SQLstrgroup_concat;",	""	]
[ "batsql",	"str_group_concat",	"pattern batsql.str_group_concat(:str, :bat[:str], :any, :any, :int, :any, :any):bat[:str] ",	"SQLstrgroup_concat;",	""	]
[ "batsql",	"strings",	"command batsql.strings(:bat[:str]):bat[:str] ",	"BATSTRstrings;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:bte], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:bte], :any, :any, :int, :any, :any):bat[:lng] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:flt], :any, :any, :int, :any, :any):bat[:flt] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:hge], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:int], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:int], :any, :any, :int, :any, :any):bat[:lng] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:lng], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:lng], :any, :any, :int, :any, :any):bat[:lng] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:sht], :any, :any, :int, :any, :any):bat[:hge] ",	"SQLsum;",	""	]
[ "batsql",	"sum",	"pattern batsql.sum(:bat[:sht], :any, :any, :int, :any, :any):bat[:lng] ",	"SQLsum;",	""	]
[ "batsql",	"variance",	"pattern batsql.variance(:bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_samp;",	""	]
[ "batsql",	"variance",	"pattern batsql.variance(:bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_samp;",	""	]
[ "batsql",	"variance",	"pattern batsql.variance(:bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_samp;",	""	]
[ "batsql",	"variance",	"pattern batsql.variance(:bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_samp;",	""	]
[ "batsql",	"variance",	"pattern batsql.variance(:bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_samp;",	""	]
[ "batsql",	"variance",	"pattern batsql.variance(:bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_samp;",	""	]
[ "batsql",	"variance",	"pattern batsql.variance(:bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_samp;",	""	]
[ "batsql",	"variancep",	"pattern batsql.variancep(:bat[:bte], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_pop;",	""	]
[ "batsql",	"variancep",	"pattern batsql.variancep(:bat[:dbl], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_pop;",	""	]
[ "batsql",	"variancep",	"pattern batsql.variancep(:bat[:flt], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_pop;",	""	]
[ "batsql",	"variancep",	"pattern batsql.variancep(:bat[:hge], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_pop;",	""	]
[ "batsql",	"variancep",	"pattern batsql.variancep(:bat[:int], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_pop;",	""	]
[ "batsql",	"variancep",	"pattern batsql.variancep(:bat[:lng], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_pop;",	""	]
[ "batsql",	"variancep",	"pattern batsql.variancep(:bat[:sht], :any, :any, :int, :any, :any):bat[:dbl] ",	"SQLvar_pop;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :bat[:bte]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :bat[:dbl]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :bat[:flt]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :bat[:hge]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :bat[:int]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :bat[:lng]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :bat[:sht]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :bte):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :dbl):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :flt):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :hge):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :int):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :lng):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:any_1], :int, :int, :int, :sht):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :bat[:bte]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :bat[:dbl]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :bat[:flt]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :bat[:hge]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :bat[:int]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :bat[:lng]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :bat[:sht]):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :bte):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :dbl):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :flt):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :hge):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :int):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :lng):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batsql",	"window_bound",	"pattern batsql.window_bound(:bat[:bit], :bat[:any_1], :int, :int, :int, :sht):bat[:oid] ",	"SQLwindow_bound;",	""	]
[ "batstr",	"ascii",	"pattern batstr.ascii(:bat[:str]):bat[:int] ",	"STRbatAscii;",	""	]
[ "batstr",	"ascii",	"pattern batstr.ascii(:bat[:str], :bat[:oid]):bat[:int] ",	"STRbatAscii;",	""	]
[ "batstr",	"endsWith",	"pattern batstr.endsWith(:bat[:str], :bat[:str]):bat[:bit] ",	"STRbatSuffix;",	""	]
[ "batstr",	"endsWith",	"pattern batstr.endsWith(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:bit] ",	"STRbatSuffix;",	""	]
[ "batstr",	"endsWith",	"pattern batstr.endsWith(:str, :bat[:str]):bat[:bit] ",	"STRbatSuffix_strcst;",	""	]
[ "batstr",	"endsWith",	"pattern batstr.endsWith(:str, :bat[:str], :bat[:oid]):bat[:bit] ",	"STRbatSuffix_strcst;",	""	]
[ "batstr",	"endsWith",	"pattern batstr.endsWith(:bat[:str], :str):bat[:bit] ",	"STRbatSuffixcst;",	""	]
[ "batstr",	"endsWith",	"pattern batstr.endsWith(:bat[:str], :str, :bat[:oid]):bat[:bit] ",	"STRbatSuffixcst;",	""	]
[ "batstr",	"insert",	"pattern batstr.insert(:bat[:str], :bat[:int], :bat[:int], :bat[:str]):bat[:str] ",	"STRbatInsert;",	""	]
[ "batstr",	"insert",	"pattern batstr.insert(:bat[:str], :int, :int, :str):bat[:str] ",	"STRbatInsertcst;",	""	]
[ "batstr",	"length",	"pattern batstr.length(:bat[:str]):bat[:int] ",	"STRbatLength;",	""	]
[ "batstr",	"length",	"pattern batstr.length(:bat[:str], :bat[:oid]):bat[:int] ",	"STRbatLength;",	""	]
[ "batstr",	"locate",	"pattern batstr.locate(:bat[:str], :bat[:str]):bat[:int] ",	"STRbatstrLocate;",	""	]
[ "batstr",	"locate",	"pattern batstr.locate(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:int] ",	"STRbatstrLocate;",	""	]
[ "batstr",	"locate",	"pattern batstr.locate(:str, :bat[:str]):bat[:int] ",	"STRbatstrLocate_strcst;",	""	]
[ "batstr",	"locate",	"pattern batstr.locate(:str, :bat[:str], :bat[:oid]):bat[:int] ",	"STRbatstrLocate_strcst;",	""	]
[ "batstr",	"locate",	"pattern batstr.locate(:bat[:str], :str):bat[:int] ",	"STRbatstrLocatecst;",	""	]
[ "batstr",	"locate",	"pattern batstr.locate(:bat[:str], :str, :bat[:oid]):bat[:int] ",	"STRbatstrLocatecst;",	""	]
[ "batstr",	"locate3",	"pattern batstr.locate3(:bat[:str], :bat[:str], :bat[:int]):bat[:int] ",	"STRbatstrLocate3;",	""	]
[ "batstr",	"locate3",	"pattern batstr.locate3(:bat[:str], :str, :int):bat[:int] ",	"STRbatstrLocate3cst;",	""	]
[ "batstr",	"lpad",	"pattern batstr.lpad(:str, :bat[:int]):bat[:str] ",	"STRbatLpad_1st_const;",	""	]
[ "batstr",	"lpad",	"pattern batstr.lpad(:str, :bat[:int], :bat[:oid]):bat[:str] ",	"STRbatLpad_1st_const;",	""	]
[ "batstr",	"lpad",	"pattern batstr.lpad(:bat[:str], :bat[:int]):bat[:str] ",	"STRbatLpad_bat;",	""	]
[ "batstr",	"lpad",	"pattern batstr.lpad(:bat[:str], :bat[:int], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatLpad_bat;",	""	]
[ "batstr",	"lpad",	"pattern batstr.lpad(:bat[:str], :int):bat[:str] ",	"STRbatLpad_const;",	""	]
[ "batstr",	"lpad",	"pattern batstr.lpad(:bat[:str], :int, :bat[:oid]):bat[:str] ",	"STRbatLpad_const;",	""	]
[ "batstr",	"lpad3",	"pattern batstr.lpad3(:bat[:str], :bat[:int], :bat[:str]):bat[:str] ",	"STRbatLpad3_bat_bat;",	""	]
[ "batstr",	"lpad3",	"pattern batstr.lpad3(:bat[:str], :bat[:int], :str):bat[:str] ",	"STRbatLpad3_bat_const;",	""	]
[ "batstr",	"lpad3",	"pattern batstr.lpad3(:bat[:str], :int, :bat[:str]):bat[:str] ",	"STRbatLpad3_const_bat;",	""	]
[ "batstr",	"lpad3",	"pattern batstr.lpad3(:bat[:str], :int, :str):bat[:str] ",	"STRbatLpad3_const_const;",	""	]
[ "batstr",	"ltrim",	"pattern batstr.ltrim(:bat[:str]):bat[:str] ",	"STRbatLtrim;",	""	]
[ "batstr",	"ltrim",	"pattern batstr.ltrim(:bat[:str], :bat[:oid]):bat[:str] ",	"STRbatLtrim;",	""	]
[ "batstr",	"ltrim2",	"pattern batstr.ltrim2(:str, :bat[:str]):bat[:str] ",	"STRbatLtrim2_1st_const;",	""	]
[ "batstr",	"ltrim2",	"pattern batstr.ltrim2(:str, :bat[:str], :bat[:oid]):bat[:str] ",	"STRbatLtrim2_1st_const;",	""	]
[ "batstr",	"ltrim2",	"pattern batstr.ltrim2(:bat[:str], :bat[:str]):bat[:str] ",	"STRbatLtrim2_bat;",	""	]
[ "batstr",	"ltrim2",	"pattern batstr.ltrim2(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatLtrim2_bat;",	""	]
[ "batstr",	"ltrim2",	"pattern batstr.ltrim2(:bat[:str], :str):bat[:str] ",	"STRbatLtrim2_const;",	""	]
[ "batstr",	"ltrim2",	"pattern batstr.ltrim2(:bat[:str], :str, :bat[:oid]):bat[:str] ",	"STRbatLtrim2_const;",	""	]
[ "batstr",	"nbytes",	"pattern batstr.nbytes(:bat[:str]):bat[:int] ",	"STRbatBytes;",	""	]
[ "batstr",	"nbytes",	"pattern batstr.nbytes(:bat[:str], :bat[:oid]):bat[:int] ",	"STRbatBytes;",	""	]
[ "batstr",	"r_search",	"pattern batstr.r_search(:bat[:str], :bat[:str]):bat[:int] ",	"STRbatRstrSearch;",	""	]
[ "batstr",	"r_search",	"pattern batstr.r_search(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:int] ",	"STRbatRstrSearch;",	""	]
[ "batstr",	"r_search",	"pattern batstr.r_search(:str, :bat[:str]):bat[:int] ",	"STRbatRstrSearch_strcst;",	""	]
[ "batstr",	"r_search",	"pattern batstr.r_search(:str, :bat[:str], :bat[:oid]):bat[:int] ",	"STRbatRstrSearch_strcst;",	""	]
[ "batstr",	"r_search",	"pattern batstr.r_search(:bat[:str], :str):bat[:int] ",	"STRbatRstrSearchcst;",	""	]
[ "batstr",	"r_search",	"pattern batstr.r_search(:bat[:str], :str, :bat[:oid]):bat[:int] ",	"STRbatRstrSearchcst;",	""	]
[ "batstr",	"repeat",	"pattern batstr.repeat(:bat[:str], :bat[:int]):bat[:str] ",	"STRbatrepeat;",	""	]
[ "batstr",	"repeat",	"pattern batstr.repeat(:bat[:str], :bat[:int], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatrepeat;",	""	]
[ "batstr",	"repeat",	"pattern batstr.repeat(:str, :bat[:int]):bat[:str] ",	"STRbatrepeat_strcst;",	""	]
[ "batstr",	"repeat",	"pattern batstr.repeat(:str, :bat[:int], :bat[:oid]):bat[:str] ",	"STRbatrepeat_strcst;",	""	]
[ "batstr",	"repeat",	"pattern batstr.repeat(:bat[:str], :int):bat[:str] ",	"STRbatrepeatcst;",	""	]
[ "batstr",	"repeat",	"pattern batstr.repeat(:bat[:str], :int, :bat[:oid]):bat[:str] ",	"STRbatrepeatcst;",	""	]
[ "batstr",	"replace",	"pattern batstr.replace(:bat[:str], :bat[:str], :bat[:str]):bat[:str] ",	"STRbatReplace;",	""	]
[ "batstr",	"replace",	"pattern batstr.replace(:bat[:str], :str, :str):bat[:str] ",	"STRbatReplacecst;",	""	]
[ "batstr",	"rpad",	"pattern batstr.rpad(:str, :bat[:int]):bat[:str] ",	"STRbatRpad_1st_const;",	""	]
[ "batstr",	"rpad",	"pattern batstr.rpad(:str, :bat[:int], :bat[:oid]):bat[:str] ",	"STRbatRpad_1st_const;",	""	]
[ "batstr",	"rpad",	"pattern batstr.rpad(:bat[:str], :bat[:int]):bat[:str] ",	"STRbatRpad_bat;",	""	]
[ "batstr",	"rpad",	"pattern batstr.rpad(:bat[:str], :bat[:int], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatRpad_bat;",	""	]
[ "batstr",	"rpad",	"pattern batstr.rpad(:bat[:str], :int):bat[:str] ",	"STRbatRpad_const;",	""	]
[ "batstr",	"rpad",	"pattern batstr.rpad(:bat[:str], :int, :bat[:oid]):bat[:str] ",	"STRbatRpad_const;",	""	]
[ "batstr",	"rpad3",	"pattern batstr.rpad3(:bat[:str], :bat[:int], :bat[:str]):bat[:str] ",	"STRbatRpad3_bat_bat;",	""	]
[ "batstr",	"rpad3",	"pattern batstr.rpad3(:bat[:str], :bat[:int], :str):bat[:str] ",	"STRbatRpad3_bat_const;",	""	]
[ "batstr",	"rpad3",	"pattern batstr.rpad3(:bat[:str], :int, :bat[:str]):bat[:str] ",	"STRbatRpad3_const_bat;",	""	]
[ "batstr",	"rpad3",	"pattern batstr.rpad3(:bat[:str], :int, :str):bat[:str] ",	"STRbatRpad3_const_const;",	""	]
[ "batstr",	"rtrim",	"pattern batstr.rtrim(:bat[:str]):bat[:str] ",	"STRbatRtrim;",	""	]
[ "batstr",	"rtrim",	"pattern batstr.rtrim(:bat[:str], :bat[:oid]):bat[:str] ",	"STRbatRtrim;",	""	]
[ "batstr",	"rtrim2",	"pattern batstr.rtrim2(:str, :bat[:str]):bat[:str] ",	"STRbatRtrim2_1st_const;",	""	]
[ "batstr",	"rtrim2",	"pattern batstr.rtrim2(:str, :bat[:str], :bat[:oid]):bat[:str] ",	"STRbatRtrim2_1st_const;",	""	]
[ "batstr",	"rtrim2",	"pattern batstr.rtrim2(:bat[:str], :bat[:str]):bat[:str] ",	"STRbatRtrim2_bat;",	""	]
[ "batstr",	"rtrim2",	"pattern batstr.rtrim2(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatRtrim2_bat;",	""	]
[ "batstr",	"rtrim2",	"pattern batstr.rtrim2(:bat[:str], :str):bat[:str] ",	"STRbatRtrim2_const;",	""	]
[ "batstr",	"rtrim2",	"pattern batstr.rtrim2(:bat[:str], :str, :bat[:oid]):bat[:str] ",	"STRbatRtrim2_const;",	""	]
[ "batstr",	"search",	"pattern batstr.search(:bat[:str], :bat[:str]):bat[:int] ",	"STRbatstrSearch;",	""	]
[ "batstr",	"search",	"pattern batstr.search(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:int] ",	"STRbatstrSearch;",	""	]
[ "batstr",	"search",	"pattern batstr.search(:str, :bat[:str]):bat[:int] ",	"STRbatstrSearch_strcst;",	""	]
[ "batstr",	"search",	"pattern batstr.search(:str, :bat[:str], :bat[:oid]):bat[:int] ",	"STRbatstrSearch_strcst;",	""	]
[ "batstr",	"search",	"pattern batstr.search(:bat[:str], :str):bat[:int] ",	"STRbatstrSearchcst;",	""	]
[ "batstr",	"search",	"pattern batstr.search(:bat[:str], :str, :bat[:oid]):bat[:int] ",	"STRbatstrSearchcst;",	""	]
[ "batstr",	"space",	"pattern batstr.space(:bat[:int]):bat[:str] ",	"STRbatSpace;",	""	]
[ "batstr",	"space",	"pattern batstr.space(:bat[:int], :bat[:oid]):bat[:str] ",	"STRbatSpace;",	""	]
[ "batstr",	"splitpart",	"pattern batstr.splitpart(:bat[:str], :bat[:str], :bat[:int]):bat[:str] ",	"STRbatsplitpart;",	""	]
[ "batstr",	"splitpart",	"pattern batstr.splitpart(:bat[:str], :bat[:str], :int):bat[:str] ",	"STRbatsplitpart_fieldcst;",	""	]
[ "batstr",	"splitpart",	"pattern batstr.splitpart(:bat[:str], :str, :bat[:int]):bat[:str] ",	"STRbatsplitpart_needlecst;",	""	]
[ "batstr",	"splitpart",	"pattern batstr.splitpart(:bat[:str], :str, :int):bat[:str] ",	"STRbatsplitpartcst;",	""	]
[ "batstr",	"startsWith",	"pattern batstr.startsWith(:bat[:str], :bat[:str]):bat[:bit] ",	"STRbatPrefix;",	""	]
[ "batstr",	"startsWith",	"pattern batstr.startsWith(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:bit] ",	"STRbatPrefix;",	""	]
[ "batstr",	"startsWith",	"pattern batstr.startsWith(:str, :bat[:str]):bat[:bit] ",	"STRbatPrefix_strcst;",	""	]
[ "batstr",	"startsWith",	"pattern batstr.startsWith(:str, :bat[:str], :bat[:oid]):bat[:bit] ",	"STRbatPrefix_strcst;",	""	]
[ "batstr",	"startsWith",	"pattern batstr.startsWith(:bat[:str], :str):bat[:bit] ",	"STRbatPrefixcst;",	""	]
[ "batstr",	"startsWith",	"pattern batstr.startsWith(:bat[:str], :str, :bat[:oid]):bat[:bit] ",	"STRbatPrefixcst;",	""	]
[ "batstr",	"string",	"pattern batstr.string(:bat[:str], :bat[:int]):bat[:str] ",	"STRbatTail;",	""	]
[ "batstr",	"string",	"pattern batstr.string(:bat[:str], :bat[:int], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatTail;",	""	]
[ "batstr",	"string",	"pattern batstr.string(:str, :bat[:int]):bat[:str] ",	"STRbatTail_strcst;",	""	]
[ "batstr",	"string",	"pattern batstr.string(:str, :bat[:int], :bat[:oid]):bat[:str] ",	"STRbatTail_strcst;",	""	]
[ "batstr",	"string",	"pattern batstr.string(:bat[:str], :int):bat[:str] ",	"STRbatTailcst;",	""	]
[ "batstr",	"string",	"pattern batstr.string(:bat[:str], :int, :bat[:oid]):bat[:str] ",	"STRbatTailcst;",	""	]
[ "batstr",	"stringleft",	"pattern batstr.stringleft(:bat[:str], :bat[:int]):bat[:str] ",	"STRbatprefix;",	""	]
[ "batstr",	"stringleft",	"pattern batstr.stringleft(:bat[:str], :bat[:int], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatprefix;",	""	]
[ "batstr",	"stringleft",	"pattern batstr.stringleft(:str, :bat[:int]):bat[:str] ",	"STRbatprefix_strcst;",	""	]
[ "batstr",	"stringleft",	"pattern batstr.stringleft(:str, :bat[:int], :bat[:oid]):bat[:str] ",	"STRbatprefix_strcst;",	""	]
[ "batstr",	"stringleft",	"pattern batstr.stringleft(:bat[:str], :int):bat[:str] ",	"STRbatprefixcst;",	""	]
[ "batstr",	"stringleft",	"pattern batstr.stringleft(:bat[:str], :int, :bat[:oid]):bat[:str] ",	"STRbatprefixcst;",	""	]
[ "batstr",	"stringright",	"pattern batstr.stringright(:bat[:str], :bat[:int]):bat[:str] ",	"STRbatsuffix;",	""	]
[ "batstr",	"stringright",	"pattern batstr.stringright(:bat[:str], :bat[:int], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatsuffix;",	""	]
[ "batstr",	"stringright",	"pattern batstr.stringright(:str, :bat[:int]):bat[:str] ",	"STRbatsuffix_strcst;",	""	]
[ "batstr",	"stringright",	"pattern batstr.stringright(:str, :bat[:int], :bat[:oid]):bat[:str] ",	"STRbatsuffix_strcst;",	""	]
[ "batstr",	"stringright",	"pattern batstr.stringright(:bat[:str], :int):bat[:str] ",	"STRbatsuffixcst;",	""	]
[ "batstr",	"stringright",	"pattern batstr.stringright(:bat[:str], :int, :bat[:oid]):bat[:str] ",	"STRbatsuffixcst;",	""	]
[ "batstr",	"substitute",	"pattern batstr.substitute(:bat[:str], :bat[:str], :bat[:str], :bat[:bit]):bat[:str] ",	"STRbatSubstitute;",	""	]
[ "batstr",	"substitute",	"pattern batstr.substitute(:bat[:str], :str, :str, :bit):bat[:str] ",	"STRbatSubstitutecst;",	""	]
[ "batstr",	"substring",	"pattern batstr.substring(:bat[:str], :bat[:int]):bat[:str] ",	"STRbatsubstringTail;",	""	]
[ "batstr",	"substring",	"pattern batstr.substring(:bat[:str], :bat[:int], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatsubstringTail;",	""	]
[ "batstr",	"substring",	"pattern batstr.substring(:str, :bat[:int]):bat[:str] ",	"STRbatsubstringTail_strcst;",	""	]
[ "batstr",	"substring",	"pattern batstr.substring(:str, :bat[:int], :bat[:oid]):bat[:str] ",	"STRbatsubstringTail_strcst;",	""	]
[ "batstr",	"substring",	"pattern batstr.substring(:bat[:str], :int):bat[:str] ",	"STRbatsubstringTailcst;",	""	]
[ "batstr",	"substring",	"pattern batstr.substring(:bat[:str], :int, :bat[:oid]):bat[:str] ",	"STRbatsubstringTailcst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:bat[:str], :bat[:int], :bat[:int]):bat[:str] ",	"STRbatsubstring;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:bat[:str], :bat[:int], :bat[:int], :bat[:oid], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatsubstring;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:str, :int, :bat[:int]):bat[:str] ",	"STRbatsubstring_1st_2nd_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:str, :int, :bat[:int], :bat[:oid]):bat[:str] ",	"STRbatsubstring_1st_2nd_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:str, :bat[:int], :int):bat[:str] ",	"STRbatsubstring_1st_3rd_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:str, :bat[:int], :int, :bat[:oid]):bat[:str] ",	"STRbatsubstring_1st_3rd_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:str, :bat[:int], :bat[:int]):bat[:str] ",	"STRbatsubstring_1st_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:str, :bat[:int], :bat[:int], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatsubstring_1st_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:bat[:str], :int, :int):bat[:str] ",	"STRbatsubstring_2nd_3rd_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:bat[:str], :int, :int, :bat[:oid]):bat[:str] ",	"STRbatsubstring_2nd_3rd_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:bat[:str], :int, :bat[:int]):bat[:str] ",	"STRbatsubstring_2nd_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:bat[:str], :int, :bat[:int], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatsubstring_2nd_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:bat[:str], :bat[:int], :int):bat[:str] ",	"STRbatsubstring_3rd_cst;",	""	]
[ "batstr",	"substring3",	"pattern batstr.substring3(:bat[:str], :bat[:int], :int, :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatsubstring_3rd_cst;",	""	]
[ "batstr",	"toLower",	"pattern batstr.toLower(:bat[:str]):bat[:str] ",	"STRbatLower;",	""	]
[ "batstr",	"toLower",	"pattern batstr.toLower(:bat[:str], :bat[:oid]):bat[:str] ",	"STRbatLower;",	""	]
[ "batstr",	"toUpper",	"pattern batstr.toUpper(:bat[:str]):bat[:str] ",	"STRbatUpper;",	""	]
[ "batstr",	"toUpper",	"pattern batstr.toUpper(:bat[:str], :bat[:oid]):bat[:str] ",	"STRbatUpper;",	""	]
[ "batstr",	"trim",	"pattern batstr.trim(:bat[:str]):bat[:str] ",	"STRbatStrip;",	""	]
[ "batstr",	"trim",	"pattern batstr.trim(:bat[:str], :bat[:oid]):bat[:str] ",	"STRbatStrip;",	""	]
[ "batstr",	"trim2",	"pattern batstr.trim2(:str, :bat[:str]):bat[:str] ",	"STRbatStrip2_1st_const;",	""	]
[ "batstr",	"trim2",	"pattern batstr.trim2(:str, :bat[:str], :bat[:oid]):bat[:str] ",	"STRbatStrip2_1st_const;",	""	]
[ "batstr",	"trim2",	"pattern batstr.trim2(:bat[:str], :bat[:str]):bat[:str] ",	"STRbatStrip2_bat;",	""	]
[ "batstr",	"trim2",	"pattern batstr.trim2(:bat[:str], :bat[:str], :bat[:oid], :bat[:oid]):bat[:str] ",	"STRbatStrip2_bat;",	""	]
[ "batstr",	"trim2",	"pattern batstr.trim2(:bat[:str], :str):bat[:str] ",	"STRbatStrip2_const;",	""	]
[ "batstr",	"trim2",	"pattern batstr.trim2(:bat[:str], :str, :bat[:oid]):bat[:str] ",	"STRbatStrip2_const;",	""	]
[ "batstr",	"unicode",	"pattern batstr.unicode(:bat[:int]):bat[:str] ",	"STRbatFromWChr;",	""	]
[ "batstr",	"unicode",	"pattern batstr.unicode(:bat[:int], :bat[:oid]):bat[:str] ",	"STRbatFromWChr;",	""	]
[ "batstr",	"unicodeAt",	"pattern batstr.unicodeAt(:bat[:str], :bat[:int]):bat[:int] ",	"STRbatWChrAt;",	""	]
[ "batstr",	"unicodeAt",	"pattern batstr.unicodeAt(:bat[:str], :bat[:int], :bat[:oid], :bat[:oid]):bat[:int] ",	"STRbatWChrAt;",	""	]
[ "batstr",	"unicodeAt",	"pattern batstr.unicodeAt(:str, :bat[:int]):bat[:int] ",	"STRbatWChrAt_strcst;",	""	]
[ "batstr",	"unicodeAt",	"pattern batstr.unicodeAt(:str, :bat[:int], :bat[:oid]):bat[:int] ",	"STRbatWChrAt_strcst;",	""	]
[ "batstr",	"unicodeAt",	"pattern batstr.unicodeAt(:bat[:str], :int):bat[:int] ",	"STRbatWChrAtcst;",	""	]
[ "batstr",	"unicodeAt",	"pattern batstr.unicodeAt(:bat[:str], :int, :bat[:oid]):bat[:int] ",	"STRbatWChrAtcst;",	""	]
[ "battxtsim",	"similarity",	"command battxtsim.similarity(:bat[:str], :bat[:str]):bat[:dbl] ",	"fstrcmp0_impl_bulk;",	""	]
[ "batudf",	"fuse",	"command batudf.fuse(:bat[:bte], :bat[:bte]):bat[:sht] ",	"UDFBATfuse;",	""	]
[ "batudf",	"fuse",	"command batudf.fuse(:bat[:int], :bat[:int]):bat[:lng] ",	"UDFBATfuse;",	""	]
[ "batudf",	"fuse",	"command batudf.fuse(:bat[:lng], :bat[:lng]):bat[:hge] ",	"UDFBATfuse;",	""	]
[ "batudf",	"fuse",	"command batudf.fuse(:bat[:sht], :bat[:sht]):bat[:int] ",	"UDFBATfuse;",	""	]
[ "batudf",	"reverse",	"command batudf.reverse(:bat[:str]):bat[:str] ",	"UDFBATreverse;",	""	]
[ "batuuid",	"isaUUID",	"command batuuid.isaUUID(:bat[:str]):bat[:bit] ",	"UUIDisaUUID_bulk;",	""	]
[ "batuuid",	"new",	"unsafe command batuuid.new(:bat[:int]):bat[:uuid] ",	"UUIDgenerateUuidInt_bulk;",	""	]
[ "batxml",	"attribute",	"command batxml.attribute(:str, :bat[:str]):bat[:xml] ",	"BATXMLattribute;",	""	]
[ "batxml",	"comment",	"command batxml.comment(:bat[:str]):bat[:xml] ",	"BATXMLcomment;",	""	]
[ "batxml",	"concat",	"command batxml.concat(:bat[:xml], :bat[:xml]):bat[:xml] ",	"BATXMLconcat;",	""	]
[ "batxml",	"content",	"command batxml.content(:bat[:str]):bat[:xml] ",	"BATXMLcontent;",	""	]
[ "batxml",	"document",	"command batxml.document(:bat[:str]):bat[:xml] ",	"BATXMLdocument;",	""	]
[ "batxml",	"element",	"command batxml.element(:str, :xml, :xml, :bat[:xml]):bat[:xml] ",	"BATXMLelement;",	""	]
[ "batxml",	"element",	"command batxml.element(:str, :bat[:xml]):bat[:xml] ",	"BATXMLelementSmall;",	""	]
[ "batxml",	"forest",	"pattern batxml.forest(:bat[:xml]...):bat[:xml] ",	"BATXMLforest;",	""	]
[ "batxml",	"isdocument",	"command batxml.isdocument(:bat[:str]):bat[:bit] ",	"BATXMLisdocument;",	""	]
[ "batxml",	"options",	"command batxml.options(:str, :str, :bat[:xml]):bat[:xml] ",	"BATXMLoptions;",	""	]
[ "batxml",	"parse",	"command batxml.parse(:str, :bat[:str], :str):bat[:xml] ",	"BATXMLparse;",	""	]
[ "batxml",	"pi",	"command batxml.pi(:str, :bat[:xml]):bat[:xml] ",	"BATXMLpi;",	""	]
[ "batxml",	"root",	"command batxml.root(:bat[:xml], :str, :str):bat[:xml] ",	"BATXMLroot;",	""	]
[ "batxml",	"serialize",	"command batxml.serialize(:bat[:xml]):bat[:str] ",	"BATXMLxml2str;",	""	]
[ "batxml",	"str",	"command batxml.str(:bat[:xml]):bat[:str] ",	"BATXMLxml2str;",	""	]
[ "batxml",	"text",	"command batxml.text(:bat[:xml]):bat[:str] ",	"BATXMLxmltext;",	""	]
[ "batxml",	"xml",	"command batxml.xml(:bat[:str]):bat[:xml] ",	"BATXMLstr2xml;",	""	]
[ "batxml",	"xquery",	"command batxml.xquery(:bat[:str], :str):bat[:xml] ",	"BATXMLxquery;",	""	]
[ "bbp",	"bind",	"pattern bbp.bind(:str):bat[:any_2] ",	"CMDbbpbind;",	""	]
[ "bbp",	"get",	"command bbp.get() (:bat[:int], :bat[:str], :bat[:str], :bat[:lng], :bat[:int], :bat[:int], :bat[:str], :bat[:int], :bat[:str], :bat[:str], :bat[:str]) ",	"CMDbbp;",	""	]
[ "bbp",	"getCount",	"command bbp.getCount():bat[:lng] ",	"CMDbbpCount;",	""	]
[ "bbp",	"getDirty",	"command bbp.getDirty():bat[:str] ",	"CMDbbpDirty;",	""	]
[ "bbp",	"getDiskSpace",	"command bbp.getDiskSpace():lng ",	"CMDbbpDiskSpace;",	""	]
[ "bbp",	"getIndex",	"command bbp.getIndex(:bat[:any_2]):int ",	"CMDbbpgetIndex;",	""	]
[ "bbp",	"getKind",	"command bbp.getKind():bat[:str] ",	"CMDbbpKind;",	""	]
[ "bbp",	"getLRefCount",	"command bbp.getLRefCount():bat[:int] ",	"CMDbbpLRefCount;",	""	]
[ "bbp",	"getLRefCount",	"command bbp.getLRefCount(:bat[:any_1]):int ",	"CMDgetBATlrefcnt;",	""	]
[ "bbp",	"getLocation",	"command bbp.getLocation():bat[:str] ",	"CMDbbpLocation;",	""	]
[ "bbp",	"getName",	"command bbp.getName(:bat[:any_1]):str ",	"CMDbbpName;",	""	]
[ "bbp",	"getNames",	"command bbp.getNames():bat[:str] ",	"CMDbbpNames;",	""	]
[ "bbp",	"getPageSize",	"command bbp.getPageSize():int ",	"CMDgetPageSize;",	""	]
[ "bbp",	"getRefCount",	"command bbp.getRefCount():bat[:int] ",	"CMDbbpRefCount;",	""	]
[ "bbp",	"getRefCount",	"command bbp.getRefCount(:bat[:any_1]):int ",	"CMDgetBATrefcnt;",	""	]
[ "bbp",	"getStatus",	"command bbp.getStatus():bat[:str] ",	"CMDbbpStatus;",	""	]
[ "bbp",	"setName",	"command bbp.setName(:bat[:any_1], :str):str ",	"CMDsetName;",	""	]
[ "blob",	"blob",	"command blob.blob(:blob):blob ",	"BLOBblob_blob;",	""	]
[ "blob",	"blob",	"command blob.blob(:str):blob ",	"BLOBblob_fromstr;",	""	]
[ "blob",	"nitems",	"command blob.nitems(:blob):int ",	"BLOBnitems;",	""	]
[ "blob",	"prelude",	"command blob.prelude():void ",	"BLOBprelude;",	""	]
[ "blob",	"toblob",	"command blob.toblob(:str):blob ",	"BLOBtoblob;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bit, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bit, :bit, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:blob, :blob):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:blob, :blob, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :bte):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :bte, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :dbl):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :dbl, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :flt):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :flt, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :hge):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :hge, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :int):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :int, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :lng):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :lng, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :sht):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:bte, :sht, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:date, :date):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:date, :date, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:daytime, :daytime):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:daytime, :daytime, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :bte):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :bte, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :dbl):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :dbl, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :flt):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :flt, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :hge):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :hge, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :int):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :int, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :lng):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :lng, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :sht):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:dbl, :sht, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :bte):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :bte, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :dbl):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :dbl, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :flt):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :flt, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :hge):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :hge, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :int):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :int, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :lng):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :lng, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :sht):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:flt, :sht, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :bte):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :bte, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :dbl):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :dbl, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :flt):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :flt, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :hge):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :hge, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :int):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :int, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :lng):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :lng, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :sht):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:hge, :sht, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :bte):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :bte, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :dbl):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :dbl, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :flt):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :flt, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :hge):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :hge, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :int):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :int, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :lng):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :lng, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :sht):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:int, :sht, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:json, :json):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:json, :json, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :bte):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :bte, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :dbl):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :dbl, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :flt):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :flt, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :hge):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :hge, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :int):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :int, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :lng):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :lng, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :sht):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:lng, :sht, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:oid, :oid):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:oid, :oid, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :bte):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :bte, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :dbl):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :dbl, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :flt):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :flt, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :hge):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :hge, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :int):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :int, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :lng):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :lng, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :sht):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:sht, :sht, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:str, :str):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:str, :str, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:timestamp, :timestamp):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:timestamp, :timestamp, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:uuid, :uuid):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"pattern calc.!=(:uuid, :uuid, :bit):bit ",	"CMDvarNE;",	""	]
[ "calc",	"!=",	"command calc.!=(:inet, :inet):bit ",	"INET_comp_NEQ;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :bte):bte ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :bte):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :bte):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :bte):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :bte):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :dbl):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :flt):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :hge):bte ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :hge):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :hge):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :hge):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :hge):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :int):bte ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :int):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :int):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :int):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :int):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :lng):bte ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :lng):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :lng):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :lng):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :lng):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :sht):bte ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :sht):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :sht):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :sht):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:bte, :sht):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:dbl, :bte):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:dbl, :dbl):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:dbl, :flt):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:dbl, :hge):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:dbl, :int):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:dbl, :lng):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:dbl, :sht):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:flt, :bte):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:flt, :dbl):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:flt, :flt):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:flt, :hge):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:flt, :int):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:flt, :lng):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:flt, :sht):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :bte):bte ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :bte):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :bte):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :bte):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :bte):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :dbl):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :flt):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :hge):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :int):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :int):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :int):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :lng):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :lng):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :sht):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :sht):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :sht):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:hge, :sht):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :bte):bte ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :bte):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :bte):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :bte):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :bte):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :dbl):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :flt):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :hge):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :hge):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :hge):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :int):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :int):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :int):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :lng):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :lng):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :lng):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :sht):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :sht):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :sht):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:int, :sht):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :bte):bte ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :bte):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :bte):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :bte):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :bte):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :dbl):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :flt):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :hge):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :hge):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :int):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :int):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :int):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :lng):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :lng):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :sht):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :sht):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :sht):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:lng, :sht):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :bte):bte ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :bte):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :bte):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :bte):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :bte):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :dbl):dbl ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :flt):flt ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :hge):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :hge):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :hge):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :hge):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :int):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :int):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :int):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :int):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :lng):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :lng):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :lng):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :lng):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :sht):hge ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :sht):int ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :sht):lng ",	"CMDvarMODsignal;",	""	]
[ "calc",	"%",	"pattern calc.%(:sht, :sht):sht ",	"CMDvarMODsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :bte):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :bte):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :bte):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :bte):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :bte):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :bte):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :bte):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :dbl):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :dbl):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :dbl):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :dbl):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :dbl):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :dbl):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :flt):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :flt):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :flt):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :flt):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :flt):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :flt):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :flt):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :hge):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :hge):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :hge):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :int):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :int):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :int):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :int):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :int):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :lng):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :lng):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :lng):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :lng):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :sht):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :sht):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :sht):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :sht):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :sht):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:bte, :sht):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :bte):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :bte):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :bte):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :bte):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :bte):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :bte):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :dbl):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :flt):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :hge):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :hge):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :hge):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :hge):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :hge):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :hge):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :int):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :int):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :int):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :int):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :int):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :int):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :lng):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :lng):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :lng):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :lng):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :lng):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :lng):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :sht):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :sht):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :sht):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :sht):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :sht):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:dbl, :sht):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :bte):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :bte):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :bte):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :bte):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :bte):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :bte):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :bte):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :dbl):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :flt):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :flt):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :hge):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :hge):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :hge):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :hge):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :hge):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :hge):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :hge):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :int):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :int):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :int):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :int):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :int):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :int):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :int):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :lng):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :lng):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :lng):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :lng):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :lng):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :lng):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :lng):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :sht):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :sht):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :sht):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :sht):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :sht):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :sht):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:flt, :sht):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :bte):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :bte):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :bte):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :dbl):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :dbl):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :dbl):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :dbl):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :dbl):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :dbl):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :flt):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :flt):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :flt):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :flt):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :flt):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :flt):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :flt):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :hge):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :hge):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :hge):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :int):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :int):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :int):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :lng):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :lng):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :lng):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :sht):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :sht):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:hge, :sht):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :bte):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :bte):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :bte):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :bte):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :bte):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :dbl):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :dbl):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :dbl):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :dbl):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :dbl):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :dbl):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :flt):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :flt):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :flt):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :flt):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :flt):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :flt):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :flt):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :hge):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :hge):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :hge):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :int):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :int):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :int):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :int):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :int):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :lng):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :lng):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :lng):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :lng):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :sht):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :sht):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :sht):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :sht):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:int, :sht):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :bte):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :bte):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :bte):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :bte):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :dbl):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :dbl):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :dbl):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :dbl):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :dbl):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :dbl):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :flt):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :flt):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :flt):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :flt):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :flt):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :flt):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :flt):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :hge):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :hge):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :hge):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :int):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :int):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :int):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :int):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :lng):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :lng):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :lng):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :lng):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :sht):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :sht):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :sht):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:lng, :sht):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :bte):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :bte):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :bte):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :bte):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :bte):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :bte):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :dbl):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :dbl):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :dbl):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :dbl):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :dbl):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :dbl):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :flt):bte ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :flt):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :flt):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :flt):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :flt):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :flt):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :flt):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :hge):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :hge):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :hge):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :int):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :int):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :int):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :int):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :int):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :lng):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :lng):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :lng):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :lng):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :sht):dbl ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :sht):flt ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :sht):hge ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :sht):int ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :sht):lng ",	"CMDvarMULsignal;",	""	]
[ "calc",	"*",	"pattern calc.*(:sht, :sht):sht ",	"CMDvarMULsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :bte):bte ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :bte):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :bte):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :bte):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :bte):int ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :bte):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :bte):sht ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :dbl):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :flt):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :flt):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :hge):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :hge):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :hge):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :int):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :int):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :int):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :int):int ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :int):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :lng):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :lng):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :lng):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :lng):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :sht):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :sht):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :sht):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :sht):int ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :sht):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:bte, :sht):sht ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:dbl, :bte):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:dbl, :dbl):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:dbl, :flt):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:dbl, :hge):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:dbl, :int):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:dbl, :lng):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:dbl, :sht):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :bte):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :bte):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :dbl):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :flt):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :flt):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :hge):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :hge):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :int):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :int):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :lng):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :lng):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :sht):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:flt, :sht):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :bte):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :bte):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :bte):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :dbl):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :flt):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :flt):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :hge):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :hge):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :hge):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :int):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :int):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :int):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :lng):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :lng):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :lng):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :sht):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :sht):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:hge, :sht):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :bte):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :bte):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :bte):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :bte):int ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :bte):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :dbl):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :flt):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :flt):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :hge):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :hge):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :hge):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :int):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :int):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :int):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :int):int ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :int):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :lng):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :lng):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :lng):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :lng):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :sht):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :sht):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :sht):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :sht):int ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:int, :sht):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :bte):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :bte):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :bte):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :bte):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :dbl):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :flt):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :flt):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :hge):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :hge):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :hge):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :int):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :int):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :int):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :int):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :lng):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :lng):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :lng):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :lng):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :sht):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :sht):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :sht):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:lng, :sht):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :bte):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :bte):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :bte):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :bte):int ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :bte):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :bte):sht ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :dbl):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :flt):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :flt):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :hge):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :hge):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :hge):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :int):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :int):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :int):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :int):int ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :int):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :lng):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :lng):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :lng):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :lng):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :sht):dbl ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :sht):flt ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :sht):hge ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :sht):int ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :sht):lng ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"pattern calc.+(:sht, :sht):sht ",	"CMDvarADDsignal;",	""	]
[ "calc",	"+",	"command calc.+(:str, :str):str ",	"CMDvarADDstr;",	""	]
[ "calc",	"+",	"command calc.+(:str, :int):str ",	"CMDvarADDstrint;",	""	]
[ "calc",	"++",	"pattern calc.++(:bte):bte ",	"CMDvarINCRsignal;",	""	]
[ "calc",	"++",	"pattern calc.++(:dbl):dbl ",	"CMDvarINCRsignal;",	""	]
[ "calc",	"++",	"pattern calc.++(:flt):flt ",	"CMDvarINCRsignal;",	""	]
[ "calc",	"++",	"pattern calc.++(:hge):hge ",	"CMDvarINCRsignal;",	""	]
[ "calc",	"++",	"pattern calc.++(:int):int ",	"CMDvarINCRsignal;",	""	]
[ "calc",	"++",	"pattern calc.++(:lng):lng ",	"CMDvarINCRsignal;",	""	]
[ "calc",	"++",	"pattern calc.++(:sht):sht ",	"CMDvarINCRsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte):bte ",	"CMDvarNEG;",	""	]
[ "calc",	"-",	"pattern calc.-(:dbl):dbl ",	"CMDvarNEG;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt):flt ",	"CMDvarNEG;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge):hge ",	"CMDvarNEG;",	""	]
[ "calc",	"-",	"pattern calc.-(:int):int ",	"CMDvarNEG;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng):lng ",	"CMDvarNEG;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht):sht ",	"CMDvarNEG;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :bte):bte ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :bte):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :bte):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :bte):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :bte):int ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :bte):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :bte):sht ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :dbl):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :flt):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :flt):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :hge):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :hge):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :hge):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :int):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :int):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :int):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :int):int ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :int):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :lng):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :lng):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :lng):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :lng):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :sht):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :sht):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :sht):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :sht):int ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :sht):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:bte, :sht):sht ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:dbl, :bte):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:dbl, :dbl):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:dbl, :flt):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:dbl, :hge):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:dbl, :int):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:dbl, :lng):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:dbl, :sht):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :bte):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :bte):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :dbl):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :flt):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :flt):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :hge):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :hge):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :int):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :int):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :lng):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :lng):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :sht):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:flt, :sht):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :bte):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :bte):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :bte):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :dbl):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :flt):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :flt):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :hge):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :hge):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :hge):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :int):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :int):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :int):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :lng):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :lng):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :lng):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :sht):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :sht):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:hge, :sht):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :bte):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :bte):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :bte):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :bte):int ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :bte):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :dbl):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :flt):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :flt):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :hge):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :hge):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :hge):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :int):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :int):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :int):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :int):int ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :int):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :lng):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :lng):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :lng):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :lng):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :sht):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :sht):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :sht):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :sht):int ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:int, :sht):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :bte):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :bte):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :bte):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :bte):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :dbl):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :flt):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :flt):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :hge):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :hge):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :hge):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :int):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :int):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :int):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :int):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :lng):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :lng):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :lng):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :lng):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :sht):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :sht):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :sht):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:lng, :sht):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :bte):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :bte):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :bte):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :bte):int ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :bte):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :bte):sht ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :dbl):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :flt):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :flt):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :hge):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :hge):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :hge):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :int):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :int):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :int):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :int):int ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :int):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :lng):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :lng):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :lng):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :lng):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :sht):dbl ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :sht):flt ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :sht):hge ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :sht):int ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :sht):lng ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"-",	"pattern calc.-(:sht, :sht):sht ",	"CMDvarSUBsignal;",	""	]
[ "calc",	"--",	"pattern calc.--(:bte):bte ",	"CMDvarDECRsignal;",	""	]
[ "calc",	"--",	"pattern calc.--(:dbl):dbl ",	"CMDvarDECRsignal;",	""	]
[ "calc",	"--",	"pattern calc.--(:flt):flt ",	"CMDvarDECRsignal;",	""	]
[ "calc",	"--",	"pattern calc.--(:hge):hge ",	"CMDvarDECRsignal;",	""	]
[ "calc",	"--",	"pattern calc.--(:int):int ",	"CMDvarDECRsignal;",	""	]
[ "calc",	"--",	"pattern calc.--(:lng):lng ",	"CMDvarDECRsignal;",	""	]
[ "calc",	"--",	"pattern calc.--(:sht):sht ",	"CMDvarDECRsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :bte):bte ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :bte):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :bte):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :bte):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :bte):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :bte):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :bte):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :dbl):bte ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :dbl):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :dbl):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :dbl):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :dbl):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :dbl):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :dbl):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :flt):bte ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :flt):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :flt):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :flt):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :flt):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :flt):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :flt):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :hge):bte ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :hge):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :hge):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :hge):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :hge):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :hge):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :hge):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :int):bte ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :int):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :int):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :int):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :int):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :int):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :int):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :lng):bte ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :lng):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :lng):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :lng):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :lng):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :lng):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :lng):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :sht):bte ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :sht):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :sht):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :sht):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :sht):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :sht):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:bte, :sht):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :bte):bte ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :bte):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :dbl):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :flt):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :hge):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :hge):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :int):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :int):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :lng):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :lng):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :sht):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:dbl, :sht):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :bte):bte ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :bte):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :bte):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :dbl):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :dbl):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :flt):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :flt):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :hge):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :hge):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :hge):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :int):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :int):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :int):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :lng):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :lng):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :lng):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :sht):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :sht):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:flt, :sht):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :bte):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :bte):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :bte):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :dbl):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :dbl):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :dbl):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :flt):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :flt):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :flt):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :hge):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :hge):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :hge):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :int):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :int):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :int):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :lng):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :lng):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :lng):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :sht):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :sht):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:hge, :sht):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :bte):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :bte):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :bte):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :bte):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :bte):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :dbl):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :dbl):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :dbl):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :dbl):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :dbl):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :flt):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :flt):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :flt):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :flt):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :flt):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :hge):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :hge):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :hge):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :hge):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :hge):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :int):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :int):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :int):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :int):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :int):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :lng):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :lng):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :lng):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :lng):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :lng):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :sht):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :sht):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :sht):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :sht):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:int, :sht):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :bte):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :bte):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :bte):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :bte):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :dbl):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :dbl):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :dbl):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :dbl):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :flt):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :flt):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :flt):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :flt):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :hge):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :hge):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :hge):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :hge):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :int):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :int):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :int):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :int):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :lng):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :lng):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :lng):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :lng):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :sht):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :sht):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :sht):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:lng, :sht):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :bte):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :bte):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :bte):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :bte):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :bte):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :bte):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :dbl):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :dbl):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :dbl):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :dbl):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :dbl):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :dbl):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :flt):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :flt):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :flt):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :flt):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :flt):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :flt):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :hge):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :hge):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :hge):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :hge):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :hge):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :hge):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :int):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :int):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :int):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :int):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :int):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :int):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :lng):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :lng):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :lng):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :lng):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :lng):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :lng):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :sht):dbl ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :sht):flt ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :sht):hge ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :sht):int ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :sht):lng ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"/",	"pattern calc./(:sht, :sht):sht ",	"CMDvarDIVsignal;",	""	]
[ "calc",	"<",	"pattern calc.<(:bit, :bit):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:blob, :blob):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:bte, :bte):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:bte, :dbl):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:bte, :flt):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:bte, :hge):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:bte, :int):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:bte, :lng):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:bte, :sht):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:date, :date):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:daytime, :daytime):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:dbl, :bte):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:dbl, :dbl):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:dbl, :flt):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:dbl, :hge):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:dbl, :int):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:dbl, :lng):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:dbl, :sht):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:flt, :bte):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:flt, :dbl):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:flt, :flt):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:flt, :hge):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:flt, :int):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:flt, :lng):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:flt, :sht):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:hge, :bte):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:hge, :dbl):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:hge, :flt):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:hge, :hge):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:hge, :int):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:hge, :lng):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:hge, :sht):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:int, :bte):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:int, :dbl):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:int, :flt):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:int, :hge):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:int, :int):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:int, :lng):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:int, :sht):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:json, :json):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:lng, :bte):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:lng, :dbl):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:lng, :flt):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:lng, :hge):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:lng, :int):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:lng, :lng):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:lng, :sht):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:oid, :oid):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:sht, :bte):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:sht, :dbl):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:sht, :flt):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:sht, :hge):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:sht, :int):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:sht, :lng):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:sht, :sht):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:str, :str):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:timestamp, :timestamp):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"pattern calc.<(:uuid, :uuid):bit ",	"CMDvarLT;",	""	]
[ "calc",	"<",	"command calc.<(:inet, :inet):bit ",	"INET_comp_LT;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:bte, :bte):bte ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:bte, :hge):bte ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:bte, :int):bte ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:bte, :lng):bte ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:bte, :sht):bte ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:hge, :bte):hge ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:hge, :hge):hge ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:hge, :int):hge ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:hge, :lng):hge ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:hge, :sht):hge ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:int, :bte):int ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:int, :hge):int ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:int, :int):int ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:int, :lng):int ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:int, :sht):int ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:lng, :bte):lng ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:lng, :hge):lng ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:lng, :int):lng ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:lng, :lng):lng ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:lng, :sht):lng ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:sht, :bte):sht ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:sht, :hge):sht ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:sht, :int):sht ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:sht, :lng):sht ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<<",	"pattern calc.<<(:sht, :sht):sht ",	"CMDvarLSHsignal;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:bit, :bit):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:blob, :blob):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:bte, :bte):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:bte, :dbl):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:bte, :flt):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:bte, :hge):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:bte, :int):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:bte, :lng):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:bte, :sht):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:date, :date):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:daytime, :daytime):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:dbl, :bte):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:dbl, :dbl):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:dbl, :flt):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:dbl, :hge):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:dbl, :int):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:dbl, :lng):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:dbl, :sht):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:flt, :bte):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:flt, :dbl):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:flt, :flt):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:flt, :hge):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:flt, :int):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:flt, :lng):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:flt, :sht):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:hge, :bte):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:hge, :dbl):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:hge, :flt):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:hge, :hge):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:hge, :int):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:hge, :lng):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:hge, :sht):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:int, :bte):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:int, :dbl):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:int, :flt):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:int, :hge):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:int, :int):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:int, :lng):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:int, :sht):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:json, :json):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:lng, :bte):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:lng, :dbl):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:lng, :flt):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:lng, :hge):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:lng, :int):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:lng, :lng):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:lng, :sht):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:oid, :oid):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:sht, :bte):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:sht, :dbl):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:sht, :flt):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:sht, :hge):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:sht, :int):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:sht, :lng):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:sht, :sht):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:str, :str):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:timestamp, :timestamp):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"pattern calc.<=(:uuid, :uuid):bit ",	"CMDvarLE;",	""	]
[ "calc",	"<=",	"command calc.<=(:inet, :inet):bit ",	"INET_comp_LE;",	""	]
[ "calc",	"==",	"pattern calc.==(:bit, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bit, :bit, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:blob, :blob):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:blob, :blob, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :bte):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :bte, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :dbl):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :dbl, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :flt):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :flt, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :hge):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :hge, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :int):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :int, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :lng):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :lng, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :sht):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:bte, :sht, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:date, :date):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:date, :date, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:daytime, :daytime):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:daytime, :daytime, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :bte):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :bte, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :dbl):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :dbl, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :flt):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :flt, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :hge):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :hge, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :int):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :int, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :lng):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :lng, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :sht):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:dbl, :sht, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :bte):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :bte, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :dbl):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :dbl, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :flt):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :flt, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :hge):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :hge, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :int):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :int, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :lng):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :lng, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :sht):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:flt, :sht, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :bte):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :bte, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :dbl):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :dbl, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :flt):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :flt, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :hge):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :hge, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :int):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :int, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :lng):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :lng, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :sht):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:hge, :sht, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :bte):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :bte, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :dbl):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :dbl, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :flt):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :flt, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :hge):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :hge, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :int):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :int, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :lng):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :lng, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :sht):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:int, :sht, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:json, :json):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:json, :json, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :bte):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :bte, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :dbl):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :dbl, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :flt):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :flt, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :hge):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :hge, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :int):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :int, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :lng):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :lng, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :sht):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:lng, :sht, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:oid, :oid):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:oid, :oid, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :bte):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :bte, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :dbl):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :dbl, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :flt):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :flt, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :hge):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :hge, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :int):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :int, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :lng):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :lng, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :sht):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:sht, :sht, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:str, :str):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:str, :str, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:timestamp, :timestamp):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:timestamp, :timestamp, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:uuid, :uuid):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"pattern calc.==(:uuid, :uuid, :bit):bit ",	"CMDvarEQ;",	""	]
[ "calc",	"==",	"command calc.==(:inet, :inet):bit ",	"INET_comp_EQ;",	""	]
[ "calc",	">",	"pattern calc.>(:bit, :bit):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:blob, :blob):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:bte, :bte):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:bte, :dbl):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:bte, :flt):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:bte, :hge):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:bte, :int):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:bte, :lng):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:bte, :sht):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:date, :date):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:daytime, :daytime):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:dbl, :bte):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:dbl, :dbl):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:dbl, :flt):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:dbl, :hge):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:dbl, :int):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:dbl, :lng):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:dbl, :sht):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:flt, :bte):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:flt, :dbl):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:flt, :flt):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:flt, :hge):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:flt, :int):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:flt, :lng):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:flt, :sht):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:hge, :bte):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:hge, :dbl):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:hge, :flt):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:hge, :hge):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:hge, :int):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:hge, :lng):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:hge, :sht):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:int, :bte):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:int, :dbl):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:int, :flt):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:int, :hge):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:int, :int):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:int, :lng):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:int, :sht):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:json, :json):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:lng, :bte):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:lng, :dbl):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:lng, :flt):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:lng, :hge):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:lng, :int):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:lng, :lng):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:lng, :sht):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:oid, :oid):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:sht, :bte):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:sht, :dbl):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:sht, :flt):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:sht, :hge):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:sht, :int):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:sht, :lng):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:sht, :sht):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:str, :str):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:timestamp, :timestamp):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"pattern calc.>(:uuid, :uuid):bit ",	"CMDvarGT;",	""	]
[ "calc",	">",	"command calc.>(:inet, :inet):bit ",	"INET_comp_GT;",	""	]
[ "calc",	">=",	"pattern calc.>=(:bit, :bit):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:blob, :blob):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:bte, :bte):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:bte, :dbl):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:bte, :flt):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:bte, :hge):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:bte, :int):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:bte, :lng):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:bte, :sht):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:date, :date):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:daytime, :daytime):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:dbl, :bte):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:dbl, :dbl):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:dbl, :flt):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:dbl, :hge):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:dbl, :int):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:dbl, :lng):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:dbl, :sht):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:flt, :bte):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:flt, :dbl):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:flt, :flt):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:flt, :hge):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:flt, :int):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:flt, :lng):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:flt, :sht):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:hge, :bte):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:hge, :dbl):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:hge, :flt):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:hge, :hge):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:hge, :int):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:hge, :lng):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:hge, :sht):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:int, :bte):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:int, :dbl):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:int, :flt):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:int, :hge):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:int, :int):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:int, :lng):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:int, :sht):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:json, :json):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:lng, :bte):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:lng, :dbl):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:lng, :flt):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:lng, :hge):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:lng, :int):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:lng, :lng):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:lng, :sht):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:oid, :oid):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:sht, :bte):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:sht, :dbl):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:sht, :flt):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:sht, :hge):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:sht, :int):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:sht, :lng):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:sht, :sht):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:str, :str):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:timestamp, :timestamp):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"pattern calc.>=(:uuid, :uuid):bit ",	"CMDvarGE;",	""	]
[ "calc",	">=",	"command calc.>=(:inet, :inet):bit ",	"INET_comp_GE;",	""	]
[ "calc",	">>",	"pattern calc.>>(:bte, :bte):bte ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:bte, :hge):bte ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:bte, :int):bte ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:bte, :lng):bte ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:bte, :sht):bte ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:hge, :bte):hge ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:hge, :hge):hge ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:hge, :int):hge ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:hge, :lng):hge ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:hge, :sht):hge ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:int, :bte):int ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:int, :hge):int ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:int, :int):int ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:int, :lng):int ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:int, :sht):int ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:lng, :bte):lng ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:lng, :hge):lng ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:lng, :int):lng ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:lng, :lng):lng ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:lng, :sht):lng ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:sht, :bte):sht ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:sht, :hge):sht ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:sht, :int):sht ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:sht, :lng):sht ",	"CMDvarRSHsignal;",	""	]
[ "calc",	">>",	"pattern calc.>>(:sht, :sht):sht ",	"CMDvarRSHsignal;",	""	]
[ "calc",	"abs",	"pattern calc.abs(:bte):bte ",	"CMDvarABS;",	""	]
[ "calc",	"abs",	"pattern calc.abs(:dbl):dbl ",	"CMDvarABS;",	""	]
[ "calc",	"abs",	"pattern calc.abs(:flt):flt ",	"CMDvarABS;",	""	]
[ "calc",	"abs",	"pattern calc.abs(:hge):hge ",	"CMDvarABS;",	""	]
[ "calc",	"abs",	"pattern calc.abs(:int):int ",	"CMDvarABS;",	""	]
[ "calc",	"abs",	"pattern calc.abs(:lng):lng ",	"CMDvarABS;",	""	]
[ "calc",	"abs",	"pattern calc.abs(:sht):sht ",	"CMDvarABS;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:bte, :bte):bte ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:bte, :dbl):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:bte, :flt):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:bte, :hge):hge ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:bte, :int):int ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:bte, :lng):lng ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:bte, :sht):sht ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:dbl, :bte):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:dbl, :dbl):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:dbl, :flt):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:dbl, :hge):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:dbl, :int):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:dbl, :lng):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:dbl, :sht):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:flt, :bte):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:flt, :dbl):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:flt, :flt):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:flt, :hge):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:flt, :int):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:flt, :lng):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:flt, :sht):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:hge, :bte):hge ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:hge, :dbl):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:hge, :flt):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:hge, :hge):hge ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:hge, :int):hge ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:hge, :lng):hge ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:hge, :sht):hge ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:int, :bte):int ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:int, :dbl):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:int, :flt):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:int, :hge):hge ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:int, :int):int ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:int, :lng):lng ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:int, :sht):int ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:lng, :bte):lng ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:lng, :dbl):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:lng, :flt):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:lng, :hge):hge ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:lng, :int):lng ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:lng, :lng):lng ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:lng, :sht):lng ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:sht, :bte):sht ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:sht, :dbl):dbl ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:sht, :flt):flt ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:sht, :hge):hge ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:sht, :int):int ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:sht, :lng):lng ",	"CMDvarADD;",	""	]
[ "calc",	"add_noerror",	"pattern calc.add_noerror(:sht, :sht):sht ",	"CMDvarADD;",	""	]
[ "calc",	"and",	"pattern calc.and(:bit, :bit):bit ",	"CMDvarAND;",	""	]
[ "calc",	"and",	"pattern calc.and(:bte, :bte):bte ",	"CMDvarAND;",	""	]
[ "calc",	"and",	"pattern calc.and(:hge, :hge):hge ",	"CMDvarAND;",	""	]
[ "calc",	"and",	"pattern calc.and(:int, :int):int ",	"CMDvarAND;",	""	]
[ "calc",	"and",	"pattern calc.and(:lng, :lng):lng ",	"CMDvarAND;",	""	]
[ "calc",	"and",	"pattern calc.and(:sht, :sht):sht ",	"CMDvarAND;",	""	]
[ "calc",	"between",	"pattern calc.between(:any_1, :any_1, :any_1, :bit, :bit, :bit, :bit, :bit):bit ",	"CMDvarBETWEEN;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:bit):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:bte):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:dbl):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:flt):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:hge):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:int):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:lng):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:oid):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:sht):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:str):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bit",	"pattern calc.bit(:void):bit ",	"CMDvarCONVERT;",	""	]
[ "calc",	"blob",	"command calc.blob(:blob):blob ",	"BLOBblob_blob;",	""	]
[ "calc",	"blob",	"command calc.blob(:str):blob ",	"BLOBblob_fromstr;",	""	]
[ "calc",	"blob",	"command calc.blob(:str):blob ",	"str_2_blob;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:bit):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:bte):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:dbl):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:flt):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:hge):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:int):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:lng):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:oid):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:sht):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:str):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"pattern calc.bte(:void):bte ",	"CMDvarCONVERT;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :bte):bte ",	"bte_dec2_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :bte, :int, :int):bte ",	"bte_dec2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:bte, :int, :int):bte ",	"bte_num2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:dbl, :int, :int):bte ",	"dbl_num2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:flt, :int, :int):bte ",	"flt_num2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :hge):bte ",	"hge_dec2_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :hge, :int, :int):bte ",	"hge_dec2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:hge, :int, :int):bte ",	"hge_num2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :int):bte ",	"int_dec2_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :int, :int, :int):bte ",	"int_dec2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :int, :int):bte ",	"int_num2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :lng):bte ",	"lng_dec2_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :lng, :int, :int):bte ",	"lng_dec2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:lng, :int, :int):bte ",	"lng_num2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:void, :int, :int):bte ",	"nil_2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :sht):bte ",	"sht_dec2_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:int, :sht, :int, :int):bte ",	"sht_dec2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:sht, :int, :int):bte ",	"sht_num2dec_bte;",	""	]
[ "calc",	"bte",	"command calc.bte(:str, :int, :int):bte ",	"str_2dec_bte;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:bit, :bit):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:bte, :bte):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:bte, :dbl):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:bte, :flt):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:bte, :hge):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:bte, :int):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:bte, :lng):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:bte, :sht):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:dbl, :bte):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:dbl, :dbl):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:dbl, :flt):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:dbl, :hge):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:dbl, :int):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:dbl, :lng):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:dbl, :sht):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:flt, :bte):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:flt, :dbl):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:flt, :flt):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:flt, :hge):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:flt, :int):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:flt, :lng):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:flt, :sht):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:hge, :bte):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:hge, :dbl):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:hge, :flt):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:hge, :hge):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:hge, :int):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:hge, :lng):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:hge, :sht):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:int, :bte):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:int, :dbl):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:int, :flt):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:int, :hge):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:int, :int):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:int, :lng):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:int, :sht):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:lng, :bte):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:lng, :dbl):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:lng, :flt):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:lng, :hge):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:lng, :int):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:lng, :lng):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:lng, :sht):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:oid, :oid):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:sht, :bte):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:sht, :dbl):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:sht, :flt):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:sht, :hge):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:sht, :int):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:sht, :lng):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:sht, :sht):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"cmp",	"pattern calc.cmp(:str, :str):bte ",	"CMDvarCMP;",	""	]
[ "calc",	"date",	"command calc.date(:date):date ",	"MTIMEdate_date;",	""	]
[ "calc",	"date",	"command calc.date(:str):date ",	"MTIMEdate_fromstr;",	""	]
[ "calc",	"date",	"command calc.date(:timestamp):date ",	"MTIMEtimestamp_extract_date;",	""	]
[ "calc",	"date",	"pattern calc.date(:void):date ",	"nil_2_date;",	""	]
[ "calc",	"date",	"pattern calc.date(:str):date ",	"str_2_date;",	""	]
[ "calc",	"daytime",	"command calc.daytime(:daytime):daytime ",	"MTIMEdaytime_daytime;",	""	]
[ "calc",	"daytime",	"command calc.daytime(:lng):daytime ",	"MTIMEdaytime_fromseconds;",	""	]
[ "calc",	"daytime",	"command calc.daytime(:str):daytime ",	"MTIMEdaytime_fromstr;",	""	]
[ "calc",	"daytime",	"command calc.daytime(:timestamp):daytime ",	"MTIMEtimestamp_extract_daytime;",	""	]
[ "calc",	"daytime",	"pattern calc.daytime(:daytime, :int):daytime ",	"daytime_2time_daytime;",	""	]
[ "calc",	"daytime",	"pattern calc.daytime(:lng, :int):daytime ",	"second_interval_2_daytime;",	""	]
[ "calc",	"daytime",	"pattern calc.daytime(:str, :int):daytime ",	"str_2time_daytime;",	""	]
[ "calc",	"daytime",	"pattern calc.daytime(:str, :int, :int):daytime ",	"str_2time_daytimetz;",	""	]
[ "calc",	"daytime",	"pattern calc.daytime(:timestamp, :int):daytime ",	"timestamp_2_daytime;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:bit):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:bte):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:dbl):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:flt):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:hge):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:int):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:lng):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:oid):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:sht):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:str):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"pattern calc.dbl(:void):dbl ",	"CMDvarCONVERT;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :bte):dbl ",	"bte_dec2_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :bte, :int, :int):dbl ",	"bte_dec2dec_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:bte, :int, :int):dbl ",	"bte_num2dec_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :hge):dbl ",	"hge_dec2_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :hge, :int, :int):dbl ",	"hge_dec2dec_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:hge, :int, :int):dbl ",	"hge_num2dec_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :int):dbl ",	"int_dec2_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :int, :int, :int):dbl ",	"int_dec2dec_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :int, :int):dbl ",	"int_num2dec_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :lng):dbl ",	"lng_dec2_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :lng, :int, :int):dbl ",	"lng_dec2dec_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:lng, :int, :int):dbl ",	"lng_num2dec_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :sht):dbl ",	"sht_dec2_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:int, :sht, :int, :int):dbl ",	"sht_dec2dec_dbl;",	""	]
[ "calc",	"dbl",	"command calc.dbl(:sht, :int, :int):dbl ",	"sht_num2dec_dbl;",	""	]
[ "calc",	"dec_round",	"command calc.dec_round(:bte, :bte):bte ",	"bte_dec_round_wrap;",	""	]
[ "calc",	"dec_round",	"command calc.dec_round(:dbl, :dbl):dbl ",	"dbl_dec_round_wrap;",	""	]
[ "calc",	"dec_round",	"command calc.dec_round(:flt, :flt):flt ",	"flt_dec_round_wrap;",	""	]
[ "calc",	"dec_round",	"command calc.dec_round(:hge, :hge):hge ",	"hge_dec_round_wrap;",	""	]
[ "calc",	"dec_round",	"command calc.dec_round(:int, :int):int ",	"int_dec_round_wrap;",	""	]
[ "calc",	"dec_round",	"command calc.dec_round(:lng, :lng):lng ",	"lng_dec_round_wrap;",	""	]
[ "calc",	"dec_round",	"command calc.dec_round(:sht, :sht):sht ",	"sht_dec_round_wrap;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :bte):bte ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :bte):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :bte):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :bte):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :bte):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :bte):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :bte):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :dbl):bte ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :dbl):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :dbl):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :dbl):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :dbl):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :dbl):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :dbl):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :flt):bte ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :flt):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :flt):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :flt):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :flt):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :flt):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :flt):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :hge):bte ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :hge):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :hge):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :hge):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :hge):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :hge):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :hge):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :int):bte ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :int):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :int):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :int):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :int):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :int):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :int):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :lng):bte ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :lng):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :lng):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :lng):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :lng):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :lng):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :lng):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :sht):bte ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :sht):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :sht):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :sht):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :sht):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :sht):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:bte, :sht):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :bte):bte ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :bte):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :dbl):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :flt):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :hge):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :hge):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :int):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :int):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :lng):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :lng):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :sht):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:dbl, :sht):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :bte):bte ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :bte):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :bte):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :dbl):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :dbl):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :flt):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :flt):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :hge):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :hge):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :hge):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :int):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :int):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :int):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :lng):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :lng):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :lng):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :sht):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :sht):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:flt, :sht):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :bte):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :bte):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :bte):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :dbl):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :dbl):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :dbl):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :flt):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :flt):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :flt):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :hge):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :hge):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :hge):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :int):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :int):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :int):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :lng):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :lng):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :lng):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :sht):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :sht):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:hge, :sht):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :bte):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :bte):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :bte):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :bte):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :bte):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :dbl):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :dbl):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :dbl):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :dbl):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :dbl):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :flt):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :flt):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :flt):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :flt):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :flt):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :hge):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :hge):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :hge):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :hge):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :hge):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :int):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :int):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :int):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :int):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :int):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :lng):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :lng):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :lng):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :lng):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :lng):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :sht):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :sht):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :sht):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :sht):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:int, :sht):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :bte):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :bte):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :bte):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :bte):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :dbl):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :dbl):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :dbl):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :dbl):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :flt):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :flt):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :flt):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :flt):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :hge):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :hge):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :hge):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :hge):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :int):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :int):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :int):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :int):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :lng):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :lng):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :lng):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :lng):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :sht):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :sht):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :sht):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:lng, :sht):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :bte):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :bte):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :bte):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :bte):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :bte):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :bte):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :dbl):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :dbl):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :dbl):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :dbl):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :dbl):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :dbl):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :flt):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :flt):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :flt):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :flt):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :flt):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :flt):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :hge):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :hge):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :hge):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :hge):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :hge):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :hge):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :int):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :int):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :int):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :int):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :int):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :int):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :lng):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :lng):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :lng):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :lng):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :lng):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :lng):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :sht):dbl ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :sht):flt ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :sht):hge ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :sht):int ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :sht):lng ",	"CMDvarDIV;",	""	]
[ "calc",	"div_noerror",	"pattern calc.div_noerror(:sht, :sht):sht ",	"CMDvarDIV;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:bit):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:bte):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:dbl):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:flt):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:hge):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:int):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:lng):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:oid):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:sht):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:str):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"pattern calc.flt(:void):flt ",	"CMDvarCONVERT;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :bte):flt ",	"bte_dec2_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :bte, :int, :int):flt ",	"bte_dec2dec_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:bte, :int, :int):flt ",	"bte_num2dec_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :hge):flt ",	"hge_dec2_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :hge, :int, :int):flt ",	"hge_dec2dec_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:hge, :int, :int):flt ",	"hge_num2dec_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :int):flt ",	"int_dec2_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :int, :int, :int):flt ",	"int_dec2dec_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :int, :int):flt ",	"int_num2dec_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :lng):flt ",	"lng_dec2_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :lng, :int, :int):flt ",	"lng_dec2dec_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:lng, :int, :int):flt ",	"lng_num2dec_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :sht):flt ",	"sht_dec2_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:int, :sht, :int, :int):flt ",	"sht_dec2dec_flt;",	""	]
[ "calc",	"flt",	"command calc.flt(:sht, :int, :int):flt ",	"sht_num2dec_flt;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:any):lng ",	"MKEYhash;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:bte):lng ",	"MKEYhash;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:dbl):lng ",	"MKEYhash;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:flt):lng ",	"MKEYhash;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:hge):lng ",	"MKEYhash;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:int):lng ",	"MKEYhash;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:lng):lng ",	"MKEYhash;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:lng):lng ",	"MKEYhash;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:oid):lng ",	"MKEYhash;",	""	]
[ "calc",	"hash",	"pattern calc.hash(:sht):lng ",	"MKEYhash;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:bit):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:bte):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:dbl):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:flt):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:hge):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:int):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:lng):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:oid):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:sht):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:str):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"pattern calc.hge(:void):hge ",	"CMDvarCONVERT;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :bte):hge ",	"bte_dec2_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :bte, :int, :int):hge ",	"bte_dec2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:bte, :int, :int):hge ",	"bte_num2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:dbl, :int, :int):hge ",	"dbl_num2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:flt, :int, :int):hge ",	"flt_num2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :hge):hge ",	"hge_dec2_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :hge, :int, :int):hge ",	"hge_dec2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:hge, :int, :int):hge ",	"hge_num2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :int):hge ",	"int_dec2_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :int, :int, :int):hge ",	"int_dec2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :int, :int):hge ",	"int_num2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :lng):hge ",	"lng_dec2_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :lng, :int, :int):hge ",	"lng_dec2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:lng, :int, :int):hge ",	"lng_num2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:void, :int, :int):hge ",	"nil_2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :sht):hge ",	"sht_dec2_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:int, :sht, :int, :int):hge ",	"sht_dec2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:sht, :int, :int):hge ",	"sht_num2dec_hge;",	""	]
[ "calc",	"hge",	"command calc.hge(:str, :int, :int):hge ",	"str_2dec_hge;",	""	]
[ "calc",	"identity",	"command calc.identity(:any):oid ",	"SQLidentity;",	""	]
[ "calc",	"ifthenelse",	"pattern calc.ifthenelse(:bit, :any_1, :any_1):any_1 ",	"CALCswitchbit;",	""	]
[ "calc",	"inet",	"command calc.inet(:str):inet ",	"INET_fromstr;",	""	]
[ "calc",	"inet",	"command calc.inet(:inet):inet ",	"INET_inet;",	""	]
[ "calc",	"int",	"pattern calc.int(:bit):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:bte):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:dbl):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:flt):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:hge):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:int):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:lng):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:oid):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:sht):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:str):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"pattern calc.int(:void):int ",	"CMDvarCONVERT;",	""	]
[ "calc",	"int",	"command calc.int(:int, :bte):int ",	"bte_dec2_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :bte, :int, :int):int ",	"bte_dec2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:bte, :int, :int):int ",	"bte_num2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:dbl, :int, :int):int ",	"dbl_num2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:flt, :int, :int):int ",	"flt_num2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :hge):int ",	"hge_dec2_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :hge, :int, :int):int ",	"hge_dec2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:hge, :int, :int):int ",	"hge_num2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :int):int ",	"int_dec2_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :int, :int, :int):int ",	"int_dec2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :int, :int):int ",	"int_num2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :lng):int ",	"lng_dec2_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :lng, :int, :int):int ",	"lng_dec2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:lng, :int, :int):int ",	"lng_num2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:void, :int, :int):int ",	"nil_2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :sht):int ",	"sht_dec2_int;",	""	]
[ "calc",	"int",	"command calc.int(:int, :sht, :int, :int):int ",	"sht_dec2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:sht, :int, :int):int ",	"sht_num2dec_int;",	""	]
[ "calc",	"int",	"command calc.int(:str, :int, :int):int ",	"str_2dec_int;",	""	]
[ "calc",	"isnil",	"pattern calc.isnil(:any):bit ",	"CMDvarISNIL;",	""	]
[ "calc",	"isnotnil",	"pattern calc.isnotnil(:any):bit ",	"CMDvarISNOTNIL;",	""	]
[ "calc",	"iszero",	"pattern calc.iszero(:bte):bit ",	"CMDvarISZERO;",	""	]
[ "calc",	"iszero",	"pattern calc.iszero(:dbl):bit ",	"CMDvarISZERO;",	""	]
[ "calc",	"iszero",	"pattern calc.iszero(:flt):bit ",	"CMDvarISZERO;",	""	]
[ "calc",	"iszero",	"pattern calc.iszero(:hge):bit ",	"CMDvarISZERO;",	""	]
[ "calc",	"iszero",	"pattern calc.iszero(:int):bit ",	"CMDvarISZERO;",	""	]
[ "calc",	"iszero",	"pattern calc.iszero(:lng):bit ",	"CMDvarISZERO;",	""	]
[ "calc",	"iszero",	"pattern calc.iszero(:sht):bit ",	"CMDvarISZERO;",	""	]
[ "calc",	"json",	"command calc.json(:str):json ",	"JSONstr2json;",	""	]
[ "calc",	"length",	"command calc.length(:str):int ",	"CMDstrlength;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:bit):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:bte):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:dbl):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:flt):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:hge):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:int):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:lng):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:oid):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:sht):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:str):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"pattern calc.lng(:void):lng ",	"CMDvarCONVERT;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :bte):lng ",	"bte_dec2_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :bte, :int, :int):lng ",	"bte_dec2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:bte, :int, :int):lng ",	"bte_num2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:dbl, :int, :int):lng ",	"dbl_num2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:flt, :int, :int):lng ",	"flt_num2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :hge):lng ",	"hge_dec2_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :hge, :int, :int):lng ",	"hge_dec2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:hge, :int, :int):lng ",	"hge_num2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :int):lng ",	"int_dec2_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :int, :int, :int):lng ",	"int_dec2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :int, :int):lng ",	"int_num2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :lng):lng ",	"lng_dec2_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :lng, :int, :int):lng ",	"lng_dec2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:lng, :int, :int):lng ",	"lng_num2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:void, :int, :int):lng ",	"nil_2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :sht):lng ",	"sht_dec2_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:int, :sht, :int, :int):lng ",	"sht_dec2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:sht, :int, :int):lng ",	"sht_num2dec_lng;",	""	]
[ "calc",	"lng",	"command calc.lng(:str, :int, :int):lng ",	"str_2dec_lng;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:bte, :bte):bte ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:bte, :hge):bte ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:bte, :int):bte ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:bte, :lng):bte ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:bte, :sht):bte ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:hge, :bte):hge ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:hge, :hge):hge ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:hge, :int):hge ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:hge, :lng):hge ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:hge, :sht):hge ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:int, :bte):int ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:int, :hge):int ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:int, :int):int ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:int, :lng):int ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:int, :sht):int ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:lng, :bte):lng ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:lng, :hge):lng ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:lng, :int):lng ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:lng, :lng):lng ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:lng, :sht):lng ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:sht, :bte):sht ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:sht, :hge):sht ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:sht, :int):sht ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:sht, :lng):sht ",	"CMDvarLSH;",	""	]
[ "calc",	"lsh_noerror",	"pattern calc.lsh_noerror(:sht, :sht):sht ",	"CMDvarLSH;",	""	]
[ "calc",	"max",	"pattern calc.max(:any_1, :any_1):any_1 ",	"CALCmax;",	""	]
[ "calc",	"max_no_nil",	"pattern calc.max_no_nil(:any_1, :any_1):any_1 ",	"CALCmax_no_nil;",	""	]
[ "calc",	"mbr",	"command calc.mbr(:mbr):mbr ",	"mbrFromMBR;",	""	]
[ "calc",	"mbr",	"command calc.mbr(:str):mbr ",	"mbrFromString;",	""	]
[ "calc",	"min",	"pattern calc.min(:any_1, :any_1):any_1 ",	"CALCmin;",	""	]
[ "calc",	"min_no_nil",	"pattern calc.min_no_nil(:any_1, :any_1):any_1 ",	"CALCmin_no_nil;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :bte):bte ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :bte):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :bte):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :bte):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :bte):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :dbl):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :flt):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :hge):bte ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :hge):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :hge):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :hge):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :hge):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :int):bte ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :int):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :int):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :int):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :int):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :lng):bte ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :lng):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :lng):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :lng):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :lng):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :sht):bte ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :sht):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :sht):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :sht):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:bte, :sht):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:dbl, :bte):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:dbl, :dbl):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:dbl, :flt):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:dbl, :hge):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:dbl, :int):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:dbl, :lng):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:dbl, :sht):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:flt, :bte):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:flt, :dbl):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:flt, :flt):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:flt, :hge):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:flt, :int):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:flt, :lng):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:flt, :sht):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :bte):bte ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :bte):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :bte):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :bte):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :bte):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :dbl):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :flt):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :hge):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :int):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :int):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :int):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :lng):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :lng):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :sht):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :sht):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :sht):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:hge, :sht):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :bte):bte ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :bte):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :bte):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :bte):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :bte):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :dbl):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :flt):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :hge):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :hge):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :hge):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :int):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :int):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :int):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :lng):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :lng):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :lng):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :sht):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :sht):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :sht):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:int, :sht):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :bte):bte ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :bte):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :bte):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :bte):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :bte):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :dbl):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :flt):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :hge):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :hge):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :int):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :int):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :int):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :lng):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :lng):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :sht):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :sht):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :sht):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:lng, :sht):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :bte):bte ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :bte):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :bte):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :bte):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :bte):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :dbl):dbl ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :flt):flt ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :hge):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :hge):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :hge):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :hge):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :int):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :int):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :int):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :int):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :lng):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :lng):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :lng):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :lng):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :sht):hge ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :sht):int ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :sht):lng ",	"CMDvarMOD;",	""	]
[ "calc",	"mod_noerror",	"pattern calc.mod_noerror(:sht, :sht):sht ",	"CMDvarMOD;",	""	]
[ "calc",	"month_interval",	"pattern calc.month_interval(:bte, :int, :int):int ",	"month_interval;",	""	]
[ "calc",	"month_interval",	"pattern calc.month_interval(:hge, :int, :int):int ",	"month_interval;",	""	]
[ "calc",	"month_interval",	"pattern calc.month_interval(:int, :int, :int):int ",	"month_interval;",	""	]
[ "calc",	"month_interval",	"pattern calc.month_interval(:lng, :int, :int):int ",	"month_interval;",	""	]
[ "calc",	"month_interval",	"pattern calc.month_interval(:sht, :int, :int):int ",	"month_interval;",	""	]
[ "calc",	"month_interval",	"pattern calc.month_interval(:str, :int, :int):int ",	"month_interval_str;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :bte):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :dbl):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :dbl):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :dbl):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :dbl):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :dbl):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :dbl):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :flt):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :flt):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :flt):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :flt):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :flt):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :flt):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :hge):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :int):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :lng):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:bte, :sht):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :bte):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :bte):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :bte):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :bte):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :bte):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :bte):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :dbl):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :flt):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :hge):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :hge):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :hge):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :hge):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :hge):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :hge):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :int):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :int):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :int):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :int):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :int):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :int):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :lng):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :lng):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :lng):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :lng):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :lng):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :lng):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :sht):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :sht):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :sht):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :sht):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :sht):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:dbl, :sht):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :bte):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :bte):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :bte):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :bte):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :bte):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :bte):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :dbl):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :flt):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :hge):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :hge):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :hge):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :hge):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :hge):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :hge):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :int):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :int):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :int):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :int):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :int):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :int):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :lng):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :lng):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :lng):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :lng):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :lng):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :lng):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :sht):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :sht):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :sht):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :sht):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :sht):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:flt, :sht):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :bte):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :dbl):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :dbl):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :dbl):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :dbl):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :dbl):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :dbl):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :flt):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :flt):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :flt):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :flt):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :flt):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :flt):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :hge):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :int):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :lng):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:hge, :sht):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :bte):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :dbl):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :dbl):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :dbl):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :dbl):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :dbl):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :dbl):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :flt):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :flt):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :flt):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :flt):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :flt):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :flt):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :hge):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :int):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :lng):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:int, :sht):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :bte):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :dbl):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :dbl):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :dbl):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :dbl):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :dbl):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :dbl):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :flt):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :flt):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :flt):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :flt):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :flt):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :flt):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :hge):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :int):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :lng):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:lng, :sht):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :bte):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :dbl):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :dbl):dbl ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :dbl):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :dbl):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :dbl):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :dbl):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :flt):bte ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :flt):flt ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :flt):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :flt):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :flt):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :flt):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :hge):hge ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :int):int ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :lng):lng ",	"CMDvarMUL;",	""	]
[ "calc",	"mul_noerror",	"pattern calc.mul_noerror(:sht, :sht):sht ",	"CMDvarMUL;",	""	]
[ "calc",	"not",	"pattern calc.not(:bit):bit ",	"CMDvarNOT;",	""	]
[ "calc",	"not",	"pattern calc.not(:bte):bte ",	"CMDvarNOT;",	""	]
[ "calc",	"not",	"pattern calc.not(:hge):hge ",	"CMDvarNOT;",	""	]
[ "calc",	"not",	"pattern calc.not(:int):int ",	"CMDvarNOT;",	""	]
[ "calc",	"not",	"pattern calc.not(:lng):lng ",	"CMDvarNOT;",	""	]
[ "calc",	"not",	"pattern calc.not(:sht):sht ",	"CMDvarNOT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:bit):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:bte):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:dbl):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:flt):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:hge):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:int):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:lng):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:oid):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:sht):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:str):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"oid",	"pattern calc.oid(:void):oid ",	"CMDvarCONVERT;",	""	]
[ "calc",	"or",	"pattern calc.or(:bit, :bit):bit ",	"CMDvarOR;",	""	]
[ "calc",	"or",	"pattern calc.or(:bte, :bte):bte ",	"CMDvarOR;",	""	]
[ "calc",	"or",	"pattern calc.or(:hge, :hge):hge ",	"CMDvarOR;",	""	]
[ "calc",	"or",	"pattern calc.or(:int, :int):int ",	"CMDvarOR;",	""	]
[ "calc",	"or",	"pattern calc.or(:lng, :lng):lng ",	"CMDvarOR;",	""	]
[ "calc",	"or",	"pattern calc.or(:sht, :sht):sht ",	"CMDvarOR;",	""	]
[ "calc",	"ptr",	"command calc.ptr(:ptr):ptr ",	"CMDvarCONVERTptr;",	""	]
[ "calc",	"rotate_xor_hash",	"pattern calc.rotate_xor_hash(:lng, :int, :any_1):lng ",	"MKEYrotate_xor_hash;",	""	]
[ "calc",	"round",	"command calc.round(:bte, :bte, :int, :int):bte ",	"bte_round_wrap;",	""	]
[ "calc",	"round",	"command calc.round(:dbl, :bte):dbl ",	"dbl_round_wrap;",	""	]
[ "calc",	"round",	"command calc.round(:flt, :bte):flt ",	"flt_round_wrap;",	""	]
[ "calc",	"round",	"command calc.round(:hge, :bte, :int, :int):hge ",	"hge_round_wrap;",	""	]
[ "calc",	"round",	"command calc.round(:int, :bte, :int, :int):int ",	"int_round_wrap;",	""	]
[ "calc",	"round",	"command calc.round(:lng, :bte, :int, :int):lng ",	"lng_round_wrap;",	""	]
[ "calc",	"round",	"command calc.round(:sht, :bte, :int, :int):sht ",	"sht_round_wrap;",	""	]
[ "calc",	"rowid",	"pattern calc.rowid(:any_1, :str, :str):oid ",	"sql_rowid;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:bte, :bte):bte ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:bte, :hge):bte ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:bte, :int):bte ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:bte, :lng):bte ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:bte, :sht):bte ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:hge, :bte):hge ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:hge, :hge):hge ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:hge, :int):hge ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:hge, :lng):hge ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:hge, :sht):hge ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:int, :bte):int ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:int, :hge):int ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:int, :int):int ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:int, :lng):int ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:int, :sht):int ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:lng, :bte):lng ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:lng, :hge):lng ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:lng, :int):lng ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:lng, :lng):lng ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:lng, :sht):lng ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:sht, :bte):sht ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:sht, :hge):sht ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:sht, :int):sht ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:sht, :lng):sht ",	"CMDvarRSH;",	""	]
[ "calc",	"rsh_noerror",	"pattern calc.rsh_noerror(:sht, :sht):sht ",	"CMDvarRSH;",	""	]
[ "calc",	"second_interval",	"command calc.second_interval(:int, :bte, :int, :int):lng ",	"bte_dec2second_interval;",	""	]
[ "calc",	"second_interval",	"command calc.second_interval(:int, :hge, :int, :int):lng ",	"hge_dec2second_interval;",	""	]
[ "calc",	"second_interval",	"command calc.second_interval(:int, :int, :int, :int):lng ",	"int_dec2second_interval;",	""	]
[ "calc",	"second_interval",	"command calc.second_interval(:int, :lng, :int, :int):lng ",	"lng_dec2second_interval;",	""	]
[ "calc",	"second_interval",	"pattern calc.second_interval(:bte, :int, :int):lng ",	"second_interval;",	""	]
[ "calc",	"second_interval",	"pattern calc.second_interval(:hge, :int, :int):lng ",	"second_interval;",	""	]
[ "calc",	"second_interval",	"pattern calc.second_interval(:int, :int, :int):lng ",	"second_interval;",	""	]
[ "calc",	"second_interval",	"pattern calc.second_interval(:lng, :int, :int):lng ",	"second_interval;",	""	]
[ "calc",	"second_interval",	"pattern calc.second_interval(:sht, :int, :int):lng ",	"second_interval;",	""	]
[ "calc",	"second_interval",	"pattern calc.second_interval(:daytime, :int, :int):lng ",	"second_interval_daytime;",	""	]
[ "calc",	"second_interval",	"pattern calc.second_interval(:str, :int, :int):lng ",	"second_interval_str;",	""	]
[ "calc",	"second_interval",	"command calc.second_interval(:int, :sht, :int, :int):lng ",	"sht_dec2second_interval;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:bit):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:bte):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:dbl):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:flt):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:hge):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:int):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:lng):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:oid):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:sht):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:str):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"pattern calc.sht(:void):sht ",	"CMDvarCONVERT;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :bte):sht ",	"bte_dec2_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :bte, :int, :int):sht ",	"bte_dec2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:bte, :int, :int):sht ",	"bte_num2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:dbl, :int, :int):sht ",	"dbl_num2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:flt, :int, :int):sht ",	"flt_num2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :hge):sht ",	"hge_dec2_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :hge, :int, :int):sht ",	"hge_dec2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:hge, :int, :int):sht ",	"hge_num2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :int):sht ",	"int_dec2_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :int, :int, :int):sht ",	"int_dec2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :int, :int):sht ",	"int_num2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :lng):sht ",	"lng_dec2_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :lng, :int, :int):sht ",	"lng_dec2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:lng, :int, :int):sht ",	"lng_num2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:void, :int, :int):sht ",	"nil_2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :sht):sht ",	"sht_dec2_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:int, :sht, :int, :int):sht ",	"sht_dec2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:sht, :int, :int):sht ",	"sht_num2dec_sht;",	""	]
[ "calc",	"sht",	"command calc.sht(:str, :int, :int):sht ",	"str_2dec_sht;",	""	]
[ "calc",	"sign",	"pattern calc.sign(:bte):bte ",	"CMDvarSIGN;",	""	]
[ "calc",	"sign",	"pattern calc.sign(:dbl):bte ",	"CMDvarSIGN;",	""	]
[ "calc",	"sign",	"pattern calc.sign(:flt):bte ",	"CMDvarSIGN;",	""	]
[ "calc",	"sign",	"pattern calc.sign(:hge):bte ",	"CMDvarSIGN;",	""	]
[ "calc",	"sign",	"pattern calc.sign(:int):bte ",	"CMDvarSIGN;",	""	]
[ "calc",	"sign",	"pattern calc.sign(:lng):bte ",	"CMDvarSIGN;",	""	]
[ "calc",	"sign",	"pattern calc.sign(:sht):bte ",	"CMDvarSIGN;",	""	]
[ "calc",	"str",	"pattern calc.str(:any):str ",	"CMDvarCONVERT;",	""	]
[ "calc",	"str",	"pattern calc.str(:int, :int, :int, :int, :any_1, :int):str ",	"SQLstr_cast;",	""	]
[ "calc",	"str",	"command calc.str(:uuid):str ",	"UUIDuuid2str;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:bte, :bte):bte ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:bte, :dbl):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:bte, :flt):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:bte, :hge):hge ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:bte, :int):int ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:bte, :lng):lng ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:bte, :sht):sht ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:dbl, :bte):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:dbl, :dbl):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:dbl, :flt):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:dbl, :hge):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:dbl, :int):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:dbl, :lng):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:dbl, :sht):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:flt, :bte):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:flt, :dbl):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:flt, :flt):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:flt, :hge):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:flt, :int):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:flt, :lng):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:flt, :sht):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:hge, :bte):hge ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:hge, :dbl):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:hge, :flt):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:hge, :hge):hge ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:hge, :int):hge ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:hge, :lng):hge ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:hge, :sht):hge ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:int, :bte):int ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:int, :dbl):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:int, :flt):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:int, :hge):hge ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:int, :int):int ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:int, :lng):lng ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:int, :sht):int ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:lng, :bte):lng ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:lng, :dbl):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:lng, :flt):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:lng, :hge):hge ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:lng, :int):lng ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:lng, :lng):lng ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:lng, :sht):lng ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:sht, :bte):sht ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:sht, :dbl):dbl ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:sht, :flt):flt ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:sht, :hge):hge ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:sht, :int):int ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:sht, :lng):lng ",	"CMDvarSUB;",	""	]
[ "calc",	"sub_noerror",	"pattern calc.sub_noerror(:sht, :sht):sht ",	"CMDvarSUB;",	""	]
[ "calc",	"timestamp",	"command calc.timestamp(:date):timestamp ",	"MTIMEtimestamp_fromdate;",	""	]
[ "calc",	"timestamp",	"command calc.timestamp(:lng):timestamp ",	"MTIMEtimestamp_frommsec;",	""	]
[ "calc",	"timestamp",	"command calc.timestamp(:int):timestamp ",	"MTIMEtimestamp_fromsecond;",	""	]
[ "calc",	"timestamp",	"command calc.timestamp(:str):timestamp ",	"MTIMEtimestamp_fromstr;",	""	]
[ "calc",	"timestamp",	"command calc.timestamp(:timestamp):timestamp ",	"MTIMEtimestamp_timestamp;",	""	]
[ "calc",	"timestamp",	"pattern calc.timestamp(:date, :int):timestamp ",	"date_2_timestamp;",	""	]
[ "calc",	"timestamp",	"pattern calc.timestamp(:void, :int):timestamp ",	"nil_2time_timestamp;",	""	]
[ "calc",	"timestamp",	"pattern calc.timestamp(:str, :int):timestamp ",	"str_2time_timestamp;",	""	]
[ "calc",	"timestamp",	"pattern calc.timestamp(:str, :int, :int):timestamp ",	"str_2time_timestamptz;",	""	]
[ "calc",	"timestamp",	"pattern calc.timestamp(:timestamp, :int):timestamp ",	"timestamp_2time_timestamp;",	""	]
[ "calc",	"url",	"command calc.url(:str):url ",	"URLnew;",	""	]
[ "calc",	"url",	"command calc.url(:url):url ",	"URLnoop;",	""	]
[ "calc",	"uuid",	"command calc.uuid(:str):uuid ",	"UUIDstr2uuid;",	""	]
[ "calc",	"uuid",	"command calc.uuid(:uuid):uuid ",	"UUIDuuid2uuid;",	""	]
[ "calc",	"void",	"pattern calc.void(:bit):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:bte):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:dbl):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:flt):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:hge):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:int):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:lng):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:oid):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:sht):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:str):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"void",	"pattern calc.void(:void):void ",	"CMDvarCONVERT;",	""	]
[ "calc",	"wkb",	"function calc.wkb(wkt:str, srid:int, type:int):wkb;",	"",	""	]
[ "calc",	"wkb",	"command calc.wkb(:wkb, :int, :int):wkb ",	"geom_2_geom;",	""	]
[ "calc",	"wkb",	"command calc.wkb(:wkb):wkb ",	"wkbFromWKB;",	""	]
[ "calc",	"xml",	"command calc.xml(:str):xml ",	"XMLstr2xml;",	""	]
[ "calc",	"xml",	"command calc.xml(:xml):xml ",	"XMLxml2xml;",	""	]
[ "calc",	"xor",	"pattern calc.xor(:bit, :bit):bit ",	"CMDvarXOR;",	""	]
[ "calc",	"xor",	"pattern calc.xor(:bte, :bte):bte ",	"CMDvarXOR;",	""	]
[ "calc",	"xor",	"pattern calc.xor(:hge, :hge):hge ",	"CMDvarXOR;",	""	]
[ "calc",	"xor",	"pattern calc.xor(:int, :int):int ",	"CMDvarXOR;",	""	]
[ "calc",	"xor",	"pattern calc.xor(:lng, :lng):lng ",	"CMDvarXOR;",	""	]
[ "calc",	"xor",	"pattern calc.xor(:sht, :sht):sht ",	"CMDvarXOR;",	""	]
[ "capi",	"eval",	"pattern capi.eval(:ptr, :bit, :str):any ",	"CUDFevalStd;",	""	]
[ "capi",	"eval",	"pattern capi.eval(:ptr, :bit, :str, :any...):any... ",	"CUDFevalStd;",	""	]
[ "capi",	"eval_aggr",	"pattern capi.eval_aggr(:ptr, :bit, :str, :any...):any... ",	"CUDFevalAggr;",	""	]
[ "capi",	"prelude",	"command capi.prelude():void ",	"CUDFprelude;",	""	]
[ "capi",	"subeval_aggr",	"pattern capi.subeval_aggr(:ptr, :bit, :str, :any...):any... ",	"CUDFevalAggr;",	""	]
[ "clients",	"addUser",	"pattern clients.addUser(:str, :str):oid ",	"CLTaddUser;",	""	]
[ "clients",	"backendsum",	"command clients.backendsum(:str):str ",	"CLTbackendsum;",	""	]
[ "clients",	"changePassword",	"pattern clients.changePassword(:str, :str):void ",	"CLTchangePassword;",	""	]
[ "clients",	"changeUsername",	"pattern clients.changeUsername(:str, :str):void ",	"CLTchangeUsername;",	""	]
[ "clients",	"checkPermission",	"pattern clients.checkPermission(:str, :str):void ",	"CLTcheckPermission;",	""	]
[ "clients",	"getId",	"pattern clients.getId():int ",	"CLTgetClientId;",	""	]
[ "clients",	"getInfo",	"pattern clients.getInfo() (:bat[:str], :bat[:str]) ",	"CLTInfo;",	""	]
[ "clients",	"getLogins",	"command clients.getLogins() (:bat[:oid], :bat[:str]) ",	"CLTLogin;",	""	]
[ "clients",	"getPasswordHash",	"pattern clients.getPasswordHash(:str):str ",	"CLTgetPasswordHash;",	""	]
[ "clients",	"getScenario",	"pattern clients.getScenario():str ",	"CLTgetScenario;",	""	]
[ "clients",	"getUsername",	"pattern clients.getUsername():str ",	"CLTgetUsername;",	""	]
[ "clients",	"getUsers",	"pattern clients.getUsers() (:bat[:oid], :bat[:str]) ",	"CLTgetUsers;",	""	]
[ "clients",	"getprofile",	"pattern clients.getprofile() (:str, :int, :int, :int, :int) ",	"CLTgetProfile;",	""	]
[ "clients",	"md5sum",	"command clients.md5sum(:str):str ",	"CLTmd5sum;",	""	]
[ "clients",	"quit",	"pattern clients.quit():void ",	"CLTquit;",	""	]
[ "clients",	"quit",	"pattern clients.quit(:int):void ",	"CLTquit;",	""	]
[ "clients",	"removeUser",	"pattern clients.removeUser(:str):void ",	"CLTremoveUser;",	""	]
[ "clients",	"ripemd160sum",	"command clients.ripemd160sum(:str):str ",	"CLTripemd160sum;",	""	]
[ "clients",	"setListing",	"pattern clients.setListing(:int):int ",	"CLTsetListing;",	""	]
[ "clients",	"setPassword",	"pattern clients.setPassword(:str, :str):void ",	"CLTsetPassword;",	""	]
[ "clients",	"setScenario",	"pattern clients.setScenario(:str):str ",	"CLTsetScenario;",	""	]
[ "clients",	"setmemorylimit",	"pattern clients.setmemorylimit(:int):void ",	"CLTsetmemorylimit;",	""	]
[ "clients",	"setmemorylimit",	"pattern clients.setmemorylimit(:int, :int):void ",	"CLTsetmemorylimit;",	""	]
[ "clients",	"setoptimizer",	"pattern clients.setoptimizer(:int, :str):void ",	"CLTsetoptimizer;",	""	]
[ "clients",	"setoptimizer",	"pattern clients.setoptimizer(:str):void ",	"CLTsetoptimizer;",	""	]
[ "clients",	"setprinttimeout",	"command clients.setprinttimeout(:int):void ",	"CLTsetPrintTimeout;",	""	]
[ "clients",	"setquerytimeout",	"pattern clients.setquerytimeout(:bte, :int):void ",	"CLTqueryTimeout;",	""	]
[ "clients",	"setquerytimeout",	"pattern clients.setquerytimeout(:int):void ",	"CLTqueryTimeout;",	""	]
[ "clients",	"setquerytimeout",	"pattern clients.setquerytimeout(:int, :int):void ",	"CLTqueryTimeout;",	""	]
[ "clients",	"setquerytimeout",	"pattern clients.setquerytimeout(:sht, :int):void ",	"CLTqueryTimeout;",	""	]
[ "clients",	"setsession",	"pattern clients.setsession(:lng):void ",	"CLTsetSessionTimeout;",	""	]
[ "clients",	"setsessiontimeout",	"pattern clients.setsessiontimeout(:bte, :int):void ",	"CLTsessionTimeout;",	""	]
[ "clients",	"setsessiontimeout",	"pattern clients.setsessiontimeout(:int):void ",	"CLTsessionTimeout;",	""	]
[ "clients",	"setsessiontimeout",	"pattern clients.setsessiontimeout(:int, :int):void ",	"CLTsessionTimeout;",	""	]
[ "clients",	"setsessiontimeout",	"pattern clients.setsessiontimeout(:sht, :int):void ",	"CLTsessionTimeout;",	""	]
[ "clients",	"settimeout",	"pattern clients.settimeout(:lng):void ",	"CLTsetTimeout;",	""	]
[ "clients",	"settimeout",	"pattern clients.settimeout(:lng, :lng):void ",	"CLTsetTimeout;",	""	]
[ "clients",	"setworkerlimit",	"pattern clients.setworkerlimit(:int):void ",	"CLTsetworkerlimit;",	""	]
[ "clients",	"setworkerlimit",	"pattern clients.setworkerlimit(:int, :int):void ",	"CLTsetworkerlimit;",	""	]
[ "clients",	"sha1sum",	"command clients.sha1sum(:str):str ",	"CLTsha1sum;",	""	]
[ "clients",	"sha2sum",	"command clients.sha2sum(:str, :int):str ",	"CLTsha2sum;",	""	]
[ "clients",	"shutdown",	"pattern clients.shutdown(:int):str ",	"CLTshutdown;",	""	]
[ "clients",	"shutdown",	"pattern clients.shutdown(:int, :bit):str ",	"CLTshutdown;",	""	]
[ "clients",	"stop",	"pattern clients.stop(:int):void ",	"CLTstop;",	""	]
[ "clients",	"stopsession",	"pattern clients.stopsession(:bte):void ",	"CLTstopSession;",	""	]
[ "clients",	"stopsession",	"pattern clients.stopsession(:int):void ",	"CLTstopSession;",	""	]
[ "clients",	"stopsession",	"pattern clients.stopsession(:sht):void ",	"CLTstopSession;",	""	]
[ "clients",	"suspend",	"pattern clients.suspend(:int):void ",	"CLTsuspend;",	""	]
[ "clients",	"wakeup",	"pattern clients.wakeup(:int):void ",	"CLTwakeup;",	""	]
[ "color",	"blue",	"command color.blue(:color):int ",	"CLRblue;",	""	]
[ "color",	"cb",	"command color.cb(:color):int ",	"CLRcb;",	""	]
[ "color",	"color",	"command color.color(:str):color ",	"CLRcolor;",	""	]
[ "color",	"cr",	"command color.cr(:color):int ",	"CLRcr;",	""	]
[ "color",	"green",	"command color.green(:color):int ",	"CLRgreen;",	""	]
[ "color",	"hsv",	"command color.hsv(:flt, :flt, :flt):color ",	"CLRhsv;",	""	]
[ "color",	"hue",	"command color.hue(:color):flt ",	"CLRhue;",	""	]
[ "color",	"hue",	"command color.hue(:color):int ",	"CLRhueInt;",	""	]
[ "color",	"luminance",	"command color.luminance(:color):int ",	"CLRluminance;",	""	]
[ "color",	"red",	"command color.red(:color):int ",	"CLRred;",	""	]
[ "color",	"rgb",	"command color.rgb(:int, :int, :int):color ",	"CLRrgb;",	""	]
[ "color",	"saturation",	"command color.saturation(:color):flt ",	"CLRsaturation;",	""	]
[ "color",	"saturation",	"command color.saturation(:color):int ",	"CLRsaturationInt;",	""	]
[ "color",	"str",	"command color.str(:color):str ",	"CLRstr;",	""	]
[ "color",	"value",	"command color.value(:color):flt ",	"CLRvalue;",	""	]
[ "color",	"value",	"command color.value(:color):int ",	"CLRvalueInt;",	""	]
[ "color",	"ycc",	"command color.ycc(:int, :int, :int):color ",	"CLRycc;",	""	]
[ "factories",	"getArrival",	"command factories.getArrival():bat[:timestamp] ",	"FCTgetArrival;",	""	]
[ "factories",	"getCaller",	"command factories.getCaller():int ",	"FCTgetCaller;",	""	]
[ "factories",	"getDeparture",	"command factories.getDeparture():bat[:timestamp] ",	"FCTgetDeparture;",	""	]
[ "factories",	"getOwners",	"command factories.getOwners():bat[:str] ",	"FCTgetOwners;",	""	]
[ "factories",	"getPlants",	"command factories.getPlants() (:bat[:str], :bat[:str]) ",	"FCTgetPlants;",	""	]
[ "factories",	"shutdown",	"pattern factories.shutdown(:str, :str):void ",	"FCTshutdown;",	""	]
[ "fits",	"attach",	"pattern fits.attach(:str):void ",	"FITSattach;",	""	]
[ "fits",	"export",	"pattern fits.export(:str):void ",	"FITSexportTable;",	""	]
[ "fits",	"fitstest",	"command fits.fitstest(:str):int ",	"FITStest;",	""	]
[ "fits",	"listdir",	"pattern fits.listdir(:str):void ",	"FITSdir;",	""	]
[ "fits",	"listdirpattern",	"pattern fits.listdirpattern(:str, :str):void ",	"FITSdirpat;",	""	]
[ "fits",	"load",	"pattern fits.load(:str):void ",	"FITSloadTable;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:bte], :bat[:bte]) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_join;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:dbl], :bat[:dbl]) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_join;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:flt], :bat[:flt]) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_join;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:hge], :bat[:hge]) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_join;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:int], :bat[:int]) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_join;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:lng], :bat[:lng]) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_join;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:sht], :bat[:sht]) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_join;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:bte], :bat[:bte], :bat[:bte], :bit, :bit) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_rangejoin;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:dbl], :bat[:dbl], :bat[:dbl], :bit, :bit) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_rangejoin;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:flt], :bat[:flt], :bat[:flt], :bit, :bit) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_rangejoin;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:int], :bat[:int], :bat[:int], :bit, :bit) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_rangejoin;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:lng], :bat[:lng], :bat[:lng], :bit, :bit) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_rangejoin;",	""	]
[ "generator",	"join",	"pattern generator.join(:bat[:sht], :bat[:sht], :bat[:sht], :bit, :bit) (:bat[:oid], :bat[:oid]) ",	"VLTgenerator_rangejoin;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:bte, :bte):bat[:bte] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:bte, :bte, :bte):bat[:bte] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:dbl, :dbl):bat[:dbl] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:dbl, :dbl, :dbl):bat[:dbl] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:flt, :flt):bat[:flt] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:flt, :flt, :flt):bat[:flt] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:hge, :hge):bat[:hge] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:hge, :hge, :hge):bat[:hge] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:int, :int):bat[:int] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:int, :int, :int):bat[:int] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:lng, :lng):bat[:lng] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:lng, :lng, :lng):bat[:lng] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:sht, :sht):bat[:sht] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:sht, :sht, :sht):bat[:sht] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"parameters",	"pattern generator.parameters(:timestamp, :timestamp, :lng):bat[:timestamp] ",	"VLTgenerator_noop;",	""	]
[ "generator",	"projection",	"pattern generator.projection(:bat[:oid], :bat[:bte]):bat[:bte] ",	"VLTgenerator_projection;",	""	]
[ "generator",	"projection",	"pattern generator.projection(:bat[:oid], :bat[:dbl]):bat[:dbl] ",	"VLTgenerator_projection;",	""	]
[ "generator",	"projection",	"pattern generator.projection(:bat[:oid], :bat[:flt]):bat[:flt] ",	"VLTgenerator_projection;",	""	]
[ "generator",	"projection",	"pattern generator.projection(:bat[:oid], :bat[:hge]):bat[:hge] ",	"VLTgenerator_projection;",	""	]
[ "generator",	"projection",	"pattern generator.projection(:bat[:oid], :bat[:int]):bat[:int] ",	"VLTgenerator_projection;",	""	]
[ "generator",	"projection",	"pattern generator.projection(:bat[:oid], :bat[:lng]):bat[:lng] ",	"VLTgenerator_projection;",	""	]
[ "generator",	"projection",	"pattern generator.projection(:bat[:oid], :bat[:sht]):bat[:sht] ",	"VLTgenerator_projection;",	""	]
[ "generator",	"projection",	"pattern generator.projection(:bat[:oid], :bat[:timestamp]):bat[:timestamp] ",	"VLTgenerator_projection;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:bte], :bat[:oid], :bte, :bte, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:bte], :bte, :bte, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:dbl], :bat[:oid], :dbl, :dbl, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:dbl], :dbl, :dbl, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:flt], :bat[:oid], :flt, :flt, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:flt], :flt, :flt, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:hge], :bat[:oid], :hge, :hge, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:hge], :hge, :hge, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:int], :bat[:oid], :int, :int, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:int], :int, :int, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:lng], :bat[:oid], :lng, :lng, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:lng], :lng, :lng, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:sht], :bat[:oid], :sht, :sht, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:sht], :sht, :sht, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:timestamp], :bat[:oid], :timestamp, :timestamp, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"select",	"pattern generator.select(:bat[:timestamp], :timestamp, :timestamp, :bit, :bit, :bit):bat[:oid] ",	"VLTgenerator_subselect;",	""	]
[ "generator",	"series",	"pattern generator.series(:bte, :bte):bat[:bte] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:bte, :bte, :bte):bat[:bte] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:dbl, :dbl):bat[:dbl] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:dbl, :dbl, :dbl):bat[:dbl] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:flt, :flt):bat[:flt] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:flt, :flt, :flt):bat[:flt] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:hge, :hge):bat[:hge] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:hge, :hge, :hge):bat[:hge] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:int, :int):bat[:int] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:int, :int, :int):bat[:int] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:lng, :lng):bat[:lng] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:lng, :lng, :lng):bat[:lng] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:sht, :sht):bat[:sht] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:sht, :sht, :sht):bat[:sht] ",	"VLTgenerator_table;",	""	]
[ "generator",	"series",	"pattern generator.series(:timestamp, :timestamp, :lng):bat[:timestamp] ",	"VLTgenerator_table;",	""	]
[ "generator",	"thetaselect",	"pattern generator.thetaselect(:bat[:bte], :bat[:oid], :bte, :str):bat[:oid] ",	"VLTgenerator_thetasubselect;",	""	]
[ "generator",	"thetaselect",	"pattern generator.thetaselect(:bat[:dbl], :bat[:oid], :dbl, :str):bat[:oid] ",	"VLTgenerator_thetasubselect;",	""	]
[ "generator",	"thetaselect",	"pattern generator.thetaselect(:bat[:flt], :bat[:oid], :flt, :str):bat[:oid] ",	"VLTgenerator_thetasubselect;",	""	]
[ "generator",	"thetaselect",	"pattern generator.thetaselect(:bat[:hge], :bat[:oid], :hge, :str):bat[:oid] ",	"VLTgenerator_thetasubselect;",	""	]
[ "generator",	"thetaselect",	"pattern generator.thetaselect(:bat[:int], :bat[:oid], :int, :str):bat[:oid] ",	"VLTgenerator_thetasubselect;",	""	]
[ "generator",	"thetaselect",	"pattern generator.thetaselect(:bat[:lng], :bat[:oid], :lng, :str):bat[:oid] ",	"VLTgenerator_thetasubselect;",	""	]
[ "generator",	"thetaselect",	"pattern generator.thetaselect(:bat[:sht], :bat[:oid], :sht, :str):bat[:oid] ",	"VLTgenerator_thetasubselect;",	""	]
[ "generator",	"thetaselect",	"pattern generator.thetaselect(:bat[:timestamp], :bat[:oid], :timestamp, :str):bat[:oid] ",	"VLTgenerator_thetasubselect;",	""	]
[ "geom",	"Area",	"command geom.Area(:wkb):dbl ",	"wkbArea;",	""	]
[ "geom",	"AsBinary",	"command geom.AsBinary(:wkb):str ",	"wkbAsBinary;",	""	]
[ "geom",	"AsEWKT",	"function geom.AsEWKT(w:wkb):str;",	"",	""	]
[ "geom",	"AsText",	"function geom.AsText(w:wkb):str;",	"",	""	]
[ "geom",	"BdMPolyFromText",	"function geom.BdMPolyFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"BdPolyFromText",	"function geom.BdPolyFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"Boundary",	"command geom.Boundary(:wkb):wkb ",	"wkbBoundary;",	""	]
[ "geom",	"Buffer",	"command geom.Buffer(:wkb, :dbl):wkb ",	"wkbBuffer;",	""	]
[ "geom",	"Centroid",	"command geom.Centroid(:wkb):wkb ",	"wkbCentroid;",	""	]
[ "geom",	"Contains",	"command geom.Contains(:wkb, :wkb):bit ",	"wkbContains;",	""	]
[ "geom",	"Contains",	"command geom.Contains(:wkb, :dbl, :dbl):bit ",	"wkbContains_point;",	""	]
[ "geom",	"Contains",	"command geom.Contains(:wkb, :bat[:dbl], :bat[:dbl]):bat[:bit] ",	"wkbContains_point_bat;",	""	]
[ "geom",	"ConvexHull",	"command geom.ConvexHull(:wkb):wkb ",	"wkbConvexHull;",	""	]
[ "geom",	"CoordDim",	"command geom.CoordDim(:wkb):int ",	"wkbCoordDim;",	""	]
[ "geom",	"CoveredBy",	"command geom.CoveredBy(:wkb, :wkb):bit ",	"wkbCoveredBy;",	""	]
[ "geom",	"Covers",	"command geom.Covers(:wkb, :wkb):bit ",	"wkbCovers;",	""	]
[ "geom",	"Crosses",	"command geom.Crosses(:wkb, :wkb):bit ",	"wkbCrosses;",	""	]
[ "geom",	"DWithin",	"command geom.DWithin(:wkb, :wkb, :dbl):bit ",	"wkbDWithin;",	""	]
[ "geom",	"DelaunayTriangles",	"command geom.DelaunayTriangles(:wkb, :dbl, :int):wkb ",	"wkbDelaunayTriangles;",	""	]
[ "geom",	"Difference",	"command geom.Difference(:wkb, :wkb):wkb ",	"wkbDifference;",	""	]
[ "geom",	"Dimension",	"command geom.Dimension(:wkb):int ",	"wkbDimension;",	""	]
[ "geom",	"Disjoint",	"command geom.Disjoint(:wkb, :wkb):bit ",	"wkbDisjoint;",	""	]
[ "geom",	"Distance",	"command geom.Distance(:wkb, :wkb):dbl ",	"wkbDistance;",	""	]
[ "geom",	"Dump",	"command geom.Dump(:wkb) (:bat[:str], :bat[:wkb]) ",	"wkbDump;",	""	]
[ "geom",	"DumpPoints",	"command geom.DumpPoints(:wkb) (:bat[:str], :bat[:wkb]) ",	"wkbDumpPoints;",	""	]
[ "geom",	"EndPoint",	"command geom.EndPoint(:wkb):wkb ",	"wkbEndPoint;",	""	]
[ "geom",	"Envelope",	"command geom.Envelope(:wkb):wkb ",	"wkbEnvelope;",	""	]
[ "geom",	"EnvelopeFromCoordinates",	"command geom.EnvelopeFromCoordinates(:dbl, :dbl, :dbl, :dbl, :int):wkb ",	"wkbEnvelopeFromCoordinates;",	""	]
[ "geom",	"Equals",	"command geom.Equals(:wkb, :wkb):bit ",	"wkbEquals;",	""	]
[ "geom",	"ExteriorRing",	"command geom.ExteriorRing(:wkb):wkb ",	"wkbExteriorRing;",	""	]
[ "geom",	"Force2D",	"function geom.Force2D(g:wkb):wkb;",	"",	""	]
[ "geom",	"Force3D",	"function geom.Force3D(g:wkb):wkb;",	"",	""	]
[ "geom",	"ForceDimensions",	"command geom.ForceDimensions(:wkb, :int):wkb ",	"wkbForceDim;",	""	]
[ "geom",	"FromBinary",	"command geom.FromBinary(:str):wkb ",	"wkbFromBinary;",	""	]
[ "geom",	"FromText",	"command geom.FromText(:str, :int, :int):wkb ",	"wkbFromText;",	""	]
[ "geom",	"GeomCollFromText",	"function geom.GeomCollFromText(wkt:str):wkb;",	"",	""	]
[ "geom",	"GeomCollFromText",	"function geom.GeomCollFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"GeomFromText",	"function geom.GeomFromText(wkt:str):wkb;",	"",	""	]
[ "geom",	"GeomFromText",	"function geom.GeomFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"GeometryN",	"command geom.GeometryN(:wkb, :int):wkb ",	"wkbGeometryN;",	""	]
[ "geom",	"GeometryType",	"command geom.GeometryType(:wkb, :int):str ",	"wkbGeometryType;",	""	]
[ "geom",	"GeometryType1",	"function geom.GeometryType1(w:wkb):str;",	"",	""	]
[ "geom",	"GeometryType2",	"function geom.GeometryType2(w:wkb):str;",	"",	""	]
[ "geom",	"GetCoordinate",	"command geom.GetCoordinate(:wkb, :int):dbl ",	"wkbGetCoordinate;",	""	]
[ "geom",	"InteriorRingN",	"command geom.InteriorRingN(:wkb, :int):wkb ",	"wkbInteriorRingN;",	""	]
[ "geom",	"InteriorRings",	"command geom.InteriorRings(:wkb):wkba ",	"wkbInteriorRings;",	""	]
[ "geom",	"Intersection",	"command geom.Intersection(:wkb, :wkb):wkb ",	"wkbIntersection;",	""	]
[ "geom",	"Intersects",	"command geom.Intersects(:wkb, :wkb):bit ",	"wkbIntersects;",	""	]
[ "geom",	"IsClosed",	"command geom.IsClosed(:wkb):bit ",	"wkbIsClosed;",	""	]
[ "geom",	"IsEmpty",	"command geom.IsEmpty(:wkb):bit ",	"wkbIsEmpty;",	""	]
[ "geom",	"IsRing",	"command geom.IsRing(:wkb):bit ",	"wkbIsRing;",	""	]
[ "geom",	"IsSimple",	"command geom.IsSimple(:wkb):bit ",	"wkbIsSimple;",	""	]
[ "geom",	"IsValid",	"command geom.IsValid(:wkb):bit ",	"wkbIsValid;",	""	]
[ "geom",	"IsValidDetail",	"command geom.IsValidDetail(:wkb):str ",	"wkbIsValidDetail;",	""	]
[ "geom",	"IsValidReason",	"command geom.IsValidReason(:wkb):str ",	"wkbIsValidReason;",	""	]
[ "geom",	"Length",	"command geom.Length(:wkb):dbl ",	"wkbLength;",	""	]
[ "geom",	"LineFromText",	"function geom.LineFromText(wkt:str):wkb;",	"",	""	]
[ "geom",	"LineFromText",	"function geom.LineFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"MLineFromText",	"function geom.MLineFromText(wkt:str):wkb;",	"",	""	]
[ "geom",	"MLineFromText",	"function geom.MLineFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"MLineStringToPolygon",	"command geom.MLineStringToPolygon(:str, :int, :int):wkb ",	"wkbMLineStringToPolygon;",	""	]
[ "geom",	"MPointFromText",	"function geom.MPointFromText(wkt:str):wkb;",	"",	""	]
[ "geom",	"MPointFromText",	"function geom.MPointFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"MPolyFromText",	"function geom.MPolyFromText(wkt:str):wkb;",	"",	""	]
[ "geom",	"MPolyFromText",	"function geom.MPolyFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"MakeBox2D",	"command geom.MakeBox2D(:wkb, :wkb):mbr ",	"wkbBox2D;",	""	]
[ "geom",	"MakeEnvelope",	"function geom.MakeEnvelope(xmin:dbl, ymin:dbl, xmax:dbl, ymax:dbl):wkb;",	"",	""	]
[ "geom",	"MakeEnvelope",	"function geom.MakeEnvelope(xmin:dbl, ymin:dbl, xmax:dbl, ymax:dbl, srid:int):wkb;",	"",	""	]
[ "geom",	"MakeLine",	"command geom.MakeLine(:wkb, :wkb):wkb ",	"wkbMakeLine;",	""	]
[ "geom",	"MakeLine",	"command geom.MakeLine(:bat[:wkb]):wkb ",	"wkbMakeLineAggr;",	""	]
[ "geom",	"MakePoint",	"function geom.MakePoint(x:dbl, y:dbl):wkb;",	"",	""	]
[ "geom",	"MakePoint",	"function geom.MakePoint(x:dbl, y:dbl, z:dbl):wkb;",	"",	""	]
[ "geom",	"MakePoint",	"function geom.MakePoint(x:dbl, y:dbl, z:dbl, m:dbl):wkb;",	"",	""	]
[ "geom",	"MakePointM",	"function geom.MakePointM(x:dbl, y:dbl, m:dbl):wkb;",	"",	""	]
[ "geom",	"MakePointXYZM",	"command geom.MakePointXYZM(:dbl, :dbl, :dbl, :dbl, :int):wkb ",	"wkbMakePoint;",	""	]
[ "geom",	"MakePolygon",	"function geom.MakePolygon(external:wkb):wkb;",	"",	""	]
[ "geom",	"MakePolygon",	"function geom.MakePolygon(external:wkb, srid:int):wkb;",	"",	""	]
[ "geom",	"NPoints",	"function geom.NPoints(w:wkb):int;",	"",	""	]
[ "geom",	"NRings",	"function geom.NRings(w:wkb):int;",	"",	""	]
[ "geom",	"NumGeometries",	"command geom.NumGeometries(:wkb):int ",	"wkbNumGeometries;",	""	]
[ "geom",	"NumInteriorRings",	"function geom.NumInteriorRings(w:wkb):int;",	"",	""	]
[ "geom",	"NumPoints",	"function geom.NumPoints(w:wkb):int;",	"",	""	]
[ "geom",	"NumRings",	"command geom.NumRings(:wkb, :int):int ",	"wkbNumRings;",	""	]
[ "geom",	"Overlaps",	"command geom.Overlaps(:wkb, :wkb):bit ",	"wkbOverlaps;",	""	]
[ "geom",	"PointFromText",	"function geom.PointFromText(wkt:str):wkb;",	"",	""	]
[ "geom",	"PointFromText",	"function geom.PointFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"PointN",	"command geom.PointN(:wkb, :int):wkb ",	"wkbPointN;",	""	]
[ "geom",	"PointOnSurface",	"command geom.PointOnSurface(:wkb):wkb ",	"wkbPointOnSurface;",	""	]
[ "geom",	"PointsNum",	"command geom.PointsNum(:wkb, :int):int ",	"wkbNumPoints;",	""	]
[ "geom",	"Polygon",	"command geom.Polygon(:wkb, :bat[:wkb], :int):wkb ",	"wkbMakePolygon;",	""	]
[ "geom",	"PolygonFromText",	"function geom.PolygonFromText(wkt:str):wkb;",	"",	""	]
[ "geom",	"PolygonFromText",	"function geom.PolygonFromText(wkt:str, srid:int):wkb;",	"",	""	]
[ "geom",	"Relate",	"command geom.Relate(:wkb, :wkb, :str):bit ",	"wkbRelate;",	""	]
[ "geom",	"Segmentize",	"command geom.Segmentize(:wkb, :dbl):wkb ",	"wkbSegmentize;",	""	]
[ "geom",	"StartPoint",	"command geom.StartPoint(:wkb):wkb ",	"wkbStartPoint;",	""	]
[ "geom",	"SymDifference",	"command geom.SymDifference(:wkb, :wkb):wkb ",	"wkbSymDifference;",	""	]
[ "geom",	"ToText",	"command geom.ToText(:wkb, :int):str ",	"wkbAsText;",	""	]
[ "geom",	"Touches",	"command geom.Touches(:wkb, :wkb):bit ",	"wkbTouches;",	""	]
[ "geom",	"Transform",	"command geom.Transform(:wkb, :int, :int, :str, :str):wkb ",	"wkbTransform;",	""	]
[ "geom",	"Translate",	"function geom.Translate(g:wkb, dx:dbl, dy:dbl):wkb;",	"",	""	]
[ "geom",	"Translate",	"function geom.Translate(g:wkb, dx:dbl, dy:dbl, dz:dbl):wkb;",	"",	""	]
[ "geom",	"Translate3D",	"command geom.Translate3D(:wkb, :dbl, :dbl, :dbl):wkb ",	"wkbTranslate;",	""	]
[ "geom",	"Union",	"command geom.Union(:wkb, :wkb):wkb ",	"wkbUnion;",	""	]
[ "geom",	"Union",	"command geom.Union(:bat[:wkb]):wkb ",	"wkbUnionAggr;",	""	]
[ "geom",	"Within",	"command geom.Within(:wkb, :wkb):bit ",	"wkbWithin;",	""	]
[ "geom",	"X",	"function geom.X(w:wkb):dbl;",	"",	""	]
[ "geom",	"XMaxFromMBR",	"function geom.XMaxFromMBR(b:mbr):dbl;",	"",	""	]
[ "geom",	"XMaxFromWKB",	"function geom.XMaxFromWKB(g:wkb):dbl;",	"",	""	]
[ "geom",	"XMinFromMBR",	"function geom.XMinFromMBR(b:mbr):dbl;",	"",	""	]
[ "geom",	"XMinFromWKB",	"function geom.XMinFromWKB(g:wkb):dbl;",	"",	""	]
[ "geom",	"Y",	"function geom.Y(w:wkb):dbl;",	"",	""	]
[ "geom",	"YMaxFromMBR",	"function geom.YMaxFromMBR(b:mbr):dbl;",	"",	""	]
[ "geom",	"YMaxFromWKB",	"function geom.YMaxFromWKB(g:wkb):dbl;",	"",	""	]
[ "geom",	"YMinFromMBR",	"function geom.YMinFromMBR(b:mbr):dbl;",	"",	""	]
[ "geom",	"YMinFromWKB",	"function geom.YMinFromWKB(g:wkb):dbl;",	"",	""	]
[ "geom",	"Z",	"function geom.Z(w:wkb):dbl;",	"",	""	]
[ "geom",	"coordinateFromMBR",	"command geom.coordinateFromMBR(:mbr, :int):dbl ",	"wkbCoordinateFromMBR;",	""	]
[ "geom",	"coordinateFromWKB",	"command geom.coordinateFromWKB(:wkb, :int):dbl ",	"wkbCoordinateFromWKB;",	""	]
[ "geom",	"epilogue",	"command geom.epilogue():void ",	"geom_epilogue;",	""	]
[ "geom",	"getSRID",	"command geom.getSRID(:wkb):int ",	"wkbGetSRID;",	""	]
[ "geom",	"getType",	"command geom.getType(:int, :int):str ",	"geoGetType;",	""	]
[ "geom",	"hasM",	"command geom.hasM(:int):int ",	"geoHasM;",	""	]
[ "geom",	"hasZ",	"command geom.hasZ(:int):int ",	"geoHasZ;",	""	]
[ "geom",	"mbr",	"command geom.mbr(:wkb):mbr ",	"wkbMBR;",	""	]
[ "geom",	"mbrAbove",	"command geom.mbrAbove(:mbr, :mbr):bit ",	"mbrAbove;",	""	]
[ "geom",	"mbrAbove",	"command geom.mbrAbove(:wkb, :wkb):bit ",	"mbrAbove_wkb;",	""	]
[ "geom",	"mbrBelow",	"command geom.mbrBelow(:mbr, :mbr):bit ",	"mbrBelow;",	""	]
[ "geom",	"mbrBelow",	"command geom.mbrBelow(:wkb, :wkb):bit ",	"mbrBelow_wkb;",	""	]
[ "geom",	"mbrContained",	"command geom.mbrContained(:mbr, :mbr):bit ",	"mbrContained;",	""	]
[ "geom",	"mbrContained",	"command geom.mbrContained(:wkb, :wkb):bit ",	"mbrContained_wkb;",	""	]
[ "geom",	"mbrContains",	"command geom.mbrContains(:mbr, :mbr):bit ",	"mbrContains;",	""	]
[ "geom",	"mbrContains",	"command geom.mbrContains(:wkb, :wkb):bit ",	"mbrContains_wkb;",	""	]
[ "geom",	"mbrDistance",	"command geom.mbrDistance(:mbr, :mbr):dbl ",	"mbrDistance;",	""	]
[ "geom",	"mbrDistance",	"command geom.mbrDistance(:wkb, :wkb):dbl ",	"mbrDistance_wkb;",	""	]
[ "geom",	"mbrEqual",	"command geom.mbrEqual(:mbr, :mbr):bit ",	"mbrEqual;",	""	]
[ "geom",	"mbrEqual",	"command geom.mbrEqual(:wkb, :wkb):bit ",	"mbrEqual_wkb;",	""	]
[ "geom",	"mbrLeft",	"command geom.mbrLeft(:mbr, :mbr):bit ",	"mbrLeft;",	""	]
[ "geom",	"mbrLeft",	"command geom.mbrLeft(:wkb, :wkb):bit ",	"mbrLeft_wkb;",	""	]
[ "geom",	"mbrOverlapOrAbove",	"command geom.mbrOverlapOrAbove(:mbr, :mbr):bit ",	"mbrOverlapOrAbove;",	""	]
[ "geom",	"mbrOverlapOrAbove",	"command geom.mbrOverlapOrAbove(:wkb, :wkb):bit ",	"mbrOverlapOrAbove_wkb;",	""	]
[ "geom",	"mbrOverlapOrBelow",	"command geom.mbrOverlapOrBelow(:mbr, :mbr):bit ",	"mbrOverlapOrBelow;",	""	]
[ "geom",	"mbrOverlapOrBelow",	"command geom.mbrOverlapOrBelow(:wkb, :wkb):bit ",	"mbrOverlapOrBelow_wkb;",	""	]
[ "geom",	"mbrOverlapOrLeft",	"command geom.mbrOverlapOrLeft(:mbr, :mbr):bit ",	"mbrOverlapOrLeft;",	""	]
[ "geom",	"mbrOverlapOrLeft",	"command geom.mbrOverlapOrLeft(:wkb, :wkb):bit ",	"mbrOverlapOrLeft_wkb;",	""	]
[ "geom",	"mbrOverlapOrRight",	"command geom.mbrOverlapOrRight(:mbr, :mbr):bit ",	"mbrOverlapOrRight;",	""	]
[ "geom",	"mbrOverlapOrRight",	"command geom.mbrOverlapOrRight(:wkb, :wkb):bit ",	"mbrOverlapOrRight_wkb;",	""	]
[ "geom",	"mbrOverlaps",	"command geom.mbrOverlaps(:mbr, :mbr):bit ",	"mbrOverlaps;",	""	]
[ "geom",	"mbrOverlaps",	"command geom.mbrOverlaps(:wkb, :wkb):bit ",	"mbrOverlaps_wkb;",	""	]
[ "geom",	"mbrRight",	"command geom.mbrRight(:mbr, :mbr):bit ",	"mbrRight;",	""	]
[ "geom",	"mbrRight",	"command geom.mbrRight(:wkb, :wkb):bit ",	"mbrRight_wkb;",	""	]
[ "geom",	"prelude",	"command geom.prelude():void ",	"geom_prelude;",	""	]
[ "geom",	"setSRID",	"command geom.setSRID(:wkb, :int):wkb ",	"wkbSetSRID;",	""	]
[ "group",	"group",	"command group.group(:bat[:any_1]):bat[:oid] ",	"GRPgroup11;",	""	]
[ "group",	"group",	"command group.group(:bat[:any_1]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPgroup1;",	""	]
[ "group",	"group",	"command group.group(:bat[:any_1], :bat[:oid]):bat[:oid] ",	"GRPgroup21;",	""	]
[ "group",	"group",	"command group.group(:bat[:any_1], :bat[:oid]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPgroup2;",	""	]
[ "group",	"group",	"command group.group(:bat[:any_1]) (:bat[:oid], :bat[:oid]) ",	"GRPgroup3;",	""	]
[ "group",	"group",	"command group.group(:bat[:any_1], :bat[:oid]) (:bat[:oid], :bat[:oid]) ",	"GRPgroup4;",	""	]
[ "group",	"groupdone",	"command group.groupdone(:bat[:any_1]):bat[:oid] ",	"GRPgroup11;",	""	]
[ "group",	"groupdone",	"command group.groupdone(:bat[:any_1]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPgroup1;",	""	]
[ "group",	"groupdone",	"command group.groupdone(:bat[:any_1], :bat[:oid]):bat[:oid] ",	"GRPgroup21;",	""	]
[ "group",	"groupdone",	"command group.groupdone(:bat[:any_1], :bat[:oid]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPgroup2;",	""	]
[ "group",	"groupdone",	"command group.groupdone(:bat[:any_1]) (:bat[:oid], :bat[:oid]) ",	"GRPgroup3;",	""	]
[ "group",	"groupdone",	"command group.groupdone(:bat[:any_1], :bat[:oid]) (:bat[:oid], :bat[:oid]) ",	"GRPgroup4;",	""	]
[ "group",	"multicolumn",	"pattern group.multicolumn(:bat[:any]...) (:bat[:oid], :bat[:oid], :bat[:any]) ",	"GROUPmulticolumngroup;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid]):bat[:oid] ",	"GRPsubgroup21;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPsubgroup2;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid], :bat[:oid]):bat[:oid] ",	"GRPsubgroup31;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid], :bat[:oid]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPsubgroup3;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:lng]):bat[:oid] ",	"GRPsubgroup41;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:lng]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPsubgroup4;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bat[:lng]):bat[:oid] ",	"GRPsubgroup51;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bat[:lng]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPsubgroup5;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid]) (:bat[:oid], :bat[:oid]) ",	"GRPsubgroup6;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid], :bat[:oid]) (:bat[:oid], :bat[:oid]) ",	"GRPsubgroup7;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:lng]) (:bat[:oid], :bat[:oid]) ",	"GRPsubgroup8;",	""	]
[ "group",	"subgroup",	"command group.subgroup(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bat[:lng]) (:bat[:oid], :bat[:oid]) ",	"GRPsubgroup9;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid]):bat[:oid] ",	"GRPsubgroup21;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPsubgroup2;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid], :bat[:oid]):bat[:oid] ",	"GRPsubgroup31;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid], :bat[:oid]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPsubgroup3;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:lng]):bat[:oid] ",	"GRPsubgroup41;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:lng]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPsubgroup4;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bat[:lng]):bat[:oid] ",	"GRPsubgroup51;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bat[:lng]) (:bat[:oid], :bat[:oid], :bat[:lng]) ",	"GRPsubgroup5;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid]) (:bat[:oid], :bat[:oid]) ",	"GRPsubgroup6;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid], :bat[:oid]) (:bat[:oid], :bat[:oid]) ",	"GRPsubgroup7;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:lng]) (:bat[:oid], :bat[:oid]) ",	"GRPsubgroup8;",	""	]
[ "group",	"subgroupdone",	"command group.subgroupdone(:bat[:any_1], :bat[:oid], :bat[:oid], :bat[:oid], :bat[:lng]) (:bat[:oid], :bat[:oid]) ",	"GRPsubgroup9;",	""	]
[ "identifier",	"identifier",	"command identifier.identifier(:str):identifier ",	"IDentifier;",	""	]
[ "identifier",	"prelude",	"command identifier.prelude():void ",	"IDprelude;",	""	]
[ "inet",	"!=",	"command inet.!=(:inet, :inet):bit ",	"INET_comp_NEQ;",	""	]
[ "inet",	"<",	"command inet.<(:inet, :inet):bit ",	"INET_comp_LT;",	""	]
[ "inet",	"<<",	"command inet.<<(:inet, :inet):bit ",	"INET_comp_CW;",	""	]
[ "inet",	"<<=",	"command inet.<<=(:inet, :inet):bit ",	"INET_comp_CWE;",	""	]
[ "inet",	"<=",	"command inet.<=(:inet, :inet):bit ",	"INET_comp_LE;",	""	]
[ "inet",	"=",	"command inet.=(:inet, :inet):bit ",	"INET_comp_EQ;",	""	]
[ "inet",	">",	"command inet.>(:inet, :inet):bit ",	"INET_comp_GT;",	""	]
[ "inet",	">=",	"command inet.>=(:inet, :inet):bit ",	"INET_comp_GE;",	""	]
[ "inet",	">>",	"command inet.>>(:inet, :inet):bit ",	"INET_comp_CS;",	""	]
[ "inet",	">>=",	"command inet.>>=(:inet, :inet):bit ",	"INET_comp_CSE;",	""	]
[ "inet",	"abbrev",	"command inet.abbrev(:inet):str ",	"INETabbrev;",	""	]
[ "inet",	"broadcast",	"command inet.broadcast(:inet):inet ",	"INETbroadcast;",	""	]
[ "inet",	"host",	"command inet.host(:inet):str ",	"INEThost;",	""	]
[ "inet",	"hostmask",	"command inet.hostmask(:inet):inet ",	"INEThostmask;",	""	]
[ "inet",	"isnil",	"command inet.isnil(:inet):bit ",	"INET_isnil;",	""	]
[ "inet",	"masklen",	"command inet.masklen(:inet):int ",	"INETmasklen;",	""	]
[ "inet",	"netmask",	"command inet.netmask(:inet):inet ",	"INETnetmask;",	""	]
[ "inet",	"network",	"command inet.network(:inet):inet ",	"INETnetwork;",	""	]
[ "inet",	"new",	"command inet.new(:str):inet ",	"INETnew;",	""	]
[ "inet",	"setmasklen",	"command inet.setmasklen(:inet, :int):inet ",	"INETsetmasklen;",	""	]
[ "inet",	"text",	"command inet.text(:inet):str ",	"INETtext;",	""	]
[ "inspect",	"equalType",	"pattern inspect.equalType(:any, :any):bit ",	"INSPECTequalType;",	""	]
[ "inspect",	"getAtomNames",	"command inspect.getAtomNames():bat[:str] ",	"INSPECTatom_names;",	""	]
[ "inspect",	"getAtomSizes",	"command inspect.getAtomSizes():bat[:int] ",	"INSPECTatom_sizes;",	""	]
[ "inspect",	"getAtomSuper",	"command inspect.getAtomSuper():bat[:str] ",	"INSPECTatom_sup_names;",	""	]
[ "inspect",	"getComment",	"pattern inspect.getComment(:str, :str):bat[:str] ",	"INSPECTgetComment;",	""	]
[ "inspect",	"getDefinition",	"pattern inspect.getDefinition(:str, :str):bat[:str] ",	"INSPECTgetDefinition;",	""	]
[ "inspect",	"getEnvironment",	"command inspect.getEnvironment() (:bat[:str], :bat[:str]) ",	"INSPECTgetEnvironment;",	""	]
[ "inspect",	"getEnvironment",	"command inspect.getEnvironment(:str):str ",	"INSPECTgetEnvironmentKey;",	""	]
[ "inspect",	"getExistence",	"pattern inspect.getExistence(:str, :str):bit ",	"INSPECTgetExistence;",	""	]
[ "inspect",	"getFunction",	"pattern inspect.getFunction():bat[:str] ",	"INSPECTgetAllFunctions;",	""	]
[ "inspect",	"getKind",	"pattern inspect.getKind():bat[:str] ",	"INSPECTgetkind;",	""	]
[ "inspect",	"getModule",	"pattern inspect.getModule():bat[:str] ",	"INSPECTgetAllModules;",	""	]
[ "inspect",	"getSignature",	"pattern inspect.getSignature(:str, :str):bat[:str] ",	"INSPECTgetSignature;",	""	]
[ "inspect",	"getSignatures",	"pattern inspect.getSignatures():bat[:str] ",	"INSPECTgetAllSignatures;",	""	]
[ "inspect",	"getSize",	"pattern inspect.getSize(:str, :str):lng ",	"INSPECTgetFunctionSize;",	""	]
[ "inspect",	"getSize",	"pattern inspect.getSize():lng ",	"INSPECTgetSize;",	""	]
[ "inspect",	"getSource",	"pattern inspect.getSource(:str, :str):str ",	"INSPECTgetSource;",	""	]
[ "inspect",	"getType",	"pattern inspect.getType(:any_1):str ",	"INSPECTtypeName;",	""	]
[ "inspect",	"optimizer_stats",	"pattern inspect.optimizer_stats() (:bat[:str], :bat[:int], :bat[:lng]) ",	"OPTstatistics;",	""	]
[ "io",	"export",	"command io.export(:bat[:any_2], :str):void ",	"IOexport;",	""	]
[ "io",	"import",	"command io.import(:bat[:any_2], :str):void ",	"IOimport;",	""	]
[ "io",	"print",	"pattern io.print(:any_1):void ",	"IOprint_val;",	""	]
[ "io",	"print",	"pattern io.print(:any_1, :any...):void ",	"IOprint_val;",	""	]
[ "io",	"print",	"pattern io.print(:bat[:any_1]):void ",	"IOprint_val;",	""	]
[ "io",	"print",	"pattern io.print(:bat[:any]...):void ",	"IOtable;",	""	]
[ "io",	"printf",	"pattern io.printf(:str):void ",	"IOprintf;",	""	]
[ "io",	"printf",	"pattern io.printf(:str, :any...):void ",	"IOprintf;",	""	]
[ "io",	"printf",	"pattern io.printf(:streams, :str):void ",	"IOprintfStream;",	""	]
[ "io",	"printf",	"pattern io.printf(:streams, :str, :any...):void ",	"IOprintfStream;",	""	]
[ "io",	"setmallocsuccesscount",	"command io.setmallocsuccesscount(:lng):void ",	"IOsetmallocsuccesscount;",	""	]
[ "io",	"stdin",	"pattern io.stdin():bstream ",	"io_stdin;",	""	]
[ "io",	"stdout",	"pattern io.stdout():streams ",	"io_stdout;",	""	]
[ "iterator",	"new",	"pattern iterator.new(:bat[:any_2]) (:oid, :any_2) ",	"ITRbunIterator;",	""	]
[ "iterator",	"new",	"command iterator.new(:bat[:any_2], :lng) (:lng, :bat[:any_2]) ",	"ITRnewChunk;",	""	]
[ "iterator",	"next",	"pattern iterator.next(:bat[:any_2]) (:oid, :any_2) ",	"ITRbunNext;",	""	]
[ "iterator",	"next",	"command iterator.next(:bat[:any_2], :lng) (:lng, :bat[:any_2]) ",	"ITRnextChunk;",	""	]
[ "iterator",	"next",	"command iterator.next(:dbl, :dbl):dbl ",	"ITRnext_dbl;",	""	]
[ "iterator",	"next",	"command iterator.next(:flt, :flt):flt ",	"ITRnext_flt;",	""	]
[ "iterator",	"next",	"command iterator.next(:hge, :hge):hge ",	"ITRnext_hge;",	""	]
[ "iterator",	"next",	"command iterator.next(:int, :int):int ",	"ITRnext_int;",	""	]
[ "iterator",	"next",	"command iterator.next(:lng, :lng):lng ",	"ITRnext_lng;",	""	]
[ "iterator",	"next",	"command iterator.next(:oid, :oid):oid ",	"ITRnext_oid;",	""	]
[ "iterator",	"next",	"command iterator.next(:sht, :sht):sht ",	"ITRnext_sht;",	""	]
[ "json",	"dump",	"pattern json.dump(:json):bat[:str] ",	"JSONdump;",	""	]
[ "json",	"filter",	"command json.filter(:json, :str):json ",	"JSONfilter;",	""	]
[ "json",	"filter",	"command json.filter(:json, :bte, :str):json ",	"JSONfilterArrayDefault_bte;",	""	]
[ "json",	"filter",	"command json.filter(:json, :hge, :str):json ",	"JSONfilterArrayDefault_hge;",	""	]
[ "json",	"filter",	"command json.filter(:json, :int, :str):json ",	"JSONfilterArrayDefault_int;",	""	]
[ "json",	"filter",	"command json.filter(:json, :lng, :str):json ",	"JSONfilterArrayDefault_lng;",	""	]
[ "json",	"filter",	"command json.filter(:json, :sht, :str):json ",	"JSONfilterArrayDefault_sht;",	""	]
[ "json",	"filter",	"command json.filter(:json, :bte):json ",	"JSONfilterArray_bte;",	""	]
[ "json",	"filter",	"command json.filter(:json, :hge):json ",	"JSONfilterArray_hge;",	""	]
[ "json",	"filter",	"command json.filter(:json, :int):json ",	"JSONfilterArray_int;",	""	]
[ "json",	"filter",	"command json.filter(:json, :lng):json ",	"JSONfilterArray_lng;",	""	]
[ "json",	"filter",	"command json.filter(:json, :sht):json ",	"JSONfilterArray_sht;",	""	]
[ "json",	"fold",	"pattern json.fold(:bat[:any]):json ",	"JSONfold;",	""	]
[ "json",	"fold",	"pattern json.fold(:bat[:oid], :bat[:str], :bat[:any]):json ",	"JSONfold;",	""	]
[ "json",	"fold",	"pattern json.fold(:bat[:str], :bat[:any]):json ",	"JSONfold;",	""	]
[ "json",	"integer",	"command json.integer(:json):lng ",	"JSONjson2integer;",	""	]
[ "json",	"isarray",	"command json.isarray(:json):bit ",	"JSONisarray;",	""	]
[ "json",	"isobject",	"command json.isobject(:json):bit ",	"JSONisobject;",	""	]
[ "json",	"isvalid",	"command json.isvalid(:str):bit ",	"JSONisvalid;",	""	]
[ "json",	"keyarray",	"command json.keyarray(:json):json ",	"JSONkeyArray;",	""	]
[ "json",	"keys",	"command json.keys(:json):bat[:str] ",	"JSONkeyTable;",	""	]
[ "json",	"length",	"command json.length(:json):int ",	"JSONlength;",	""	]
[ "json",	"new",	"command json.new(:str):json ",	"JSONstr2json;",	""	]
[ "json",	"number",	"command json.number(:json):dbl ",	"JSONjson2number;",	""	]
[ "json",	"prelude",	"command json.prelude():void ",	"JSONprelude;",	""	]
[ "json",	"renderarray",	"pattern json.renderarray(:any...):json ",	"JSONrenderarray;",	""	]
[ "json",	"renderobject",	"pattern json.renderobject(:any...):json ",	"JSONrenderobject;",	""	]
[ "json",	"resultSet",	"command json.resultSet(:bat[:uuid], :bat[:lng], :bat[:json]):json ",	"JSONresultSet;",	""	]
[ "json",	"str",	"command json.str(:json):str ",	"JSONjson2str;",	""	]
[ "json",	"text",	"command json.text(:json):str ",	"JSONjson2text;",	""	]
[ "json",	"text",	"command json.text(:json, :str):str ",	"JSONjson2textSeparator;",	""	]
[ "json",	"unfold",	"pattern json.unfold(:json) (:bat[:oid], :bat[:str], :bat[:json]) ",	"JSONunfold;",	""	]
[ "json",	"unfold",	"pattern json.unfold(:json) (:bat[:str], :bat[:json]) ",	"JSONunfold;",	""	]
[ "json",	"valuearray",	"command json.valuearray(:json):json ",	"JSONvalueArray;",	""	]
[ "json",	"values",	"command json.values(:json):bat[:json] ",	"JSONvalueTable;",	""	]
[ "language",	"assert",	"unsafe command language.assert(:bit, :str):void ",	"MALassertBit;",	""	]
[ "language",	"assert",	"unsafe command language.assert(:hge, :str):void ",	"MALassertHge;",	""	]
[ "language",	"assert",	"unsafe command language.assert(:int, :str):void ",	"MALassertInt;",	""	]
[ "language",	"assert",	"unsafe command language.assert(:lng, :str):void ",	"MALassertLng;",	""	]
[ "language",	"assert",	"unsafe command language.assert(:oid, :str):void ",	"MALassertOid;",	""	]
[ "language",	"assert",	"unsafe command language.assert(:sht, :str):void ",	"MALassertSht;",	""	]
[ "language",	"assert",	"unsafe command language.assert(:str, :str):void ",	"MALassertStr;",	""	]
[ "language",	"assert",	"unsafe pattern language.assert(:any_1, :str, :str, :any_2):void ",	"MALassertTriple;",	""	]
[ "language",	"block",	"pattern language.block(:int, :any...):int ",	"deblockdataflow;",	""	]
[ "language",	"call",	"pattern language.call(:bat[:str]):void ",	"CMDcallBAT;",	""	]
[ "language",	"call",	"pattern language.call(:str, :str):void ",	"CMDcallFunction;",	""	]
[ "language",	"call",	"pattern language.call(:str):void ",	"CMDcallString;",	""	]
[ "language",	"dataflow",	"pattern language.dataflow():bit ",	"MALstartDataflow;",	""	]
[ "language",	"pass",	"pattern language.pass(:any_1):void ",	"MALpass;",	""	]
[ "language",	"raise",	"unsafe command language.raise(:str):str ",	"CMDraise;",	""	]
[ "language",	"register",	"pattern language.register(:str, :str, :str, :str):void ",	"CMDregisterFunction;",	""	]
[ "language",	"sink",	"pattern language.sink(:any...):void ",	"MALgarbagesink;",	""	]
[ "language",	"source",	"pattern language.source(:str):void ",	"CMDevalFile;",	""	]
[ "logging",	"compinfo",	"pattern logging.compinfo() (:bat[:int], :bat[:str], :bat[:str]) ",	"TRACERcomp_info;",	""	]
[ "logging",	"flush",	"command logging.flush():void ",	"TRACERflush_buffer;",	""	]
[ "logging",	"resetadapter",	"command logging.resetadapter():void ",	"TRACERreset_adapter;",	""	]
[ "logging",	"resetcomplevel",	"command logging.resetcomplevel(:str):void ",	"TRACERreset_component_level;",	""	]
[ "logging",	"resetflushlevel",	"command logging.resetflushlevel():void ",	"TRACERreset_flush_level;",	""	]
[ "logging",	"resetlayerlevel",	"command logging.resetlayerlevel(:str):void ",	"TRACERreset_layer_level;",	""	]
[ "logging",	"setadapter",	"command logging.setadapter(:str):void ",	"TRACERset_adapter;",	""	]
[ "logging",	"setcomplevel",	"command logging.setcomplevel(:str, :str):void ",	"TRACERset_component_level;",	""	]
[ "logging",	"setflushlevel",	"command logging.setflushlevel(:str):void ",	"TRACERset_flush_level;",	""	]
[ "logging",	"setlayerlevel",	"command logging.setlayerlevel(:str, :str):void ",	"TRACERset_layer_level;",	""	]
[ "mal",	"manifold",	"pattern mal.manifold(:str, :str, :any...):bat[:any] ",	"MANIFOLDevaluate;",	""	]
[ "mal",	"multiplex",	"pattern mal.multiplex(:str, :str, :any...):any... ",	"MANIFOLDremapMultiplex;",	""	]
[ "manual",	"functions",	"pattern manual.functions() (:bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:str]) ",	"MANUALcreateOverview;",	""	]
[ "mapi",	"bind",	"pattern mapi.bind(:int, :str):bat[:any_2] ",	"SERVERbindBAT;",	""	]
[ "mapi",	"bind",	"pattern mapi.bind(:int, :str, :str, :int):bat[:any_2] ",	"SERVERbindBAT;",	""	]
[ "mapi",	"bind",	"pattern mapi.bind(:int, :str, :str, :str, :int):bat[:any_2] ",	"SERVERbindBAT;",	""	]
[ "mapi",	"connect",	"pattern mapi.connect(:str, :int, :str, :str, :str):int ",	"SERVERconnect;",	""	]
[ "mapi",	"destroy",	"command mapi.destroy(:int):void ",	"SERVERdestroy;",	""	]
[ "mapi",	"disconnect",	"command mapi.disconnect(:int):void ",	"SERVERdisconnect;",	""	]
[ "mapi",	"disconnect",	"command mapi.disconnect():int ",	"SERVERdisconnectALL;",	""	]
[ "mapi",	"disconnect",	"command mapi.disconnect(:str):int ",	"SERVERdisconnectWithAlias;",	""	]
[ "mapi",	"error",	"command mapi.error(:int):int ",	"SERVERerror;",	""	]
[ "mapi",	"explain",	"command mapi.explain(:int):str ",	"SERVERexplain;",	""	]
[ "mapi",	"fetch_all_rows",	"command mapi.fetch_all_rows(:int):lng ",	"SERVERfetch_all_rows;",	""	]
[ "mapi",	"fetch_field",	"command mapi.fetch_field(:int, :int):bte ",	"SERVERfetch_field_bte;",	""	]
[ "mapi",	"fetch_field",	"command mapi.fetch_field(:int, :int):hge ",	"SERVERfetch_field_hge;",	""	]
[ "mapi",	"fetch_field",	"command mapi.fetch_field(:int, :int):int ",	"SERVERfetch_field_int;",	""	]
[ "mapi",	"fetch_field",	"command mapi.fetch_field(:int, :int):lng ",	"SERVERfetch_field_lng;",	""	]
[ "mapi",	"fetch_field",	"command mapi.fetch_field(:int, :int):oid ",	"SERVERfetch_field_oid;",	""	]
[ "mapi",	"fetch_field",	"command mapi.fetch_field(:int, :int):sht ",	"SERVERfetch_field_sht;",	""	]
[ "mapi",	"fetch_field",	"command mapi.fetch_field(:int, :int):str ",	"SERVERfetch_field_str;",	""	]
[ "mapi",	"fetch_field",	"command mapi.fetch_field(:int, :int):void ",	"SERVERfetch_field_void;",	""	]
[ "mapi",	"fetch_field_array",	"command mapi.fetch_field_array(:int):bat[:str] ",	"SERVERfetch_field_bat;",	""	]
[ "mapi",	"fetch_line",	"command mapi.fetch_line(:int):str ",	"SERVERfetch_line;",	""	]
[ "mapi",	"fetch_reset",	"command mapi.fetch_reset(:int):int ",	"SERVERfetch_reset;",	""	]
[ "mapi",	"fetch_row",	"command mapi.fetch_row(:int):int ",	"SERVERfetch_row;",	""	]
[ "mapi",	"finish",	"command mapi.finish(:int):int ",	"SERVERfinish;",	""	]
[ "mapi",	"getError",	"command mapi.getError(:int):str ",	"SERVERgetError;",	""	]
[ "mapi",	"get_field_count",	"command mapi.get_field_count(:int):int ",	"SERVERget_field_count;",	""	]
[ "mapi",	"get_row_count",	"command mapi.get_row_count(:int):lng ",	"SERVERget_row_count;",	""	]
[ "mapi",	"listen",	"command mapi.listen():int ",	"SERVERlisten_default;",	""	]
[ "mapi",	"listen",	"command mapi.listen(:int):int ",	"SERVERlisten_port;",	""	]
[ "mapi",	"listen",	"command mapi.listen(:str):int ",	"SERVERlisten_usock;",	""	]
[ "mapi",	"lookup",	"command mapi.lookup(:str):int ",	"SERVERlookup;",	""	]
[ "mapi",	"malclient",	"command mapi.malclient(:streams, :streams):void ",	"SERVERclient;",	""	]
[ "mapi",	"next_result",	"command mapi.next_result(:int):int ",	"SERVERnext_result;",	""	]
[ "mapi",	"ping",	"command mapi.ping(:int):int ",	"SERVERping;",	""	]
[ "mapi",	"prelude",	"command mapi.prelude():int ",	"SERVERlisten_default;",	""	]
[ "mapi",	"prepare",	"command mapi.prepare(:int, :str):int ",	"SERVERprepare;",	""	]
[ "mapi",	"put",	"pattern mapi.put(:int, :str, :any_1):void ",	"SERVERput;",	""	]
[ "mapi",	"put",	"pattern mapi.put(:str, :any_1):str ",	"SERVERputLocal;",	""	]
[ "mapi",	"query",	"command mapi.query(:int, :str):int ",	"SERVERquery;",	""	]
[ "mapi",	"query_array",	"pattern mapi.query_array(:int, :str, :str...):int ",	"SERVERquery_array;",	""	]
[ "mapi",	"query_handle",	"command mapi.query_handle(:int, :str):int ",	"SERVERquery_handle;",	""	]
[ "mapi",	"reconnect",	"command mapi.reconnect(:int):void ",	"SERVERreconnect;",	""	]
[ "mapi",	"reconnect",	"pattern mapi.reconnect(:str, :int, :str, :str, :str, :str):int ",	"SERVERreconnectAlias;",	""	]
[ "mapi",	"reconnect",	"pattern mapi.reconnect(:str, :int, :str, :str, :str):int ",	"SERVERreconnectWithoutAlias;",	""	]
[ "mapi",	"resume",	"command mapi.resume():void ",	"SERVERresume;",	""	]
[ "mapi",	"rows_affected",	"command mapi.rows_affected(:int):lng ",	"SERVERrows_affected;",	""	]
[ "mapi",	"rpc",	"pattern mapi.rpc(:int, :str):bat[:any_2] ",	"SERVERmapi_rpc_bat;",	""	]
[ "mapi",	"rpc",	"pattern mapi.rpc(:int, :str...):any ",	"SERVERmapi_rpc_single_row;",	""	]
[ "mapi",	"rpc",	"command mapi.rpc(:int, :str):int ",	"SERVERquery;",	""	]
[ "mapi",	"setAlias",	"command mapi.setAlias(:int, :str):void ",	"SERVERsetAlias;",	""	]
[ "mapi",	"stop",	"command mapi.stop():void ",	"SERVERstop;",	""	]
[ "mapi",	"suspend",	"command mapi.suspend():void ",	"SERVERsuspend;",	""	]
[ "mapi",	"trace",	"command mapi.trace(:int, :int):void ",	"SERVERtrace;",	""	]
[ "mask",	"mask",	"pattern mask.mask(:bat[:oid]):bat[:msk] ",	"MSKmask;",	""	]
[ "mask",	"umask",	"pattern mask.umask(:bat[:msk]):bat[:oid] ",	"MSKumask;",	""	]
[ "mat",	"new",	"pattern mat.new(:bat[:any_2]...):bat[:any_2] ",	"MATpack;",	""	]
[ "mat",	"pack",	"pattern mat.pack(:bat[:any_2]...):bat[:any_2] ",	"MATpack;",	""	]
[ "mat",	"pack",	"pattern mat.pack(:any_2...):bat[:any_2] ",	"MATpackValues;",	""	]
[ "mat",	"packIncrement",	"pattern mat.packIncrement(:bat[:any_2], :bat[:any_2]):bat[:any_2] ",	"MATpackIncrement;",	""	]
[ "mat",	"packIncrement",	"pattern mat.packIncrement(:bat[:any_2], :int):bat[:any_2] ",	"MATpackIncrement;",	""	]
[ "mdb",	"List",	"pattern mdb.List(:str, :str):void ",	"MDBlist3Detail;",	""	]
[ "mdb",	"List",	"pattern mdb.List():void ",	"MDBlistDetail;",	""	]
[ "mdb",	"dump",	"pattern mdb.dump():void ",	"MDBdump;",	""	]
[ "mdb",	"getContext",	"command mdb.getContext(:str):str ",	"MDBgetExceptionContext;",	""	]
[ "mdb",	"getDebug",	"pattern mdb.getDebug():int ",	"MDBgetDebug;",	""	]
[ "mdb",	"getDebugFlags",	"pattern mdb.getDebugFlags() (:bat[:str], :bat[:bit]) ",	"MDBgetDebugFlags;",	""	]
[ "mdb",	"getDefinition",	"pattern mdb.getDefinition():bat[:str] ",	"MDBgetDefinition;",	""	]
[ "mdb",	"getException",	"command mdb.getException(:str):str ",	"MDBgetExceptionVariable;",	""	]
[ "mdb",	"getReason",	"command mdb.getReason(:str):str ",	"MDBgetExceptionReason;",	""	]
[ "mdb",	"getStackDepth",	"pattern mdb.getStackDepth():int ",	"MDBStkDepth;",	""	]
[ "mdb",	"getStackFrame",	"pattern mdb.getStackFrame() (:bat[:str], :bat[:str]) ",	"MDBgetStackFrame;",	""	]
[ "mdb",	"getStackFrame",	"pattern mdb.getStackFrame(:int) (:bat[:str], :bat[:str]) ",	"MDBgetStackFrameN;",	""	]
[ "mdb",	"getStackTrace",	"pattern mdb.getStackTrace() (:bat[:int], :bat[:str]) ",	"MDBStkTrace;",	""	]
[ "mdb",	"getVMsize",	"pattern mdb.getVMsize():lng ",	"MDBgetVMsize;",	""	]
[ "mdb",	"inspect",	"pattern mdb.inspect(:str, :str):void ",	"MDBinspect;",	""	]
[ "mdb",	"list",	"pattern mdb.list(:str, :str):void ",	"MDBlist3;",	""	]
[ "mdb",	"list",	"pattern mdb.list():void ",	"MDBlist;",	""	]
[ "mdb",	"listMapi",	"pattern mdb.listMapi():void ",	"MDBlistMapi;",	""	]
[ "mdb",	"modules",	"command mdb.modules():bat[:str] ",	"CMDmodules;",	""	]
[ "mdb",	"setCatch",	"pattern mdb.setCatch(:bit):void ",	"MDBsetCatch;",	""	]
[ "mdb",	"setDebug",	"pattern mdb.setDebug(:int):int ",	"MDBsetDebug;",	""	]
[ "mdb",	"setDebug",	"pattern mdb.setDebug(:str):int ",	"MDBsetDebugStr;",	""	]
[ "mdb",	"setTrace",	"pattern mdb.setTrace(:bit):void ",	"MDBsetTrace;",	""	]
[ "mdb",	"setTrace",	"pattern mdb.setTrace(:str):void ",	"MDBsetVarTrace;",	""	]
[ "mdb",	"setVMsize",	"pattern mdb.setVMsize(:lng):lng ",	"MDBsetVMsize;",	""	]
[ "mdb",	"start",	"pattern mdb.start():void ",	"MDBstart;",	""	]
[ "mdb",	"start",	"pattern mdb.start(:int):void ",	"MDBstart;",	""	]
[ "mdb",	"start",	"pattern mdb.start(:str, :str):void ",	"MDBstartFactory;",	""	]
[ "mdb",	"stop",	"pattern mdb.stop():void ",	"MDBstop;",	""	]
[ "mdb",	"var",	"pattern mdb.var(:str, :str):void ",	"MDBvar3;",	""	]
[ "mdb",	"var",	"pattern mdb.var():void ",	"MDBvar;",	""	]
[ "mkey",	"bulk_rotate_xor_hash",	"command mkey.bulk_rotate_xor_hash(:bat[:lng], :int, :bat[:any_1]):bat[:lng] ",	"MKEYbulk_rotate_xor_hash;",	""	]
[ "mkey",	"bulk_rotate_xor_hash",	"pattern mkey.bulk_rotate_xor_hash(:bat[:lng], :int, :any):bat[:lng] ",	"MKEYbulkconst_rotate_xor_hash;",	""	]
[ "mkey",	"bulk_rotate_xor_hash",	"command mkey.bulk_rotate_xor_hash(:lng, :int, :bat[:any_1]):bat[:lng] ",	"MKEYconstbulk_rotate_xor_hash;",	""	]
[ "mkey",	"bulk_rotate_xor_hash",	"pattern mkey.bulk_rotate_xor_hash(:lng, :int, :any):lng ",	"MKEYrotate_xor_hash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:any):lng ",	"MKEYhash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:bit):lng ",	"MKEYhash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:bte):lng ",	"MKEYhash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:dbl):lng ",	"MKEYhash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:flt):lng ",	"MKEYhash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:hge):lng ",	"MKEYhash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:int):lng ",	"MKEYhash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:lng):lng ",	"MKEYhash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:sht):lng ",	"MKEYhash;",	""	]
[ "mkey",	"hash",	"pattern mkey.hash(:str):lng ",	"MKEYhash;",	""	]
[ "mkey",	"rotate",	"command mkey.rotate(:lng, :int):lng ",	"MKEYrotate;",	""	]
[ "mmath",	"acos",	"command mmath.acos(:dbl):dbl ",	"MATHunary_ACOSdbl;",	""	]
[ "mmath",	"acos",	"command mmath.acos(:flt):flt ",	"MATHunary_ACOSflt;",	""	]
[ "mmath",	"asin",	"command mmath.asin(:dbl):dbl ",	"MATHunary_ASINdbl;",	""	]
[ "mmath",	"asin",	"command mmath.asin(:flt):flt ",	"MATHunary_ASINflt;",	""	]
[ "mmath",	"atan",	"command mmath.atan(:dbl):dbl ",	"MATHunary_ATANdbl;",	""	]
[ "mmath",	"atan",	"command mmath.atan(:flt):flt ",	"MATHunary_ATANflt;",	""	]
[ "mmath",	"atan2",	"command mmath.atan2(:dbl, :dbl):dbl ",	"MATHbinary_ATAN2dbl;",	""	]
[ "mmath",	"atan2",	"command mmath.atan2(:flt, :flt):flt ",	"MATHbinary_ATAN2flt;",	""	]
[ "mmath",	"cbrt",	"command mmath.cbrt(:dbl):dbl ",	"MATHunary_CBRTdbl;",	""	]
[ "mmath",	"cbrt",	"command mmath.cbrt(:flt):flt ",	"MATHunary_CBRTflt;",	""	]
[ "mmath",	"ceil",	"command mmath.ceil(:dbl):dbl ",	"MATHunary_CEILdbl;",	""	]
[ "mmath",	"ceil",	"command mmath.ceil(:flt):flt ",	"MATHunary_CEILflt;",	""	]
[ "mmath",	"cos",	"command mmath.cos(:dbl):dbl ",	"MATHunary_COSdbl;",	""	]
[ "mmath",	"cos",	"command mmath.cos(:flt):flt ",	"MATHunary_COSflt;",	""	]
[ "mmath",	"cosh",	"command mmath.cosh(:dbl):dbl ",	"MATHunary_COSHdbl;",	""	]
[ "mmath",	"cosh",	"command mmath.cosh(:flt):flt ",	"MATHunary_COSHflt;",	""	]
[ "mmath",	"cot",	"command mmath.cot(:dbl):dbl ",	"MATHunary_COTdbl;",	""	]
[ "mmath",	"cot",	"command mmath.cot(:flt):flt ",	"MATHunary_COTflt;",	""	]
[ "mmath",	"degrees",	"command mmath.degrees(:dbl):dbl ",	"MATHunary_DEGREESdbl;",	""	]
[ "mmath",	"degrees",	"command mmath.degrees(:flt):flt ",	"MATHunary_DEGREESflt;",	""	]
[ "mmath",	"exp",	"command mmath.exp(:dbl):dbl ",	"MATHunary_EXPdbl;",	""	]
[ "mmath",	"exp",	"command mmath.exp(:flt):flt ",	"MATHunary_EXPflt;",	""	]
[ "mmath",	"fabs",	"command mmath.fabs(:dbl):dbl ",	"MATHunary_FABSdbl;",	""	]
[ "mmath",	"finite",	"command mmath.finite(:dbl):bit ",	"MATHunary_FINITE;",	""	]
[ "mmath",	"floor",	"command mmath.floor(:dbl):dbl ",	"MATHunary_FLOORdbl;",	""	]
[ "mmath",	"floor",	"command mmath.floor(:flt):flt ",	"MATHunary_FLOORflt;",	""	]
[ "mmath",	"fmod",	"pattern mmath.fmod(:dbl, :dbl):dbl ",	"CMDvarMODsignal;",	""	]
[ "mmath",	"fmod",	"pattern mmath.fmod(:flt, :flt):flt ",	"CMDvarMODsignal;",	""	]
[ "mmath",	"isinf",	"command mmath.isinf(:dbl):int ",	"MATHunary_ISINF;",	""	]
[ "mmath",	"isnan",	"command mmath.isnan(:dbl):bit ",	"MATHunary_ISNAN;",	""	]
[ "mmath",	"log",	"command mmath.log(:dbl):dbl ",	"MATHunary_LOGdbl;",	""	]
[ "mmath",	"log",	"command mmath.log(:flt):flt ",	"MATHunary_LOGflt;",	""	]
[ "mmath",	"log10",	"command mmath.log10(:dbl):dbl ",	"MATHunary_LOG10dbl;",	""	]
[ "mmath",	"log10",	"command mmath.log10(:flt):flt ",	"MATHunary_LOG10flt;",	""	]
[ "mmath",	"log2",	"command mmath.log2(:dbl):dbl ",	"MATHunary_LOG2dbl;",	""	]
[ "mmath",	"log2",	"command mmath.log2(:flt):flt ",	"MATHunary_LOG2flt;",	""	]
[ "mmath",	"log2arg",	"command mmath.log2arg(:dbl, :dbl):dbl ",	"MATHbinary_LOGdbl;",	""	]
[ "mmath",	"log2arg",	"command mmath.log2arg(:flt, :flt):flt ",	"MATHbinary_LOGflt;",	""	]
[ "mmath",	"pi",	"command mmath.pi():dbl ",	"MATHpi;",	""	]
[ "mmath",	"pow",	"command mmath.pow(:dbl, :dbl):dbl ",	"MATHbinary_POWdbl;",	""	]
[ "mmath",	"pow",	"command mmath.pow(:flt, :flt):flt ",	"MATHbinary_POWflt;",	""	]
[ "mmath",	"prelude",	"command mmath.prelude():void ",	"MATHprelude;",	""	]
[ "mmath",	"radians",	"command mmath.radians(:dbl):dbl ",	"MATHunary_RADIANSdbl;",	""	]
[ "mmath",	"radians",	"command mmath.radians(:flt):flt ",	"MATHunary_RADIANSflt;",	""	]
[ "mmath",	"rand",	"unsafe command mmath.rand():int ",	"MATHrandint;",	""	]
[ "mmath",	"rand",	"unsafe command mmath.rand(:int):int ",	"MATHrandintarg;",	""	]
[ "mmath",	"round",	"command mmath.round(:dbl, :int):dbl ",	"MATHbinary_ROUNDdbl;",	""	]
[ "mmath",	"round",	"command mmath.round(:flt, :int):flt ",	"MATHbinary_ROUNDflt;",	""	]
[ "mmath",	"sin",	"command mmath.sin(:dbl):dbl ",	"MATHunary_SINdbl;",	""	]
[ "mmath",	"sin",	"command mmath.sin(:flt):flt ",	"MATHunary_SINflt;",	""	]
[ "mmath",	"sinh",	"command mmath.sinh(:dbl):dbl ",	"MATHunary_SINHdbl;",	""	]
[ "mmath",	"sinh",	"command mmath.sinh(:flt):flt ",	"MATHunary_SINHflt;",	""	]
[ "mmath",	"sqlrand",	"command mmath.sqlrand(:int):int ",	"MATHsqlrandint;",	""	]
[ "mmath",	"sqrt",	"command mmath.sqrt(:dbl):dbl ",	"MATHunary_SQRTdbl;",	""	]
[ "mmath",	"sqrt",	"command mmath.sqrt(:flt):flt ",	"MATHunary_SQRTflt;",	""	]
[ "mmath",	"srand",	"command mmath.srand(:int):void ",	"MATHsrandint;",	""	]
[ "mmath",	"tan",	"command mmath.tan(:dbl):dbl ",	"MATHunary_TANdbl;",	""	]
[ "mmath",	"tan",	"command mmath.tan(:flt):flt ",	"MATHunary_TANflt;",	""	]
[ "mmath",	"tanh",	"command mmath.tanh(:dbl):dbl ",	"MATHunary_TANHdbl;",	""	]
[ "mmath",	"tanh",	"command mmath.tanh(:flt):flt ",	"MATHunary_TANHflt;",	""	]
[ "mtime",	"addmonths",	"command mtime.addmonths(:date, :int):date ",	"MTIMEdate_addmonths;",	""	]
[ "mtime",	"century",	"command mtime.century(:date):int ",	"MTIMEdate_extract_century;",	""	]
[ "mtime",	"century",	"command mtime.century(:timestamp):int ",	"MTIMEtimestamp_century;",	""	]
[ "mtime",	"current_date",	"command mtime.current_date():date ",	"MTIMEcurrent_date;",	""	]
[ "mtime",	"current_time",	"command mtime.current_time():daytime ",	"MTIMEcurrent_time;",	""	]
[ "mtime",	"current_timestamp",	"command mtime.current_timestamp():timestamp ",	"MTIMEcurrent_timestamp;",	""	]
[ "mtime",	"date_add_msec_interval",	"command mtime.date_add_msec_interval(:date, :lng):date ",	"MTIMEdate_add_msec_interval;",	""	]
[ "mtime",	"date_sub_month_interval",	"command mtime.date_sub_month_interval(:date, :int):date ",	"MTIMEdate_submonths;",	""	]
[ "mtime",	"date_sub_msec_interval",	"command mtime.date_sub_msec_interval(:date, :lng):date ",	"MTIMEdate_sub_msec_interval;",	""	]
[ "mtime",	"date_to_str",	"command mtime.date_to_str(:date, :str):str ",	"MTIMEdate_to_str;",	""	]
[ "mtime",	"day",	"command mtime.day(:date):int ",	"MTIMEdate_extract_day;",	""	]
[ "mtime",	"day",	"command mtime.day(:lng):lng ",	"MTIMEsql_day;",	""	]
[ "mtime",	"day",	"command mtime.day(:timestamp):int ",	"MTIMEtimestamp_day;",	""	]
[ "mtime",	"dayofweek",	"command mtime.dayofweek(:date):int ",	"MTIMEdate_extract_dayofweek;",	""	]
[ "mtime",	"dayofyear",	"command mtime.dayofyear(:date):int ",	"MTIMEdate_extract_dayofyear;",	""	]
[ "mtime",	"decade",	"command mtime.decade(:date):int ",	"MTIMEdate_extract_decade;",	""	]
[ "mtime",	"decade",	"command mtime.decade(:timestamp):int ",	"MTIMEtimestamp_decade;",	""	]
[ "mtime",	"diff",	"command mtime.diff(:date, :date):lng ",	"MTIMEdate_diff;",	""	]
[ "mtime",	"diff",	"command mtime.diff(:daytime, :daytime):lng ",	"MTIMEdaytime_diff_msec;",	""	]
[ "mtime",	"diff",	"command mtime.diff(:timestamp, :timestamp):lng ",	"MTIMEtimestamp_diff_msec;",	""	]
[ "mtime",	"epoch",	"command mtime.epoch(:timestamp):int ",	"MTIMEseconds_since_epoch;",	""	]
[ "mtime",	"epoch",	"command mtime.epoch(:lng):timestamp ",	"MTIMEtimestamp_frommsec_epoch;",	""	]
[ "mtime",	"epoch",	"command mtime.epoch(:int):timestamp ",	"MTIMEtimestamp_fromsecond_epoch;",	""	]
[ "mtime",	"epoch_ms",	"command mtime.epoch_ms(:date):lng ",	"MTIMEdate_extract_epoch_ms;",	""	]
[ "mtime",	"epoch_ms",	"command mtime.epoch_ms(:daytime):lng ",	"MTIMEdaytime_extract_epoch_ms;",	""	]
[ "mtime",	"epoch_ms",	"command mtime.epoch_ms(:lng):lng ",	"MTIMEmsec_extract_epoch_ms;",	""	]
[ "mtime",	"epoch_ms",	"command mtime.epoch_ms(:timestamp):lng ",	"MTIMEtimestamp_extract_epoch_ms;",	""	]
[ "mtime",	"hours",	"command mtime.hours(:daytime):int ",	"MTIMEdaytime_extract_hours;",	""	]
[ "mtime",	"hours",	"command mtime.hours(:lng):int ",	"MTIMEsql_hours;",	""	]
[ "mtime",	"hours",	"command mtime.hours(:timestamp):int ",	"MTIMEtimestamp_hours;",	""	]
[ "mtime",	"local_timezone",	"command mtime.local_timezone():lng ",	"MTIMElocal_timezone_msec;",	""	]
[ "mtime",	"minutes",	"command mtime.minutes(:daytime):int ",	"MTIMEdaytime_extract_minutes;",	""	]
[ "mtime",	"minutes",	"command mtime.minutes(:lng):int ",	"MTIMEsql_minutes;",	""	]
[ "mtime",	"minutes",	"command mtime.minutes(:timestamp):int ",	"MTIMEtimestamp_minutes;",	""	]
[ "mtime",	"month",	"command mtime.month(:date):int ",	"MTIMEdate_extract_month;",	""	]
[ "mtime",	"month",	"command mtime.month(:int):int ",	"MTIMEsql_month;",	""	]
[ "mtime",	"month",	"command mtime.month(:timestamp):int ",	"MTIMEtimestamp_month;",	""	]
[ "mtime",	"quarter",	"command mtime.quarter(:date):int ",	"MTIMEdate_extract_quarter;",	""	]
[ "mtime",	"quarter",	"command mtime.quarter(:timestamp):int ",	"MTIMEtimestamp_quarter;",	""	]
[ "mtime",	"seconds",	"command mtime.seconds(:lng):int ",	"MTIMEsql_seconds;",	""	]
[ "mtime",	"sql_seconds",	"command mtime.sql_seconds(:daytime):int ",	"MTIMEdaytime_extract_sql_seconds;",	""	]
[ "mtime",	"sql_seconds",	"command mtime.sql_seconds(:timestamp):int ",	"MTIMEtimestamp_sql_seconds;",	""	]
[ "mtime",	"str_to_date",	"command mtime.str_to_date(:str, :str):date ",	"MTIMEstr_to_date;",	""	]
[ "mtime",	"str_to_time",	"command mtime.str_to_time(:str, :str):daytime ",	"MTIMEstr_to_time;",	""	]
[ "mtime",	"str_to_timestamp",	"command mtime.str_to_timestamp(:str, :str):timestamp ",	"MTIMEstr_to_timestamp;",	""	]
[ "mtime",	"time_add_msec_interval",	"command mtime.time_add_msec_interval(:daytime, :lng):daytime ",	"MTIMEtime_add_msec_interval;",	""	]
[ "mtime",	"time_sub_msec_interval",	"command mtime.time_sub_msec_interval(:daytime, :lng):daytime ",	"MTIMEtime_sub_msec_interval;",	""	]
[ "mtime",	"time_to_str",	"command mtime.time_to_str(:daytime, :str):str ",	"MTIMEtime_to_str;",	""	]
[ "mtime",	"timestamp_add_month_interval",	"command mtime.timestamp_add_month_interval(:timestamp, :int):timestamp ",	"MTIMEtimestamp_add_month_interval;",	""	]
[ "mtime",	"timestamp_add_msec_interval",	"command mtime.timestamp_add_msec_interval(:timestamp, :lng):timestamp ",	"MTIMEtimestamp_add_msec_interval;",	""	]
[ "mtime",	"timestamp_sub_month_interval",	"command mtime.timestamp_sub_month_interval(:timestamp, :int):timestamp ",	"MTIMEtimestamp_sub_month_interval;",	""	]
[ "mtime",	"timestamp_sub_msec_interval",	"command mtime.timestamp_sub_msec_interval(:timestamp, :lng):timestamp ",	"MTIMEtimestamp_sub_msec_interval;",	""	]
[ "mtime",	"timestamp_to_str",	"command mtime.timestamp_to_str(:timestamp, :str):str ",	"MTIMEtimestamp_to_str;",	""	]
[ "mtime",	"usweekofyear",	"command mtime.usweekofyear(:date):int ",	"MTIMEdate_extract_usweekofyear;",	""	]
[ "mtime",	"weekofyear",	"command mtime.weekofyear(:date):int ",	"MTIMEdate_extract_weekofyear;",	""	]
[ "mtime",	"year",	"command mtime.year(:date):int ",	"MTIMEdate_extract_year;",	""	]
[ "mtime",	"year",	"command mtime.year(:int):int ",	"MTIMEsql_year;",	""	]
[ "mtime",	"year",	"command mtime.year(:timestamp):int ",	"MTIMEtimestamp_year;",	""	]
[ "netcdf",	"attach",	"pattern netcdf.attach(:str):void ",	"NCDFattach;",	""	]
[ "netcdf",	"importvar",	"command netcdf.importvar(:str, :int):str ",	"NCDFimportVarStmt;",	""	]
[ "netcdf",	"importvariable",	"pattern netcdf.importvariable(:int, :str):void ",	"NCDFimportVariable;",	""	]
[ "netcdf",	"test",	"command netcdf.test(:str):int ",	"NCDFtest;",	""	]
[ "oltp",	"disable",	"unsafe pattern oltp.disable():void ",	"OLTPdisable;",	""	]
[ "oltp",	"enable",	"unsafe pattern oltp.enable():void ",	"OLTPenable;",	""	]
[ "oltp",	"init",	"unsafe pattern oltp.init():void ",	"OLTPinit;",	""	]
[ "oltp",	"isenabled",	"unsafe command oltp.isenabled():int ",	"OLTPis_enabled;",	""	]
[ "oltp",	"lock",	"unsafe pattern oltp.lock(:int...):void ",	"OLTPlock;",	""	]
[ "oltp",	"release",	"unsafe pattern oltp.release(:int...):void ",	"OLTPrelease;",	""	]
[ "oltp",	"reset",	"unsafe pattern oltp.reset():void ",	"OLTPreset;",	""	]
[ "oltp",	"table",	"unsafe pattern oltp.table() (:bat[:timestamp], :bat[:str], :bat[:int], :bat[:int]) ",	"OLTPtable;",	""	]
[ "optimizer",	"aliases",	"pattern optimizer.aliases():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"aliases",	"pattern optimizer.aliases(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"bincopyfrom",	"pattern optimizer.bincopyfrom():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"bincopyfrom",	"pattern optimizer.bincopyfrom(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"candidates",	"pattern optimizer.candidates():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"candidates",	"pattern optimizer.candidates(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"coercions",	"pattern optimizer.coercions():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"coercions",	"pattern optimizer.coercions(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"commonTerms",	"pattern optimizer.commonTerms():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"commonTerms",	"pattern optimizer.commonTerms(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"constants",	"pattern optimizer.constants():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"constants",	"pattern optimizer.constants(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"costModel",	"pattern optimizer.costModel():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"costModel",	"pattern optimizer.costModel(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"dataflow",	"pattern optimizer.dataflow():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"dataflow",	"pattern optimizer.dataflow(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"deadcode",	"pattern optimizer.deadcode():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"deadcode",	"pattern optimizer.deadcode(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"default_pipe",	"function optimizer.default_pipe():void;",	"",	""	]
[ "optimizer",	"emptybind",	"pattern optimizer.emptybind():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"emptybind",	"pattern optimizer.emptybind(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"epilogue",	"command optimizer.epilogue():void ",	"optimizer_epilogue;",	""	]
[ "optimizer",	"evaluate",	"pattern optimizer.evaluate():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"evaluate",	"pattern optimizer.evaluate(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"garbageCollector",	"pattern optimizer.garbageCollector():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"garbageCollector",	"pattern optimizer.garbageCollector(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"generator",	"pattern optimizer.generator():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"generator",	"pattern optimizer.generator(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"inline",	"pattern optimizer.inline():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"inline",	"pattern optimizer.inline(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"jit",	"pattern optimizer.jit():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"jit",	"pattern optimizer.jit(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"json",	"pattern optimizer.json():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"json",	"pattern optimizer.json(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"macro",	"pattern optimizer.macro(:str, :str):void ",	"OPTmacro;",	""	]
[ "optimizer",	"macro",	"pattern optimizer.macro(:str, :str, :str, :str):void ",	"OPTmacro;",	""	]
[ "optimizer",	"mask",	"pattern optimizer.mask():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"mask",	"pattern optimizer.mask(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"matpack",	"pattern optimizer.matpack():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"matpack",	"pattern optimizer.matpack(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"mergetable",	"pattern optimizer.mergetable():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"mergetable",	"pattern optimizer.mergetable(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"minimal_pipe",	"function optimizer.minimal_pipe():void;",	"",	""	]
[ "optimizer",	"mitosis",	"pattern optimizer.mitosis():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"mitosis",	"pattern optimizer.mitosis(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"multiplex",	"pattern optimizer.multiplex():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"multiplex",	"pattern optimizer.multiplex(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"no_mitosis_pipe",	"function optimizer.no_mitosis_pipe():void;",	"",	""	]
[ "optimizer",	"oltp",	"pattern optimizer.oltp():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"oltp",	"pattern optimizer.oltp(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"oltp_pipe",	"function optimizer.oltp_pipe():void;",	"",	""	]
[ "optimizer",	"optimize",	"pattern optimizer.optimize(:str, :str):void ",	"QOToptimize;",	""	]
[ "optimizer",	"orcam",	"pattern optimizer.orcam(:str, :str):void ",	"OPTorcam;",	""	]
[ "optimizer",	"orcam",	"pattern optimizer.orcam(:str, :str, :str, :str):void ",	"OPTorcam;",	""	]
[ "optimizer",	"parappend",	"pattern optimizer.parappend():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"parappend",	"pattern optimizer.parappend(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"postfix",	"pattern optimizer.postfix():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"postfix",	"pattern optimizer.postfix(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"prelude",	"pattern optimizer.prelude():void ",	"optimizer_prelude;",	""	]
[ "optimizer",	"profiler",	"pattern optimizer.profiler():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"profiler",	"pattern optimizer.profiler(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"projectionpath",	"pattern optimizer.projectionpath():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"projectionpath",	"pattern optimizer.projectionpath(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"pushselect",	"pattern optimizer.pushselect():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"pushselect",	"pattern optimizer.pushselect(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"querylog",	"pattern optimizer.querylog():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"querylog",	"pattern optimizer.querylog(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"reduce",	"pattern optimizer.reduce():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"reduce",	"pattern optimizer.reduce(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"remap",	"pattern optimizer.remap():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"remap",	"pattern optimizer.remap(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"remoteQueries",	"pattern optimizer.remoteQueries():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"remoteQueries",	"pattern optimizer.remoteQueries(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"reorder",	"pattern optimizer.reorder():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"reorder",	"pattern optimizer.reorder(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"sequential_pipe",	"function optimizer.sequential_pipe():void;",	"",	""	]
[ "optimizer",	"sql_append",	"pattern optimizer.sql_append():str ",	"OPTsql_append;",	""	]
[ "optimizer",	"sql_append",	"pattern optimizer.sql_append(:str, :str):str ",	"OPTsql_append;",	""	]
[ "optimizer",	"volcano",	"pattern optimizer.volcano():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"volcano",	"pattern optimizer.volcano(:str, :str):str ",	"OPTwrapper;",	""	]
[ "optimizer",	"volcano_pipe",	"function optimizer.volcano_pipe():void;",	"",	""	]
[ "optimizer",	"wlc",	"pattern optimizer.wlc():str ",	"OPTwrapper;",	""	]
[ "optimizer",	"wlc",	"pattern optimizer.wlc(:str, :str):str ",	"OPTwrapper;",	""	]
[ "pcre",	"imatch",	"command pcre.imatch(:str, :str):bit ",	"PCREimatch;",	""	]
[ "pcre",	"index",	"command pcre.index(:pcre, :str):int ",	"PCREindex;",	""	]
[ "pcre",	"match",	"command pcre.match(:str, :str):bit ",	"PCREmatch;",	""	]
[ "pcre",	"patindex",	"command pcre.patindex(:str, :str):int ",	"PCREpatindex;",	""	]
[ "pcre",	"pcre_quote",	"command pcre.pcre_quote(:str):str ",	"PCREquote;",	""	]
[ "pcre",	"prelude",	"command pcre.prelude():void ",	"pcre_init;",	""	]
[ "pcre",	"replace",	"command pcre.replace(:str, :str, :str, :str):str ",	"PCREreplace_wrap;",	""	]
[ "pcre",	"replace_first",	"command pcre.replace_first(:str, :str, :str, :str):str ",	"PCREreplace_wrap;",	""	]
[ "pcre",	"sql2pcre",	"command pcre.sql2pcre(:str, :str):str ",	"PCREsql2pcre;",	""	]
[ "profiler",	"cleanup",	"pattern profiler.cleanup():void ",	"CMDcleanupTraces;",	""	]
[ "profiler",	"closestream",	"pattern profiler.closestream():void ",	"CMDcloseProfilerStream;",	""	]
[ "profiler",	"cpuload",	"command profiler.cpuload(:lng, :lng, :lng, :lng, :lng) (:int, :int) ",	"CMDcpuloadPercentage;",	""	]
[ "profiler",	"cpustats",	"command profiler.cpustats() (:lng, :lng, :lng, :lng, :lng) ",	"CMDcpustats;",	""	]
[ "profiler",	"getDiskReads",	"command profiler.getDiskReads():lng ",	"CMDgetDiskReads;",	""	]
[ "profiler",	"getDiskWrites",	"command profiler.getDiskWrites():lng ",	"CMDgetDiskWrites;",	""	]
[ "profiler",	"getSystemTime",	"command profiler.getSystemTime():lng ",	"CMDgetSystemTime;",	""	]
[ "profiler",	"getTrace",	"pattern profiler.getTrace(:str):bat[:any_1] ",	"CMDgetTrace;",	""	]
[ "profiler",	"getUserTime",	"command profiler.getUserTime():lng ",	"CMDgetUserTime;",	""	]
[ "profiler",	"getlimit",	"command profiler.getlimit():int ",	"CMDgetprofilerlimit;",	""	]
[ "profiler",	"noop",	"command profiler.noop():void ",	"CMDnoopProfiler;",	""	]
[ "profiler",	"openstream",	"pattern profiler.openstream():void ",	"CMDopenProfilerStream;",	""	]
[ "profiler",	"setheartbeat",	"command profiler.setheartbeat(:int):void ",	"CMDsetHeartbeat;",	""	]
[ "profiler",	"setlimit",	"command profiler.setlimit(:int):void ",	"CMDsetprofilerlimit;",	""	]
[ "profiler",	"start",	"pattern profiler.start():void ",	"CMDstartProfiler;",	""	]
[ "profiler",	"starttrace",	"pattern profiler.starttrace():void ",	"CMDstartTrace;",	""	]
[ "profiler",	"stop",	"pattern profiler.stop():void ",	"CMDstopProfiler;",	""	]
[ "profiler",	"stoptrace",	"pattern profiler.stoptrace():void ",	"CMDstopTrace;",	""	]
[ "pyapi3",	"eval",	"unsafe pattern pyapi3.eval(:ptr, :str):any ",	"PYAPI3PyAPIevalStd;",	""	]
[ "pyapi3",	"eval",	"unsafe pattern pyapi3.eval(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalStd;",	""	]
[ "pyapi3",	"eval_aggr",	"unsafe pattern pyapi3.eval_aggr(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalAggr;",	""	]
[ "pyapi3",	"eval_loader",	"unsafe pattern pyapi3.eval_loader(:ptr, :str):any... ",	"PYAPI3PyAPIevalLoader;",	""	]
[ "pyapi3",	"eval_loader",	"unsafe pattern pyapi3.eval_loader(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalLoader;",	""	]
[ "pyapi3",	"prelude",	"command pyapi3.prelude():void ",	"PYAPI3PyAPIprelude;",	""	]
[ "pyapi3",	"subeval_aggr",	"unsafe pattern pyapi3.subeval_aggr(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalAggr;",	""	]
[ "pyapi3map",	"eval",	"pattern pyapi3map.eval(:ptr, :str):any ",	"PYAPI3PyAPIevalStdMap;",	""	]
[ "pyapi3map",	"eval",	"pattern pyapi3map.eval(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalStdMap;",	""	]
[ "pyapi3map",	"eval_aggr",	"pattern pyapi3map.eval_aggr(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalAggrMap;",	""	]
[ "pyapi3map",	"subeval_aggr",	"pattern pyapi3map.subeval_aggr(:ptr, :str, :any...):any... ",	"PYAPI3PyAPIevalAggrMap;",	""	]
[ "querylog",	"append",	"pattern querylog.append(:str, :str, :str, :timestamp):void ",	"QLOGappend;",	""	]
[ "querylog",	"call",	"pattern querylog.call(:timestamp, :timestamp, :str, :lng, :lng, :lng, :int, :int):void ",	"QLOGcall;",	""	]
[ "querylog",	"context",	"command querylog.context(:str, :str, :str, :str):void ",	"QLOGcontextNaive;",	""	]
[ "querylog",	"define",	"command querylog.define(:str, :str, :int):void ",	"QLOGdefineNaive;",	""	]
[ "querylog",	"disable",	"command querylog.disable():void ",	"QLOGdisable;",	""	]
[ "querylog",	"empty",	"command querylog.empty():void ",	"QLOGempty;",	""	]
[ "querylog",	"enable",	"command querylog.enable():void ",	"QLOGenable;",	""	]
[ "querylog",	"enable",	"command querylog.enable(:int):void ",	"QLOGenableThreshold;",	""	]
[ "querylog",	"isset",	"command querylog.isset():int ",	"QLOGissetFcn;",	""	]
[ "rapi",	"eval",	"pattern rapi.eval(:ptr, :str):any ",	"RAPIevalStd;",	""	]
[ "rapi",	"eval",	"pattern rapi.eval(:ptr, :str, :any...):any... ",	"RAPIevalStd;",	""	]
[ "rapi",	"eval_aggr",	"pattern rapi.eval_aggr(:ptr, :str, :any...):any... ",	"RAPIevalAggr;",	""	]
[ "rapi",	"prelude",	"command rapi.prelude():void ",	"RAPIprelude;",	""	]
[ "rapi",	"subeval_aggr",	"pattern rapi.subeval_aggr(:ptr, :str, :any...):any... ",	"RAPIevalAggr;",	""	]
[ "remote",	"batbincopy",	"pattern remote.batbincopy():bat[:any] ",	"RMTbincopyfrom;",	""	]
[ "remote",	"batbincopy",	"pattern remote.batbincopy(:bat[:any]):void ",	"RMTbincopyto;",	""	]
[ "remote",	"batload",	"pattern remote.batload(:any_1, :int):bat[:any_1] ",	"RMTbatload;",	""	]
[ "remote",	"bintype",	"pattern remote.bintype():void ",	"RMTbintype;",	""	]
[ "remote",	"connect",	"pattern remote.connect(:str, :str, :str, :str):str ",	"RMTconnect;",	""	]
[ "remote",	"connect",	"command remote.connect(:str, :str, :str, :str, :bit):str ",	"RMTconnectScen;",	""	]
[ "remote",	"connect",	"pattern remote.connect(:str, :str):str ",	"RMTconnectTable;",	""	]
[ "remote",	"disconnect",	"command remote.disconnect(:str):void ",	"RMTdisconnect;",	""	]
[ "remote",	"epilogue",	"command remote.epilogue():void ",	"RMTepilogue;",	""	]
[ "remote",	"exec",	"pattern remote.exec(:str, :str, :str):str ",	"RMTexec;",	""	]
[ "remote",	"exec",	"pattern remote.exec(:str, :str, :str):str... ",	"RMTexec;",	""	]
[ "remote",	"exec",	"pattern remote.exec(:str, :str, :str, :ptr, :str...):void ",	"RMTexec;",	""	]
[ "remote",	"exec",	"pattern remote.exec(:str, :str, :str, :str...):str ",	"RMTexec;",	""	]
[ "remote",	"exec",	"pattern remote.exec(:str, :str, :str, :str...):str... ",	"RMTexec;",	""	]
[ "remote",	"exec",	"pattern remote.exec(:str, :str, :str, :str...):void ",	"RMTexec;",	""	]
[ "remote",	"get",	"pattern remote.get(:str, :str):any ",	"RMTget;",	""	]
[ "remote",	"isalive",	"command remote.isalive(:str):int ",	"RMTisalive;",	""	]
[ "remote",	"prelude",	"command remote.prelude():void ",	"RMTprelude;",	""	]
[ "remote",	"put",	"pattern remote.put(:str, :any):str ",	"RMTput;",	""	]
[ "remote",	"register",	"pattern remote.register(:str, :str, :str):str ",	"RMTregister;",	""	]
[ "remote",	"register_supervisor",	"command remote.register_supervisor(:str, :str):int ",	"RMTregisterSupervisor;",	""	]
[ "remote",	"resolve",	"command remote.resolve(:str):bat[:str] ",	"RMTresolve;",	""	]
[ "sample",	"subuniform",	"pattern sample.subuniform(:bat[:any], :dbl):bat[:oid] ",	"SAMPLEuniform;",	""	]
[ "sample",	"subuniform",	"pattern sample.subuniform(:bat[:any], :dbl, :int):bat[:oid] ",	"SAMPLEuniform;",	""	]
[ "sample",	"subuniform",	"pattern sample.subuniform(:bat[:any], :lng):bat[:oid] ",	"SAMPLEuniform;",	""	]
[ "sample",	"subuniform",	"pattern sample.subuniform(:bat[:any], :lng, :int):bat[:oid] ",	"SAMPLEuniform;",	""	]
[ "shp",	"attach",	"pattern shp.attach(:str):void ",	"SHPattach;",	""	]
[ "shp",	"import",	"pattern shp.import(:int):void ",	"SHPimport;",	""	]
[ "shp",	"import",	"pattern shp.import(:int, :wkb):void ",	"SHPpartialimport;",	""	]
[ "sql",	"abort",	"unsafe pattern sql.abort():void ",	"SQLabort;",	""	]
[ "sql",	"affectedRows",	"unsafe pattern sql.affectedRows(:int, :lng):int ",	"mvc_affected_rows_wrap;",	""	]
[ "sql",	"all",	"pattern sql.all(:bit, :bit, :bit):bit ",	"SQLall_cmp;",	""	]
[ "sql",	"alpha",	"command sql.alpha(:dbl, :dbl):dbl ",	"SQLcst_alpha_cst;",	""	]
[ "sql",	"analyze",	"unsafe pattern sql.analyze(:int, :lng):void ",	"sql_analyze;",	""	]
[ "sql",	"analyze",	"unsafe pattern sql.analyze(:int, :lng, :str):void ",	"sql_analyze;",	""	]
[ "sql",	"analyze",	"unsafe pattern sql.analyze(:int, :lng, :str, :str):void ",	"sql_analyze;",	""	]
[ "sql",	"analyze",	"unsafe pattern sql.analyze(:int, :lng, :str, :str, :str):void ",	"sql_analyze;",	""	]
[ "sql",	"any",	"pattern sql.any(:bit, :bit, :bit):bit ",	"SQLany_cmp;",	""	]
[ "sql",	"append",	"pattern sql.append(:int, :str, :str, :str, :lng, :any):int ",	"mvc_append_wrap;",	""	]
[ "sql",	"append_exec",	"pattern sql.append_exec(:ptr, :lng, :any_1):ptr ",	"mvc_append_exec_wrap;",	""	]
[ "sql",	"append_finish",	"pattern sql.append_finish(:int, :ptr...):int ",	"mvc_append_finish_wrap;",	""	]
[ "sql",	"append_prep",	"pattern sql.append_prep(:int, :str, :str, :str...) (:int, :ptr...) ",	"mvc_append_prep_wrap;",	""	]
[ "sql",	"argRecord",	"pattern sql.argRecord():str ",	"SQLargRecord;",	""	]
[ "sql",	"argRecord",	"pattern sql.argRecord(:any...):str ",	"SQLargRecord;",	""	]
[ "sql",	"assert",	"pattern sql.assert(:bit, :str):void ",	"SQLassert;",	""	]
[ "sql",	"assert",	"pattern sql.assert(:int, :str):void ",	"SQLassertInt;",	""	]
[ "sql",	"assert",	"pattern sql.assert(:lng, :str):void ",	"SQLassertLng;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:bte, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLavg;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLavg;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLavg;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:hge, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLavg;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:int, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLavg;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:lng, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLavg;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:sht, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLavg;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:bte, :bit, :bit, :int, :oid, :oid):bte ",	"SQLavginteger;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:hge, :bit, :bit, :int, :oid, :oid):hge ",	"SQLavginteger;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:int, :bit, :bit, :int, :oid, :oid):int ",	"SQLavginteger;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:lng, :bit, :bit, :int, :oid, :oid):lng ",	"SQLavginteger;",	""	]
[ "sql",	"avg",	"pattern sql.avg(:sht, :bit, :bit, :int, :oid, :oid):sht ",	"SQLavginteger;",	""	]
[ "sql",	"bind",	"pattern sql.bind(:int, :str, :str, :str, :int) (:bat[:oid], :bat[:any_1]) ",	"mvc_bind_wrap;",	""	]
[ "sql",	"bind",	"pattern sql.bind(:int, :str, :str, :str, :int):bat[:any_1] ",	"mvc_bind_wrap;",	""	]
[ "sql",	"bind",	"pattern sql.bind(:int, :str, :str, :str, :int, :int, :int) (:bat[:oid], :bat[:any_1]) ",	"mvc_bind_wrap;",	""	]
[ "sql",	"bind",	"pattern sql.bind(:int, :str, :str, :str, :int, :int, :int):bat[:any_1] ",	"mvc_bind_wrap;",	""	]
[ "sql",	"bind_idxbat",	"pattern sql.bind_idxbat(:int, :str, :str, :str, :int) (:bat[:oid], :bat[:any_1]) ",	"mvc_bind_idxbat_wrap;",	""	]
[ "sql",	"bind_idxbat",	"pattern sql.bind_idxbat(:int, :str, :str, :str, :int):bat[:any_1] ",	"mvc_bind_idxbat_wrap;",	""	]
[ "sql",	"bind_idxbat",	"pattern sql.bind_idxbat(:int, :str, :str, :str, :int, :int, :int) (:bat[:oid], :bat[:any_1]) ",	"mvc_bind_idxbat_wrap;",	""	]
[ "sql",	"bind_idxbat",	"pattern sql.bind_idxbat(:int, :str, :str, :str, :int, :int, :int):bat[:any_1] ",	"mvc_bind_idxbat_wrap;",	""	]
[ "sql",	"claim",	"unsafe pattern sql.claim(:int, :str, :str, :lng):lng ",	"mvc_claim_wrap;",	""	]
[ "sql",	"clear_table",	"unsafe pattern sql.clear_table(:str, :str):lng ",	"mvc_clear_table_wrap;",	""	]
[ "sql",	"commit",	"unsafe pattern sql.commit():void ",	"SQLcommit;",	""	]
[ "sql",	"copy_from",	"unsafe pattern sql.copy_from(:ptr, :str, :str, :str, :str, :str, :lng, :lng, :int, :str, :int, :int):bat[:any]... ",	"mvc_import_table_wrap;",	""	]
[ "sql",	"copy_rejects",	"pattern sql.copy_rejects() (:bat[:lng], :bat[:int], :bat[:str], :bat[:str]) ",	"COPYrejects;",	""	]
[ "sql",	"copy_rejects_clear",	"unsafe pattern sql.copy_rejects_clear():void ",	"COPYrejects_clear;",	""	]
[ "sql",	"corr",	"pattern sql.corr(:bte, :bte, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcorr;",	""	]
[ "sql",	"corr",	"pattern sql.corr(:dbl, :dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcorr;",	""	]
[ "sql",	"corr",	"pattern sql.corr(:flt, :flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcorr;",	""	]
[ "sql",	"corr",	"pattern sql.corr(:hge, :hge, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcorr;",	""	]
[ "sql",	"corr",	"pattern sql.corr(:int, :int, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcorr;",	""	]
[ "sql",	"corr",	"pattern sql.corr(:lng, :lng, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcorr;",	""	]
[ "sql",	"corr",	"pattern sql.corr(:sht, :sht, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcorr;",	""	]
[ "sql",	"count",	"pattern sql.count(:any_1, :bit, :bit, :bit, :int, :oid, :oid):lng ",	"SQLcount;",	""	]
[ "sql",	"covariance",	"pattern sql.covariance(:bte, :bte, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_samp;",	""	]
[ "sql",	"covariance",	"pattern sql.covariance(:dbl, :dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_samp;",	""	]
[ "sql",	"covariance",	"pattern sql.covariance(:flt, :flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_samp;",	""	]
[ "sql",	"covariance",	"pattern sql.covariance(:hge, :hge, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_samp;",	""	]
[ "sql",	"covariance",	"pattern sql.covariance(:int, :int, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_samp;",	""	]
[ "sql",	"covariance",	"pattern sql.covariance(:lng, :lng, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_samp;",	""	]
[ "sql",	"covariance",	"pattern sql.covariance(:sht, :sht, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_samp;",	""	]
[ "sql",	"covariancep",	"pattern sql.covariancep(:bte, :bte, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_pop;",	""	]
[ "sql",	"covariancep",	"pattern sql.covariancep(:dbl, :dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_pop;",	""	]
[ "sql",	"covariancep",	"pattern sql.covariancep(:flt, :flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_pop;",	""	]
[ "sql",	"covariancep",	"pattern sql.covariancep(:hge, :hge, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_pop;",	""	]
[ "sql",	"covariancep",	"pattern sql.covariancep(:int, :int, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_pop;",	""	]
[ "sql",	"covariancep",	"pattern sql.covariancep(:lng, :lng, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_pop;",	""	]
[ "sql",	"covariancep",	"pattern sql.covariancep(:sht, :sht, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLcovar_pop;",	""	]
[ "sql",	"createorderindex",	"unsafe pattern sql.createorderindex(:str, :str, :str):void ",	"sql_createorderindex;",	""	]
[ "sql",	"cume_dist",	"pattern sql.cume_dist(:any_1, :bit, :bit):dbl ",	"SQLcume_dist;",	""	]
[ "sql",	"current_time",	"pattern sql.current_time():daytime ",	"SQLcurrent_daytime;",	""	]
[ "sql",	"current_timestamp",	"pattern sql.current_timestamp():timestamp ",	"SQLcurrent_timestamp;",	""	]
[ "sql",	"date_trunc",	"command sql.date_trunc(:str, :bat[:timestamp]):bat[:timestamp] ",	"bat_date_trunc;",	""	]
[ "sql",	"date_trunc",	"command sql.date_trunc(:str, :timestamp):timestamp ",	"date_trunc;",	""	]
[ "sql",	"db_users",	"pattern sql.db_users():bat[:str] ",	"db_users_wrap;",	""	]
[ "sql",	"delete",	"unsafe pattern sql.delete(:int, :str, :str, :any):int ",	"mvc_delete_wrap;",	""	]
[ "sql",	"delta",	"command sql.delta(:bat[:any_3], :bat[:oid], :bat[:any_3]):bat[:any_3] ",	"DELTAbat;",	""	]
[ "sql",	"deltas",	"pattern sql.deltas(:str) (:bat[:int], :bat[:bit], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:int]) ",	"mvc_delta_values;",	""	]
[ "sql",	"deltas",	"pattern sql.deltas(:str, :str) (:bat[:int], :bat[:bit], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:int]) ",	"mvc_delta_values;",	""	]
[ "sql",	"deltas",	"pattern sql.deltas(:str, :str, :str) (:bat[:int], :bat[:bit], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:int]) ",	"mvc_delta_values;",	""	]
[ "sql",	"dense_rank",	"pattern sql.dense_rank(:any_1, :bit, :bit):int ",	"SQLdense_rank;",	""	]
[ "sql",	"diff",	"pattern sql.diff(:any_1):bit ",	"SQLdiff;",	""	]
[ "sql",	"diff",	"pattern sql.diff(:bit, :any_1):bit ",	"SQLdiff;",	""	]
[ "sql",	"drop_hash",	"unsafe pattern sql.drop_hash(:str, :str):void ",	"SQLdrop_hash;",	""	]
[ "sql",	"droporderindex",	"unsafe pattern sql.droporderindex(:str, :str, :str):void ",	"sql_droporderindex;",	""	]
[ "sql",	"dump_cache",	"pattern sql.dump_cache() (:bat[:str], :bat[:int]) ",	"dump_cache;",	""	]
[ "sql",	"dump_opt_stats",	"pattern sql.dump_opt_stats() (:bat[:str], :bat[:int]) ",	"dump_opt_stats;",	""	]
[ "sql",	"dump_trace",	"pattern sql.dump_trace() (:bat[:lng], :bat[:str]) ",	"dump_trace;",	""	]
[ "sql",	"emptybind",	"pattern sql.emptybind(:int, :str, :str, :str, :int) (:bat[:oid], :bat[:any_1]) ",	"mvc_bind_wrap;",	""	]
[ "sql",	"emptybind",	"pattern sql.emptybind(:int, :str, :str, :str, :int):bat[:any_1] ",	"mvc_bind_wrap;",	""	]
[ "sql",	"emptybind",	"pattern sql.emptybind(:int, :str, :str, :str, :int, :int, :int) (:bat[:oid], :bat[:any_1]) ",	"mvc_bind_wrap;",	""	]
[ "sql",	"emptybind",	"pattern sql.emptybind(:int, :str, :str, :str, :int, :int, :int):bat[:any_1] ",	"mvc_bind_wrap;",	""	]
[ "sql",	"emptybindidx",	"pattern sql.emptybindidx(:int, :str, :str, :str, :int) (:bat[:oid], :bat[:any_1]) ",	"mvc_bind_idxbat_wrap;",	""	]
[ "sql",	"emptybindidx",	"pattern sql.emptybindidx(:int, :str, :str, :str, :int):bat[:any_1] ",	"mvc_bind_idxbat_wrap;",	""	]
[ "sql",	"emptybindidx",	"pattern sql.emptybindidx(:int, :str, :str, :str, :int, :int, :int) (:bat[:oid], :bat[:any_1]) ",	"mvc_bind_idxbat_wrap;",	""	]
[ "sql",	"emptybindidx",	"pattern sql.emptybindidx(:int, :str, :str, :str, :int, :int, :int):bat[:any_1] ",	"mvc_bind_idxbat_wrap;",	""	]
[ "sql",	"epilogue",	"command sql.epilogue():void ",	"SQLepilogue;",	""	]
[ "sql",	"eval",	"pattern sql.eval(:str):void ",	"SQLstatement;",	""	]
[ "sql",	"eval",	"pattern sql.eval(:str, :bit):void ",	"SQLstatement;",	""	]
[ "sql",	"evalAlgebra",	"pattern sql.evalAlgebra(:str, :bit):void ",	"RAstatement;",	""	]
[ "sql",	"exportChunk",	"unsafe pattern sql.exportChunk(:streams, :int):void ",	"mvc_export_chunk_wrap;",	""	]
[ "sql",	"exportChunk",	"unsafe pattern sql.exportChunk(:streams, :int, :int, :int):void ",	"mvc_export_chunk_wrap;",	""	]
[ "sql",	"exportHead",	"unsafe pattern sql.exportHead(:streams, :int):void ",	"mvc_export_head_wrap;",	""	]
[ "sql",	"exportOperation",	"unsafe pattern sql.exportOperation():void ",	"mvc_export_operation_wrap;",	""	]
[ "sql",	"exportResult",	"unsafe pattern sql.exportResult(:streams, :int):void ",	"mvc_export_result_wrap;",	""	]
[ "sql",	"export_table",	"unsafe pattern sql.export_table(:str, :str, :str, :str, :str, :str, :int, :bat[:str], :bat[:str], :bat[:str], :bat[:int], :bat[:int], :any...):int ",	"mvc_export_row_wrap;",	""	]
[ "sql",	"export_table",	"unsafe pattern sql.export_table(:str, :str, :str, :str, :str, :str, :int, :bat[:str], :bat[:str], :bat[:str], :bat[:int], :bat[:int], :bat[:any]...):int ",	"mvc_export_table_wrap;",	""	]
[ "sql",	"first_value",	"pattern sql.first_value(:any_1, :bit, :bit, :int, :oid, :oid):any_1 ",	"SQLfirst_value;",	""	]
[ "sql",	"getVariable",	"pattern sql.getVariable(:int, :str, :str):any_1 ",	"getVariable;",	""	]
[ "sql",	"getVersion",	"command sql.getVersion(:int):lng ",	"mvc_getVersion;",	""	]
[ "sql",	"get_value",	"pattern sql.get_value(:str, :str):lng ",	"mvc_get_value;",	""	]
[ "sql",	"grow",	"pattern sql.grow(:bat[:oid], :any_1):int ",	"mvc_grow_wrap;",	""	]
[ "sql",	"hot_snapshot",	"unsafe pattern sql.hot_snapshot(:str):void ",	"SQLhot_snapshot;",	""	]
[ "sql",	"hot_snapshot",	"unsafe pattern sql.hot_snapshot(:str, :bit):void ",	"SQLhot_snapshot_wrap;",	""	]
[ "sql",	"importColumn",	"pattern sql.importColumn(:str, :bit, :str, :int, :oid) (:bat[:any], :oid) ",	"mvc_bin_import_column_wrap;",	""	]
[ "sql",	"importTable",	"unsafe pattern sql.importTable(:str, :str, :int, :bit, :str...):bat[:any]... ",	"mvc_bin_import_table_wrap;",	""	]
[ "sql",	"include",	"pattern sql.include(:str):void ",	"SQLinclude;",	""	]
[ "sql",	"index",	"command sql.index(:str, :bit):bte ",	"STRindex_bte;",	""	]
[ "sql",	"index",	"command sql.index(:str, :bit):int ",	"STRindex_int;",	""	]
[ "sql",	"index",	"command sql.index(:str, :bit):sht ",	"STRindex_sht;",	""	]
[ "sql",	"lag",	"pattern sql.lag(:any_1, :any, :any_1, :bit, :bit):any_1 ",	"SQLlag;",	""	]
[ "sql",	"lag",	"pattern sql.lag(:any_1, :any, :bit, :bit):any_1 ",	"SQLlag;",	""	]
[ "sql",	"lag",	"pattern sql.lag(:any_1, :bit, :bit):any_1 ",	"SQLlag;",	""	]
[ "sql",	"last_value",	"pattern sql.last_value(:any_1, :bit, :bit, :int, :oid, :oid):any_1 ",	"SQLlast_value;",	""	]
[ "sql",	"lead",	"pattern sql.lead(:any_1, :any, :any_1, :bit, :bit):any_1 ",	"SQLlead;",	""	]
[ "sql",	"lead",	"pattern sql.lead(:any_1, :any, :bit, :bit):any_1 ",	"SQLlead;",	""	]
[ "sql",	"lead",	"pattern sql.lead(:any_1, :bit, :bit):any_1 ",	"SQLlead;",	""	]
[ "sql",	"logfile",	"unsafe pattern sql.logfile(:str):void ",	"mvc_logfile;",	""	]
[ "sql",	"max",	"pattern sql.max(:any_1, :bit, :bit, :int, :oid, :oid):any_1 ",	"SQLmax;",	""	]
[ "sql",	"min",	"pattern sql.min(:any_1, :bit, :bit, :int, :oid, :oid):any_1 ",	"SQLmin;",	""	]
[ "sql",	"ms_trunc",	"command sql.ms_trunc(:dbl, :int):dbl ",	"dbl_trunc_wrap;",	""	]
[ "sql",	"ms_trunc",	"command sql.ms_trunc(:flt, :int):flt ",	"flt_trunc_wrap;",	""	]
[ "sql",	"mvc",	"pattern sql.mvc():int ",	"SQLmvc;",	""	]
[ "sql",	"next_value",	"unsafe pattern sql.next_value(:str, :str):lng ",	"mvc_next_value;",	""	]
[ "sql",	"nth_value",	"pattern sql.nth_value(:any_1, :lng, :bit, :bit, :int, :oid, :oid):any_1 ",	"SQLnth_value;",	""	]
[ "sql",	"ntile",	"pattern sql.ntile(:any, :any_1, :bit, :bit):any_1 ",	"SQLntile;",	""	]
[ "sql",	"optimizer_updates",	"pattern sql.optimizer_updates():void ",	"SQLoptimizersUpdate;",	""	]
[ "sql",	"optimizers",	"command sql.optimizers() (:bat[:str], :bat[:str], :bat[:str]) ",	"getPipeCatalog;",	""	]
[ "sql",	"password",	"pattern sql.password(:str):str ",	"db_password_wrap;",	""	]
[ "sql",	"percent_rank",	"pattern sql.percent_rank(:any_1, :bit, :bit):dbl ",	"SQLpercent_rank;",	""	]
[ "sql",	"prelude",	"pattern sql.prelude():void ",	"SQLprelude;",	""	]
[ "sql",	"prepared_statements",	"pattern sql.prepared_statements() (:bat[:int], :bat[:str], :bat[:int], :bat[:str], :bat[:timestamp]) ",	"SQLsession_prepared_statements;",	""	]
[ "sql",	"prepared_statements_args",	"pattern sql.prepared_statements_args() (:bat[:int], :bat[:str], :bat[:int], :bat[:int], :bat[:bte], :bat[:int], :bat[:str], :bat[:str], :bat[:str]) ",	"SQLsession_prepared_statements_args;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:bte, :bit, :bit, :int, :oid, :oid):hge ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:bte, :bit, :bit, :int, :oid, :oid):lng ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:flt, :bit, :bit, :int, :oid, :oid):flt ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:hge, :bit, :bit, :int, :oid, :oid):hge ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:int, :bit, :bit, :int, :oid, :oid):hge ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:int, :bit, :bit, :int, :oid, :oid):lng ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:lng, :bit, :bit, :int, :oid, :oid):hge ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:lng, :bit, :bit, :int, :oid, :oid):lng ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:sht, :bit, :bit, :int, :oid, :oid):hge ",	"SQLprod;",	""	]
[ "sql",	"prod",	"pattern sql.prod(:sht, :bit, :bit, :int, :oid, :oid):lng ",	"SQLprod;",	""	]
[ "sql",	"project",	"command sql.project(:bat[:oid], :bat[:oid], :bat[:oid]):bat[:oid] ",	"BATleftproject;",	""	]
[ "sql",	"projectdelta",	"command sql.projectdelta(:bat[:oid], :bat[:any_3], :bat[:oid], :bat[:any_3]):bat[:any_3] ",	"DELTAproject;",	""	]
[ "sql",	"querylog_calls",	"pattern sql.querylog_calls() (:bat[:oid], :bat[:timestamp], :bat[:timestamp], :bat[:str], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:int], :bat[:int]) ",	"sql_querylog_calls;",	""	]
[ "sql",	"querylog_catalog",	"pattern sql.querylog_catalog() (:bat[:oid], :bat[:str], :bat[:timestamp], :bat[:str], :bat[:str], :bat[:str], :bat[:int], :bat[:lng]) ",	"sql_querylog_catalog;",	""	]
[ "sql",	"querylog_disable",	"unsafe command sql.querylog_disable():void ",	"QLOGdisable;",	""	]
[ "sql",	"querylog_empty",	"unsafe pattern sql.querylog_empty():void ",	"sql_querylog_empty;",	""	]
[ "sql",	"querylog_enable",	"unsafe command sql.querylog_enable():void ",	"QLOGenable;",	""	]
[ "sql",	"querylog_enable",	"unsafe command sql.querylog_enable(:int):void ",	"QLOGenableThreshold;",	""	]
[ "sql",	"rank",	"pattern sql.rank(:any_1, :bit, :bit):int ",	"SQLrank;",	""	]
[ "sql",	"register",	"pattern sql.register(:str, :str, :str, :str):int ",	"RAstatement2;",	""	]
[ "sql",	"register",	"pattern sql.register(:str, :str, :str, :str, :str):int ",	"RAstatement2;",	""	]
[ "sql",	"restart",	"unsafe pattern sql.restart(:str, :str, :lng):lng ",	"mvc_restart_seq;",	""	]
[ "sql",	"resultSet",	"unsafe pattern sql.resultSet(:bat[:str], :bat[:str], :bat[:str], :bat[:int], :bat[:int], :any...):int ",	"mvc_row_result_wrap;",	""	]
[ "sql",	"resultSet",	"unsafe pattern sql.resultSet(:str, :str, :str, :int, :int, :int, :any):int ",	"mvc_scalar_value_wrap;",	""	]
[ "sql",	"resultSet",	"unsafe pattern sql.resultSet(:bat[:str], :bat[:str], :bat[:str], :bat[:int], :bat[:int], :bat[:any]...):int ",	"mvc_table_result_wrap;",	""	]
[ "sql",	"resume_log_flushing",	"unsafe pattern sql.resume_log_flushing():void ",	"SQLresume_log_flushing;",	""	]
[ "sql",	"row_number",	"pattern sql.row_number(:any_1, :bit, :bit):int ",	"SQLrow_number;",	""	]
[ "sql",	"rt_credentials",	"pattern sql.rt_credentials(:str) (:bat[:str], :bat[:str], :bat[:str]) ",	"sql_rt_credentials_wrap;",	""	]
[ "sql",	"sessions",	"pattern sql.sessions() (:bat[:int], :bat[:str], :bat[:timestamp], :bat[:timestamp], :bat[:str], :bat[:int], :bat[:int], :bat[:int], :bat[:int]) ",	"sql_sessions_wrap;",	""	]
[ "sql",	"setVariable",	"unsafe pattern sql.setVariable(:int, :str, :str, :any_1):int ",	"setVariable;",	""	]
[ "sql",	"set_protocol",	"unsafe pattern sql.set_protocol(:int):int ",	"SQLset_protocol;",	""	]
[ "sql",	"shutdown",	"pattern sql.shutdown(:bte):str ",	"SQLshutdown_wrap;",	""	]
[ "sql",	"shutdown",	"pattern sql.shutdown(:bte, :bit):str ",	"SQLshutdown_wrap;",	""	]
[ "sql",	"shutdown",	"pattern sql.shutdown(:int):str ",	"SQLshutdown_wrap;",	""	]
[ "sql",	"shutdown",	"pattern sql.shutdown(:int, :bit):str ",	"SQLshutdown_wrap;",	""	]
[ "sql",	"shutdown",	"pattern sql.shutdown(:sht):str ",	"SQLshutdown_wrap;",	""	]
[ "sql",	"shutdown",	"pattern sql.shutdown(:sht, :bit):str ",	"SQLshutdown_wrap;",	""	]
[ "sql",	"sql_variables",	"pattern sql.sql_variables() (:bat[:str], :bat[:str], :bat[:str], :bat[:str]) ",	"sql_variables;",	""	]
[ "sql",	"stdev",	"pattern sql.stdev(:bte, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_samp;",	""	]
[ "sql",	"stdev",	"pattern sql.stdev(:dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_samp;",	""	]
[ "sql",	"stdev",	"pattern sql.stdev(:flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_samp;",	""	]
[ "sql",	"stdev",	"pattern sql.stdev(:hge, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_samp;",	""	]
[ "sql",	"stdev",	"pattern sql.stdev(:int, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_samp;",	""	]
[ "sql",	"stdev",	"pattern sql.stdev(:lng, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_samp;",	""	]
[ "sql",	"stdev",	"pattern sql.stdev(:sht, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_samp;",	""	]
[ "sql",	"stdevp",	"pattern sql.stdevp(:bte, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_pop;",	""	]
[ "sql",	"stdevp",	"pattern sql.stdevp(:dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_pop;",	""	]
[ "sql",	"stdevp",	"pattern sql.stdevp(:flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_pop;",	""	]
[ "sql",	"stdevp",	"pattern sql.stdevp(:hge, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_pop;",	""	]
[ "sql",	"stdevp",	"pattern sql.stdevp(:int, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_pop;",	""	]
[ "sql",	"stdevp",	"pattern sql.stdevp(:lng, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_pop;",	""	]
[ "sql",	"stdevp",	"pattern sql.stdevp(:sht, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLstddev_pop;",	""	]
[ "sql",	"storage",	"pattern sql.storage() (:bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:lng], :bat[:int], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:bit], :bat[:lng], :bat[:bit], :bat[:bit], :bat[:bit], :bat[:lng]) ",	"sql_storage;",	""	]
[ "sql",	"storage",	"pattern sql.storage(:str) (:bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:lng], :bat[:int], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:bit], :bat[:lng], :bat[:bit], :bat[:bit], :bat[:bit], :bat[:lng]) ",	"sql_storage;",	""	]
[ "sql",	"storage",	"pattern sql.storage(:str, :str) (:bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:lng], :bat[:int], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:bit], :bat[:lng], :bat[:bit], :bat[:bit], :bat[:bit], :bat[:lng]) ",	"sql_storage;",	""	]
[ "sql",	"storage",	"pattern sql.storage(:str, :str, :str) (:bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:str], :bat[:lng], :bat[:int], :bat[:lng], :bat[:lng], :bat[:lng], :bat[:bit], :bat[:lng], :bat[:bit], :bat[:bit], :bat[:bit], :bat[:lng]) ",	"sql_storage;",	""	]
[ "sql",	"str_group_concat",	"pattern sql.str_group_concat(:str, :bit, :bit, :int, :oid, :oid):str ",	"SQLstrgroup_concat;",	""	]
[ "sql",	"str_group_concat",	"pattern sql.str_group_concat(:str, :str, :bit, :bit, :int, :oid, :oid):str ",	"SQLstrgroup_concat;",	""	]
[ "sql",	"strings",	"command sql.strings(:str):str ",	"STRstrings;",	""	]
[ "sql",	"subdelta",	"command sql.subdelta(:bat[:oid], :bat[:oid], :bat[:oid], :bat[:oid]):bat[:oid] ",	"DELTAsub;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:bte, :bit, :bit, :int, :oid, :oid):hge ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:bte, :bit, :bit, :int, :oid, :oid):lng ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:flt, :bit, :bit, :int, :oid, :oid):flt ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:hge, :bit, :bit, :int, :oid, :oid):hge ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:int, :bit, :bit, :int, :oid, :oid):hge ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:int, :bit, :bit, :int, :oid, :oid):lng ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:lng, :bit, :bit, :int, :oid, :oid):hge ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:lng, :bit, :bit, :int, :oid, :oid):lng ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:sht, :bit, :bit, :int, :oid, :oid):hge ",	"SQLsum;",	""	]
[ "sql",	"sum",	"pattern sql.sum(:sht, :bit, :bit, :int, :oid, :oid):lng ",	"SQLsum;",	""	]
[ "sql",	"suspend_log_flushing",	"unsafe pattern sql.suspend_log_flushing():void ",	"SQLsuspend_log_flushing;",	""	]
[ "sql",	"tid",	"pattern sql.tid(:int, :str, :str):bat[:oid] ",	"SQLtid;",	""	]
[ "sql",	"tid",	"pattern sql.tid(:int, :str, :str, :int, :int):bat[:oid] ",	"SQLtid;",	""	]
[ "sql",	"transaction",	"unsafe pattern sql.transaction():void ",	"SQLtransaction2;",	""	]
[ "sql",	"transaction",	"unsafe pattern sql.transaction():void ",	"SQLtransaction2;",	""	]
[ "sql",	"transaction_begin",	"unsafe pattern sql.transaction_begin(:int, :str):void ",	"SQLtransaction_begin;",	""	]
[ "sql",	"transaction_commit",	"unsafe pattern sql.transaction_commit(:int, :str):void ",	"SQLtransaction_commit;",	""	]
[ "sql",	"transaction_release",	"unsafe pattern sql.transaction_release(:int, :str):void ",	"SQLtransaction_release;",	""	]
[ "sql",	"transaction_rollback",	"unsafe pattern sql.transaction_rollback(:int, :str):void ",	"SQLtransaction_rollback;",	""	]
[ "sql",	"unionfunc",	"pattern sql.unionfunc(:str, :str, :any...):any... ",	"SQLunionfunc;",	""	]
[ "sql",	"update",	"pattern sql.update(:int, :str, :str, :str, :any, :any):int ",	"mvc_update_wrap;",	""	]
[ "sql",	"update_exec",	"pattern sql.update_exec(:ptr, :bat[:oid], :bat[:any_1]):ptr ",	"mvc_update_exec_wrap;",	""	]
[ "sql",	"update_prep",	"pattern sql.update_prep(:int, :str, :str, :str...) (:int, :ptr...) ",	"mvc_update_prep_wrap;",	""	]
[ "sql",	"update_schemas",	"unsafe pattern sql.update_schemas():void ",	"SYSupdate_schemas;",	""	]
[ "sql",	"update_tables",	"unsafe pattern sql.update_tables():void ",	"SYSupdate_tables;",	""	]
[ "sql",	"variance",	"pattern sql.variance(:bte, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_samp;",	""	]
[ "sql",	"variance",	"pattern sql.variance(:dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_samp;",	""	]
[ "sql",	"variance",	"pattern sql.variance(:flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_samp;",	""	]
[ "sql",	"variance",	"pattern sql.variance(:hge, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_samp;",	""	]
[ "sql",	"variance",	"pattern sql.variance(:int, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_samp;",	""	]
[ "sql",	"variance",	"pattern sql.variance(:lng, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_samp;",	""	]
[ "sql",	"variance",	"pattern sql.variance(:sht, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_samp;",	""	]
[ "sql",	"variancep",	"pattern sql.variancep(:bte, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_pop;",	""	]
[ "sql",	"variancep",	"pattern sql.variancep(:dbl, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_pop;",	""	]
[ "sql",	"variancep",	"pattern sql.variancep(:flt, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_pop;",	""	]
[ "sql",	"variancep",	"pattern sql.variancep(:hge, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_pop;",	""	]
[ "sql",	"variancep",	"pattern sql.variancep(:int, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_pop;",	""	]
[ "sql",	"variancep",	"pattern sql.variancep(:lng, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_pop;",	""	]
[ "sql",	"variancep",	"pattern sql.variancep(:sht, :bit, :bit, :int, :oid, :oid):dbl ",	"SQLvar_pop;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:any_1, :int, :int, :int, :bte):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:any_1, :int, :int, :int, :dbl):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:any_1, :int, :int, :int, :flt):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:any_1, :int, :int, :int, :hge):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:any_1, :int, :int, :int, :int):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:any_1, :int, :int, :int, :lng):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:any_1, :int, :int, :int, :sht):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:bit, :any_1, :int, :int, :int, :bte):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:bit, :any_1, :int, :int, :int, :dbl):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:bit, :any_1, :int, :int, :int, :flt):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:bit, :any_1, :int, :int, :int, :hge):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:bit, :any_1, :int, :int, :int, :int):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:bit, :any_1, :int, :int, :int, :lng):oid ",	"SQLwindow_bound;",	""	]
[ "sql",	"window_bound",	"pattern sql.window_bound(:bit, :any_1, :int, :int, :int, :sht):oid ",	"SQLwindow_bound;",	""	]
[ "sqlcatalog",	"alter_add_range_partition",	"pattern sqlcatalog.alter_add_range_partition(:str, :str, :str, :str, :any_1, :any_1, :bit, :int):void ",	"SQLalter_add_range_partition;",	""	]
[ "sqlcatalog",	"alter_add_table",	"pattern sqlcatalog.alter_add_table(:str, :str, :str, :str, :int):void ",	"SQLalter_add_table;",	""	]
[ "sqlcatalog",	"alter_add_value_partition",	"pattern sqlcatalog.alter_add_value_partition(:str, :str, :str, :str, :bit, :int):void ",	"SQLalter_add_value_partition;",	""	]
[ "sqlcatalog",	"alter_add_value_partition",	"pattern sqlcatalog.alter_add_value_partition(:str, :str, :str, :str, :bit, :int, :any...):void ",	"SQLalter_add_value_partition;",	""	]
[ "sqlcatalog",	"alter_del_table",	"pattern sqlcatalog.alter_del_table(:str, :str, :str, :str, :int):void ",	"SQLalter_del_table;",	""	]
[ "sqlcatalog",	"alter_seq",	"pattern sqlcatalog.alter_seq(:str, :str, :ptr, :bat[:lng]):void ",	"SQLalter_seq;",	""	]
[ "sqlcatalog",	"alter_seq",	"pattern sqlcatalog.alter_seq(:str, :str, :ptr, :lng):void ",	"SQLalter_seq;",	""	]
[ "sqlcatalog",	"alter_set_table",	"pattern sqlcatalog.alter_set_table(:str, :str, :int):void ",	"SQLalter_set_table;",	""	]
[ "sqlcatalog",	"alter_table",	"pattern sqlcatalog.alter_table(:str, :str, :ptr, :int):void ",	"SQLalter_table;",	""	]
[ "sqlcatalog",	"alter_user",	"pattern sqlcatalog.alter_user(:str, :str, :int, :str, :str, :str):void ",	"SQLalter_user;",	""	]
[ "sqlcatalog",	"comment_on",	"pattern sqlcatalog.comment_on(:int, :str):void ",	"SQLcomment_on;",	""	]
[ "sqlcatalog",	"create_function",	"pattern sqlcatalog.create_function(:str, :str, :ptr):void ",	"SQLcreate_function;",	""	]
[ "sqlcatalog",	"create_role",	"pattern sqlcatalog.create_role(:str, :str, :int):void ",	"SQLcreate_role;",	""	]
[ "sqlcatalog",	"create_schema",	"pattern sqlcatalog.create_schema(:str, :str, :int):void ",	"SQLcreate_schema;",	""	]
[ "sqlcatalog",	"create_seq",	"pattern sqlcatalog.create_seq(:str, :str, :ptr, :int):void ",	"SQLcreate_seq;",	""	]
[ "sqlcatalog",	"create_table",	"pattern sqlcatalog.create_table(:str, :str, :ptr, :int):void ",	"SQLcreate_table;",	""	]
[ "sqlcatalog",	"create_trigger",	"pattern sqlcatalog.create_trigger(:str, :str, :str, :int, :int, :int, :str, :str, :str, :str):void ",	"SQLcreate_trigger;",	""	]
[ "sqlcatalog",	"create_type",	"pattern sqlcatalog.create_type(:str, :str, :str):void ",	"SQLcreate_type;",	""	]
[ "sqlcatalog",	"create_user",	"pattern sqlcatalog.create_user(:str, :str, :int, :str, :str, :str):void ",	"SQLcreate_user;",	""	]
[ "sqlcatalog",	"create_view",	"pattern sqlcatalog.create_view(:str, :str, :ptr, :int):void ",	"SQLcreate_view;",	""	]
[ "sqlcatalog",	"drop_constraint",	"pattern sqlcatalog.drop_constraint(:str, :str, :str, :int, :int):void ",	"SQLdrop_constraint;",	""	]
[ "sqlcatalog",	"drop_function",	"pattern sqlcatalog.drop_function(:str, :str, :int, :int, :int):void ",	"SQLdrop_function;",	""	]
[ "sqlcatalog",	"drop_index",	"pattern sqlcatalog.drop_index(:str, :str, :int):void ",	"SQLdrop_index;",	""	]
[ "sqlcatalog",	"drop_role",	"pattern sqlcatalog.drop_role(:str, :int):void ",	"SQLdrop_role;",	""	]
[ "sqlcatalog",	"drop_role",	"pattern sqlcatalog.drop_role(:str, :str, :int):void ",	"SQLdrop_role;",	""	]
[ "sqlcatalog",	"drop_schema",	"pattern sqlcatalog.drop_schema(:str, :int, :int):void ",	"SQLdrop_schema;",	""	]
[ "sqlcatalog",	"drop_seq",	"pattern sqlcatalog.drop_seq(:str, :str, :int):void ",	"SQLdrop_seq;",	""	]
[ "sqlcatalog",	"drop_table",	"pattern sqlcatalog.drop_table(:str, :str, :int, :int):void ",	"SQLdrop_table;",	""	]
[ "sqlcatalog",	"drop_trigger",	"pattern sqlcatalog.drop_trigger(:str, :str, :int):void ",	"SQLdrop_trigger;",	""	]
[ "sqlcatalog",	"drop_type",	"pattern sqlcatalog.drop_type(:str, :str, :int):void ",	"SQLdrop_type;",	""	]
[ "sqlcatalog",	"drop_user",	"pattern sqlcatalog.drop_user(:str, :int):void ",	"SQLdrop_user;",	""	]
[ "sqlcatalog",	"drop_user",	"pattern sqlcatalog.drop_user(:str, :str, :int):void ",	"SQLdrop_user;",	""	]
[ "sqlcatalog",	"drop_view",	"pattern sqlcatalog.drop_view(:str, :str, :int, :int):void ",	"SQLdrop_view;",	""	]
[ "sqlcatalog",	"grant",	"pattern sqlcatalog.grant(:str, :str, :str, :int, :str, :int, :int):void ",	"SQLgrant;",	""	]
[ "sqlcatalog",	"grant_function",	"pattern sqlcatalog.grant_function(:str, :int, :str, :int, :int, :int):void ",	"SQLgrant_function;",	""	]
[ "sqlcatalog",	"grant_roles",	"pattern sqlcatalog.grant_roles(:str, :str, :int, :int):void ",	"SQLgrant_roles;",	""	]
[ "sqlcatalog",	"rename_column",	"pattern sqlcatalog.rename_column(:str, :str, :str, :str):void ",	"SQLrename_column;",	""	]
[ "sqlcatalog",	"rename_schema",	"pattern sqlcatalog.rename_schema(:str, :str):void ",	"SQLrename_schema;",	""	]
[ "sqlcatalog",	"rename_table",	"pattern sqlcatalog.rename_table(:str, :str, :str, :str):void ",	"SQLrename_table;",	""	]
[ "sqlcatalog",	"rename_user",	"pattern sqlcatalog.rename_user(:str, :str, :int):void ",	"SQLrename_user;",	""	]
[ "sqlcatalog",	"revoke",	"pattern sqlcatalog.revoke(:str, :str, :str, :int, :str, :int, :int):void ",	"SQLrevoke;",	""	]
[ "sqlcatalog",	"revoke_function",	"pattern sqlcatalog.revoke_function(:str, :int, :str, :int, :int, :int):void ",	"SQLrevoke_function;",	""	]
[ "sqlcatalog",	"revoke_roles",	"pattern sqlcatalog.revoke_roles(:str, :str, :int, :int):void ",	"SQLrevoke_roles;",	""	]
[ "status",	"batStatistics",	"command status.batStatistics() (:bat[:str], :bat[:str]) ",	"SYSgdkEnv;",	""	]
[ "status",	"cpuStatistics",	"command status.cpuStatistics() (:bat[:str], :bat[:lng]) ",	"SYScpuStatistics;",	""	]
[ "status",	"getThreads",	"command status.getThreads() (:bat[:int], :bat[:str]) ",	"SYSgdkThread;",	""	]
[ "status",	"ioStatistics",	"command status.ioStatistics() (:bat[:str], :bat[:lng]) ",	"SYSioStatistics;",	""	]
[ "status",	"memStatistics",	"command status.memStatistics() (:bat[:str], :bat[:lng]) ",	"SYSmemStatistics;",	""	]
[ "status",	"memUsage",	"command status.memUsage(:lng) (:bat[:str], :bat[:lng]) ",	"SYSmem_usage;",	""	]
[ "status",	"mem_cursize",	"command status.mem_cursize():lng ",	"SYSgetmem_cursize;",	""	]
[ "status",	"mem_maxsize",	"command status.mem_maxsize():lng ",	"SYSgetmem_maxsize;",	""	]
[ "status",	"mem_maxsize",	"command status.mem_maxsize(:lng):void ",	"SYSsetmem_maxsize;",	""	]
[ "status",	"vmStatistics",	"command status.vmStatistics(:lng) (:bat[:str], :bat[:lng]) ",	"SYSvm_usage;",	""	]
[ "status",	"vm_cursize",	"command status.vm_cursize():lng ",	"SYSgetvm_cursize;",	""	]
[ "status",	"vm_maxsize",	"command status.vm_maxsize():lng ",	"SYSgetvm_maxsize;",	""	]
[ "status",	"vm_maxsize",	"command status.vm_maxsize(:lng):void ",	"SYSsetvm_maxsize;",	""	]
[ "str",	"ascii",	"command str.ascii(:str):int ",	"STRascii;",	""	]
[ "str",	"endsWith",	"command str.endsWith(:str, :str):bit ",	"STRSuffix;",	""	]
[ "str",	"epilogue",	"command str.epilogue():void ",	"STRepilogue;",	""	]
[ "str",	"insert",	"command str.insert(:str, :int, :int, :str):str ",	"STRinsert;",	""	]
[ "str",	"length",	"command str.length(:str):int ",	"STRLength;",	""	]
[ "str",	"like",	"command str.like(:str, :str):bit ",	"STRlikewrap;",	""	]
[ "str",	"like3",	"command str.like3(:str, :str, :str):bit ",	"STRlikewrap3;",	""	]
[ "str",	"locate",	"command str.locate(:str, :str):int ",	"STRlocate;",	""	]
[ "str",	"locate3",	"command str.locate3(:str, :str, :int):int ",	"STRlocate3;",	""	]
[ "str",	"lpad",	"command str.lpad(:str, :int):str ",	"STRLpad;",	""	]
[ "str",	"lpad3",	"command str.lpad3(:str, :int, :str):str ",	"STRLpad3;",	""	]
[ "str",	"ltrim",	"command str.ltrim(:str):str ",	"STRLtrim;",	""	]
[ "str",	"ltrim2",	"command str.ltrim2(:str, :str):str ",	"STRLtrim2;",	""	]
[ "str",	"nbytes",	"command str.nbytes(:str):int ",	"STRBytes;",	""	]
[ "str",	"prefix",	"command str.prefix(:str, :int):str ",	"STRprefix;",	""	]
[ "str",	"prelude",	"command str.prelude():void ",	"STRprelude;",	""	]
[ "str",	"r_search",	"command str.r_search(:str, :str):int ",	"STRReverseStrSearch;",	""	]
[ "str",	"repeat",	"command str.repeat(:str, :int):str ",	"STRrepeat;",	""	]
[ "str",	"replace",	"command str.replace(:str, :str, :str, :str):str ",	"PCREreplace_wrap;",	""	]
[ "str",	"replace",	"command str.replace(:str, :str, :str):str ",	"STRreplace;",	""	]
[ "str",	"rpad",	"command str.rpad(:str, :int):str ",	"STRRpad;",	""	]
[ "str",	"rpad3",	"command str.rpad3(:str, :int, :str):str ",	"STRRpad3;",	""	]
[ "str",	"rtrim",	"command str.rtrim(:str):str ",	"STRRtrim;",	""	]
[ "str",	"rtrim2",	"command str.rtrim2(:str, :str):str ",	"STRRtrim2;",	""	]
[ "str",	"search",	"command str.search(:str, :str):int ",	"STRstrSearch;",	""	]
[ "str",	"space",	"command str.space(:int):str ",	"STRspace;",	""	]
[ "str",	"splitpart",	"command str.splitpart(:str, :str, :int):str ",	"STRsplitpart;",	""	]
[ "str",	"startsWith",	"command str.startsWith(:str, :str):bit ",	"STRPrefix;",	""	]
[ "str",	"str",	"command str.str(:str):str ",	"STRtostr;",	""	]
[ "str",	"string",	"command str.string(:str, :int):str ",	"STRTail;",	""	]
[ "str",	"string3",	"command str.string3(:str, :int, :int):str ",	"STRSubString;",	""	]
[ "str",	"stringleft",	"command str.stringleft(:str, :int):str ",	"STRprefix;",	""	]
[ "str",	"stringright",	"command str.stringright(:str, :int):str ",	"STRsuffix;",	""	]
[ "str",	"substitute",	"command str.substitute(:str, :str, :str, :bit):str ",	"STRSubstitute;",	""	]
[ "str",	"substring",	"command str.substring(:str, :int):str ",	"STRsubstringTail;",	""	]
[ "str",	"substring3",	"command str.substring3(:str, :int, :int):str ",	"STRsubstring;",	""	]
[ "str",	"suffix",	"command str.suffix(:str, :int):str ",	"STRsuffix;",	""	]
[ "str",	"toLower",	"command str.toLower(:str):str ",	"STRLower;",	""	]
[ "str",	"toUpper",	"command str.toUpper(:str):str ",	"STRUpper;",	""	]
[ "str",	"trim",	"command str.trim(:str):str ",	"STRStrip;",	""	]
[ "str",	"trim2",	"command str.trim2(:str, :str):str ",	"STRStrip2;",	""	]
[ "str",	"unicode",	"command str.unicode(:int):str ",	"STRFromWChr;",	""	]
[ "str",	"unicodeAt",	"command str.unicodeAt(:str, :int):int ",	"STRWChrAt;",	""	]
[ "streams",	"blocked",	"unsafe command streams.blocked(:streams):streams ",	"open_block_streamwrap;",	""	]
[ "streams",	"close",	"unsafe command streams.close(:streams):void ",	"mnstr_close_streamwrap;",	""	]
[ "streams",	"create",	"unsafe command streams.create(:streams, :int):bstream ",	"bstream_create_wrapwrap;",	""	]
[ "streams",	"destroy",	"unsafe command streams.destroy(:bstream):void ",	"bstream_destroy_wrapwrap;",	""	]
[ "streams",	"flush",	"unsafe command streams.flush(:streams):void ",	"mnstr_flush_streamwrap;",	""	]
[ "streams",	"openRead",	"unsafe command streams.openRead(:str):streams ",	"mnstr_open_rastreamwrap;",	""	]
[ "streams",	"openReadBytes",	"unsafe command streams.openReadBytes(:str):streams ",	"mnstr_open_rstreamwrap;",	""	]
[ "streams",	"openWrite",	"unsafe command streams.openWrite(:str):streams ",	"mnstr_open_wastreamwrap;",	""	]
[ "streams",	"openWriteBytes",	"unsafe command streams.openWriteBytes(:str):streams ",	"mnstr_open_wstreamwrap;",	""	]
[ "streams",	"read",	"unsafe command streams.read(:bstream, :int):int ",	"bstream_read_wrapwrap;",	""	]
[ "streams",	"readInt",	"unsafe command streams.readInt(:streams):int ",	"mnstr_readIntwrap;",	""	]
[ "streams",	"readStr",	"unsafe command streams.readStr(:streams):str ",	"mnstr_read_stringwrap;",	""	]
[ "streams",	"writeInt",	"unsafe command streams.writeInt(:streams, :int):void ",	"mnstr_writeIntwrap;",	""	]
[ "streams",	"writeStr",	"unsafe command streams.writeStr(:streams, :str):void ",	"mnstr_write_stringwrap;",	""	]
[ "sysmon",	"pause",	"pattern sysmon.pause(:int):void ",	"SYSMONpause;",	""	]
[ "sysmon",	"pause",	"pattern sysmon.pause(:lng):void ",	"SYSMONpause;",	""	]
[ "sysmon",	"pause",	"pattern sysmon.pause(:sht):void ",	"SYSMONpause;",	""	]
[ "sysmon",	"queue",	"pattern sysmon.queue() (:bat[:lng], :bat[:int], :bat[:str], :bat[:timestamp], :bat[:str], :bat[:str], :bat[:timestamp], :bat[:int], :bat[:int]) ",	"SYSMONqueue;",	""	]
[ "sysmon",	"resume",	"pattern sysmon.resume(:int):void ",	"SYSMONresume;",	""	]
[ "sysmon",	"resume",	"pattern sysmon.resume(:lng):void ",	"SYSMONresume;",	""	]
[ "sysmon",	"resume",	"pattern sysmon.resume(:sht):void ",	"SYSMONresume;",	""	]
[ "sysmon",	"stop",	"pattern sysmon.stop(:int):void ",	"SYSMONstop;",	""	]
[ "sysmon",	"stop",	"pattern sysmon.stop(:lng):void ",	"SYSMONstop;",	""	]
[ "sysmon",	"stop",	"pattern sysmon.stop(:sht):void ",	"SYSMONstop;",	""	]
[ "sysmon",	"user_statistics",	"pattern sysmon.user_statistics() (:bat[:str], :bat[:lng], :bat[:lng], :bat[:timestamp], :bat[:timestamp], :bat[:lng], :bat[:str]) ",	"SYSMONstatistics;",	""	]
[ "tokenizer",	"append",	"command tokenizer.append(:str):oid ",	"TKNZRappend;",	""	]
[ "tokenizer",	"close",	"command tokenizer.close():void ",	"TKNZRclose;",	""	]
[ "tokenizer",	"depositFile",	"command tokenizer.depositFile(:str):void ",	"TKNZRdepositFile;",	""	]
[ "tokenizer",	"getCardinality",	"command tokenizer.getCardinality():bat[:lng] ",	"TKNZRgetCardinality;",	""	]
[ "tokenizer",	"getCount",	"command tokenizer.getCount():bat[:lng] ",	"TKNZRgetCount;",	""	]
[ "tokenizer",	"getIndex",	"command tokenizer.getIndex():bat[:oid] ",	"TKNZRgetIndex;",	""	]
[ "tokenizer",	"getLevel",	"command tokenizer.getLevel(:int):bat[:str] ",	"TKNZRgetLevel;",	""	]
[ "tokenizer",	"locate",	"pattern tokenizer.locate(:str):oid ",	"TKNZRlocate;",	""	]
[ "tokenizer",	"open",	"command tokenizer.open(:str):void ",	"TKNZRopen;",	""	]
[ "tokenizer",	"take",	"pattern tokenizer.take(:oid):str ",	"TKNZRtakeOid;",	""	]
[ "txtsim",	"editdistance",	"command txtsim.editdistance(:str, :str):int ",	"levenshteinbasic_impl;",	""	]
[ "txtsim",	"editdistance2",	"command txtsim.editdistance2(:str, :str):int ",	"levenshteinbasic2_impl;",	""	]
[ "txtsim",	"levenshtein",	"command txtsim.levenshtein(:str, :str, :int, :int, :int):int ",	"levenshtein_impl;",	""	]
[ "txtsim",	"levenshtein",	"command txtsim.levenshtein(:str, :str):int ",	"levenshteinbasic_impl;",	""	]
[ "txtsim",	"qgramnormalize",	"command txtsim.qgramnormalize(:str):str ",	"CMDqgramnormalize;",	""	]
[ "txtsim",	"qgramselfjoin",	"command txtsim.qgramselfjoin(:bat[:oid], :bat[:oid], :bat[:int], :bat[:int], :flt, :int) (:bat[:int], :bat[:int]) ",	"CMDqgramselfjoin;",	""	]
[ "txtsim",	"similarity",	"command txtsim.similarity(:str, :str):dbl ",	"fstrcmp0_impl;",	""	]
[ "txtsim",	"similarity",	"command txtsim.similarity(:str, :str, :dbl):dbl ",	"fstrcmp_impl;",	""	]
[ "txtsim",	"soundex",	"command txtsim.soundex(:str):str ",	"soundex_impl;",	""	]
[ "txtsim",	"str2qgrams",	"command txtsim.str2qgrams(:str):bat[:str] ",	"CMDstr2qgrams;",	""	]
[ "txtsim",	"stringdiff",	"command txtsim.stringdiff(:str, :str):int ",	"stringdiff_impl;",	""	]
[ "udf",	"fuse",	"command udf.fuse(:bte, :bte):sht ",	"UDFfuse_bte_sht;",	""	]
[ "udf",	"fuse",	"command udf.fuse(:int, :int):lng ",	"UDFfuse_int_lng;",	""	]
[ "udf",	"fuse",	"command udf.fuse(:lng, :lng):hge ",	"UDFfuse_lng_hge;",	""	]
[ "udf",	"fuse",	"command udf.fuse(:sht, :sht):int ",	"UDFfuse_sht_int;",	""	]
[ "udf",	"reverse",	"command udf.reverse(:str):str ",	"UDFreverse;",	""	]
[ "url",	"getAnchor",	"command url.getAnchor(:url):str ",	"URLgetAnchor;",	""	]
[ "url",	"getBasename",	"command url.getBasename(:url):str ",	"URLgetBasename;",	""	]
[ "url",	"getContext",	"command url.getContext(:url):str ",	"URLgetContext;",	""	]
[ "url",	"getDomain",	"command url.getDomain(:url):str ",	"URLgetDomain;",	""	]
[ "url",	"getExtension",	"command url.getExtension(:url):str ",	"URLgetExtension;",	""	]
[ "url",	"getFile",	"command url.getFile(:url):str ",	"URLgetFile;",	""	]
[ "url",	"getHost",	"command url.getHost(:url):str ",	"URLgetHost;",	""	]
[ "url",	"getPort",	"command url.getPort(:url):str ",	"URLgetPort;",	""	]
[ "url",	"getProtocol",	"command url.getProtocol(:url):str ",	"URLgetProtocol;",	""	]
[ "url",	"getQuery",	"command url.getQuery(:url):str ",	"URLgetQuery;",	""	]
[ "url",	"getRobotURL",	"command url.getRobotURL(:url):str ",	"URLgetRobotURL;",	""	]
[ "url",	"getUser",	"command url.getUser(:url):str ",	"URLgetUser;",	""	]
[ "url",	"isaURL",	"command url.isaURL(:str):bit ",	"URLisaURL;",	""	]
[ "url",	"new",	"command url.new(:str, :str, :str):url ",	"URLnew3;",	""	]
[ "url",	"new",	"command url.new(:str, :str, :int, :str):url ",	"URLnew4;",	""	]
[ "url",	"url",	"command url.url(:str):url ",	"URLnew;",	""	]
[ "url",	"url",	"command url.url(:url):url ",	"URLnoop;",	""	]
[ "user",	"main",	"function user.main():void;",	"",	""	]
[ "uuid",	"isaUUID",	"command uuid.isaUUID(:str):bit ",	"UUIDisaUUID;",	""	]
[ "uuid",	"new",	"unsafe command uuid.new():uuid ",	"UUIDgenerateUuid;",	""	]
[ "uuid",	"new",	"unsafe command uuid.new(:int):uuid ",	"UUIDgenerateUuidInt;",	""	]
[ "uuid",	"prelude",	"command uuid.prelude():void ",	"UUIDprelude;",	""	]
[ "uuid",	"str",	"command uuid.str(:uuid):str ",	"UUIDuuid2str;",	""	]
[ "uuid",	"uuid",	"command uuid.uuid(:str):uuid ",	"UUIDstr2uuid;",	""	]
[ "wlc",	"action",	"pattern wlc.action(:str):void ",	"WLCaction;",	""	]
[ "wlc",	"alter_add_range_partition",	"pattern wlc.alter_add_range_partition(:str, :str, :str, :str, :str, :str, :bit, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"alter_add_table",	"pattern wlc.alter_add_table(:str, :str, :str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"alter_add_value_partition",	"pattern wlc.alter_add_value_partition(:str, :str, :str, :str, :bit, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"alter_add_value_partition",	"pattern wlc.alter_add_value_partition(:str, :str, :str, :str, :bit, :int, :str...):void ",	"WLCgeneric;",	""	]
[ "wlc",	"alter_del_table",	"pattern wlc.alter_del_table(:str, :str, :str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"alter_seq",	"pattern wlc.alter_seq(:str, :str, :lng):void ",	"WLCgeneric;",	""	]
[ "wlc",	"alter_seq",	"pattern wlc.alter_seq(:str, :str, :ptr, :bat[:lng]):void ",	"WLCgeneric;",	""	]
[ "wlc",	"alter_set_table",	"pattern wlc.alter_set_table(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"alter_table",	"pattern wlc.alter_table(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"alter_user",	"pattern wlc.alter_user(:str, :str, :int, :str, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"append",	"pattern wlc.append(:str, :str, :str, :any):int ",	"WLCappend;",	""	]
[ "wlc",	"catalog",	"pattern wlc.catalog(:str):void ",	"WLCcatalog;",	""	]
[ "wlc",	"clear_table",	"pattern wlc.clear_table(:str, :str):int ",	"WLCclear_table;",	""	]
[ "wlc",	"comment_on",	"pattern wlc.comment_on(:int, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"commit",	"pattern wlc.commit():void ",	"WLCcommitCmd;",	""	]
[ "wlc",	"commit",	"pattern wlc.commit():void ",	"WLCcommitCmd;",	""	]
[ "wlc",	"create_function",	"pattern wlc.create_function(:str, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"create_role",	"pattern wlc.create_role(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"create_schema",	"pattern wlc.create_schema(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"create_seq",	"pattern wlc.create_seq(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"create_table",	"pattern wlc.create_table(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"create_trigger",	"pattern wlc.create_trigger(:str, :str, :str, :int, :int, :int, :str, :str, :str, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"create_type",	"pattern wlc.create_type(:str, :str, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"create_user",	"pattern wlc.create_user(:str, :str, :int, :str, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"create_view",	"pattern wlc.create_view(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"delete",	"pattern wlc.delete(:str, :str, :any):int ",	"WLCdelete;",	""	]
[ "wlc",	"drop_constraint",	"pattern wlc.drop_constraint(:str, :str, :str, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_function",	"pattern wlc.drop_function(:str, :str, :int, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_index",	"pattern wlc.drop_index(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_role",	"pattern wlc.drop_role(:str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_role",	"pattern wlc.drop_role(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_schema",	"pattern wlc.drop_schema(:str, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_seq",	"pattern wlc.drop_seq(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_table",	"pattern wlc.drop_table(:str, :str, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_trigger",	"pattern wlc.drop_trigger(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_type",	"pattern wlc.drop_type(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_user",	"pattern wlc.drop_user(:str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_user",	"pattern wlc.drop_user(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"drop_view",	"pattern wlc.drop_view(:str, :str, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"epilogue",	"command wlc.epilogue():void ",	"WLCepilogue;",	""	]
[ "wlc",	"flush",	"pattern wlc.flush():void ",	"WLCflush;",	""	]
[ "wlc",	"getbeat",	"pattern wlc.getbeat(:int):str ",	"WLCgetbeat;",	""	]
[ "wlc",	"getclock",	"pattern wlc.getclock():str ",	"WLCgetclock;",	""	]
[ "wlc",	"gettick",	"pattern wlc.gettick():lng ",	"WLCgettick;",	""	]
[ "wlc",	"grant",	"pattern wlc.grant(:str, :str, :str, :int, :str, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"grant_function",	"pattern wlc.grant_function(:str, :int, :str, :int, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"grant_roles",	"pattern wlc.grant_roles(:str, :str, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"init",	"pattern wlc.init():void ",	"WLCinitCmd;",	""	]
[ "wlc",	"master",	"pattern wlc.master():void ",	"WLCmaster;",	""	]
[ "wlc",	"master",	"pattern wlc.master(:str):void ",	"WLCmaster;",	""	]
[ "wlc",	"query",	"pattern wlc.query(:str):void ",	"WLCquery;",	""	]
[ "wlc",	"rename_column",	"pattern wlc.rename_column(:str, :str, :str, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"rename_schema",	"pattern wlc.rename_schema(:str, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"rename_table",	"pattern wlc.rename_table(:str, :str, :str, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"rename_user",	"pattern wlc.rename_user(:str, :str, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"revoke",	"pattern wlc.revoke(:str, :str, :str, :int, :str, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"revoke_function",	"pattern wlc.revoke_function(:str, :int, :str, :int, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"revoke_roles",	"pattern wlc.revoke_roles(:str, :str, :int, :int):void ",	"WLCgeneric;",	""	]
[ "wlc",	"rollback",	"pattern wlc.rollback():void ",	"WLCcommitCmd;",	""	]
[ "wlc",	"rollback",	"pattern wlc.rollback():void ",	"WLCrollbackCmd;",	""	]
[ "wlc",	"setbeat",	"pattern wlc.setbeat(:int):void ",	"WLCsetbeat;",	""	]
[ "wlc",	"stop",	"pattern wlc.stop():void ",	"WLCstop;",	""	]
[ "wlc",	"transaction",	"unsafe pattern wlc.transaction():void ",	"WLCgeneric;",	""	]
[ "wlc",	"transaction_begin",	"pattern wlc.transaction_begin(:int, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"transaction_commit",	"pattern wlc.transaction_commit(:int, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"transaction_release",	"pattern wlc.transaction_release(:int, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"transaction_rollback",	"pattern wlc.transaction_rollback(:int, :str):void ",	"WLCgeneric;",	""	]
[ "wlc",	"update",	"pattern wlc.update(:str, :str, :str, :any, :any):int ",	"WLCupdate;",	""	]
[ "wlr",	"accept",	"pattern wlr.accept():void ",	"WLRaccept;",	""	]
[ "wlr",	"action",	"pattern wlr.action(:str):void ",	"WLRaction;",	""	]
[ "wlr",	"alter_add_range_partition",	"pattern wlr.alter_add_range_partition(:str, :str, :str, :str, :str, :str, :bit, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"alter_add_table",	"pattern wlr.alter_add_table(:str, :str, :str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"alter_add_value_partition",	"pattern wlr.alter_add_value_partition(:str, :str, :str, :str, :bit, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"alter_add_value_partition",	"pattern wlr.alter_add_value_partition(:str, :str, :str, :str, :bit, :int, :str...):void ",	"WLRgeneric;",	""	]
[ "wlr",	"alter_del_table",	"pattern wlr.alter_del_table(:str, :str, :str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"alter_seq",	"pattern wlr.alter_seq(:str, :str, :lng):void ",	"WLRgeneric;",	""	]
[ "wlr",	"alter_seq",	"pattern wlr.alter_seq(:str, :str, :ptr, :bat[:lng]):void ",	"WLRgeneric;",	""	]
[ "wlr",	"alter_set_table",	"pattern wlr.alter_set_table(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"alter_table",	"pattern wlr.alter_table(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"alter_user",	"pattern wlr.alter_user(:str, :str, :int, :str, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"append",	"pattern wlr.append(:str, :str, :str, :any...):int ",	"WLRappend;",	""	]
[ "wlr",	"catalog",	"pattern wlr.catalog(:str):void ",	"WLRcatalog;",	""	]
[ "wlr",	"clear_table",	"pattern wlr.clear_table(:str, :str):int ",	"WLRclear_table;",	""	]
[ "wlr",	"comment_on",	"pattern wlr.comment_on(:int, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"commit",	"pattern wlr.commit():void ",	"WLRcommit;",	""	]
[ "wlr",	"create_function",	"pattern wlr.create_function(:str, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"create_role",	"pattern wlr.create_role(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"create_schema",	"pattern wlr.create_schema(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"create_seq",	"pattern wlr.create_seq(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"create_table",	"pattern wlr.create_table(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"create_trigger",	"pattern wlr.create_trigger(:str, :str, :str, :int, :int, :int, :str, :str, :str, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"create_type",	"pattern wlr.create_type(:str, :str, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"create_user",	"pattern wlr.create_user(:str, :str, :int, :str, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"create_view",	"pattern wlr.create_view(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"delete",	"pattern wlr.delete(:str, :str, :oid...):int ",	"WLRdelete;",	""	]
[ "wlr",	"drop_constraint",	"pattern wlr.drop_constraint(:str, :str, :str, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_function",	"pattern wlr.drop_function(:str, :str, :int, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_index",	"pattern wlr.drop_index(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_role",	"pattern wlr.drop_role(:str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_role",	"pattern wlr.drop_role(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_schema",	"pattern wlr.drop_schema(:str, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_seq",	"pattern wlr.drop_seq(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_table",	"pattern wlr.drop_table(:str, :str, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_trigger",	"pattern wlr.drop_trigger(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_type",	"pattern wlr.drop_type(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_user",	"pattern wlr.drop_user(:str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_user",	"pattern wlr.drop_user(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"drop_view",	"pattern wlr.drop_view(:str, :str, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"getMaster",	"pattern wlr.getMaster():str ",	"WLRgetmaster;",	""	]
[ "wlr",	"getclock",	"pattern wlr.getclock():str ",	"WLRgetclock;",	""	]
[ "wlr",	"gettick",	"pattern wlr.gettick():lng ",	"WLRgettick;",	""	]
[ "wlr",	"grant",	"pattern wlr.grant(:str, :str, :str, :int, :str, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"grant_function",	"pattern wlr.grant_function(:str, :int, :str, :int, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"grant_roles",	"pattern wlr.grant_roles(:str, :str, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"master",	"pattern wlr.master(:str):void ",	"WLRmaster;",	""	]
[ "wlr",	"rename_column",	"pattern wlr.rename_column(:str, :str, :str, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"rename_schema",	"pattern wlr.rename_schema(:str, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"rename_table",	"pattern wlr.rename_table(:str, :str, :str, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"rename_user",	"pattern wlr.rename_user(:str, :str, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"replicate",	"pattern wlr.replicate():void ",	"WLRreplicate;",	""	]
[ "wlr",	"replicate",	"pattern wlr.replicate(:bte):void ",	"WLRreplicate;",	""	]
[ "wlr",	"replicate",	"pattern wlr.replicate(:int):void ",	"WLRreplicate;",	""	]
[ "wlr",	"replicate",	"pattern wlr.replicate(:lng):void ",	"WLRreplicate;",	""	]
[ "wlr",	"replicate",	"pattern wlr.replicate(:sht):void ",	"WLRreplicate;",	""	]
[ "wlr",	"replicate",	"pattern wlr.replicate(:timestamp):void ",	"WLRreplicate;",	""	]
[ "wlr",	"revoke",	"pattern wlr.revoke(:str, :str, :str, :int, :str, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"revoke_function",	"pattern wlr.revoke_function(:str, :int, :str, :int, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"revoke_roles",	"pattern wlr.revoke_roles(:str, :str, :int, :int):void ",	"WLRgeneric;",	""	]
[ "wlr",	"rollback",	"pattern wlr.rollback():void ",	"WLRrollback;",	""	]
[ "wlr",	"setbeat",	"pattern wlr.setbeat(:int):void ",	"WLRsetbeat;",	""	]
[ "wlr",	"stop",	"pattern wlr.stop():void ",	"WLRstop;",	""	]
[ "wlr",	"transaction",	"unsafe pattern wlr.transaction():void ",	"WLRgeneric;",	""	]
[ "wlr",	"transaction",	"pattern wlr.transaction(:lng, :str, :str):void ",	"WLRtransaction;",	""	]
[ "wlr",	"transaction_begin",	"pattern wlr.transaction_begin(:int, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"transaction_commit",	"pattern wlr.transaction_commit(:int, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"transaction_release",	"pattern wlr.transaction_release(:int, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"transaction_rollback",	"pattern wlr.transaction_rollback(:int, :str):void ",	"WLRgeneric;",	""	]
[ "wlr",	"update",	"pattern wlr.update(:str, :str, :str, :oid, :any):int ",	"WLRupdate;",	""	]
[ "xml",	"aggr",	"command xml.aggr(:bat[:xml]):xml ",	"BATXMLgroup;",	""	]
[ "xml",	"attribute",	"command xml.attribute(:str, :str):xml ",	"XMLattribute;",	""	]
[ "xml",	"comment",	"command xml.comment(:str):xml ",	"XMLcomment;",	""	]
[ "xml",	"concat",	"command xml.concat(:xml, :xml):xml ",	"XMLconcat;",	""	]
[ "xml",	"content",	"command xml.content(:str):xml ",	"XMLcontent;",	""	]
[ "xml",	"document",	"command xml.document(:str):xml ",	"XMLdocument;",	""	]
[ "xml",	"element",	"command xml.element(:str, :xml, :xml, :xml):xml ",	"XMLelement;",	""	]
[ "xml",	"element",	"command xml.element(:str, :xml):xml ",	"XMLelementSmall;",	""	]
[ "xml",	"epilogue",	"command xml.epilogue():void ",	"XMLepilogue;",	""	]
[ "xml",	"forest",	"pattern xml.forest(:xml...):xml ",	"XMLforest;",	""	]
[ "xml",	"isdocument",	"command xml.isdocument(:str):bit ",	"XMLisdocument;",	""	]
[ "xml",	"parse",	"command xml.parse(:str, :str, :str):xml ",	"XMLparse;",	""	]
[ "xml",	"pi",	"command xml.pi(:str, :str):xml ",	"XMLpi;",	""	]
[ "xml",	"prelude",	"command xml.prelude():void ",	"XMLprelude;",	""	]
[ "xml",	"root",	"command xml.root(:xml, :str, :str):xml ",	"XMLroot;",	""	]
[ "xml",	"str",	"command xml.str(:xml):str ",	"XMLxml2str;",	""	]
[ "xml",	"subaggr",	"command xml.subaggr(:bat[:xml], :bat[:oid], :bat[:any_1], :bit):bat[:xml] ",	"AGGRsubxml;",	""	]
[ "xml",	"subaggr",	"command xml.subaggr(:bat[:xml], :bat[:oid], :bat[:any_1], :bat[:oid], :bit):bat[:xml] ",	"AGGRsubxmlcand;",	""	]
[ "xml",	"text",	"command xml.text(:xml):str ",	"XMLxmltext;",	""	]
[ "xml",	"xml",	"command xml.xml(:str):xml ",	"XMLstr2xml;",	""	]

# 12:57:40 >  
# 12:57:40 >  "Done."
# 12:57:40 >  

